---
modelFingerprint: "041366F0D7516CEEE45CF2E956B2FF45"
targetClass:
  fullClassName: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
methods:
- method:
    name: "postProcessBeanFactory"
    sourceCodeSignature: "void postProcessBeanFactory(ConfigurableListableBeanFactory\
      \ beanFactory)"
    returnType: "void"
    parameters:
    - name: "beanFactory"
      type: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
    instructionFingerprint: "BF608C817F1BF974CE6A9270D707955B"
  paths:
  - pathId: "path1"
    testPathName: "postProcessBeanFactoryTest"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "7D5CD55B56CD108913CE75DA0502F7AF"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "INPUT"
      name: "beanFactory"
      modelFingerprint: "2B7EF4D05F05B01EB1F2B9BE20317A7C"
      valueUuid: "beanFactory"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory2,message:uniqueUuid1):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "1D4B5B5FF5AD980E90EDF9E6B6E0198D"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "addBeanPostProcessor(beanPostProcessor:webApplicationContextServletContextAwareProcessor):void2"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "7AA53AE3EE57D0B04D95AE39CBA2EF52"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "ignoreDependencyInterface(ifc:uniqueUuid2):void3"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "B9CB55A0C48855495EEAA66886638C1A"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "B9CB55A0C48855495EEAA66886638C1A"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory2"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "STATIC"
      name: "WebApplicationContextUtils.class"
      modelFingerprint: "4BE0C2717F816CA4AB389DF0E57C7635"
      valueUuid: "WebApplicationContextUtils.class"
      methodExercised:
        expression: "registerWebApplicationScopes(beanFactory:configurableListableBeanFactory2):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "existingScopes"
      modelFingerprint: "5985F9AA8F9435BB0C0414F6541C7B8E"
      valueUuid: "servletWebServerApplicationContext.ExistingWebApplicationScopes"
      methodExercised:
        expression: "restore():void5"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "existingScopes.restore();"
      lineNumber: 255
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: existingScopes - Method: restore"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory2"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.servlet.context.WebApplicationContextServletContextAwareProcessor"
      uuid: "webApplicationContextServletContextAwareProcessor"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.web.context.ServletContextAware"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.web.context.ServletContextAware"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.web.context.support.WebApplicationContextUtils"
      uuid: "WebApplicationContextUtils.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext$ExistingWebApplicationScopes"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
            uuid: "configurableListableBeanFactory"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext$ExistingWebApplicationScopes"
      uuid: "servletWebServerApplicationContext.ExistingWebApplicationScopes"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "refresh"
    sourceCodeSignature: "void refresh()"
    returnType: "void"
    throwsExceptions:
    - "org.springframework.beans.BeansException"
    - "java.lang.IllegalStateException"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 7
      catchExceptions:
      - "java.lang.RuntimeException"
    instructionFingerprint: "D64CA00ED208F776A1567E663005FB1D"
  paths:
  - pathId: "path1"
    testPathName: "refreshTest"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "1008A86542EB8515901DB434ED436DD9"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid3):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_INTERNAL_METHOD_FAILURE"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
  - pathId: "path2"
    testPathName: "refreshWhenWebServerIsNullThrowsRuntimeException"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "C4EA925748F860B6E767B08731691687"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid4):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C47223612F71BFE607116AFCAAE5E423"
      valueUuid: "runtimeException"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_INTERNAL_METHOD_FAILURE"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.RuntimeException"
        parameters: []
      valueType: "java.lang.RuntimeException"
      uuid: "runtimeException"
    branches:
    - lineNumber: 148
      expression: "catch-exception (RuntimeException)"
      range: "(148,3)-(148,28)"
      evaluatedAs: true
    - lineNumber: 150
      expression: "webServer != null"
      range: "(150,8)-(150,24)"
      evaluatedAs: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 7
      catchExceptions:
      - "java.lang.RuntimeException"
- method:
    name: "onRefresh"
    sourceCodeSignature: "void onRefresh()"
    returnType: "void"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 8
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 9
      catchExceptions:
      - "jakarta.servlet.ServletException"
    instructionFingerprint: "9517B0F344668583FD15DD4A6A7BC4E8"
  paths:
  - pathId: "path1"
    testPathName: "onRefreshWhenServletContextIsNull"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "6FDDBB2700233D64320587C3EA025F8E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid5):void"
        staticAccess: true
    - type: "STATIC"
      name: "UiApplicationContextUtils.class"
      modelFingerprint: "4FA0B4FA909C2FC11A2B091BE534D9DD"
      valueUuid: "UiApplicationContextUtils.class"
      methodExercised:
        expression: "initThemeSource(context:targetClassObject):themeSource"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "56F5408DB05C813A35D774FC3A5DFA5E"
      valueUuid: "applicationStartup2"
      methodExercised:
        expression: "start(name:uniqueUuid6):startupStep"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "11338FC728F9DAFB1929136F86C3BFB4"
      methodExercised:
        expression: "getWebServerFactory():servletWebServerFactory"
    - type: "LOCAL_VARIABLE"
      name: "createWebServer"
      modelFingerprint: "1EA0756625D8353524772108312D2C64"
      valueUuid: "startupStep"
      methodExercised:
        expression: "tag(key:uniqueUuid7,value:string3):startupStep2"
    - type: "LOCAL_VARIABLE"
      name: "factory"
      modelFingerprint: "BA006F90AF302C347EA35B03A29A55E2"
      valueUuid: "servletWebServerFactory"
      methodExercised:
        expression: "getWebServer(initializers:servletContextInitializerArray):webServer"
    - type: "LOCAL_VARIABLE"
      name: "createWebServer"
      modelFingerprint: "CCFEEE5C5652E7F40A6611E50FF56B41"
      valueUuid: "startupStep"
      methodExercised:
        expression: "end():void2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA8B462E63307028B95B0E76BBCB758E"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B7E838BBA4A42878155BD00819E16B22"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid8,singletonObject:webServerGracefulShutdownLifecycle):void3"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA8B462E63307028B95B0E76BBCB758E"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory2"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "53249A824581D8139B87D9AC174E9207"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid9,singletonObject:webServerStartStopLifecycle):void4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_INTERNAL_METHOD_FAILURE"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
        propertiesMap:
          applicationStartup:
            sapientType: "MOCK"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup2"
          servletContext:
            sapientType: "NULL"
            valueType: "jakarta.servlet.ServletContext"
            uuid: "servletContext"
            fixed: true
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.web.context.support.GenericWebApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.web.context.support.GenericWebApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.ui.context.support.UiApplicationContextUtils"
      uuid: "UiApplicationContextUtils.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.ui.context.ThemeSource"
      uuid: "themeSource"
    - sapientType: "THIS"
      valueType: "org.springframework.web.context.support.GenericWebApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.ApplicationStartup"
      uuid: "applicationStartup2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.StartupStep"
      uuid: "startupStep"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.boot.webserver.create"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.ServletWebServerFactory"
      uuid: "servletWebServerFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.StartupStep"
      uuid: "startupStep"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.StartupStep"
      uuid: "startupStep2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "factory"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.ServletWebServerFactory"
      uuid: "servletWebServerFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.WebServer"
      uuid: "webServer"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.boot.web.servlet.ServletContextInitializer"
            uuid: "servletContextInitializer"
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "servletContextInitializerArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.StartupStep"
      uuid: "startupStep"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "webServerGracefulShutdown"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.context.WebServerGracefulShutdownLifecycle"
      uuid: "webServerGracefulShutdownLifecycle"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "webServerStartStop"
      valueType: "java.lang.String"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.servlet.context.WebServerStartStopLifecycle"
      uuid: "webServerStartStopLifecycle"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 184
      expression: "webServer == null"
      range: "(184,7)-(184,23)"
      evaluatedAs: true
      internalMethodName: "createWebServer"
    - lineNumber: 184
      expression: "servletContext == null"
      range: "(184,28)-(184,49)"
      evaluatedAs: true
      internalMethodName: "createWebServer"
  - pathId: "path3"
    testPathName: "onRefreshWhenCaughtThrowableThrowsApplicationContextException"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "67D1DEB0793121C919926AFCEB9CD968"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid10):void"
        staticAccess: true
    - type: "STATIC"
      name: "UiApplicationContextUtils.class"
      modelFingerprint: "4FA0B4FA909C2FC11A2B091BE534D9DD"
      valueUuid: "UiApplicationContextUtils.class"
      methodExercised:
        expression: "initThemeSource(context:targetClassObject):themeSource"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "56F5408DB05C813A35D774FC3A5DFA5E"
      valueUuid: "applicationStartup2"
      methodExercised:
        expression: "start(name:uniqueUuid11):startupStep"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "11338FC728F9DAFB1929136F86C3BFB4"
      methodExercised:
        expression: "getWebServerFactory():servletWebServerFactory"
    - type: "LOCAL_VARIABLE"
      name: "createWebServer"
      modelFingerprint: "1EA0756625D8353524772108312D2C64"
      valueUuid: "startupStep"
      methodExercised:
        expression: "tag(key:uniqueUuid12,value:string3):startupStep2"
    - type: "LOCAL_VARIABLE"
      name: "factory"
      modelFingerprint: "BA006F90AF302C347EA35B03A29A55E2"
      valueUuid: "servletWebServerFactory"
      methodExercised:
        expression: "getWebServer(initializers:servletContextInitializerArray):webServer"
    - type: "LOCAL_VARIABLE"
      name: "createWebServer"
      modelFingerprint: "CCFEEE5C5652E7F40A6611E50FF56B41"
      valueUuid: "startupStep"
      methodExercised:
        expression: "end():void2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA8B462E63307028B95B0E76BBCB758E"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B7E838BBA4A42878155BD00819E16B22"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid13,singletonObject:webServerGracefulShutdownLifecycle):void3"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA8B462E63307028B95B0E76BBCB758E"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory2"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "53249A824581D8139B87D9AC174E9207"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid14,singletonObject:webServerStartStopLifecycle):void4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E82AEAE9359B1D7093A8477D0AC6C008"
      valueUuid: "applicationContextException"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_INTERNAL_METHOD_FAILURE"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
        propertiesMap:
          applicationStartup:
            sapientType: "MOCK"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup2"
          servletContext:
            sapientType: "NULL"
            valueType: "jakarta.servlet.ServletContext"
            uuid: "servletContext"
            fixed: true
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.web.context.support.GenericWebApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.web.context.support.GenericWebApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.ui.context.support.UiApplicationContextUtils"
      uuid: "UiApplicationContextUtils.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.ui.context.ThemeSource"
      uuid: "themeSource"
    - sapientType: "THIS"
      valueType: "org.springframework.web.context.support.GenericWebApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.ApplicationStartup"
      uuid: "applicationStartup2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.StartupStep"
      uuid: "startupStep"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.boot.webserver.create"
      valueType: "java.lang.String"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.ServletWebServerFactory"
      uuid: "servletWebServerFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.StartupStep"
      uuid: "startupStep"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.StartupStep"
      uuid: "startupStep2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "factory"
      valueType: "java.lang.String"
      uuid: "uniqueUuid12"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.ServletWebServerFactory"
      uuid: "servletWebServerFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.WebServer"
      uuid: "webServer"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.boot.web.servlet.ServletContextInitializer"
            uuid: "servletContextInitializer"
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "servletContextInitializerArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.StartupStep"
      uuid: "startupStep"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "webServerGracefulShutdown"
      valueType: "java.lang.String"
      uuid: "uniqueUuid13"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.context.WebServerGracefulShutdownLifecycle"
      uuid: "webServerGracefulShutdownLifecycle"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "webServerStartStop"
      valueType: "java.lang.String"
      uuid: "uniqueUuid14"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.servlet.context.WebServerStartStopLifecycle"
      uuid: "webServerStartStopLifecycle"
      fixed: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.context.ApplicationContextException"
        parameters:
        - name: "msg"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable to start web server"
            valueType: "java.lang.String"
            uuid: "uniqueUuid15"
            fixed: true
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Throwable"
              parameters: []
            valueType: "java.lang.Throwable"
            uuid: "throwable"
      valueType: "org.springframework.context.ApplicationContextException"
      uuid: "applicationContextException"
      fixed: true
    branches:
    - lineNumber: 184
      expression: "webServer == null"
      range: "(184,7)-(184,23)"
      evaluatedAs: true
      internalMethodName: "createWebServer"
    - lineNumber: 184
      expression: "servletContext == null"
      range: "(184,28)-(184,49)"
      evaluatedAs: true
      internalMethodName: "createWebServer"
    - lineNumber: 164
      expression: "catch-exception (Throwable)"
      range: "(164,3)-(164,21)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 8
      catchExceptions:
      - "java.lang.Throwable"
  - pathId: "path5"
    testPathName: "onRefreshWhenCaughtServletException"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "41F0B7A743CD78EB72D978747DCBAB38"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid16):void"
        staticAccess: true
    - type: "STATIC"
      name: "UiApplicationContextUtils.class"
      modelFingerprint: "4FA0B4FA909C2FC11A2B091BE534D9DD"
      valueUuid: "UiApplicationContextUtils.class"
      methodExercised:
        expression: "initThemeSource(context:targetClassObject):themeSource"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "56F5408DB05C813A35D774FC3A5DFA5E"
      valueUuid: "applicationStartup2"
      methodExercised:
        expression: "start(name:uniqueUuid17):startupStep"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "11338FC728F9DAFB1929136F86C3BFB4"
      methodExercised:
        expression: "getWebServerFactory():servletWebServerFactory"
    - type: "LOCAL_VARIABLE"
      name: "createWebServer"
      modelFingerprint: "1EA0756625D8353524772108312D2C64"
      valueUuid: "startupStep"
      methodExercised:
        expression: "tag(key:uniqueUuid18,value:string3):startupStep2"
    - type: "LOCAL_VARIABLE"
      name: "factory"
      modelFingerprint: "BA006F90AF302C347EA35B03A29A55E2"
      valueUuid: "servletWebServerFactory"
      methodExercised:
        expression: "getWebServer(initializers:servletContextInitializerArray):webServer"
    - type: "LOCAL_VARIABLE"
      name: "createWebServer"
      modelFingerprint: "CCFEEE5C5652E7F40A6611E50FF56B41"
      valueUuid: "startupStep"
      methodExercised:
        expression: "end():void2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA8B462E63307028B95B0E76BBCB758E"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "B7E838BBA4A42878155BD00819E16B22"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid19,singletonObject:webServerGracefulShutdownLifecycle):void3"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA8B462E63307028B95B0E76BBCB758E"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory2"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "53249A824581D8139B87D9AC174E9207"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "registerSingleton(beanName:uniqueUuid20,singletonObject:webServerStartStopLifecycle):void4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_INTERNAL_METHOD_FAILURE"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
        propertiesMap:
          applicationStartup:
            sapientType: "MOCK"
            valueType: "org.springframework.core.metrics.ApplicationStartup"
            uuid: "applicationStartup2"
          servletContext:
            sapientType: "NULL"
            valueType: "jakarta.servlet.ServletContext"
            uuid: "servletContext"
            fixed: true
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.web.context.support.GenericWebApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.web.context.support.GenericWebApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid16"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.ui.context.support.UiApplicationContextUtils"
      uuid: "UiApplicationContextUtils.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.ui.context.ThemeSource"
      uuid: "themeSource"
    - sapientType: "THIS"
      valueType: "org.springframework.web.context.support.GenericWebApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.ApplicationStartup"
      uuid: "applicationStartup2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.StartupStep"
      uuid: "startupStep"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.boot.webserver.create"
      valueType: "java.lang.String"
      uuid: "uniqueUuid17"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.ServletWebServerFactory"
      uuid: "servletWebServerFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.StartupStep"
      uuid: "startupStep"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.StartupStep"
      uuid: "startupStep2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "factory"
      valueType: "java.lang.String"
      uuid: "uniqueUuid18"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.ServletWebServerFactory"
      uuid: "servletWebServerFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.WebServer"
      uuid: "webServer"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.boot.web.servlet.ServletContextInitializer"
            uuid: "servletContextInitializer"
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
      uuid: "servletContextInitializerArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.metrics.StartupStep"
      uuid: "startupStep"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "webServerGracefulShutdown"
      valueType: "java.lang.String"
      uuid: "uniqueUuid19"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.context.WebServerGracefulShutdownLifecycle"
      uuid: "webServerGracefulShutdownLifecycle"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "webServerStartStop"
      valueType: "java.lang.String"
      uuid: "uniqueUuid20"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.servlet.context.WebServerStartStopLifecycle"
      uuid: "webServerStartStopLifecycle"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 184
      expression: "webServer == null"
      range: "(184,7)-(184,23)"
      evaluatedAs: true
      internalMethodName: "createWebServer"
    - lineNumber: 184
      expression: "servletContext == null"
      range: "(184,28)-(184,49)"
      evaluatedAs: true
      internalMethodName: "createWebServer"
    - lineNumber: 199
      expression: "catch-exception (ServletException)"
      range: "(199,4)-(199,29)"
      evaluatedAs: true
      internalMethodName: "createWebServer"
    catchBlockExercised:
      idExternalInstruction: 7
      id: 9
      catchExceptions:
      - "jakarta.servlet.ServletException"
  - pathId: "path2"
    testPathName: "onRefreshWhenServletContextIsNotNull"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "76E9B2A90E344EA84E84672C26D4A0C5"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid21):void"
        staticAccess: true
    - type: "STATIC"
      name: "UiApplicationContextUtils.class"
      modelFingerprint: "4FA0B4FA909C2FC11A2B091BE534D9DD"
      valueUuid: "UiApplicationContextUtils.class"
      methodExercised:
        expression: "initThemeSource(context:targetClassObject):themeSource"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "getSelfInitializer().onStartup(servletContext);"
      lineNumber: 197
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type ServletContextInitializer - Method: onStartup"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
        propertiesMap:
          servletContext:
            sapientType: "MOCK"
            valueType: "jakarta.servlet.ServletContext"
            uuid: "servletContext"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.web.context.support.GenericWebApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.web.context.support.GenericWebApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid21"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.ui.context.support.UiApplicationContextUtils"
      uuid: "UiApplicationContextUtils.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.ui.context.ThemeSource"
      uuid: "themeSource"
    - sapientType: "THIS"
      valueType: "org.springframework.web.context.support.GenericWebApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 184
      expression: "webServer == null"
      range: "(184,7)-(184,23)"
      evaluatedAs: true
      internalMethodName: "createWebServer"
    - lineNumber: 184
      expression: "servletContext == null"
      range: "(184,28)-(184,49)"
      evaluatedAs: false
      internalMethodName: "createWebServer"
    - lineNumber: 195
      expression: "servletContext != null"
      range: "(195,12)-(195,33)"
      evaluatedAs: true
      internalMethodName: "createWebServer"
  - pathId: "path4"
    testPathName: "onRefreshWhenServletContextIsNotNullAndCaughtThrowableThrowsApplicationContextException"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "881F947E9E0FA54BCCA47F2BED002D05"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid22):void"
        staticAccess: true
    - type: "STATIC"
      name: "UiApplicationContextUtils.class"
      modelFingerprint: "4FA0B4FA909C2FC11A2B091BE534D9DD"
      valueUuid: "UiApplicationContextUtils.class"
      methodExercised:
        expression: "initThemeSource(context:targetClassObject):themeSource"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E82AEAE9359B1D7093A8477D0AC6C008"
      valueUuid: "applicationContextException"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "getSelfInitializer().onStartup(servletContext);"
      lineNumber: 197
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type ServletContextInitializer - Method: onStartup"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
        propertiesMap:
          servletContext:
            sapientType: "MOCK"
            valueType: "jakarta.servlet.ServletContext"
            uuid: "servletContext"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.web.context.support.GenericWebApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.web.context.support.GenericWebApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid22"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.ui.context.support.UiApplicationContextUtils"
      uuid: "UiApplicationContextUtils.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.ui.context.ThemeSource"
      uuid: "themeSource"
    - sapientType: "THIS"
      valueType: "org.springframework.web.context.support.GenericWebApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.context.ApplicationContextException"
        parameters:
        - name: "msg"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable to start web server"
            valueType: "java.lang.String"
            uuid: "uniqueUuid23"
            fixed: true
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Throwable"
              parameters: []
            valueType: "java.lang.Throwable"
            uuid: "throwable"
      valueType: "org.springframework.context.ApplicationContextException"
      uuid: "applicationContextException"
      fixed: true
    branches:
    - lineNumber: 184
      expression: "webServer == null"
      range: "(184,7)-(184,23)"
      evaluatedAs: true
      internalMethodName: "createWebServer"
    - lineNumber: 184
      expression: "servletContext == null"
      range: "(184,28)-(184,49)"
      evaluatedAs: false
      internalMethodName: "createWebServer"
    - lineNumber: 195
      expression: "servletContext != null"
      range: "(195,12)-(195,33)"
      evaluatedAs: true
      internalMethodName: "createWebServer"
    - lineNumber: 164
      expression: "catch-exception (Throwable)"
      range: "(164,3)-(164,21)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 8
      catchExceptions:
      - "java.lang.Throwable"
  - pathId: "path6"
    testPathName: "onRefreshWhenCaughtServletExceptionThrowsApplicationContextException"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "0DABF0D305896F677DBA9E3D09FD3491"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid24):void"
        staticAccess: true
    - type: "STATIC"
      name: "UiApplicationContextUtils.class"
      modelFingerprint: "4FA0B4FA909C2FC11A2B091BE534D9DD"
      valueUuid: "UiApplicationContextUtils.class"
      methodExercised:
        expression: "initThemeSource(context:targetClassObject):themeSource"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "4D06823A9216B177D5FEA3353224F3F3"
      valueUuid: "servletContextInitializer"
      methodExercised:
        expression: "onStartup(servletContext:servletContext):void2"
        throwsExceptions:
        - "jakarta.servlet.ServletException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E82AEAE9359B1D7093A8477D0AC6C008"
      valueUuid: "applicationContextException2"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "getSelfInitializer().onStartup(servletContext);"
      lineNumber: 197
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type ServletContextInitializer - Method: onStartup"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
        propertiesMap:
          servletContext:
            sapientType: "MOCK"
            valueType: "jakarta.servlet.ServletContext"
            uuid: "servletContext"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.web.context.support.GenericWebApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.web.context.support.GenericWebApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid24"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.ui.context.support.UiApplicationContextUtils"
      uuid: "UiApplicationContextUtils.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.ui.context.ThemeSource"
      uuid: "themeSource"
    - sapientType: "THIS"
      valueType: "org.springframework.web.context.support.GenericWebApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer"
      uuid: "servletContextInitializer"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "servletContext"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.context.ApplicationContextException"
        parameters:
        - name: "msg"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable to start web server"
            valueType: "java.lang.String"
            uuid: "uniqueUuid25"
            fixed: true
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Throwable"
              parameters: []
            valueType: "java.lang.Throwable"
            uuid: "throwable"
      valueType: "org.springframework.context.ApplicationContextException"
      uuid: "applicationContextException2"
      fixed: true
    branches:
    - lineNumber: 184
      expression: "webServer == null"
      range: "(184,7)-(184,23)"
      evaluatedAs: true
      internalMethodName: "createWebServer"
    - lineNumber: 184
      expression: "servletContext == null"
      range: "(184,28)-(184,49)"
      evaluatedAs: false
      internalMethodName: "createWebServer"
    - lineNumber: 195
      expression: "servletContext != null"
      range: "(195,12)-(195,33)"
      evaluatedAs: true
      internalMethodName: "createWebServer"
    - lineNumber: 199
      expression: "catch-exception (ServletException)"
      range: "(199,4)-(199,29)"
      evaluatedAs: true
      internalMethodName: "createWebServer"
    catchBlockExercised:
      idExternalInstruction: 7
      id: 9
      catchExceptions:
      - "jakarta.servlet.ServletException"
- method:
    name: "doClose"
    sourceCodeSignature: "void doClose()"
    returnType: "void"
    instructionFingerprint: "24782B2D5B9299299D52786852C67D6F"
  paths:
  - pathId: "path1"
    testPathName: "doCloseWhenWebServerIsNull"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "DF7892A789207449773A3E99CB2CDE5D"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid26):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "EE7440D3C0AC3625AD38D51A8F5207CA"
      methodExercised:
        expression: "isActive():boolean1"
    - type: "STATIC"
      name: "AvailabilityChangeEvent.class"
      modelFingerprint: "87985923F99BC071BF31224B37213503"
      valueUuid: "AvailabilityChangeEvent.class"
      methodExercised:
        expression: "publish(context:targetClassObject,state:Enum-org.springframework.boot.availability.ReadinessState-REFUSING_TRAFFIC):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_INTERNAL_METHOD_FAILURE"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid26"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.availability.AvailabilityChangeEvent"
      uuid: "AvailabilityChangeEvent.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "REFUSING_TRAFFIC"
      valueType: "org.springframework.boot.availability.ReadinessState"
      uuid: "Enum-org.springframework.boot.availability.ReadinessState-REFUSING_TRAFFIC"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 171
      expression: "isActive()"
      range: "(171,7)-(171,16)"
      evaluatedAs: true
    - lineNumber: 176
      expression: "webServer != null"
      range: "(176,7)-(176,23)"
      evaluatedAs: false
- method:
    name: "getWebServerFactory"
    sourceCodeSignature: "ServletWebServerFactory getWebServerFactory()"
    returnType: "org.springframework.boot.web.servlet.server.ServletWebServerFactory"
    instructionFingerprint: "B3BB6170D3A649A99B18EE15E448D922"
  paths:
  - pathId: "path1"
    testPathName: "getWebServerFactoryWhenBeanNamesLengthEquals0ThrowsMissingWebServerFactoryBeanException"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "80323F7F8EFEF2FC39C315DDC368291A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid27):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA8B462E63307028B95B0E76BBCB758E"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "AE64409388116D33193A881DF5CE14C9"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "getBeanNamesForType(type:uniqueUuid28):stringArray"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A79951E919CCE4C62112C18A0CAA964E"
      valueUuid: "missingWebServerFactoryBeanException"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid27"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.web.servlet.server.ServletWebServerFactory"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.web.servlet.server.ServletWebServerFactory"
      uuid: "uniqueUuid28"
      fixed: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.web.context.MissingWebServerFactoryBeanException"
        parameters:
        - name: "webServerApplicationContextClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.boot.web.context.WebServerApplicationContext"
            uuid: "uniqueUuid29"
            fixed: true
        - name: "webServerFactoryClass"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.web.servlet.server.ServletWebServerFactory"
            valueType: "java.lang.Class"
            genericValueType: "? extends org.springframework.boot.web.server.WebServerFactory"
            uuid: "uniqueUuid30"
            fixed: true
        - name: "webApplicationType"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "SERVLET"
            valueType: "org.springframework.boot.WebApplicationType"
            uuid: "Enum-org.springframework.boot.WebApplicationType-SERVLET"
            fixed: true
      valueType: "org.springframework.boot.web.context.MissingWebServerFactoryBeanException"
      uuid: "missingWebServerFactoryBeanException"
      fixed: true
    branches:
    - lineNumber: 215
      expression: "beanNames.length == 0"
      range: "(215,7)-(215,27)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getWebServerFactoryWhenBeanNamesLengthGreaterThan1ThrowsApplicationContextException"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "83D2B23D1B406F77A3BEBC39DBE6CBD1"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid31):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA8B462E63307028B95B0E76BBCB758E"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "6F61976835705E1AA2EDA6D0D3D2074B"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "getBeanNamesForType(type:uniqueUuid32):stringArray"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "85AECEAB29670E06908D95E055B9C55B"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "arrayToCommaDelimitedString(arr:stringArray):string3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B0B684D70059FC9CE62B24D21A851089"
      valueUuid: "applicationContextException"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid31"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForTypeItem1"
            valueType: "java.lang.String"
            uuid: "stringArrayItem0"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForTypeItem1"
            valueType: "java.lang.String"
            uuid: "stringArrayItem1"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.web.servlet.server.ServletWebServerFactory"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.web.servlet.server.ServletWebServerFactory"
      uuid: "uniqueUuid32"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForTypeItem1"
            valueType: "java.lang.String"
            uuid: "stringArrayItem0"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForTypeItem1"
            valueType: "java.lang.String"
            uuid: "stringArrayItem1"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.context.ApplicationContextException"
        parameters:
        - name: "msg"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable to start ServletWebServerApplicationContext due to multiple\
                \ ServletWebServerFactory beans : B"
            valueType: "java.lang.String"
            uuid: "string4"
      valueType: "org.springframework.context.ApplicationContextException"
      uuid: "applicationContextException"
      fixed: true
    branches:
    - lineNumber: 215
      expression: "beanNames.length == 0"
      range: "(215,7)-(215,27)"
      evaluatedAs: false
    - lineNumber: 219
      expression: "beanNames.length > 1"
      range: "(219,7)-(219,26)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "getWebServerFactoryWhenBeanNamesLengthNotGreaterThan1"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "5D4C283C3BDDB77342906223F542DD7C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid33):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA8B462E63307028B95B0E76BBCB758E"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "07FA7D52EDFD8539BE651810DB4D3344"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "getBeanNamesForType(type:uniqueUuid34):stringArray"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "CA8B462E63307028B95B0E76BBCB758E"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory2"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "8B9C71D14348DB23CF74249A046B0436"
      valueUuid: "configurableListableBeanFactory2"
      methodExercised:
        expression: "getBean(name:string3,requiredType:uniqueUuid35):object"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "03AB87D27B76D5D284CF1174EC86FD88"
      valueUuid: "object"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid33"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanNamesForTypeItem1"
            valueType: "java.lang.String"
            uuid: "string3"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.web.servlet.server.ServletWebServerFactory"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.web.servlet.server.ServletWebServerFactory"
      uuid: "uniqueUuid34"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.ServletWebServerFactory"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanNamesForTypeItem1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.web.servlet.server.ServletWebServerFactory"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.web.servlet.server.ServletWebServerFactory"
      uuid: "uniqueUuid35"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.server.ServletWebServerFactory"
      uuid: "object"
      explicitCastNeeded: true
    branches:
    - lineNumber: 215
      expression: "beanNames.length == 0"
      range: "(215,7)-(215,27)"
      evaluatedAs: false
    - lineNumber: 219
      expression: "beanNames.length > 1"
      range: "(219,7)-(219,26)"
      evaluatedAs: false
- method:
    name: "getServletContextInitializerBeans"
    sourceCodeSignature: "Collection<ServletContextInitializer> getServletContextInitializerBeans()"
    returnType: "java.util.Collection"
    genericReturnType: "org.springframework.boot.web.servlet.ServletContextInitializer"
    instructionFingerprint: "906F4B47FEF6F1CF19C4CECD62D54F65"
  paths:
  - pathId: "path1"
    testPathName: "getServletContextInitializerBeansTest"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "1C3780F66F9432BA05628F5CFBD099B8"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid36):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "B9CB55A0C48855495EEAA66886638C1A"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "23AF4660737E6236F4D1E068F90135A1"
      valueUuid: "servletContextInitializerBeans"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid36"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "org.springframework.boot.web.servlet.ServletContextInitializerBeans"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
            uuid: "configurableListableBeanFactory"
        - name: "initializerTypes"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            genericValueType: "? extends org.springframework.boot.web.servlet.ServletContextInitializer"
            uuid: "classArray"
        values: []
      valueType: "java.util.Collection"
      genericValueType: "org.springframework.boot.web.servlet.ServletContextInitializer"
      uuid: "servletContextInitializerBeans"
- method:
    name: "prepareWebApplicationContext"
    sourceCodeSignature: "void prepareWebApplicationContext(ServletContext servletContext)"
    returnType: "void"
    parameters:
    - name: "servletContext"
      type: "jakarta.servlet.ServletContext"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 10
      catchExceptions:
      - "java.lang.RuntimeException"
      - "java.lang.Error"
    instructionFingerprint: "E3B594E5CC546F6209A64ACB5FD8A6D2"
  paths:
  - pathId: "path1"
    testPathName: "prepareWebApplicationContextWhenRootContextEqualsThisThrowsIllegalStateException"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "7B24B29DF5D28D573E9FEAB5CDD391FE"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "INPUT"
      name: "servletContext"
      modelFingerprint: "1FE94A2B8400B5864BA32324277284E5"
      valueUuid: "servletContext"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid37):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "servletContext"
      modelFingerprint: "D715B328AA46951F8A97EEF7C843658B"
      valueUuid: "servletContext"
      methodExercised:
        expression: "getAttribute(arg0:string3):targetClassObject"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "1ACFA4874DFB0F7CA5714F90509549C4"
      valueUuid: "illegalStateException"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "servletContext"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "targetClassObject"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "targetClassObject"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid37"
      fixed: true
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "servletContext"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "targetClassObject"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.web.context.WebApplicationContext.ROOT"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Cannot initialize context because there is already a root application\
                \ context present - check whether you have multiple ServletContextInitializers!"
            valueType: "java.lang.String"
            uuid: "uniqueUuid38"
            fixed: true
      valueType: "java.lang.IllegalStateException"
      uuid: "illegalStateException"
      fixed: true
    branches:
    - lineNumber: 278
      expression: "rootContext != null"
      range: "(278,7)-(278,25)"
      evaluatedAs: true
    - lineNumber: 279
      expression: "rootContext == this"
      range: "(279,8)-(279,26)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "prepareWebApplicationContextWhenRootContextNotEqualsThis"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "74015A99AED5C5B41291E3524FBBE6B3"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "INPUT"
      name: "servletContext"
      modelFingerprint: "1FE94A2B8400B5864BA32324277284E5"
      valueUuid: "servletContext"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid39):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "servletContext"
      modelFingerprint: "C4B10A6C74D44E812D2BD05043C0619F"
      valueUuid: "servletContext"
      methodExercised:
        expression: "getAttribute(arg0:string3):object"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "servletContext"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid39"
      fixed: true
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "servletContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.web.context.WebApplicationContext.ROOT"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 278
      expression: "rootContext != null"
      range: "(278,7)-(278,25)"
      evaluatedAs: true
    - lineNumber: 279
      expression: "rootContext == this"
      range: "(279,8)-(279,26)"
      evaluatedAs: false
  - pathId: "path3"
    testPathName: "prepareWebApplicationContextWhenLoggerIsInfoEnabled"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "E08F42AD4BCE1519ABBBDCA84A5EB90D"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "INPUT"
      name: "servletContext"
      modelFingerprint: "1FE94A2B8400B5864BA32324277284E5"
      valueUuid: "servletContext"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid40):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "servletContext"
      modelFingerprint: "C9D08454DABD1AB7F128D5A41984D44A"
      valueUuid: "servletContext"
      methodExercised:
        expression: "getAttribute(arg0:string3):object"
    - type: "LOCAL_VARIABLE"
      name: "servletContext"
      modelFingerprint: "874BBEE5A5F4B6B7725574D7FE557D8E"
      valueUuid: "servletContext"
      methodExercised:
        expression: "log(arg0:uniqueUuid41):void2"
    - type: "LOCAL_VARIABLE"
      name: "servletContext"
      modelFingerprint: "FEB297DADCF5CAA7F85C054019E49F69"
      valueUuid: "servletContext"
      methodExercised:
        expression: "setAttribute(arg0:string3,arg1:targetClassObject):void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "long elapsedTime = System.currentTimeMillis() - getStartupDate();"
      lineNumber: 295
      details: "Method java.lang.System::currentTimeMillis has a unrepeatable behavior"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
        propertiesMap:
          servletContext:
            sapientType: "MOCK"
            valueType: "jakarta.servlet.ServletContext"
            uuid: "servletContext"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "servletContext"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid40"
      fixed: true
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "servletContext"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.web.context.WebApplicationContext.ROOT"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "servletContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Initializing Spring embedded WebApplicationContext"
      valueType: "java.lang.String"
      uuid: "uniqueUuid41"
      fixed: true
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "servletContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.web.context.WebApplicationContext.ROOT"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 278
      expression: "rootContext != null"
      range: "(278,7)-(278,25)"
      evaluatedAs: false
    - lineNumber: 289
      expression: "logger.isDebugEnabled()"
      range: "(289,8)-(289,30)"
      evaluatedAs: true
    - lineNumber: 294
      expression: "logger.isInfoEnabled()"
      range: "(294,8)-(294,29)"
      evaluatedAs: true
  - pathId: "path5"
    testPathName: "prepareWebApplicationContextWhenCaughtRuntimeExceptionOrErrorThrowsThrowable"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "0B8E0A9EA568A5844E64AF7AD40F691C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "INPUT"
      name: "servletContext"
      modelFingerprint: "1FE94A2B8400B5864BA32324277284E5"
      valueUuid: "servletContext"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid42):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "servletContext"
      modelFingerprint: "C9D08454DABD1AB7F128D5A41984D44A"
      valueUuid: "servletContext"
      methodExercised:
        expression: "getAttribute(arg0:string3):object"
    - type: "LOCAL_VARIABLE"
      name: "servletContext"
      modelFingerprint: "874BBEE5A5F4B6B7725574D7FE557D8E"
      valueUuid: "servletContext"
      methodExercised:
        expression: "log(arg0:uniqueUuid43):void2"
    - type: "LOCAL_VARIABLE"
      name: "servletContext"
      modelFingerprint: "FEB297DADCF5CAA7F85C054019E49F69"
      valueUuid: "servletContext"
      methodExercised:
        expression: "setAttribute(arg0:string3,arg1:targetClassObject):void3"
    - type: "LOCAL_VARIABLE"
      name: "servletContext"
      modelFingerprint: "A6ADA0EFBC18C1E6398E2F27512F88B1"
      valueUuid: "servletContext"
      methodExercised:
        expression: "setAttribute(arg0:string3,arg1:throwable):void7"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "49E493EB56B47EDEB5C173968793BABC"
      valueUuid: "throwable"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_UNSOLVABLE"
      source: "long elapsedTime = System.currentTimeMillis() - getStartupDate();"
      lineNumber: 295
      details: "Method java.lang.System::currentTimeMillis has a unrepeatable behavior"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
        propertiesMap:
          servletContext:
            sapientType: "MOCK"
            valueType: "jakarta.servlet.ServletContext"
            uuid: "servletContext"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "servletContext"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid42"
      fixed: true
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "servletContext"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.web.context.WebApplicationContext.ROOT"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "servletContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Initializing Spring embedded WebApplicationContext"
      valueType: "java.lang.String"
      uuid: "uniqueUuid43"
      fixed: true
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "servletContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.web.context.WebApplicationContext.ROOT"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "servletContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.web.context.WebApplicationContext.ROOT"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "throwable"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "throwable"
    branches:
    - lineNumber: 278
      expression: "rootContext != null"
      range: "(278,7)-(278,25)"
      evaluatedAs: false
    - lineNumber: 289
      expression: "logger.isDebugEnabled()"
      range: "(289,8)-(289,30)"
      evaluatedAs: true
    - lineNumber: 294
      expression: "logger.isInfoEnabled()"
      range: "(294,8)-(294,29)"
      evaluatedAs: true
    - lineNumber: 299
      expression: "catch-exception (RuntimeException | Error)"
      range: "(299,3)-(299,36)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 10
      catchExceptions:
      - "java.lang.RuntimeException"
      - "java.lang.Error"
- method:
    name: "getResourceByPath"
    sourceCodeSignature: "Resource getResourceByPath(String path)"
    returnType: "org.springframework.core.io.Resource"
    parameters:
    - name: "path"
      type: "java.lang.String"
    instructionFingerprint: "B61B33758F4F2B38CD72F89A4928FE2D"
  paths:
  - pathId: "path1"
    testPathName: "getResourceByPathWhenGetServletContextIsNull"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "3D8815D5EBA23DAEE658AF24F9806B7E"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "INPUT"
      name: "path"
      modelFingerprint: "CCCA5C8EB56E398E3BD20AA7A3D33AEC"
      valueUuid: "path"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid44):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F392ACB0D1513DACAE8CDA9F1C72B80D"
      valueUuid: "defaultResourceLoader.ClassPathContextResource"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
        propertiesMap:
          classLoader:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "classLoader"
          servletContext:
            sapientType: "NULL"
            valueType: "jakarta.servlet.ServletContext"
            uuid: "servletContext"
            fixed: true
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "path1"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid44"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.core.io.DefaultResourceLoader$ClassPathContextResource"
        parameters:
        - name: "path"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "path1"
            valueType: "java.lang.String"
            uuid: "path"
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "classLoader"
      valueType: "org.springframework.core.io.DefaultResourceLoader$ClassPathContextResource"
      uuid: "defaultResourceLoader.ClassPathContextResource"
      fixed: true
    branches:
    - lineNumber: 308
      expression: "getServletContext() == null"
      range: "(308,7)-(308,33)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getResourceByPathWhenGetServletContextIsNotNull"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "5B0FCCDD4FE863620506F9E8040FEB62"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B0A90836C43A241A6B0C34A0C3428CCA"
      valueUuid: "target"
    - type: "INPUT"
      name: "path"
      modelFingerprint: "CCCA5C8EB56E398E3BD20AA7A3D33AEC"
      valueUuid: "path"
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string"
        staticAccess: true
    - type: "STATIC"
      name: "ObjectUtils.class.real"
      modelFingerprint: "BC4AAEAC8A7791F702A9EF3850F9E072"
      valueUuid: "ObjectUtils.class.real"
      methodExercised:
        expression: "identityToString(obj:targetClassObject):string2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "9C8FB2E949BB34E406BE754D9450327D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:beanFactory,message:uniqueUuid45):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "47980D17DCE9B74EA3A7E9A98F6DAC1D"
      valueUuid: "servletContextResource"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
        parameters:
        - name: "beanFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
            uuid: "beanFactory"
        propertiesMap:
          servletContext:
            sapientType: "MOCK"
            valueType: "jakarta.servlet.ServletContext"
            uuid: "servletContext"
      valueType: "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "path1"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ObjectUtils"
      uuid: "ObjectUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "THIS"
      valueType: "org.springframework.context.support.AbstractApplicationContext"
      uuid: "targetClassObject"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.DefaultListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BeanFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid45"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.web.context.support.ServletContextResource"
        parameters:
        - name: "servletContext"
          value:
            sapientType: "MOCK"
            valueType: "jakarta.servlet.ServletContext"
            uuid: "servletContext"
        - name: "path"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "path1"
            valueType: "java.lang.String"
            uuid: "path"
      valueType: "org.springframework.web.context.support.ServletContextResource"
      uuid: "servletContextResource"
      fixed: true
    branches:
    - lineNumber: 308
      expression: "getServletContext() == null"
      range: "(308,7)-(308,33)"
      evaluatedAs: false
- method:
    name: "getServerNamespace"
    sourceCodeSignature: "String getServerNamespace()"
    returnType: "java.lang.String"
    instructionFingerprint: "354CD6D9F91FD276D5B90A925D1406F3"
  paths:
  - pathId: "path1"
    testPathName: "getServerNamespaceTest"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "32DFA04ED998A605176BEA43CFC3F1E0"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setServerNamespace"
    sourceCodeSignature: "void setServerNamespace(String serverNamespace)"
    returnType: "void"
    parameters:
    - name: "serverNamespace"
      type: "java.lang.String"
    instructionFingerprint: "7C185200629741A742E4DE73BBBB9DEC"
  paths:
  - pathId: "path1"
    testPathName: "setServerNamespaceTest"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "6E8C3454B27977B473F9C1582F5B0A40"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setServletConfig"
    sourceCodeSignature: "void setServletConfig(ServletConfig servletConfig)"
    returnType: "void"
    parameters:
    - name: "servletConfig"
      type: "jakarta.servlet.ServletConfig"
    instructionFingerprint: "4D890FC5545C9028D72138C668640C80"
  paths:
  - pathId: "path1"
    testPathName: "setServletConfigTest"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "70EA5FE1F3A70AA115951602A232F8A6"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getServletConfig"
    sourceCodeSignature: "ServletConfig getServletConfig()"
    returnType: "jakarta.servlet.ServletConfig"
    instructionFingerprint: "66B0C083BCFA7855FFB50D0FCFF73F08"
  paths:
  - pathId: "path1"
    testPathName: "getServletConfigTest"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "86163E829AB5E3EAEC6D8D8BBB9DC437"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getWebServer"
    sourceCodeSignature: "WebServer getWebServer()"
    returnType: "org.springframework.boot.web.server.WebServer"
    instructionFingerprint: "2C021E202C86AE4F089716993C82F0B0"
  paths:
  - pathId: "path1"
    testPathName: "getWebServerTest"
    constructorSignature: "<init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)\
      \ : void"
    modelFingerprint: "24DBEEA0CFD789199FD9F67B7656BEEF"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
