---
modelFingerprint: "C56FD37210586DC27907E96CA92DB3DB"
methods:
- method:
    name: "iterator"
    signature: "iterator() : java.util.Iterator<java.lang.String>"
    sourceCodeSignature: "Iterator<String> iterator()"
    instructionFingerprint: "3CA4549606465541CB1A3EBA35E8D2F7"
  paths:
  - pathId: "path1"
    testPathName: "iteratorTest"
    constructorSignature: "load(java.lang.Class<?>,java.lang.ClassLoader) : org.springframework.boot.context.annotation.ImportCandidates"
    modelFingerprint: "6176124989C104E61E8B9D84D549EF56"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "7AAA9549695657904E7BF3A3F01DE95F"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "8AE2676D93C24B9C72EDC1038DA1E5AF"
      index: 2
      valueUuid: "uuid2"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "load_class1"
        - name: "message"
          valueUuid: "uuid1"
        signature: "notNull(Class,String): void"
        returnValueUuid: "load_void1"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "D27C542609730FB7385202E37AF9B08E"
      index: 3
      valueUuid: "uuid4"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "load_arrayList1"
        - name: "message"
          valueUuid: "uuid3"
        signature: "notNull(List,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "221F4E3B79289C936323A1C0C49045F3"
      index: 4
      valueUuid: "iterator_iterator1"
    uuid: "78c09fb6-edcf-3ce7-9932-6ef4ffc152b3"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.annotation.ImportCandidates"
        method: "load"
        methodParameters:
        - name: "annotation"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "?"
            uuid: "load_class1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "classLoader"
          value:
            sapientType: "NULL"
            valueType: "java.lang.ClassLoader"
            uuid: "load_classLoader1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.annotation.ImportCandidates"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "load_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "load_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "'annotation' must not be null"
      valueType: "java.lang.String"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "load_arrayList1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "'candidates' must not be null"
      valueType: "java.lang.String"
      uuid: "uuid3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            parameters: []
            values: []
          valueType: "java.util.List"
          genericValueType: "java.lang.String"
          uuid: "<init>_list1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Iterator"
      genericValueType: "java.lang.String"
      uuid: "iterator_iterator1"
      fixed: false
      collectionUuid: "<init>_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "getCandidates"
    signature: "getCandidates() : java.util.List<java.lang.String>"
    sourceCodeSignature: "List<String> getCandidates()"
    instructionFingerprint: "5C230A06D6291E4C45897248C5DD0402"
  paths:
  - pathId: "path1"
    testPathName: "getCandidatesTest"
    constructorSignature: "load(java.lang.Class<?>,java.lang.ClassLoader) : org.springframework.boot.context.annotation.ImportCandidates"
    modelFingerprint: "723DED8A6FDE841F678014D4699289FA"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "3e9411d8-9ff3-376d-a56c-9ed88f03fe98"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "new InputStreamReader(new UrlResource(url).getInputStream(), StandardCharsets.UTF_8)))\
        \ {"
      lineNumber: 111
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type UrlResource - Method: getInputStream"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "load"
    signature: "load(java.lang.Class<?>,java.lang.ClassLoader) : org.springframework.boot.context.annotation.ImportCandidates"
    sourceCodeSignature: "ImportCandidates load(Class<?> annotation, ClassLoader classLoader)"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "java.io.IOException"
    - idExternalInstruction: 0
      id: 5
      catchExceptions:
      - "java.io.IOException"
    instructionFingerprint: "B9991BA7C5152D55052F90CC0107E16C"
  paths:
  - pathId: "path5"
    testPathName: "loadWhenUrlsNotHasMoreElements"
    modelFingerprint: "3161F8370C10B0DC0E6848D8B43D91CD"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "c6f0813e-ef69-336e-92c2-c4a6d8fbf1d9"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path10"
    testPathName: "loadWhenCaughtIOExceptionThrowsIllegalArgumentException"
    modelFingerprint: "85DDADD6649D2C3CB9469563FF7213CF"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 26
      id: 1
      catchExceptions:
      - "java.io.IOException"
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "annotation"
      modelFingerprint: "394C53CBB27D6AC5FA1E4D2D7E4B4574"
      index: 1
      valueUuid: "load_class1"
    - type: "INPUT"
      name: "classLoader"
      modelFingerprint: "E877C1A1B3C59F93552258E807A3285D"
      index: 2
      valueUuid: "load_classLoader1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "8AE2676D93C24B9C72EDC1038DA1E5AF"
      index: 3
      valueUuid: "uuid2"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "load_class1"
        - name: "message"
          valueUuid: "uuid1"
        signature: "notNull(Class,String): void"
        returnValueUuid: "load_void1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "classLoader"
      modelFingerprint: "92F5503A9E6274B7D377FB439EC7FA19"
      index: 4
      idsTryCatchBlockSurrounding:
      - 260001
      valueUuid: "decideClassloader_classLoader1"
      methodExercised:
        target: "classLoader"
        name: "getResources"
        parameters:
        - name: "name"
          valueUuid: "load_string2"
        throwsExceptions:
        - "java.io.IOException"
        signature: "getResources(String): Enumeration throws java.io.IOException"
        returnValueUuid: "findUrlsInClasspath_enumeration1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "37B94C548C5EAAE2441E113146C4A0ED"
      index: 5
      valueUuid: "findUrlsInClasspath_illegalArgumentException1"
    uuid: "a3c7da29-0bbd-3f39-9f91-a3778d99b52f"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "UNKNOWN_REASON"
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "load_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.ClassLoader"
      uuid: "load_classLoader1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "load_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "load_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "'annotation' must not be null"
      valueType: "java.lang.String"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.lang.ClassLoader"
      uuid: "decideClassloader_classLoader1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.io.IOException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.io.IOException"
      uuid: "findUrlsInClasspath_enumeration1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "META-INF/spring/.imports"
      valueType: "java.lang.String"
      uuid: "load_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Failed to load configurations from location [META-INF/spring/.imports]"
            valueType: "java.lang.String"
            uuid: "findUrlsInClasspath_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "EXCEPTION"
            content: !<new>
              target: "java.io.IOException"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.io.IOException"
            uuid: "findUrlsInClasspath_enumeration1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.IllegalArgumentException"
      uuid: "findUrlsInClasspath_illegalArgumentException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path6"
    testPathName: "loadWhenClassLoaderIsNotNullAndUrlsNotHasMoreElements"
    modelFingerprint: "17CB1BA8EDA4BF54B1CE03DCE4571B05"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "annotation"
      modelFingerprint: "394C53CBB27D6AC5FA1E4D2D7E4B4574"
      index: 1
      valueUuid: "load_class1"
    - type: "INPUT"
      name: "classLoader"
      modelFingerprint: "27E496872E683B3897FEB169C742F504"
      index: 2
      valueUuid: "load_classLoader1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "8AE2676D93C24B9C72EDC1038DA1E5AF"
      index: 3
      valueUuid: "uuid2"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "load_class1"
        - name: "message"
          valueUuid: "uuid1"
        signature: "notNull(Class,String): void"
        returnValueUuid: "load_void1"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "D27C542609730FB7385202E37AF9B08E"
      index: 4
      valueUuid: "uuid4"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "load_arrayList1"
        - name: "message"
          valueUuid: "uuid3"
        signature: "notNull(List,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3F551278F590A4A5F3506CB6C610C9D3"
      index: 5
      valueUuid: "load_importCandidates1"
    uuid: "c16e6d43-e4d4-3f25-9b3e-719ad3301153"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "load_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "load_classLoader1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "load_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "load_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "'annotation' must not be null"
      valueType: "java.lang.String"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "load_arrayList1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "'candidates' must not be null"
      valueType: "java.lang.String"
      uuid: "uuid3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.annotation.ImportCandidates"
        parameters:
        - name: "candidates"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "java.lang.String"
            uuid: "load_arrayList1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: true
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.annotation.ImportCandidates"
      uuid: "load_importCandidates1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path4"
    testPathName: "loadWhenLineAssignedReaderReadLineIsNull"
    modelFingerprint: "8AD565E7E235F5ED45312AEC37864C3F"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "4eea6eb7-a9ca-356d-8195-220792440f6e"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "new InputStreamReader(new UrlResource(url).getInputStream(), StandardCharsets.UTF_8)))\
        \ {"
      lineNumber: 111
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type UrlResource - Method: getInputStream"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path9"
    testPathName: "loadWhenLineAssignedReaderReadLineIsNullAndCaughtIOExceptionThrowsIllegalArgumentException"
    modelFingerprint: "16FE5776848F9112A9DEF037BADF73F2"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 50
      id: 4
      catchExceptions:
      - "java.io.IOException"
    truncated: true
    inputParameters: []
    uuid: "01252668-e871-37ee-a7b0-bfd472f1fe6e"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "new InputStreamReader(new UrlResource(url).getInputStream(), StandardCharsets.UTF_8)))\
        \ {"
      lineNumber: 111
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type UrlResource - Method: getInputStream"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path1"
    testPathName: "loadWhenLineIsEmpty"
    modelFingerprint: "F66D1096D8D2D5874503C8930C2EC20F"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "annotation"
      modelFingerprint: "394C53CBB27D6AC5FA1E4D2D7E4B4574"
      index: 1
      valueUuid: "load_class1"
    - type: "INPUT"
      name: "classLoader"
      modelFingerprint: "E877C1A1B3C59F93552258E807A3285D"
      index: 2
      valueUuid: "load_classLoader1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "8AE2676D93C24B9C72EDC1038DA1E5AF"
      index: 3
      valueUuid: "uuid26"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "load_class1"
        - name: "message"
          valueUuid: "uuid25"
        signature: "notNull(Class,String): void"
        returnValueUuid: "load_void1"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "12AB5106500C45A7CA67C60575D18876"
      index: 4
      idsTryCatchBlockSurrounding:
      - 500004
      valueUuid: "readCandidateConfigurations_urlResource1"
      methodExercised:
        target: "org.springframework.core.io.UrlResource"
        name: "getInputStream"
        parameters: []
        throwsExceptions:
        - "java.io.IOException"
        signature: "getInputStream(): InputStream throws java.io.IOException"
        returnValueUuid: "readCandidateConfigurations_inputStream1"
        access: 1
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "D27C542609730FB7385202E37AF9B08E"
      index: 5
      valueUuid: "uuid28"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "load_arrayList1"
        - name: "message"
          valueUuid: "uuid27"
        signature: "notNull(List,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3F551278F590A4A5F3506CB6C610C9D3"
      index: 6
      valueUuid: "load_importCandidates1"
    uuid: "66276f23-9dba-3ae4-aaf3-495b01d2b949"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "new InputStreamReader(new UrlResource(url).getInputStream(), StandardCharsets.UTF_8)))\
        \ {"
      lineNumber: 111
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type UrlResource - Method: getInputStream"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "load_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.ClassLoader"
      uuid: "load_classLoader1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid26"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "load_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "load_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "'annotation' must not be null"
      valueType: "java.lang.String"
      uuid: "uuid25"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.core.io.UrlResource"
        parameters:
        - name: "url"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "java.lang.Object"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<method_return_from_value>
                  target: "java.util.Enumeration"
                  localVariableValue:
                    sapientType: "OBJECT"
                    content: !<method_return_from_value>
                      target: "java.lang.ClassLoader"
                      localVariableValue:
                        sapientType: "CLASS"
                        content: !<regular>
                          value: "org.springframework.boot.context.annotation.ImportCandidates"
                        valueType: "java.lang.Class"
                        genericValueType: "org.springframework.boot.context.annotation.ImportCandidates"
                        fixed: true
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      methodParameters: []
                      methodName: "getClassLoader"
                    valueType: "java.lang.ClassLoader"
                    uuid: "decideClassloader_classLoader1"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  methodParameters:
                  - name: "name"
                    value:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: "name1"
                      valueType: "java.lang.String"
                      uuid: "load_string2"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                  methodName: "getResources"
                valueType: "java.util.Enumeration"
                genericValueType: "java.net.URL"
                uuid: "findUrlsInClasspath_enumeration1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              methodParameters: []
              methodName: "nextElement"
            valueType: "java.net.URL"
            uuid: "load_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: true
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.core.io.UrlResource"
      uuid: "readCandidateConfigurations_urlResource1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "readCandidateConfigurations_inputStream1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid28"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "load_arrayList1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "'candidates' must not be null"
      valueType: "java.lang.String"
      uuid: "uuid27"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.annotation.ImportCandidates"
        parameters:
        - name: "candidates"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "java.lang.String"
            uuid: "load_arrayList1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: true
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.annotation.ImportCandidates"
      uuid: "load_importCandidates1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "loadWhenLineNotIsEmpty"
    modelFingerprint: "C02F3FC16F0E027D202604CD8DC0D37B"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "883f98ce-731a-348c-97c3-6668e690f772"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "new InputStreamReader(new UrlResource(url).getInputStream(), StandardCharsets.UTF_8)))\
        \ {"
      lineNumber: 111
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type UrlResource - Method: getInputStream"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path3"
    testPathName: "loadWhenCommentStartNotEqualsMinus1AndLineNotIsEmpty"
    modelFingerprint: "D8874CA69630565D5DCC7FF7C10C9C9C"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "annotation"
      modelFingerprint: "394C53CBB27D6AC5FA1E4D2D7E4B4574"
      index: 1
      valueUuid: "load_class1"
    - type: "INPUT"
      name: "classLoader"
      modelFingerprint: "E877C1A1B3C59F93552258E807A3285D"
      index: 2
      valueUuid: "load_classLoader1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "8AE2676D93C24B9C72EDC1038DA1E5AF"
      index: 3
      valueUuid: "uuid34"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "load_class1"
        - name: "message"
          valueUuid: "uuid33"
        signature: "notNull(Class,String): void"
        returnValueUuid: "load_void1"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "12AB5106500C45A7CA67C60575D18876"
      index: 4
      idsTryCatchBlockSurrounding:
      - 500004
      valueUuid: "readCandidateConfigurations_urlResource1"
      methodExercised:
        target: "org.springframework.core.io.UrlResource"
        name: "getInputStream"
        parameters: []
        throwsExceptions:
        - "java.io.IOException"
        signature: "getInputStream(): InputStream throws java.io.IOException"
        returnValueUuid: "readCandidateConfigurations_inputStream1"
        access: 1
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "9DC1B100604899A8F4D61D997DF642DF"
      index: 5
      valueUuid: "uuid36"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "load_arrayList1"
        - name: "message"
          valueUuid: "uuid35"
        signature: "notNull(List,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "600CF9F57D070D151823B4EC41C6120E"
      index: 6
      valueUuid: "load_importCandidates1"
    uuid: "f3da8e3e-2e95-395b-9655-a8600e04db22"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "new InputStreamReader(new UrlResource(url).getInputStream(), StandardCharsets.UTF_8)))\
        \ {"
      lineNumber: 111
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type UrlResource - Method: getInputStream"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "load_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.ClassLoader"
      uuid: "load_classLoader1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid34"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "load_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "load_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "'annotation' must not be null"
      valueType: "java.lang.String"
      uuid: "uuid33"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.core.io.UrlResource"
        parameters:
        - name: "url"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "java.lang.Object"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<method_return_from_value>
                  target: "java.util.Enumeration"
                  localVariableValue:
                    sapientType: "OBJECT"
                    content: !<method_return_from_value>
                      target: "java.lang.ClassLoader"
                      localVariableValue:
                        sapientType: "CLASS"
                        content: !<regular>
                          value: "org.springframework.boot.context.annotation.ImportCandidates"
                        valueType: "java.lang.Class"
                        genericValueType: "org.springframework.boot.context.annotation.ImportCandidates"
                        fixed: true
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      methodParameters: []
                      methodName: "getClassLoader"
                    valueType: "java.lang.ClassLoader"
                    uuid: "decideClassloader_classLoader1"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  methodParameters:
                  - name: "name"
                    value:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: "name1"
                      valueType: "java.lang.String"
                      uuid: "load_string2"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                  methodName: "getResources"
                valueType: "java.util.Enumeration"
                genericValueType: "java.net.URL"
                uuid: "findUrlsInClasspath_enumeration1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              methodParameters: []
              methodName: "nextElement"
            valueType: "java.net.URL"
            uuid: "load_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: true
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.core.io.UrlResource"
      uuid: "readCandidateConfigurations_urlResource1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "readCandidateConfigurations_inputStream1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid36"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "objectItem1"
          valueType: "java.lang.String"
          uuid: "readCandidateConfigurations_string2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "load_arrayList1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "'candidates' must not be null"
      valueType: "java.lang.String"
      uuid: "uuid35"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.annotation.ImportCandidates"
        parameters:
        - name: "candidates"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "BASIC"
                content: !<regular>
                  value: "objectItem1"
                valueType: "java.lang.String"
                uuid: "readCandidateConfigurations_string2"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            valueType: "java.util.List"
            genericValueType: "java.lang.String"
            uuid: "load_arrayList1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: true
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.annotation.ImportCandidates"
      uuid: "load_importCandidates1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path7"
    testPathName: "loadWhenDefaultBranchThrowsThrowable"
    modelFingerprint: "3B7B0766D5F07E41F2C59B5DEBA9C302"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 50
      id: 2
      catchExceptions:
      - "java.lang.Throwable"
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "annotation"
      modelFingerprint: "394C53CBB27D6AC5FA1E4D2D7E4B4574"
      index: 1
      valueUuid: "load_class1"
    - type: "INPUT"
      name: "classLoader"
      modelFingerprint: "E877C1A1B3C59F93552258E807A3285D"
      index: 2
      valueUuid: "load_classLoader1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "8AE2676D93C24B9C72EDC1038DA1E5AF"
      index: 3
      valueUuid: "uuid38"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "load_class1"
        - name: "message"
          valueUuid: "uuid37"
        signature: "notNull(Class,String): void"
        returnValueUuid: "load_void1"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "12AB5106500C45A7CA67C60575D18876"
      index: 4
      idsTryCatchBlockSurrounding:
      - 500004
      valueUuid: "readCandidateConfigurations_urlResource1"
      methodExercised:
        target: "org.springframework.core.io.UrlResource"
        name: "getInputStream"
        parameters: []
        throwsExceptions:
        - "java.io.IOException"
        signature: "getInputStream(): InputStream throws java.io.IOException"
        returnValueUuid: "readCandidateConfigurations_inputStream1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "reader"
      modelFingerprint: "CB7DB82B40DFCDD624B60EA2FC7589BF"
      index: 5
      idsTryCatchBlockSurrounding:
      - 500002
      - 500004
      valueUuid: "readCandidateConfigurations_bufferedReader1"
      methodExercised:
        target: "reader"
        name: "readLine"
        parameters: []
        throwsExceptions:
        - "java.io.IOException"
        signature: "readLine(): String throws java.io.IOException"
        returnValueUuid: "readCandidateConfigurations_string1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "reader"
      modelFingerprint: "CB7DB82B40DFCDD624B60EA2FC7589BF"
      index: 6
      idsTryCatchBlockSurrounding:
      - 500002
      - 500004
      valueUuid: "readCandidateConfigurations_bufferedReader1"
      methodExercised:
        target: "reader"
        name: "readLine"
        parameters: []
        throwsExceptions:
        - "java.io.IOException"
        signature: "readLine(): String throws java.io.IOException"
        returnValueUuid: "readCandidateConfigurations_string3"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "reader"
      modelFingerprint: "06B509400BBEE0E9BB121D2D103CC1A2"
      index: 7
      idsTryCatchBlockSurrounding:
      - 500003
      - 500005
      valueUuid: "readCandidateConfigurations_bufferedReader1"
      methodExercised:
        target: "reader"
        name: "close"
        parameters: []
        throwsExceptions:
        - "java.io.IOException"
        signature: "close(): void throws java.io.IOException"
        returnValueUuid: "readCandidateConfigurations_void1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7C66E340C0F5EAAC7D97CB9C0818A07E"
      index: 8
      valueUuid: "readCandidateConfigurations_throwable1"
    uuid: "2b216bd1-213c-3ae7-8203-1ee6c92eb640"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "new InputStreamReader(new UrlResource(url).getInputStream(), StandardCharsets.UTF_8)))\
        \ {"
      lineNumber: 111
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type UrlResource - Method: getInputStream"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "load_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.ClassLoader"
      uuid: "load_classLoader1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid38"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "load_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "load_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "'annotation' must not be null"
      valueType: "java.lang.String"
      uuid: "uuid37"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.core.io.UrlResource"
        parameters:
        - name: "url"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "java.lang.Object"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<method_return_from_value>
                  target: "java.util.Enumeration"
                  localVariableValue:
                    sapientType: "OBJECT"
                    content: !<method_return_from_value>
                      target: "java.lang.ClassLoader"
                      localVariableValue:
                        sapientType: "CLASS"
                        content: !<regular>
                          value: "org.springframework.boot.context.annotation.ImportCandidates"
                        valueType: "java.lang.Class"
                        genericValueType: "org.springframework.boot.context.annotation.ImportCandidates"
                        fixed: true
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      methodParameters: []
                      methodName: "getClassLoader"
                    valueType: "java.lang.ClassLoader"
                    uuid: "decideClassloader_classLoader1"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  methodParameters:
                  - name: "name"
                    value:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: "name1"
                      valueType: "java.lang.String"
                      uuid: "load_string2"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                  methodName: "getResources"
                valueType: "java.util.Enumeration"
                genericValueType: "java.net.URL"
                uuid: "findUrlsInClasspath_enumeration1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              methodParameters: []
              methodName: "nextElement"
            valueType: "java.net.URL"
            uuid: "load_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: true
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.core.io.UrlResource"
      uuid: "readCandidateConfigurations_urlResource1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "readCandidateConfigurations_inputStream1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.BufferedReader"
        parameters:
        - name: "in"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.InputStreamReader"
              parameters:
              - name: "in"
                value:
                  sapientType: "INPUT_STREAM"
                  content: !<inputStream>
                    values: []
                  valueType: "java.io.InputStream"
                  uuid: "readCandidateConfigurations_inputStream1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              - name: "cs"
                value:
                  sapientType: "OBJECT"
                  content: !<static_field_return>
                    target: "java.nio.charset.StandardCharsets"
                    fieldName: "UTF_8"
                  valueType: "java.nio.charset.Charset"
                  uuid: "readCandidateConfigurations_charset1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: true
            valueType: "java.io.InputStreamReader"
            uuid: "readCandidateConfigurations_inputStreamReader1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.io.BufferedReader"
      uuid: "readCandidateConfigurations_bufferedReader1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_readLine1"
      valueType: "java.lang.String"
      uuid: "readCandidateConfigurations_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.BufferedReader"
        parameters:
        - name: "in"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.InputStreamReader"
              parameters:
              - name: "in"
                value:
                  sapientType: "INPUT_STREAM"
                  content: !<inputStream>
                    values: []
                  valueType: "java.io.InputStream"
                  uuid: "readCandidateConfigurations_inputStream1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              - name: "cs"
                value:
                  sapientType: "OBJECT"
                  content: !<static_field_return>
                    target: "java.nio.charset.StandardCharsets"
                    fieldName: "UTF_8"
                  valueType: "java.nio.charset.Charset"
                  uuid: "readCandidateConfigurations_charset1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: true
            valueType: "java.io.InputStreamReader"
            uuid: "readCandidateConfigurations_inputStreamReader1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.io.BufferedReader"
      uuid: "readCandidateConfigurations_bufferedReader1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_readLine1"
      valueType: "java.lang.String"
      uuid: "readCandidateConfigurations_string3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.BufferedReader"
        parameters:
        - name: "in"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.InputStreamReader"
              parameters:
              - name: "in"
                value:
                  sapientType: "INPUT_STREAM"
                  content: !<inputStream>
                    values: []
                  valueType: "java.io.InputStream"
                  uuid: "readCandidateConfigurations_inputStream1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              - name: "cs"
                value:
                  sapientType: "OBJECT"
                  content: !<static_field_return>
                    target: "java.nio.charset.StandardCharsets"
                    fieldName: "UTF_8"
                  valueType: "java.nio.charset.Charset"
                  uuid: "readCandidateConfigurations_charset1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: true
            valueType: "java.io.InputStreamReader"
            uuid: "readCandidateConfigurations_inputStreamReader1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.io.BufferedReader"
      uuid: "readCandidateConfigurations_bufferedReader1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "readCandidateConfigurations_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Throwable"
      uuid: "readCandidateConfigurations_throwable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path8"
    testPathName: "loadWhenLineIsEmptyAndCaughtIOExceptionThrowsIllegalArgumentException"
    modelFingerprint: "3F6E8610BFC7A9F9AED12A7657284772"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 50
      id: 4
      catchExceptions:
      - "java.io.IOException"
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "annotation"
      modelFingerprint: "394C53CBB27D6AC5FA1E4D2D7E4B4574"
      index: 1
      valueUuid: "load_class1"
    - type: "INPUT"
      name: "classLoader"
      modelFingerprint: "E877C1A1B3C59F93552258E807A3285D"
      index: 2
      valueUuid: "load_classLoader1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "8AE2676D93C24B9C72EDC1038DA1E5AF"
      index: 3
      valueUuid: "uuid40"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "load_class1"
        - name: "message"
          valueUuid: "uuid39"
        signature: "notNull(Class,String): void"
        returnValueUuid: "load_void1"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "12AB5106500C45A7CA67C60575D18876"
      index: 4
      idsTryCatchBlockSurrounding:
      - 500004
      valueUuid: "readCandidateConfigurations_urlResource1"
      methodExercised:
        target: "org.springframework.core.io.UrlResource"
        name: "getInputStream"
        parameters: []
        throwsExceptions:
        - "java.io.IOException"
        signature: "getInputStream(): InputStream throws java.io.IOException"
        returnValueUuid: "readCandidateConfigurations_inputStream1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "reader"
      modelFingerprint: "CB7DB82B40DFCDD624B60EA2FC7589BF"
      index: 5
      idsTryCatchBlockSurrounding:
      - 500002
      - 500004
      valueUuid: "readCandidateConfigurations_bufferedReader1"
      methodExercised:
        target: "reader"
        name: "readLine"
        parameters: []
        throwsExceptions:
        - "java.io.IOException"
        signature: "readLine(): String throws java.io.IOException"
        returnValueUuid: "readCandidateConfigurations_string1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "reader"
      modelFingerprint: "CB7DB82B40DFCDD624B60EA2FC7589BF"
      index: 6
      idsTryCatchBlockSurrounding:
      - 500002
      - 500004
      valueUuid: "readCandidateConfigurations_bufferedReader1"
      methodExercised:
        target: "reader"
        name: "readLine"
        parameters: []
        throwsExceptions:
        - "java.io.IOException"
        signature: "readLine(): String throws java.io.IOException"
        returnValueUuid: "readCandidateConfigurations_string3"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "reader"
      modelFingerprint: "06B509400BBEE0E9BB121D2D103CC1A2"
      index: 7
      idsTryCatchBlockSurrounding:
      - 500004
      valueUuid: "readCandidateConfigurations_bufferedReader1"
      methodExercised:
        target: "reader"
        name: "close"
        parameters: []
        throwsExceptions:
        - "java.io.IOException"
        signature: "close(): void throws java.io.IOException"
        returnValueUuid: "readCandidateConfigurations_void1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2CE651DA6A0DCE209C2169CAFD0083B2"
      index: 8
      valueUuid: "readCandidateConfigurations_illegalArgumentException1"
    uuid: "48a9e60b-ff61-3e6e-8a7b-c99dc294b5dd"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "new InputStreamReader(new UrlResource(url).getInputStream(), StandardCharsets.UTF_8)))\
        \ {"
      lineNumber: 111
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type UrlResource - Method: getInputStream"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "load_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.ClassLoader"
      uuid: "load_classLoader1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid40"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "load_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "load_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "'annotation' must not be null"
      valueType: "java.lang.String"
      uuid: "uuid39"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.core.io.UrlResource"
        parameters:
        - name: "url"
          value:
            sapientType: "OBJECT"
            content: !<method_return_from_value>
              target: "java.lang.Object"
              localVariableValue:
                sapientType: "OBJECT"
                content: !<method_return_from_value>
                  target: "java.util.Enumeration"
                  localVariableValue:
                    sapientType: "OBJECT"
                    content: !<method_return_from_value>
                      target: "java.lang.ClassLoader"
                      localVariableValue:
                        sapientType: "CLASS"
                        content: !<regular>
                          value: "org.springframework.boot.context.annotation.ImportCandidates"
                        valueType: "java.lang.Class"
                        genericValueType: "org.springframework.boot.context.annotation.ImportCandidates"
                        fixed: true
                        equalsMethodPresent: false
                        explicitCastNeeded: false
                      methodParameters: []
                      methodName: "getClassLoader"
                    valueType: "java.lang.ClassLoader"
                    uuid: "decideClassloader_classLoader1"
                    fixed: false
                    equalsMethodPresent: false
                    explicitCastNeeded: false
                  methodParameters:
                  - name: "name"
                    value:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: "name1"
                      valueType: "java.lang.String"
                      uuid: "load_string2"
                      fixed: false
                      equalsMethodPresent: false
                      explicitCastNeeded: false
                  methodName: "getResources"
                valueType: "java.util.Enumeration"
                genericValueType: "java.net.URL"
                uuid: "findUrlsInClasspath_enumeration1"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
              methodParameters: []
              methodName: "nextElement"
            valueType: "java.net.URL"
            uuid: "load_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: true
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.core.io.UrlResource"
      uuid: "readCandidateConfigurations_urlResource1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "readCandidateConfigurations_inputStream1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.BufferedReader"
        parameters:
        - name: "in"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.InputStreamReader"
              parameters:
              - name: "in"
                value:
                  sapientType: "INPUT_STREAM"
                  content: !<inputStream>
                    values: []
                  valueType: "java.io.InputStream"
                  uuid: "readCandidateConfigurations_inputStream1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              - name: "cs"
                value:
                  sapientType: "OBJECT"
                  content: !<static_field_return>
                    target: "java.nio.charset.StandardCharsets"
                    fieldName: "UTF_8"
                  valueType: "java.nio.charset.Charset"
                  uuid: "readCandidateConfigurations_charset1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: true
            valueType: "java.io.InputStreamReader"
            uuid: "readCandidateConfigurations_inputStreamReader1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.io.BufferedReader"
      uuid: "readCandidateConfigurations_bufferedReader1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_readLine1"
      valueType: "java.lang.String"
      uuid: "readCandidateConfigurations_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.BufferedReader"
        parameters:
        - name: "in"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.InputStreamReader"
              parameters:
              - name: "in"
                value:
                  sapientType: "INPUT_STREAM"
                  content: !<inputStream>
                    values: []
                  valueType: "java.io.InputStream"
                  uuid: "readCandidateConfigurations_inputStream1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              - name: "cs"
                value:
                  sapientType: "OBJECT"
                  content: !<static_field_return>
                    target: "java.nio.charset.StandardCharsets"
                    fieldName: "UTF_8"
                  valueType: "java.nio.charset.Charset"
                  uuid: "readCandidateConfigurations_charset1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: true
            valueType: "java.io.InputStreamReader"
            uuid: "readCandidateConfigurations_inputStreamReader1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.io.BufferedReader"
      uuid: "readCandidateConfigurations_bufferedReader1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_readLine1"
      valueType: "java.lang.String"
      uuid: "readCandidateConfigurations_string3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.BufferedReader"
        parameters:
        - name: "in"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.InputStreamReader"
              parameters:
              - name: "in"
                value:
                  sapientType: "INPUT_STREAM"
                  content: !<inputStream>
                    values: []
                  valueType: "java.io.InputStream"
                  uuid: "readCandidateConfigurations_inputStream1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              - name: "cs"
                value:
                  sapientType: "OBJECT"
                  content: !<static_field_return>
                    target: "java.nio.charset.StandardCharsets"
                    fieldName: "UTF_8"
                  valueType: "java.nio.charset.Charset"
                  uuid: "readCandidateConfigurations_charset1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: true
            valueType: "java.io.InputStreamReader"
            uuid: "readCandidateConfigurations_inputStreamReader1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.io.BufferedReader"
      uuid: "readCandidateConfigurations_bufferedReader1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "readCandidateConfigurations_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalArgumentException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "message1"
            valueType: "java.lang.String"
            uuid: "readCandidateConfigurations_string4"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.IOException"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.io.IOException"
            uuid: "readCandidateConfigurations_iOException1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.IllegalArgumentException"
      uuid: "readCandidateConfigurations_illegalArgumentException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
