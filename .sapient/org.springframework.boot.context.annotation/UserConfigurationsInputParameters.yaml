---
modelFingerprint: "FE999989E481632B9617A249B942F796"
targetClass:
  fullClassName: "org.springframework.boot.context.annotation.UserConfigurations"
methods:
- method:
    name: "getOrder"
    sourceCodeSignature: "int getOrder()"
    returnType: "int"
    instructionFingerprint: "B3FE1F447F1436B3B1DD16C4601C95C8"
  paths:
  - pathId: "path1"
    testPathName: "getOrderTest"
    constructorSignature: "<init>(java.util.Collection<java.lang.Class<?>>) : void"
    modelFingerprint: "E8544DA307FE56B607BE8EE308A12C38"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "merge"
    sourceCodeSignature: "UserConfigurations merge(Set<Class<?>> mergedClasses)"
    returnType: "org.springframework.boot.context.annotation.UserConfigurations"
    parameters:
    - name: "mergedClasses"
      type: "java.util.Set"
    instructionFingerprint: "9DA51674B7E1859AB1A4F666D8954568"
  paths:
  - pathId: "path1"
    testPathName: "merge2Test"
    constructorSignature: "<init>(java.util.Collection<java.lang.Class<?>>) : void"
    modelFingerprint: "880B74629DC298BE0D039D0FC690F5FB"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7C4B34250D628A3D520B3C208356731C"
      valueUuid: "target"
    - type: "INPUT"
      name: "mergedClasses"
      modelFingerprint: "AF89831B436A7D665F6D06E5D63F0957"
      valueUuid: "mergedClasses"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "B35BBB9D624C7D3F57B8139554A85ABD"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:classes,message:uniqueUuid2):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5966F02D76EBCE001AAA1F877FF968F0"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:mergedClasses,message:uniqueUuid3):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B443E35224D4933E8A532D19D250E907"
      valueUuid: "userConfigurations2"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.annotation.UserConfigurations"
        parameters:
        - name: "classes"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Collection"
            genericValueType: "java.lang.Class<?>"
            uuid: "classes"
      valueType: "org.springframework.boot.context.annotation.UserConfigurations"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Class<?>"
      uuid: "mergedClasses"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "java.lang.Class<?>"
      uuid: "classes"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Classes must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Class<?>"
      uuid: "mergedClasses"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Classes must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.annotation.UserConfigurations"
        parameters:
        - name: "classes"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Set"
            genericValueType: "java.lang.Class<?>"
            uuid: "mergedClasses"
      valueType: "org.springframework.boot.context.annotation.UserConfigurations"
      uuid: "userConfigurations2"
      fixed: true
- method:
    name: "of"
    sourceCodeSignature: "UserConfigurations of(Class<?>... classes)"
    returnType: "org.springframework.boot.context.annotation.UserConfigurations"
    parameters:
    - name: "classes"
      type: "java.lang.Class[]"
    instructionFingerprint: "89B983FD9E77D5DEC91D4184D9C67E37"
  paths:
  - pathId: "path1"
    testPathName: "ofTest"
    modelFingerprint: "50942256E7511B87F745BB9317ACAEAD"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "classes"
      modelFingerprint: "37DC253D057032AA2C7CCC57EC8962B3"
      valueUuid: "classes"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A533F59C025E4E8D3A29421C407F9E5B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:list,message:uniqueUuid4):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "DFAD3CC1846A418C029CFB3A647B0949"
      valueUuid: "userConfigurations"
    disabled: false
    allValues:
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Class[]"
      genericValueType: "?"
      uuid: "classes"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.Class<?>"
      uuid: "list"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Classes must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.annotation.UserConfigurations"
        parameters:
        - name: "classes"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "java.lang.Class<?>"
            uuid: "list"
      valueType: "org.springframework.boot.context.annotation.UserConfigurations"
      uuid: "userConfigurations"
      fixed: true
