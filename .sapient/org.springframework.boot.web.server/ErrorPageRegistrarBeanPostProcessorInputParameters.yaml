---
modelFingerprint: "109628C97340FF44C6713EAF5049D77A"
targetClass:
  fullClassName: "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor"
methods:
- method:
    name: "setBeanFactory"
    sourceCodeSignature: "void setBeanFactory(BeanFactory beanFactory)"
    returnType: "void"
    parameters:
    - name: "beanFactory"
      type: "org.springframework.beans.factory.BeanFactory"
    instructionFingerprint: "25F37317970D8902FEA03D2398072E1C"
  paths:
  - pathId: "path1"
    testPathName: "setBeanFactoryTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "768AF8971C06A29ABDC950EAE75D9531"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "beanFactory"
      modelFingerprint: "F797548EA20F4364AB16C30931B3BF75"
      valueUuid: "beanFactory"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "C85CE51CEF04320FB71D1213CF3AED56"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "isInstanceOf(type:uniqueUuid1,obj:beanFactory,message:uniqueUuid2):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor"
        parameters: []
      valueType: "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.ListableBeanFactory"
      uuid: "beanFactory"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.beans.factory.ListableBeanFactory"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.beans.factory.ListableBeanFactory"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.ListableBeanFactory"
      uuid: "beanFactory"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "ErrorPageRegistrarBeanPostProcessor can only be used with a ListableBeanFactory"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "postProcessBeforeInitialization"
    sourceCodeSignature: "Object postProcessBeforeInitialization(Object bean, String\
      \ beanName)"
    returnType: "java.lang.Object"
    throwsExceptions:
    - "org.springframework.beans.BeansException"
    parameters:
    - name: "bean"
      type: "java.lang.Object"
    - name: "beanName"
      type: "java.lang.String"
    instructionFingerprint: "F9EB5855BF877B89AAB1D28F6D349F5F"
  paths:
  - pathId: "path1"
    testPathName: "postProcessBeforeInitializationWhenGetRegistrarsIsEmpty"
    constructorSignature: "<init>() : void"
    modelFingerprint: "35A4D2B77F5410363BB53454BB6F6D82"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "bean"
      modelFingerprint: "B8BEBE5EEB737F4638991DCABBB0E579"
      valueUuid: "bean"
    - type: "INPUT"
      name: "beanName"
      modelFingerprint: "CF78E67EF6D4AB290170629993228478"
      valueUuid: "beanName"
    - type: "FIELD"
      name: "beanFactory"
      modelFingerprint: "EA15131F63C5CB196922138853C94881"
      valueUuid: "fieldListableBeanFactory"
      methodExercised:
        expression: "getBeansOfType(type:uniqueUuid3,includeNonSingletons:uniqueUuid4,allowEagerInit:uniqueUuid5):map"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8777702446761D9D086B15E60739F8D5"
      valueUuid: "bean"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.List.sort(org.springframework.core.annotation.AnnotationAwareOrderComparator)\
        \ : void"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor"
        parameters: []
        propertiesMap:
          beanFactory:
            sapientType: "MOCK"
            valueType: "org.springframework.beans.factory.ListableBeanFactory"
            uuid: "fieldListableBeanFactory"
      valueType: "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPageRegistry"
      uuid: "bean"
      explicitCastForOverloadedMethods: "java.lang.Object"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.ListableBeanFactory"
      uuid: "fieldListableBeanFactory"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.web.server.ErrorPageRegistrar"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.web.server.ErrorPageRegistrar"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.ErrorPageRegistry"
      uuid: "bean"
      explicitCastForOverloadedMethods: "java.lang.Object"
    branches:
    - lineNumber: 55
      expression: "bean instanceof ErrorPageRegistry errorPageRegistry"
      range: "(55,7)-(55,57)"
      evaluatedAs: true
    - lineNumber: 73
      expression: "this.registrars == null"
      range: "(73,7)-(73,29)"
      evaluatedAs: true
      internalMethodName: "getRegistrars"
    - lineNumber: 67
      expression: "for-each(getRegistrars())"
      range: "(67,39)-(67,53)"
      evaluatedAs: false
      internalMethodName: "postProcessBeforeInitialization"
- method:
    name: "postProcessAfterInitialization"
    sourceCodeSignature: "Object postProcessAfterInitialization(Object bean, String\
      \ beanName)"
    returnType: "java.lang.Object"
    throwsExceptions:
    - "org.springframework.beans.BeansException"
    parameters:
    - name: "bean"
      type: "java.lang.Object"
    - name: "beanName"
      type: "java.lang.String"
    instructionFingerprint: "975327102A4E80B5DB9BAA2826FC528F"
  paths:
  - pathId: "path1"
    testPathName: "postProcessAfterInitializationTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "34DF81F4F04AC5D1B9F860FD1D29BF10"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "bean"
      modelFingerprint: "44CA456F7AEC99F4177F94DB9787F20F"
      valueUuid: "bean"
    - type: "INPUT"
      name: "beanName"
      modelFingerprint: "CF78E67EF6D4AB290170629993228478"
      valueUuid: "beanName"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7D8E87CB1B63A9579EC7584A697ED33D"
      valueUuid: "bean"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor"
        parameters: []
      valueType: "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "bean"
    - sapientType: "BASIC"
      content: !<regular>
        value: "beanName1"
      valueType: "java.lang.String"
      uuid: "beanName"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "bean"
