---
modelFingerprint: "34899A2BEEFA6AEA7DC976E59DB1A816"
methods:
- method:
    name: "getPort"
    returnType: "int"
    signature: "getPort() : int"
    instructionFingerprint: "AD032F36D9721078169D2BE72E4B37AD"
    parametersTypes: []
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "getPortTest"
    nameDefinedByUser: false
    constructorSignature: "<init>(int,java.lang.Throwable) : void"
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "025E908766E42EFA5E543C6855911927"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "443bad7d-e2e9-3a65-8d63-15797c63d81d"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "throwIfPortBindingException"
    returnType: "void"
    signature: "throwIfPortBindingException(java.lang.Exception,java.util.function.IntSupplier)\
      \ : void"
    instructionFingerprint: "6BE19F84492507410B94C419A98393FB"
    parametersTypes:
    - "java.lang.Exception"
    - "java.util.function.IntSupplier"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "throwIfPortBindingExceptionTest"
    nameDefinedByUser: false
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "595DDCCDAA6B90A8B06E3CF84A1516CC"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "ex"
      modelFingerprint: "48C0A9E6C39EE0F0D4D8E880DC327BCD"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "java.lang.Exception"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.Exception"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.Exception"
        uuid: "throwIfPortBindingException_exception1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "port"
      modelFingerprint: "993192161D8FF5C1511B6AFE1052BB7A"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "java.util.function.IntSupplier"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "java.util.function.IntSupplier"
        uuid: "throwIfPortBindingException_intSupplier1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "PortInUseException"
      modelFingerprint: "FE3858E8F5109720ECF723D2EA56535F"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.web.server.PortInUseException"
        uuid: "org.springframework.boot.web.server.PortInUseException"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.web.server.PortInUseException"
        name: "ifPortBindingException"
        parameters:
        - name: "ex"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Exception"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Exception"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Exception"
            uuid: "throwIfPortBindingException_exception1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "action"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Consumer"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "ifPortBindingException(Exception,Consumer): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "throwIfPortBindingException_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "VOID"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "eeec45fb-e3c7-3494-8faf-9684c0629800"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "ifPortBindingException"
    returnType: "void"
    signature: "ifPortBindingException(java.lang.Exception,java.util.function.Consumer<java.net.BindException>)\
      \ : void"
    instructionFingerprint: "D0CAA1D81EECC054F934D0BDF1834471"
    parametersTypes:
    - "java.lang.Exception"
    - "java.util.function.Consumer"
  paths:
  - pathId: "path1"
    pathIdForUser: "path1"
    testPathName: "ifPortBindingExceptionTest"
    nameDefinedByUser: false
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "1EEA9E0734B125DAA8B8D63ED58F9627"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "ex"
      modelFingerprint: "48C0A9E6C39EE0F0D4D8E880DC327BCD"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "java.lang.Exception"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.Exception"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.Exception"
        uuid: "ifPortBindingException_exception1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "action"
      modelFingerprint: "8A3B00DAEBB3E38C0D33CB59EA169400"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "java.util.function.Consumer"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "java.util.function.Consumer"
        uuid: "ifPortBindingException_consumer1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "PortInUseException"
      modelFingerprint: "52F66D6BF06BD7D761C2E4FDAAE908AC"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        valueType: "org.springframework.boot.web.server.PortInUseException"
        uuid: "org.springframework.boot.web.server.PortInUseException"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "org.springframework.boot.web.server.PortInUseException"
        name: "ifCausedBy"
        parameters:
        - name: "ex"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Exception"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Exception"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Exception"
            uuid: "ifPortBindingException_exception1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "causedBy"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.net.BindException"
            valueType: "java.lang.Class"
            genericValueType: "java.net.BindException"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "action"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Consumer"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "ifCausedBy(Exception,Class,Consumer): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "ifPortBindingException_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "VOID"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "c774ab4b-e75f-350c-9e71-1a620689db7a"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
- method:
    name: "ifCausedBy"
    returnType: "void"
    signature: "ifCausedBy(java.lang.Exception,java.lang.Class<java.lang.Exception>,java.util.function.Consumer<java.lang.Exception>)\
      \ : void"
    instructionFingerprint: "92953B0AA7AA9AEFE1676E89975837F9"
    parametersTypes:
    - "java.lang.Exception"
    - "java.lang.Class"
    - "java.util.function.Consumer"
  paths:
  - pathId: "path2"
    pathIdForUser: "path1"
    testPathName: "ifCausedByWhenCandidateIsNull"
    nameDefinedByUser: false
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "EFA3E0A04063C74B7EA6F33AE64F21E1"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "ex"
      modelFingerprint: "6E25C8620160D5E9D7A93B189E03289F"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "NULL"
        valueType: "java.lang.Exception"
        uuid: "ifCausedBy_exception1"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "causedBy"
      modelFingerprint: "77D5CCBE5DC8AB99E089CFCC0805BA24"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "CLASS"
        content: !<regular>
          value: "java.lang.Exception"
        valueType: "java.lang.Class"
        genericValueType: "java.lang.Exception"
        uuid: "ifCausedBy_class1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "action"
      modelFingerprint: "BB9DF30C1AB2869974C794CDE463E02C"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "java.util.function.Consumer"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "java.util.function.Consumer"
        uuid: "ifCausedBy_consumer1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 4
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "VOID"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "55c69765-224e-3d51-88a9-f208e3e5ec97"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
  - pathId: "path1"
    pathIdForUser: "path2"
    testPathName: "ifCausedByWhenCausedByIsInstanceCandidate"
    nameDefinedByUser: false
    priorityDefinedByUser: false
    filledByUser: false
    priority: "LOW"
    modelFingerprint: "FCEE422673194A32FCAD54FB1842DEB6"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "ex"
      modelFingerprint: "FC8FE2F9616F959CAE919D4282A114D5"
      index: 1
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "OBJECT"
        content: !<new>
          target: "java.lang.Exception"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        suggestedContent: !<new>
          target: "java.lang.Exception"
          parameters: []
          privateConstructor: false
          createdByTargetCode: false
        valueType: "java.lang.Exception"
        uuid: "ifCausedBy_exception1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "causedBy"
      modelFingerprint: "77D5CCBE5DC8AB99E089CFCC0805BA24"
      index: 2
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "CLASS"
        content: !<regular>
          value: "java.lang.Exception"
        valueType: "java.lang.Class"
        genericValueType: "java.lang.Exception"
        uuid: "ifCausedBy_class1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "action"
      modelFingerprint: "00DA5EF633F58E6D42E9F3FCC25D114E"
      index: 3
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "java.util.function.Consumer"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "java.util.function.Consumer"
        uuid: "ifCausedBy_consumer1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "action"
      modelFingerprint: "EF67EC3BE6712552286CDA7CD705F8E3"
      index: 4
      ignored: false
      nestedInLoop: true
      nestedInRecursion: false
      value:
        sapientType: "MOCK"
        suggestedContent: !<unknown_object>
          target: "java.util.function.Consumer"
          onlyPojoFunctions: false
          builderPattern: false
        valueType: "java.util.function.Consumer"
        uuid: "ifCausedBy_consumer1"
        fixed: false
        equalsMethodPresent: false
        explicitCastNeeded: false
      methodExercised:
        target: "action"
        name: "accept"
        parameters:
        - name: "arg0"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Exception"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Exception"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Exception"
            uuid: "ifCausedBy_exception1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        signature: "accept(Exception): void"
        returnValue:
          sapientType: "VOID"
          valueType: "void"
          uuid: "ifCausedBy_void1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 5
      ignored: false
      nestedInLoop: false
      nestedInRecursion: false
      value:
        sapientType: "VOID"
        fixed: true
        equalsMethodPresent: false
        explicitCastNeeded: false
      staticReadMethodForField: false
      filledByUser: false
    uuid: "21d79cb3-1408-38c9-b0b6-0597cd977518"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isInstance(java.lang.Exception)\
        \ : boolean"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
