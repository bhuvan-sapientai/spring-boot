---
modelFingerprint: "75E08D9DD4120C0958239B81EDD40AC6"
methods:
- method:
    name: "getPort"
    signature: "getPort() : int"
    instructionFingerprint: "AD032F36D9721078169D2BE72E4B37AD"
  paths:
  - pathId: "path1"
    testPathName: "getPortTest"
    constructorSignature: "<init>(int,java.lang.Throwable) : void"
    filledByUser: false
    modelFingerprint: "025E908766E42EFA5E543C6855911927"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "443bad7d-e2e9-3a65-8d63-15797c63d81d"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "throwIfPortBindingException"
    signature: "throwIfPortBindingException(java.lang.Exception,java.util.function.IntSupplier)\
      \ : void"
    instructionFingerprint: "6BE19F84492507410B94C419A98393FB"
  paths:
  - pathId: "path1"
    testPathName: "throwIfPortBindingExceptionTest"
    filledByUser: false
    modelFingerprint: "9796F916D12AB6CCDF13CF99D5E31020"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "ex"
      modelFingerprint: "48C0A9E6C39EE0F0D4D8E880DC327BCD"
      index: 1
      ignored: false
      valueUuid: "throwIfPortBindingException_exception1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "port"
      modelFingerprint: "3C831E7AFC40580992C2D0F91009F8B0"
      index: 2
      ignored: false
      valueUuid: "throwIfPortBindingException_intSupplier1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "PortInUseException"
      modelFingerprint: "FE3858E8F5109720ECF723D2EA56535F"
      index: 3
      ignored: false
      valueUuid: "uuid2"
      methodExercised:
        target: "org.springframework.boot.web.server.PortInUseException"
        name: "ifPortBindingException"
        parameters:
        - name: "ex"
          valueUuid: "throwIfPortBindingException_exception1"
        - name: "action"
          valueUuid: "uuid1"
        signature: "ifPortBindingException(Exception,Consumer): void"
        returnValueUuid: "throwIfPortBindingException_void1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 4
      ignored: false
      valueUuid: "uuid3"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "eeec45fb-e3c7-3494-8faf-9684c0629800"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "java.lang.Exception"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Exception"
      uuid: "throwIfPortBindingException_exception1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.function.IntSupplier"
      uuid: "throwIfPortBindingException_intSupplier1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.PortInUseException"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "throwIfPortBindingException_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "java.lang.Exception"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Exception"
      uuid: "throwIfPortBindingException_exception1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Consumer"
      uuid: "uuid1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "ifPortBindingException"
    signature: "ifPortBindingException(java.lang.Exception,java.util.function.Consumer<java.net.BindException>)\
      \ : void"
    instructionFingerprint: "D0CAA1D81EECC054F934D0BDF1834471"
  paths:
  - pathId: "path1"
    testPathName: "ifPortBindingExceptionTest"
    filledByUser: false
    modelFingerprint: "A5671146E2DEEB54473D47FA8A4B4231"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "ex"
      modelFingerprint: "48C0A9E6C39EE0F0D4D8E880DC327BCD"
      index: 1
      ignored: false
      valueUuid: "ifPortBindingException_exception1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "action"
      modelFingerprint: "58502893B16F519B41CF5967B28C74DC"
      index: 2
      ignored: false
      valueUuid: "ifPortBindingException_consumer1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "PortInUseException"
      modelFingerprint: "52F66D6BF06BD7D761C2E4FDAAE908AC"
      index: 3
      ignored: false
      valueUuid: "uuid6"
      methodExercised:
        target: "org.springframework.boot.web.server.PortInUseException"
        name: "ifCausedBy"
        parameters:
        - name: "ex"
          valueUuid: "ifPortBindingException_exception1"
        - name: "causedBy"
          valueUuid: "uuid4"
        - name: "action"
          valueUuid: "uuid5"
        signature: "ifCausedBy(Exception,Class,Consumer): void"
        returnValueUuid: "ifPortBindingException_void1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 4
      ignored: false
      valueUuid: "uuid7"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "c774ab4b-e75f-350c-9e71-1a620689db7a"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "java.lang.Exception"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Exception"
      uuid: "ifPortBindingException_exception1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "ifPortBindingException_consumer1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.PortInUseException"
      uuid: "uuid6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "ifPortBindingException_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "java.lang.Exception"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Exception"
      uuid: "ifPortBindingException_exception1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.net.BindException"
      valueType: "java.lang.Class"
      genericValueType: "java.net.BindException"
      uuid: "uuid4"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Consumer"
      uuid: "uuid5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid7"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "ifCausedBy"
    signature: "ifCausedBy(java.lang.Exception,java.lang.Class<java.lang.Exception>,java.util.function.Consumer<java.lang.Exception>)\
      \ : void"
    instructionFingerprint: "92953B0AA7AA9AEFE1676E89975837F9"
  paths:
  - pathId: "path2"
    testPathName: "ifCausedByWhenCandidateIsNull"
    filledByUser: false
    modelFingerprint: "20906503B36829B02F1C30ABC1412491"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "ex"
      modelFingerprint: "6E25C8620160D5E9D7A93B189E03289F"
      index: 1
      ignored: false
      valueUuid: "ifCausedBy_exception1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "causedBy"
      modelFingerprint: "77D5CCBE5DC8AB99E089CFCC0805BA24"
      index: 2
      ignored: false
      valueUuid: "ifCausedBy_class1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "action"
      modelFingerprint: "F2FF1B5085AF865C80C51628DFA7078B"
      index: 3
      ignored: false
      valueUuid: "ifCausedBy_consumer1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 4
      ignored: false
      valueUuid: "uuid8"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "55c69765-224e-3d51-88a9-f208e3e5ec97"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "NULL"
      valueType: "java.lang.Exception"
      uuid: "ifCausedBy_exception1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Exception"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Exception"
      uuid: "ifCausedBy_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "ifCausedBy_consumer1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid8"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path1"
    testPathName: "ifCausedByWhenCausedByIsInstanceCandidate"
    filledByUser: false
    modelFingerprint: "051E8F1AADF420F95F489DCCA6E3EF34"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "ex"
      modelFingerprint: "FC8FE2F9616F959CAE919D4282A114D5"
      index: 1
      ignored: false
      valueUuid: "ifCausedBy_exception1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "causedBy"
      modelFingerprint: "77D5CCBE5DC8AB99E089CFCC0805BA24"
      index: 2
      ignored: false
      valueUuid: "ifCausedBy_class1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "action"
      modelFingerprint: "25230ADA07045824B494F73032D8906C"
      index: 3
      ignored: false
      valueUuid: "ifCausedBy_consumer1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "action"
      modelFingerprint: "22A884B108CDE47ED0A6EEEDFCF242BF"
      index: 4
      ignored: false
      valueUuid: "ifCausedBy_consumer1"
      methodExercised:
        target: "action"
        name: "accept"
        parameters:
        - name: "arg0"
          valueUuid: "ifCausedBy_exception1"
        signature: "accept(Exception): void"
        returnValueUuid: "ifCausedBy_void1"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 5
      ignored: false
      valueUuid: "uuid1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "21d79cb3-1408-38c9-b0b6-0597cd977518"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isInstance(java.lang.Exception)\
        \ : boolean"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "java.lang.Exception"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Exception"
      uuid: "ifCausedBy_exception1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Exception"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Exception"
      uuid: "ifCausedBy_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "ifCausedBy_consumer1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "ifCausedBy_consumer1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "ifCausedBy_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "java.lang.Exception"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Exception"
      uuid: "ifCausedBy_exception1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
