---
modelFingerprint: "478345A5FFF6E4D7C80394E4AC648153"
targetClass:
  fullClassName: "org.springframework.boot.web.server.MimeMappings"
methods:
- method:
    name: "add"
    sourceCodeSignature: "String add(String extension, String mimeType)"
    returnType: "java.lang.String"
    parameters:
    - name: "extension"
      type: "java.lang.String"
    - name: "mimeType"
      type: "java.lang.String"
    instructionFingerprint: "A053392D53CD8F733AB5A78C6A42BE28"
  paths:
  - pathId: "path1"
    testPathName: "addWhenPreviousIsNull"
    constructorSignature: "<init>(org.springframework.boot.web.server.MimeMappings,boolean)\
      \ : void"
    modelFingerprint: "EB91ED7333D799E98ADFA4915E49DA6F"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "C6C20A1B8600E44DAEB1EF2E874D51DC"
      valueUuid: "target"
    - type: "INPUT"
      name: "extension"
      modelFingerprint: "79D924DC0AABB45E5038639F1E16086D"
      valueUuid: "extension"
    - type: "INPUT"
      name: "mimeType"
      modelFingerprint: "329192D992BA20CFB8C1DAAE30FEC9CF"
      valueUuid: "mimeType"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "4B4DB1A399EF38A3D3E2701ABD69F616"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:mappings,message:uniqueUuid1):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A27A4E2013F8E19D0A73D6E8CFA805ED"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:extension,message:uniqueUuid2):void2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "3FFDEF8754997F3950AE1B6AD2BDC618"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:mimeType,message:uniqueUuid3):void3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "494333D8A9619E3B4E57274C75B778A3"
      valueUuid: "string2"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.MimeMappings"
        parameters:
        - name: "mappings"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mappings"
        - name: "mutable"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "mutable"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "extension"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "mimeType"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mappings"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappings must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "extension"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Extension must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "mimeType"
    - sapientType: "BASIC"
      content: !<regular>
        value: "MimeType must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "string2"
      fixed: true
    branches:
    - lineNumber: 98
      expression: "previous != null"
      range: "(98,11)-(98,26)"
      evaluatedAs: false
- method:
    name: "remove"
    sourceCodeSignature: "String remove(String extension)"
    returnType: "java.lang.String"
    parameters:
    - name: "extension"
      type: "java.lang.String"
    instructionFingerprint: "7B37931C3C6CDEAA3BDC6AF5DEAF41DE"
  paths:
  - pathId: "path1"
    testPathName: "removeWhenPreviousIsNull"
    constructorSignature: "<init>(org.springframework.boot.web.server.MimeMappings,boolean)\
      \ : void"
    modelFingerprint: "CC96EA1FD60A97710204795B217A007B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "C6C20A1B8600E44DAEB1EF2E874D51DC"
      valueUuid: "target"
    - type: "INPUT"
      name: "extension"
      modelFingerprint: "79D924DC0AABB45E5038639F1E16086D"
      valueUuid: "extension"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "4B4DB1A399EF38A3D3E2701ABD69F616"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:mappings,message:uniqueUuid4):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A27A4E2013F8E19D0A73D6E8CFA805ED"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:extension,message:uniqueUuid5):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "494333D8A9619E3B4E57274C75B778A3"
      valueUuid: "string2"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.MimeMappings"
        parameters:
        - name: "mappings"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mappings"
        - name: "mutable"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "mutable"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "extension"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mappings"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappings must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "extension"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Extension must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "string2"
      fixed: true
    branches:
    - lineNumber: 109
      expression: "previous != null"
      range: "(109,11)-(109,26)"
      evaluatedAs: false
- method:
    name: "get"
    sourceCodeSignature: "String get(String extension)"
    returnType: "java.lang.String"
    parameters:
    - name: "extension"
      type: "java.lang.String"
    instructionFingerprint: "8E3F61DCECE78D46FEE8B90875AE38E3"
  paths:
  - pathId: "path1"
    testPathName: "getWhenMappingIsNull"
    constructorSignature: "<init>(org.springframework.boot.web.server.MimeMappings,boolean)\
      \ : void"
    modelFingerprint: "6053FC8B95F594A07C0CB308EEA708ED"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "C6C20A1B8600E44DAEB1EF2E874D51DC"
      valueUuid: "target"
    - type: "INPUT"
      name: "extension"
      modelFingerprint: "79D924DC0AABB45E5038639F1E16086D"
      valueUuid: "extension"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "4B4DB1A399EF38A3D3E2701ABD69F616"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:mappings,message:uniqueUuid6):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A27A4E2013F8E19D0A73D6E8CFA805ED"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:extension,message:uniqueUuid7):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "494333D8A9619E3B4E57274C75B778A3"
      valueUuid: "string2"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.MimeMappings"
        parameters:
        - name: "mappings"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mappings"
        - name: "mutable"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "mutable"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "extension"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mappings"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappings must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "extension"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Extension must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "string2"
      fixed: true
    branches:
    - lineNumber: 120
      expression: "mapping != null"
      range: "(120,11)-(120,25)"
      evaluatedAs: false
- method:
    name: "getAll"
    sourceCodeSignature: "Collection<Mapping> getAll()"
    returnType: "java.util.Collection"
    genericReturnType: "org.springframework.boot.web.server.MimeMappings$Mapping"
    instructionFingerprint: "8FE33F547FEA6580D168B8B971DECC93"
  paths:
  - pathId: "path1"
    testPathName: "getAllTest"
    constructorSignature: "<init>(org.springframework.boot.web.server.MimeMappings,boolean)\
      \ : void"
    modelFingerprint: "F29CF76E5877B41E46FB64BC59706F6C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "C6C20A1B8600E44DAEB1EF2E874D51DC"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "4B4DB1A399EF38A3D3E2701ABD69F616"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:mappings,message:uniqueUuid8):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "410911DA4AB8F3BBA70E5D45CD9AABF2"
      valueUuid: "collection"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.MimeMappings"
        parameters:
        - name: "mappings"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mappings"
        - name: "mutable"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "mutable"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mappings"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappings must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
      uuid: "collection"
      collectionUuid: "linkedHashMap"
- method:
    name: "iterator"
    sourceCodeSignature: "Iterator<Mapping> iterator()"
    returnType: "java.util.Iterator"
    genericReturnType: "org.springframework.boot.web.server.MimeMappings$Mapping"
    instructionFingerprint: "BB6E98957CBCD8D22367F30A7E8B39FE"
  paths:
  - pathId: "path1"
    testPathName: "iteratorTest"
    constructorSignature: "<init>(org.springframework.boot.web.server.MimeMappings,boolean)\
      \ : void"
    modelFingerprint: "B1AC3A0A7CA960C97EB79C13663BE793"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "C6C20A1B8600E44DAEB1EF2E874D51DC"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "4B4DB1A399EF38A3D3E2701ABD69F616"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:mappings,message:uniqueUuid9):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "9AA185B103C888B8C50843A5380506F2"
      valueUuid: "iteratorNotNull"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.MimeMappings"
        parameters:
        - name: "mappings"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mappings"
        - name: "mutable"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "mutable"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mappings"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappings must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "NOT_NULL"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.web.server.MimeMappings$Mapping"
      uuid: "iteratorNotNull"
      fixed: true
      collectionUuid: "collection"
- method:
    name: "equals"
    sourceCodeSignature: "boolean equals(Object obj)"
    returnType: "boolean"
    parameters:
    - name: "obj"
      type: "java.lang.Object"
    instructionFingerprint: "FF3A15427E9AAB6D49CEC14CFB327D61"
  paths:
  - pathId: "path1"
    testPathName: "equalsWhenObjIsNull"
    constructorSignature: "<init>(org.springframework.boot.web.server.MimeMappings,boolean)\
      \ : void"
    modelFingerprint: "EB04BC8388BEF3854FB78FB7AAFE1BC2"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 138
      expression: "obj == null"
      range: "(138,7)-(138,17)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "equalsWhenObjEqualsThis"
    constructorSignature: "<init>(org.springframework.boot.web.server.MimeMappings,boolean)\
      \ : void"
    modelFingerprint: "10C5C3EC6F909838A2A27C5FBA683191"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 138
      expression: "obj == null"
      range: "(138,7)-(138,17)"
      evaluatedAs: false
    - lineNumber: 141
      expression: "obj == this"
      range: "(141,7)-(141,17)"
      evaluatedAs: true
  - pathId: "path5"
    testPathName: "equalsWhenObjNotInstanceOfMimeMappings"
    constructorSignature: "<init>(org.springframework.boot.web.server.MimeMappings,boolean)\
      \ : void"
    modelFingerprint: "623C035611E64942B308E298EE58FA76"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 138
      expression: "obj == null"
      range: "(138,7)-(138,17)"
      evaluatedAs: false
    - lineNumber: 141
      expression: "obj == this"
      range: "(141,7)-(141,17)"
      evaluatedAs: false
    - lineNumber: 144
      expression: "obj instanceof MimeMappings other"
      range: "(144,7)-(144,39)"
      evaluatedAs: false
  - pathId: "path3"
    testPathName: "equalsWhenGetMapEqualsOtherMap"
    constructorSignature: "<init>(org.springframework.boot.web.server.MimeMappings,boolean)\
      \ : void"
    modelFingerprint: "1527390917DB677900737CBFB89EECA1"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "COLLECTION_VALUE_NULL"
    allValues: []
    branches:
    - lineNumber: 138
      expression: "obj == null"
      range: "(138,7)-(138,17)"
      evaluatedAs: false
    - lineNumber: 141
      expression: "obj == this"
      range: "(141,7)-(141,17)"
      evaluatedAs: false
    - lineNumber: 144
      expression: "obj instanceof MimeMappings other"
      range: "(144,7)-(144,39)"
      evaluatedAs: true
    - lineNumber: 145
      expression: "getMap().equals(other.map)"
      range: "(145,11)-(145,36)"
      evaluatedAs: true
  - pathId: "path4"
    testPathName: "equalsWhenGetMapNotEqualsOtherMap"
    constructorSignature: "<init>(org.springframework.boot.web.server.MimeMappings,boolean)\
      \ : void"
    modelFingerprint: "F6D590C447F7BBE62666888649776C18"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "COLLECTION_VALUE_NULL"
    allValues: []
    branches:
    - lineNumber: 138
      expression: "obj == null"
      range: "(138,7)-(138,17)"
      evaluatedAs: false
    - lineNumber: 141
      expression: "obj == this"
      range: "(141,7)-(141,17)"
      evaluatedAs: false
    - lineNumber: 144
      expression: "obj instanceof MimeMappings other"
      range: "(144,7)-(144,39)"
      evaluatedAs: true
    - lineNumber: 145
      expression: "getMap().equals(other.map)"
      range: "(145,11)-(145,36)"
      evaluatedAs: false
- method:
    name: "getMap"
    sourceCodeSignature: "Map<String, Mapping> getMap()"
    returnType: "java.util.Map"
    genericReturnType: "java.lang.String,org.springframework.boot.web.server.MimeMappings$Mapping"
    instructionFingerprint: "D3D21F593BC5A1F9F132A0810F8D1FBF"
  paths:
  - pathId: "path1"
    testPathName: "getMapTest"
    constructorSignature: "<init>(org.springframework.boot.web.server.MimeMappings,boolean)\
      \ : void"
    modelFingerprint: "9A3B3E8CA8D4ED812EED0615FB7F212B"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "unmodifiableMappings"
    sourceCodeSignature: "MimeMappings unmodifiableMappings(MimeMappings mappings)"
    returnType: "org.springframework.boot.web.server.MimeMappings"
    parameters:
    - name: "mappings"
      type: "org.springframework.boot.web.server.MimeMappings"
    instructionFingerprint: "BF2DB2954988E89FC9396E44C063EF72"
  paths:
  - pathId: "path1"
    testPathName: "unmodifiableMappingsWhenDefaultBranch"
    modelFingerprint: "3A642727F0FAF3CAECC2605B62BA8CBC"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "mappings"
      modelFingerprint: "1D3693AFC43D6E5FD08E9F77C7E45861"
      valueUuid: "mappings"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "6E7744BE63D4532A816264F83B1810C1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:mappings,message:uniqueUuid16):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "6E7744BE63D4532A816264F83B1810C1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:mappings,message:uniqueUuid17):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F3FC606579D53DBC14EAAD754413B56E"
      valueUuid: "mimeMappings"
    disabled: false
    failureReason:
      reason: "COLLECTION_VALUE_NULL"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.MimeMappings"
        parameters: []
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.MimeMappings"
        parameters: []
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mappings"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappings must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid16"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.MimeMappings"
        parameters: []
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mappings"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappings must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid17"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.MimeMappings"
        parameters:
        - name: "mappings"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.MimeMappings"
              parameters: []
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mappings"
        - name: "mutable"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid18"
            fixed: true
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mimeMappings"
      fixed: true
    branches:
    - lineNumber: 85
      expression: "branch expression (line 85)"
      range: "(85,1)-(85,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
- method:
    name: "lazyCopy"
    sourceCodeSignature: "MimeMappings lazyCopy(MimeMappings mappings)"
    returnType: "org.springframework.boot.web.server.MimeMappings"
    parameters:
    - name: "mappings"
      type: "org.springframework.boot.web.server.MimeMappings"
    instructionFingerprint: "4A7902B452AFBEED60CA56B627410B77"
  paths:
  - pathId: "path1"
    testPathName: "lazyCopyTest"
    modelFingerprint: "0F9E08BC1076205B2C526093B2258321"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "mappings"
      modelFingerprint: "96EE2B4EEE326E73D51D0E04D4A2ADE4"
      valueUuid: "mappings"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "4B4DB1A399EF38A3D3E2701ABD69F616"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:mappings,message:uniqueUuid19):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F7926471D96ED9C8BB01FCF9A80D67CA"
      valueUuid: "mimeMappings.LazyMimeMappingsCopy"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mappings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.MimeMappings"
      uuid: "mappings"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mappings must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid19"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.MimeMappings$LazyMimeMappingsCopy"
        parameters:
        - name: "source"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.server.MimeMappings"
            uuid: "mappings"
      valueType: "org.springframework.boot.web.server.MimeMappings$LazyMimeMappingsCopy"
      uuid: "mimeMappings.LazyMimeMappingsCopy"
      fixed: true
