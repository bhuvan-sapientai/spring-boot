---
modelFingerprint: "B2DEF24432ED450A11D52C0A06CD2D68"
methods:
- method:
    name: "getKeyManagerFactory"
    signature: "getKeyManagerFactory() : javax.net.ssl.KeyManagerFactory"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.RuntimeException"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "CFC3F3DD84E1C8787989A7D4CE5597C9"
  paths:
  - pathId: "path1"
    testPathName: "getKeyManagerFactoryWhenPasswordIsNotNull"
    constructorSignature: "<init>(org.springframework.boot.ssl.SslStoreBundle,org.springframework.boot.ssl.SslBundleKey)\
      \ : void"
    filledByUser: false
    modelFingerprint: "C87046D2896578B5DC71E87B8750D2FE"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "b0bab562-2524-33cf-94c1-129e5246346c"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "factory"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "factory.init(store, (password != null) ? password.toCharArray() : null);"
      lineNumber: 53
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: factory - Method: init"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path2"
    testPathName: "getKeyManagerFactoryWhenPasswordIsNullAndPasswordIsNotNull"
    constructorSignature: "<init>(org.springframework.boot.ssl.SslStoreBundle,org.springframework.boot.ssl.SslBundleKey)\
      \ : void"
    filledByUser: false
    modelFingerprint: "CC89B77DB1D52D98413DAE1A78543A47"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E7690A6E58AC6E45A45FB83DAA9E165C"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "storeBundle"
      modelFingerprint: "C40CB443FA0953E2E6F747799D82FB4C"
      index: 2
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslStoreBundle1"
      methodExercised:
        target: "this.storeBundle"
        name: "getKeyStore"
        parameters: []
        signature: "getKeyStore(): KeyStore"
        returnValueUuid: "getKeyManagerFactory_keyStore1"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "key"
      modelFingerprint: "15227EC6146A15CB39A871F75B0AB03E"
      index: 3
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslBundleKey1"
      methodExercised:
        target: "this.key"
        name: "assertContainsAlias"
        parameters:
        - name: "keyStore"
          valueUuid: "getKeyManagerFactory_keyStore1"
        signature: "assertContainsAlias(KeyStore): void"
        returnValueUuid: "getKeyManagerFactory_void1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "key"
      modelFingerprint: "E07EF792BC4D24EFEF76622B91A0350A"
      index: 4
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslBundleKey1"
      methodExercised:
        target: "this.key"
        name: "getAlias"
        parameters: []
        signature: "getAlias(): String"
        returnValueUuid: "getKeyManagerFactory_string1"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "key"
      modelFingerprint: "39949AA52387E411D8DB53FD9FD25CB4"
      index: 5
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslBundleKey1"
      methodExercised:
        target: "this.key"
        name: "getPassword"
        parameters: []
        signature: "getPassword(): String"
        returnValueUuid: "getKeyManagerFactory_string3"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "storeBundle"
      modelFingerprint: "9BFD814DBF61C9F82FDA6E1868D5EFD9"
      index: 6
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslStoreBundle1"
      methodExercised:
        target: "this.storeBundle"
        name: "getKeyStorePassword"
        parameters: []
        signature: "getKeyStorePassword(): String"
        returnValueUuid: "getKeyManagerFactory_string4"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "692AD8916DDB5FA1B621F8842A1053B8"
      index: 7
      ignored: false
      valueUuid: "getKeyManagerFactory_aliasKeyManagerFactory1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "b403da3e-1240-318c-b973-27e1e0481967"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "factory"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "factory.init(store, (password != null) ? password.toCharArray() : null);"
      lineNumber: 53
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: factory - Method: init"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.DefaultSslManagerBundle"
        parameters:
        - name: "storeBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslStoreBundle"
            uuid: "<init>_sslStoreBundle1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "key"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundleKey"
            uuid: "<init>_sslBundleKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.ssl.DefaultSslManagerBundle"
        parameters:
        - name: "storeBundle"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "org.springframework.boot.ssl.SslStoreBundle"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.springframework.boot.ssl.SslStoreBundle"
            uuid: "<init>_sslStoreBundle1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "key"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "org.springframework.boot.ssl.SslBundleKey"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.springframework.boot.ssl.SslBundleKey"
            uuid: "<init>_sslBundleKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.ssl.DefaultSslManagerBundle"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "<init>_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "getKeyManagerFactory_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "<init>_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getKeyManagerFactory_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "getKeyManagerFactory_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "<init>_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getAlias1"
      valueType: "java.lang.String"
      uuid: "getKeyManagerFactory_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "<init>_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "getKeyManagerFactory_string3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "<init>_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      suggestedContent: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "getKeyManagerFactory_string4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.AliasKeyManagerFactory"
        parameters:
        - name: "delegate"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "javax.net.ssl.KeyManagerFactory"
              method: "getInstance"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "SunX509"
                  valueType: "java.lang.String"
                  uuid: "getKeyManagerFactory_string2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            suggestedContent: !<static_method_return>
              target: "javax.net.ssl.KeyManagerFactory"
              method: "getInstance"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "SunX509"
                  valueType: "java.lang.String"
                  uuid: "getKeyManagerFactory_string2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "javax.net.ssl.KeyManagerFactory"
            uuid: "getKeyManagerFactoryInstance_keyManagerFactory1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "alias"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getAlias1"
            valueType: "java.lang.String"
            uuid: "getKeyManagerFactory_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "algorithm"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "SunX509"
            valueType: "java.lang.String"
            uuid: "getKeyManagerFactory_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "org.springframework.boot.ssl.AliasKeyManagerFactory"
        parameters:
        - name: "delegate"
          value:
            sapientType: "OBJECT"
            suggestedContent: !<static_method_return>
              target: "javax.net.ssl.KeyManagerFactory"
              method: "getInstance"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "SunX509"
                  valueType: "java.lang.String"
                  uuid: "getKeyManagerFactory_string2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "javax.net.ssl.KeyManagerFactory"
            uuid: "getKeyManagerFactoryInstance_keyManagerFactory1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "alias"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "getKeyManagerFactory_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "algorithm"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "SunX509"
            valueType: "java.lang.String"
            uuid: "getKeyManagerFactory_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.ssl.AliasKeyManagerFactory"
      uuid: "getKeyManagerFactory_aliasKeyManagerFactory1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "getKeyManagerFactoryWhenPasswordIsNull"
    constructorSignature: "<init>(org.springframework.boot.ssl.SslStoreBundle,org.springframework.boot.ssl.SslBundleKey)\
      \ : void"
    filledByUser: false
    modelFingerprint: "F0D8DC0D3D36E36B39021D764016EE97"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E7690A6E58AC6E45A45FB83DAA9E165C"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "storeBundle"
      modelFingerprint: "C40CB443FA0953E2E6F747799D82FB4C"
      index: 2
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslStoreBundle1"
      methodExercised:
        target: "this.storeBundle"
        name: "getKeyStore"
        parameters: []
        signature: "getKeyStore(): KeyStore"
        returnValueUuid: "getKeyManagerFactory_keyStore1"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "key"
      modelFingerprint: "15227EC6146A15CB39A871F75B0AB03E"
      index: 3
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslBundleKey1"
      methodExercised:
        target: "this.key"
        name: "assertContainsAlias"
        parameters:
        - name: "keyStore"
          valueUuid: "getKeyManagerFactory_keyStore1"
        signature: "assertContainsAlias(KeyStore): void"
        returnValueUuid: "getKeyManagerFactory_void1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "key"
      modelFingerprint: "E07EF792BC4D24EFEF76622B91A0350A"
      index: 4
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslBundleKey1"
      methodExercised:
        target: "this.key"
        name: "getAlias"
        parameters: []
        signature: "getAlias(): String"
        returnValueUuid: "getKeyManagerFactory_string1"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "key"
      modelFingerprint: "39949AA52387E411D8DB53FD9FD25CB4"
      index: 5
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslBundleKey1"
      methodExercised:
        target: "this.key"
        name: "getPassword"
        parameters: []
        signature: "getPassword(): String"
        returnValueUuid: "getKeyManagerFactory_string3"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "storeBundle"
      modelFingerprint: "4511D74C6759C0870BD66CAA827DACB1"
      index: 6
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslStoreBundle1"
      methodExercised:
        target: "this.storeBundle"
        name: "getKeyStorePassword"
        parameters: []
        signature: "getKeyStorePassword(): String"
        returnValueUuid: "getKeyManagerFactory_string4"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "692AD8916DDB5FA1B621F8842A1053B8"
      index: 7
      ignored: false
      valueUuid: "getKeyManagerFactory_aliasKeyManagerFactory1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "50f60702-5471-30c1-abf9-177b9d283d4f"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "factory"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "factory.init(store, (password != null) ? password.toCharArray() : null);"
      lineNumber: 53
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: factory - Method: init"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.DefaultSslManagerBundle"
        parameters:
        - name: "storeBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslStoreBundle"
            uuid: "<init>_sslStoreBundle1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "key"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundleKey"
            uuid: "<init>_sslBundleKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.ssl.DefaultSslManagerBundle"
        parameters:
        - name: "storeBundle"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "org.springframework.boot.ssl.SslStoreBundle"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.springframework.boot.ssl.SslStoreBundle"
            uuid: "<init>_sslStoreBundle1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "key"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "org.springframework.boot.ssl.SslBundleKey"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.springframework.boot.ssl.SslBundleKey"
            uuid: "<init>_sslBundleKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.ssl.DefaultSslManagerBundle"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "<init>_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "getKeyManagerFactory_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "<init>_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getKeyManagerFactory_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "getKeyManagerFactory_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "<init>_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getAlias1"
      valueType: "java.lang.String"
      uuid: "getKeyManagerFactory_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "<init>_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "getKeyManagerFactory_string3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "<init>_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "getKeyManagerFactory_string4"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.AliasKeyManagerFactory"
        parameters:
        - name: "delegate"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "javax.net.ssl.KeyManagerFactory"
              method: "getInstance"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "SunX509"
                  valueType: "java.lang.String"
                  uuid: "getKeyManagerFactory_string2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            suggestedContent: !<static_method_return>
              target: "javax.net.ssl.KeyManagerFactory"
              method: "getInstance"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "SunX509"
                  valueType: "java.lang.String"
                  uuid: "getKeyManagerFactory_string2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "javax.net.ssl.KeyManagerFactory"
            uuid: "getKeyManagerFactoryInstance_keyManagerFactory1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "alias"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getAlias1"
            valueType: "java.lang.String"
            uuid: "getKeyManagerFactory_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "algorithm"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "SunX509"
            valueType: "java.lang.String"
            uuid: "getKeyManagerFactory_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "org.springframework.boot.ssl.AliasKeyManagerFactory"
        parameters:
        - name: "delegate"
          value:
            sapientType: "OBJECT"
            suggestedContent: !<static_method_return>
              target: "javax.net.ssl.KeyManagerFactory"
              method: "getInstance"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "SunX509"
                  valueType: "java.lang.String"
                  uuid: "getKeyManagerFactory_string2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "javax.net.ssl.KeyManagerFactory"
            uuid: "getKeyManagerFactoryInstance_keyManagerFactory1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "alias"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "getKeyManagerFactory_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "algorithm"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "SunX509"
            valueType: "java.lang.String"
            uuid: "getKeyManagerFactory_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.ssl.AliasKeyManagerFactory"
      uuid: "getKeyManagerFactory_aliasKeyManagerFactory1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path4"
    testPathName: "getKeyManagerFactoryWhenPasswordIsNotNullAndPasswordIsNotNull"
    constructorSignature: "<init>(org.springframework.boot.ssl.SslStoreBundle,org.springframework.boot.ssl.SslBundleKey)\
      \ : void"
    filledByUser: false
    modelFingerprint: "5109433172D3DD6DC0DCDB0B050790CF"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E7690A6E58AC6E45A45FB83DAA9E165C"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "storeBundle"
      modelFingerprint: "C40CB443FA0953E2E6F747799D82FB4C"
      index: 2
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslStoreBundle1"
      methodExercised:
        target: "this.storeBundle"
        name: "getKeyStore"
        parameters: []
        signature: "getKeyStore(): KeyStore"
        returnValueUuid: "getKeyManagerFactory_keyStore1"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "key"
      modelFingerprint: "15227EC6146A15CB39A871F75B0AB03E"
      index: 3
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslBundleKey1"
      methodExercised:
        target: "this.key"
        name: "assertContainsAlias"
        parameters:
        - name: "keyStore"
          valueUuid: "getKeyManagerFactory_keyStore1"
        signature: "assertContainsAlias(KeyStore): void"
        returnValueUuid: "getKeyManagerFactory_void1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "key"
      modelFingerprint: "67826EB26869EEA8162CF91F37F15322"
      index: 4
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslBundleKey1"
      methodExercised:
        target: "this.key"
        name: "getAlias"
        parameters: []
        signature: "getAlias(): String"
        returnValueUuid: "getKeyManagerFactory_string1"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "key"
      modelFingerprint: "5665F358433596491BD458E17ABC1349"
      index: 5
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslBundleKey1"
      methodExercised:
        target: "this.key"
        name: "getPassword"
        parameters: []
        signature: "getPassword(): String"
        returnValueUuid: "getKeyManagerFactory_string3"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "77683F5E6ADC35E11FA6233F11B2F273"
      index: 6
      ignored: false
      valueUuid: "getKeyManagerFactoryInstance_keyManagerFactory1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "d5c3e3b1-de73-323b-84a3-8ade7c84ba19"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "factory"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "factory.init(store, (password != null) ? password.toCharArray() : null);"
      lineNumber: 53
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: factory - Method: init"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.DefaultSslManagerBundle"
        parameters:
        - name: "storeBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslStoreBundle"
            uuid: "<init>_sslStoreBundle1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "key"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundleKey"
            uuid: "<init>_sslBundleKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.ssl.DefaultSslManagerBundle"
        parameters:
        - name: "storeBundle"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "org.springframework.boot.ssl.SslStoreBundle"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.springframework.boot.ssl.SslStoreBundle"
            uuid: "<init>_sslStoreBundle1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "key"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "org.springframework.boot.ssl.SslBundleKey"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.springframework.boot.ssl.SslBundleKey"
            uuid: "<init>_sslBundleKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.ssl.DefaultSslManagerBundle"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "<init>_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "getKeyManagerFactory_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "<init>_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getKeyManagerFactory_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "getKeyManagerFactory_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "<init>_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "getKeyManagerFactory_string1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "<init>_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      suggestedContent: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "getKeyManagerFactory_string3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "javax.net.ssl.KeyManagerFactory"
        method: "getInstance"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "SunX509"
            valueType: "java.lang.String"
            uuid: "getKeyManagerFactory_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      suggestedContent: !<static_method_return>
        target: "javax.net.ssl.KeyManagerFactory"
        method: "getInstance"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "SunX509"
            valueType: "java.lang.String"
            uuid: "getKeyManagerFactory_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "javax.net.ssl.KeyManagerFactory"
      uuid: "getKeyManagerFactoryInstance_keyManagerFactory1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path5"
    testPathName: "getKeyManagerFactoryWhenAliasIsNullAndPasswordIsNullAndPasswordIsNotNull"
    constructorSignature: "<init>(org.springframework.boot.ssl.SslStoreBundle,org.springframework.boot.ssl.SslBundleKey)\
      \ : void"
    filledByUser: false
    modelFingerprint: "78E9D6564BC63BAA04A9661680A335A3"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "d8361b18-c51e-30c6-af76-89975f274514"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "factory"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "factory.init(store, (password != null) ? password.toCharArray() : null);"
      lineNumber: 53
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: factory - Method: init"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path6"
    testPathName: "getKeyManagerFactoryWhenPasswordIsNullAndPasswordIsNull"
    constructorSignature: "<init>(org.springframework.boot.ssl.SslStoreBundle,org.springframework.boot.ssl.SslBundleKey)\
      \ : void"
    filledByUser: false
    modelFingerprint: "992DDDA14255742770B3736DBF97C84F"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "3cbd1a53-8fc6-38c9-a941-05b191e36225"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "factory"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "factory.init(store, (password != null) ? password.toCharArray() : null);"
      lineNumber: 53
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: factory - Method: init"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path7"
    testPathName: "getKeyManagerFactoryWhenCaughtRuntimeExceptionThrowsRuntimeException"
    constructorSignature: "<init>(org.springframework.boot.ssl.SslStoreBundle,org.springframework.boot.ssl.SslBundleKey)\
      \ : void"
    filledByUser: false
    modelFingerprint: "3E2848795DA9B57C28C335EC76EAE479"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.RuntimeException"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E7690A6E58AC6E45A45FB83DAA9E165C"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "storeBundle"
      modelFingerprint: "C40CB443FA0953E2E6F747799D82FB4C"
      index: 2
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslStoreBundle1"
      methodExercised:
        target: "this.storeBundle"
        name: "getKeyStore"
        parameters: []
        signature: "getKeyStore(): KeyStore"
        returnValueUuid: "getKeyManagerFactory_keyStore1"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "key"
      modelFingerprint: "15227EC6146A15CB39A871F75B0AB03E"
      index: 3
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslBundleKey1"
      methodExercised:
        target: "this.key"
        name: "assertContainsAlias"
        parameters:
        - name: "keyStore"
          valueUuid: "getKeyManagerFactory_keyStore1"
        signature: "assertContainsAlias(KeyStore): void"
        returnValueUuid: "getKeyManagerFactory_void1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "key"
      modelFingerprint: "E07EF792BC4D24EFEF76622B91A0350A"
      index: 4
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslBundleKey1"
      methodExercised:
        target: "this.key"
        name: "getAlias"
        parameters: []
        signature: "getAlias(): String"
        returnValueUuid: "getKeyManagerFactory_string1"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "key"
      modelFingerprint: "5665F358433596491BD458E17ABC1349"
      index: 5
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslBundleKey1"
      methodExercised:
        target: "this.key"
        name: "getPassword"
        parameters: []
        signature: "getPassword(): String"
        returnValueUuid: "getKeyManagerFactory_string3"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "factory"
      modelFingerprint: "98425B041C883D23210F74CD43EACE10"
      index: 6
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "getKeyManagerFactory_aliasKeyManagerFactory1"
      methodExercised:
        target: "factory"
        name: "init"
        parameters:
        - name: "ks"
          valueUuid: "getKeyManagerFactory_keyStore1"
        - name: "password"
          valueUuid: "getKeyManagerFactory_char[]1"
        throwsExceptions:
        - "java.security.KeyStoreException"
        - "java.security.NoSuchAlgorithmException"
        - "java.security.UnrecoverableKeyException"
        signature: "init(KeyStore,char[]): void throws java.security.KeyStoreException,java.security.NoSuchAlgorithmException,java.security.UnrecoverableKeyException"
        returnValueUuid: "getKeyManagerFactory_void2"
        access: 17
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B7C2DC1B47B9E5EA6864937C4F6082EC"
      index: 7
      ignored: false
      valueUuid: "getKeyManagerFactory_runtimeException1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "2507d4f7-33d0-350f-86fc-2e87d4bca71c"
    deleted: false
    disabled: false
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "factory"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "factory.init(store, (password != null) ? password.toCharArray() : null);"
      lineNumber: 53
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: factory - Method: init"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.DefaultSslManagerBundle"
        parameters:
        - name: "storeBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslStoreBundle"
            uuid: "<init>_sslStoreBundle1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "key"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundleKey"
            uuid: "<init>_sslBundleKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.ssl.DefaultSslManagerBundle"
        parameters:
        - name: "storeBundle"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "org.springframework.boot.ssl.SslStoreBundle"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.springframework.boot.ssl.SslStoreBundle"
            uuid: "<init>_sslStoreBundle1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "key"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "org.springframework.boot.ssl.SslBundleKey"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.springframework.boot.ssl.SslBundleKey"
            uuid: "<init>_sslBundleKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.ssl.DefaultSslManagerBundle"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "<init>_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "getKeyManagerFactory_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "<init>_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getKeyManagerFactory_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "getKeyManagerFactory_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "<init>_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getAlias1"
      valueType: "java.lang.String"
      uuid: "getKeyManagerFactory_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "<init>_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      suggestedContent: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "getKeyManagerFactory_string3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.AliasKeyManagerFactory"
        parameters:
        - name: "delegate"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "javax.net.ssl.KeyManagerFactory"
              method: "getInstance"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "SunX509"
                  valueType: "java.lang.String"
                  uuid: "getKeyManagerFactory_string2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            suggestedContent: !<static_method_return>
              target: "javax.net.ssl.KeyManagerFactory"
              method: "getInstance"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "SunX509"
                  valueType: "java.lang.String"
                  uuid: "getKeyManagerFactory_string2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "javax.net.ssl.KeyManagerFactory"
            uuid: "getKeyManagerFactoryInstance_keyManagerFactory1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "alias"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getAlias1"
            valueType: "java.lang.String"
            uuid: "getKeyManagerFactory_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "algorithm"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "SunX509"
            valueType: "java.lang.String"
            uuid: "getKeyManagerFactory_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "org.springframework.boot.ssl.AliasKeyManagerFactory"
        parameters:
        - name: "delegate"
          value:
            sapientType: "OBJECT"
            suggestedContent: !<static_method_return>
              target: "javax.net.ssl.KeyManagerFactory"
              method: "getInstance"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "SunX509"
                  valueType: "java.lang.String"
                  uuid: "getKeyManagerFactory_string2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "javax.net.ssl.KeyManagerFactory"
            uuid: "getKeyManagerFactoryInstance_keyManagerFactory1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "alias"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "getKeyManagerFactory_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "algorithm"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "SunX509"
            valueType: "java.lang.String"
            uuid: "getKeyManagerFactory_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.ssl.AliasKeyManagerFactory"
      uuid: "getKeyManagerFactory_aliasKeyManagerFactory1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getKeyManagerFactory_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "getKeyManagerFactory_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "getKeyManagerFactory_char[]1-item0"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      suggestedContent: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "getKeyManagerFactory_char[]1-item0"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "char[]"
      uuid: "getKeyManagerFactory_char[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.RuntimeException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "java.lang.RuntimeException"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.RuntimeException"
      uuid: "getKeyManagerFactory_runtimeException1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path9"
    testPathName: "getKeyManagerFactoryWhenCaughtExceptionThrowsIllegalStateException"
    constructorSignature: "<init>(org.springframework.boot.ssl.SslStoreBundle,org.springframework.boot.ssl.SslBundleKey)\
      \ : void"
    filledByUser: false
    modelFingerprint: "13F569798C0CCD936DB3649292DEC27C"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: true
    inputParameters: []
    uuid: "56d44b2a-64d2-3ed1-a9a1-34b09f78e70e"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "factory"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "factory.init(store, (password != null) ? password.toCharArray() : null);"
      lineNumber: 53
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: factory - Method: init"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path8"
    testPathName: "getKeyManagerFactoryWhenPasswordIsNotNullAndCaughtRuntimeExceptionThrowsRuntimeException"
    constructorSignature: "<init>(org.springframework.boot.ssl.SslStoreBundle,org.springframework.boot.ssl.SslBundleKey)\
      \ : void"
    filledByUser: false
    modelFingerprint: "FE48E48189C2060455A82E7595B9E90B"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.RuntimeException"
    truncated: true
    inputParameters: []
    uuid: "51c8398b-85b0-3ae0-bf60-3f092968bbca"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "factory"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "factory.init(store, (password != null) ? password.toCharArray() : null);"
      lineNumber: 53
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: factory - Method: init"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path10"
    testPathName: "getKeyManagerFactoryWhenPasswordIsNotNullAndCaughtExceptionThrowsIllegalStateException"
    constructorSignature: "<init>(org.springframework.boot.ssl.SslStoreBundle,org.springframework.boot.ssl.SslBundleKey)\
      \ : void"
    filledByUser: false
    modelFingerprint: "2C8985FD0FB319F4BE959A15A83F0D15"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E7690A6E58AC6E45A45FB83DAA9E165C"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "storeBundle"
      modelFingerprint: "C40CB443FA0953E2E6F747799D82FB4C"
      index: 2
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslStoreBundle1"
      methodExercised:
        target: "this.storeBundle"
        name: "getKeyStore"
        parameters: []
        signature: "getKeyStore(): KeyStore"
        returnValueUuid: "getKeyManagerFactory_keyStore1"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "key"
      modelFingerprint: "15227EC6146A15CB39A871F75B0AB03E"
      index: 3
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslBundleKey1"
      methodExercised:
        target: "this.key"
        name: "assertContainsAlias"
        parameters:
        - name: "keyStore"
          valueUuid: "getKeyManagerFactory_keyStore1"
        signature: "assertContainsAlias(KeyStore): void"
        returnValueUuid: "getKeyManagerFactory_void1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "key"
      modelFingerprint: "E07EF792BC4D24EFEF76622B91A0350A"
      index: 4
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslBundleKey1"
      methodExercised:
        target: "this.key"
        name: "getAlias"
        parameters: []
        signature: "getAlias(): String"
        returnValueUuid: "getKeyManagerFactory_string1"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "key"
      modelFingerprint: "39949AA52387E411D8DB53FD9FD25CB4"
      index: 5
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslBundleKey1"
      methodExercised:
        target: "this.key"
        name: "getPassword"
        parameters: []
        signature: "getPassword(): String"
        returnValueUuid: "getKeyManagerFactory_string3"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "storeBundle"
      modelFingerprint: "9BFD814DBF61C9F82FDA6E1868D5EFD9"
      index: 6
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslStoreBundle1"
      methodExercised:
        target: "this.storeBundle"
        name: "getKeyStorePassword"
        parameters: []
        signature: "getKeyStorePassword(): String"
        returnValueUuid: "getKeyManagerFactory_string4"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "factory"
      modelFingerprint: "98425B041C883D23210F74CD43EACE10"
      index: 7
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "getKeyManagerFactory_aliasKeyManagerFactory1"
      methodExercised:
        target: "factory"
        name: "init"
        parameters:
        - name: "ks"
          valueUuid: "getKeyManagerFactory_keyStore1"
        - name: "password"
          valueUuid: "getKeyManagerFactory_char[]1"
        throwsExceptions:
        - "java.security.KeyStoreException"
        - "java.security.NoSuchAlgorithmException"
        - "java.security.UnrecoverableKeyException"
        signature: "init(KeyStore,char[]): void throws java.security.KeyStoreException,java.security.NoSuchAlgorithmException,java.security.UnrecoverableKeyException"
        returnValueUuid: "getKeyManagerFactory_void2"
        access: 17
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B2F91112C62C5590BD28F93C517655B2"
      index: 8
      ignored: false
      valueUuid: "getKeyManagerFactory_illegalStateException1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "42503780-7fc1-3c2a-b9c0-1aa22e002e62"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "factory"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "factory.init(store, (password != null) ? password.toCharArray() : null);"
      lineNumber: 53
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: factory - Method: init"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.DefaultSslManagerBundle"
        parameters:
        - name: "storeBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslStoreBundle"
            uuid: "<init>_sslStoreBundle1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "key"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundleKey"
            uuid: "<init>_sslBundleKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.ssl.DefaultSslManagerBundle"
        parameters:
        - name: "storeBundle"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "org.springframework.boot.ssl.SslStoreBundle"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.springframework.boot.ssl.SslStoreBundle"
            uuid: "<init>_sslStoreBundle1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "key"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "org.springframework.boot.ssl.SslBundleKey"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.springframework.boot.ssl.SslBundleKey"
            uuid: "<init>_sslBundleKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.ssl.DefaultSslManagerBundle"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "<init>_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "getKeyManagerFactory_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "<init>_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getKeyManagerFactory_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "getKeyManagerFactory_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "<init>_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getAlias1"
      valueType: "java.lang.String"
      uuid: "getKeyManagerFactory_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "<init>_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "getKeyManagerFactory_string3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "<init>_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      suggestedContent: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "getKeyManagerFactory_string4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.AliasKeyManagerFactory"
        parameters:
        - name: "delegate"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "javax.net.ssl.KeyManagerFactory"
              method: "getInstance"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "SunX509"
                  valueType: "java.lang.String"
                  uuid: "getKeyManagerFactory_string2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            suggestedContent: !<static_method_return>
              target: "javax.net.ssl.KeyManagerFactory"
              method: "getInstance"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "SunX509"
                  valueType: "java.lang.String"
                  uuid: "getKeyManagerFactory_string2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "javax.net.ssl.KeyManagerFactory"
            uuid: "getKeyManagerFactoryInstance_keyManagerFactory1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "alias"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getAlias1"
            valueType: "java.lang.String"
            uuid: "getKeyManagerFactory_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "algorithm"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "SunX509"
            valueType: "java.lang.String"
            uuid: "getKeyManagerFactory_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "org.springframework.boot.ssl.AliasKeyManagerFactory"
        parameters:
        - name: "delegate"
          value:
            sapientType: "OBJECT"
            suggestedContent: !<static_method_return>
              target: "javax.net.ssl.KeyManagerFactory"
              method: "getInstance"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "SunX509"
                  valueType: "java.lang.String"
                  uuid: "getKeyManagerFactory_string2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "javax.net.ssl.KeyManagerFactory"
            uuid: "getKeyManagerFactoryInstance_keyManagerFactory1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "alias"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "getKeyManagerFactory_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "algorithm"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "SunX509"
            valueType: "java.lang.String"
            uuid: "getKeyManagerFactory_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.ssl.AliasKeyManagerFactory"
      uuid: "getKeyManagerFactory_aliasKeyManagerFactory1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getKeyManagerFactory_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "getKeyManagerFactory_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "getKeyManagerFactory_char[]1-item0"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      suggestedContent: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "char"
            uuid: "getKeyManagerFactory_char[]1-item0"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "char[]"
      uuid: "getKeyManagerFactory_char[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Could not load key manager factory: B"
            suggestedContent: !<regular>
              value: "Could not load key manager factory: B"
            valueType: "java.lang.String"
            uuid: "getKeyManagerFactory_string6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Exception"
              parameters:
              - name: "message"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "B"
                  suggestedContent: !<regular>
                    value: "B"
                  valueType: "java.lang.String"
                  uuid: "getKeyManagerFactory_string5"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Exception"
              parameters:
              - name: "message"
                value:
                  sapientType: "BASIC"
                  suggestedContent: !<regular>
                    value: "B"
                  valueType: "java.lang.String"
                  uuid: "getKeyManagerFactory_string5"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Exception"
            uuid: "getKeyManagerFactory_exception1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            suggestedContent: !<regular>
              value: "Could not load key manager factory: B"
            valueType: "java.lang.String"
            uuid: "getKeyManagerFactory_string6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<new>
              target: "java.lang.Exception"
              parameters:
              - name: "message"
                value:
                  sapientType: "BASIC"
                  suggestedContent: !<regular>
                    value: "B"
                  valueType: "java.lang.String"
                  uuid: "getKeyManagerFactory_string5"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Exception"
            uuid: "getKeyManagerFactory_exception1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.IllegalStateException"
      uuid: "getKeyManagerFactory_illegalStateException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path11"
    testPathName: "getKeyManagerFactoryWhenPasswordIsNullAndCaughtExceptionThrowsIllegalStateException"
    constructorSignature: "<init>(org.springframework.boot.ssl.SslStoreBundle,org.springframework.boot.ssl.SslBundleKey)\
      \ : void"
    filledByUser: false
    modelFingerprint: "2242F22F2CB03DB3FE82E709C6D71145"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E7690A6E58AC6E45A45FB83DAA9E165C"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "storeBundle"
      modelFingerprint: "C40CB443FA0953E2E6F747799D82FB4C"
      index: 2
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslStoreBundle1"
      methodExercised:
        target: "this.storeBundle"
        name: "getKeyStore"
        parameters: []
        signature: "getKeyStore(): KeyStore"
        returnValueUuid: "getKeyManagerFactory_keyStore1"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "key"
      modelFingerprint: "15227EC6146A15CB39A871F75B0AB03E"
      index: 3
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslBundleKey1"
      methodExercised:
        target: "this.key"
        name: "assertContainsAlias"
        parameters:
        - name: "keyStore"
          valueUuid: "getKeyManagerFactory_keyStore1"
        signature: "assertContainsAlias(KeyStore): void"
        returnValueUuid: "getKeyManagerFactory_void1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "key"
      modelFingerprint: "E07EF792BC4D24EFEF76622B91A0350A"
      index: 4
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslBundleKey1"
      methodExercised:
        target: "this.key"
        name: "getAlias"
        parameters: []
        signature: "getAlias(): String"
        returnValueUuid: "getKeyManagerFactory_string1"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "key"
      modelFingerprint: "39949AA52387E411D8DB53FD9FD25CB4"
      index: 5
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslBundleKey1"
      methodExercised:
        target: "this.key"
        name: "getPassword"
        parameters: []
        signature: "getPassword(): String"
        returnValueUuid: "getKeyManagerFactory_string3"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "storeBundle"
      modelFingerprint: "4511D74C6759C0870BD66CAA827DACB1"
      index: 6
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "<init>_sslStoreBundle1"
      methodExercised:
        target: "this.storeBundle"
        name: "getKeyStorePassword"
        parameters: []
        signature: "getKeyStorePassword(): String"
        returnValueUuid: "getKeyManagerFactory_string4"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "factory"
      modelFingerprint: "09515E175C0047EAE24A7F55FEEE22FA"
      index: 7
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      - 2
      valueUuid: "getKeyManagerFactory_aliasKeyManagerFactory1"
      methodExercised:
        target: "factory"
        name: "init"
        parameters:
        - name: "ks"
          valueUuid: "getKeyManagerFactory_keyStore1"
        - name: "password"
          valueUuid: "uuid1"
        throwsExceptions:
        - "java.security.KeyStoreException"
        - "java.security.NoSuchAlgorithmException"
        - "java.security.UnrecoverableKeyException"
        signature: "init(KeyStore,not-detected): void throws java.security.KeyStoreException,java.security.NoSuchAlgorithmException,java.security.UnrecoverableKeyException"
        returnValueUuid: "getKeyManagerFactory_void2"
        access: 17
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "1BACB68EF888113458800074B1D9DBBC"
      index: 8
      ignored: false
      valueUuid: "getKeyManagerFactory_illegalStateException1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "a4fa04a3-3d8f-3a2f-b797-6af854498e3d"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "factory"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "factory.init(store, (password != null) ? password.toCharArray() : null);"
      lineNumber: 53
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: factory - Method: init"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.DefaultSslManagerBundle"
        parameters:
        - name: "storeBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslStoreBundle"
            uuid: "<init>_sslStoreBundle1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "key"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundleKey"
            uuid: "<init>_sslBundleKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.ssl.DefaultSslManagerBundle"
        parameters:
        - name: "storeBundle"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "org.springframework.boot.ssl.SslStoreBundle"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.springframework.boot.ssl.SslStoreBundle"
            uuid: "<init>_sslStoreBundle1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "key"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "org.springframework.boot.ssl.SslBundleKey"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.springframework.boot.ssl.SslBundleKey"
            uuid: "<init>_sslBundleKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.ssl.DefaultSslManagerBundle"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "<init>_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "getKeyManagerFactory_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "<init>_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getKeyManagerFactory_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "getKeyManagerFactory_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "<init>_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getAlias1"
      valueType: "java.lang.String"
      uuid: "getKeyManagerFactory_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "<init>_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "getKeyManagerFactory_string3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "<init>_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "getKeyManagerFactory_string4"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.AliasKeyManagerFactory"
        parameters:
        - name: "delegate"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "javax.net.ssl.KeyManagerFactory"
              method: "getInstance"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "SunX509"
                  valueType: "java.lang.String"
                  uuid: "getKeyManagerFactory_string2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            suggestedContent: !<static_method_return>
              target: "javax.net.ssl.KeyManagerFactory"
              method: "getInstance"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "SunX509"
                  valueType: "java.lang.String"
                  uuid: "getKeyManagerFactory_string2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "javax.net.ssl.KeyManagerFactory"
            uuid: "getKeyManagerFactoryInstance_keyManagerFactory1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "alias"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getAlias1"
            valueType: "java.lang.String"
            uuid: "getKeyManagerFactory_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "algorithm"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "SunX509"
            valueType: "java.lang.String"
            uuid: "getKeyManagerFactory_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "org.springframework.boot.ssl.AliasKeyManagerFactory"
        parameters:
        - name: "delegate"
          value:
            sapientType: "OBJECT"
            suggestedContent: !<static_method_return>
              target: "javax.net.ssl.KeyManagerFactory"
              method: "getInstance"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "SunX509"
                  valueType: "java.lang.String"
                  uuid: "getKeyManagerFactory_string2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "javax.net.ssl.KeyManagerFactory"
            uuid: "getKeyManagerFactoryInstance_keyManagerFactory1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "alias"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "getKeyManagerFactory_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "algorithm"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "SunX509"
            valueType: "java.lang.String"
            uuid: "getKeyManagerFactory_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.ssl.AliasKeyManagerFactory"
      uuid: "getKeyManagerFactory_aliasKeyManagerFactory1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getKeyManagerFactory_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "getKeyManagerFactory_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      uuid: "uuid1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Could not load key manager factory: A"
            suggestedContent: !<regular>
              value: "Could not load key manager factory: A"
            valueType: "java.lang.String"
            uuid: "getKeyManagerFactory_string6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Exception"
              parameters:
              - name: "message"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "A"
                  suggestedContent: !<regular>
                    value: "A"
                  valueType: "java.lang.String"
                  uuid: "getKeyManagerFactory_string5"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Exception"
              parameters:
              - name: "message"
                value:
                  sapientType: "BASIC"
                  suggestedContent: !<regular>
                    value: "A"
                  valueType: "java.lang.String"
                  uuid: "getKeyManagerFactory_string5"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Exception"
            uuid: "getKeyManagerFactory_exception1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            suggestedContent: !<regular>
              value: "Could not load key manager factory: A"
            valueType: "java.lang.String"
            uuid: "getKeyManagerFactory_string6"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<new>
              target: "java.lang.Exception"
              parameters:
              - name: "message"
                value:
                  sapientType: "BASIC"
                  suggestedContent: !<regular>
                    value: "A"
                  valueType: "java.lang.String"
                  uuid: "getKeyManagerFactory_string5"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Exception"
            uuid: "getKeyManagerFactory_exception1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.IllegalStateException"
      uuid: "getKeyManagerFactory_illegalStateException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "getTrustManagerFactory"
    signature: "getTrustManagerFactory() : javax.net.ssl.TrustManagerFactory"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "40F0AB797C156F9BFAD4B52C2ED18615"
  paths:
  - pathId: "path1"
    testPathName: "getTrustManagerFactoryTest"
    constructorSignature: "<init>(org.springframework.boot.ssl.SslStoreBundle,org.springframework.boot.ssl.SslBundleKey)\
      \ : void"
    filledByUser: false
    modelFingerprint: "64AABD371CF722455B241EC931E7FC32"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "669E43F9BFAA275610122C6668C14E55"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "storeBundle"
      modelFingerprint: "C55F92ACC62D33AD74B347CDB587A7F3"
      index: 2
      ignored: false
      idsTryCatchBlockSurrounding:
      - 3
      valueUuid: "<init>_sslStoreBundle1"
      methodExercised:
        target: "this.storeBundle"
        name: "getTrustStore"
        parameters: []
        signature: "getTrustStore(): KeyStore"
        returnValueUuid: "getTrustManagerFactory_keyStore1"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "4EE82D63070E2F757686BDB046B5BF43"
      index: 3
      ignored: false
      valueUuid: "getTrustManagerFactoryInstance_trustManagerFactory1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "7a93cdeb-cd67-387f-abb0-c170a677469d"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "factory"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "factory.init(store);"
      lineNumber: 70
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: factory - Method: init"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.DefaultSslManagerBundle"
        parameters:
        - name: "storeBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslStoreBundle"
            uuid: "<init>_sslStoreBundle1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "key"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundleKey"
            uuid: "<init>_sslBundleKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.ssl.DefaultSslManagerBundle"
        parameters:
        - name: "storeBundle"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "org.springframework.boot.ssl.SslStoreBundle"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.springframework.boot.ssl.SslStoreBundle"
            uuid: "<init>_sslStoreBundle1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "key"
          value:
            sapientType: "UNKNOWN"
            valueType: "org.springframework.boot.ssl.SslBundleKey"
            uuid: "<init>_sslBundleKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.ssl.DefaultSslManagerBundle"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "<init>_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "getTrustManagerFactory_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "javax.net.ssl.TrustManagerFactory"
        method: "getInstance"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "PKIX"
            valueType: "java.lang.String"
            uuid: "getTrustManagerFactory_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      suggestedContent: !<static_method_return>
        target: "javax.net.ssl.TrustManagerFactory"
        method: "getInstance"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "PKIX"
            valueType: "java.lang.String"
            uuid: "getTrustManagerFactory_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "javax.net.ssl.TrustManagerFactory"
      uuid: "getTrustManagerFactoryInstance_trustManagerFactory1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "getTrustManagerFactoryWhenCaughtExceptionThrowsIllegalStateException"
    constructorSignature: "<init>(org.springframework.boot.ssl.SslStoreBundle,org.springframework.boot.ssl.SslBundleKey)\
      \ : void"
    filledByUser: false
    modelFingerprint: "E7BB88F2409640321F92783F523FFF5D"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "669E43F9BFAA275610122C6668C14E55"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "storeBundle"
      modelFingerprint: "C55F92ACC62D33AD74B347CDB587A7F3"
      index: 2
      ignored: false
      idsTryCatchBlockSurrounding:
      - 3
      valueUuid: "<init>_sslStoreBundle1"
      methodExercised:
        target: "this.storeBundle"
        name: "getTrustStore"
        parameters: []
        signature: "getTrustStore(): KeyStore"
        returnValueUuid: "getTrustManagerFactory_keyStore1"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "factory"
      modelFingerprint: "31867EEBC2D86DC8F3F2F70EB9F5E6D6"
      index: 3
      ignored: false
      idsTryCatchBlockSurrounding:
      - 3
      valueUuid: "getTrustManagerFactoryInstance_trustManagerFactory1"
      methodExercised:
        target: "factory"
        name: "init"
        parameters:
        - name: "ks"
          valueUuid: "getTrustManagerFactory_keyStore1"
        throwsExceptions:
        - "java.security.KeyStoreException"
        signature: "init(KeyStore): void throws java.security.KeyStoreException"
        returnValueUuid: "getTrustManagerFactory_void1"
        access: 17
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7DCE8D083C9631EE8FDB5F54D0ED8088"
      index: 4
      ignored: false
      valueUuid: "getTrustManagerFactory_illegalStateException1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "61133386-0872-3d39-bf83-6899725a036c"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "factory"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "factory.init(store);"
      lineNumber: 70
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: factory - Method: init"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.DefaultSslManagerBundle"
        parameters:
        - name: "storeBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslStoreBundle"
            uuid: "<init>_sslStoreBundle1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "key"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundleKey"
            uuid: "<init>_sslBundleKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.ssl.DefaultSslManagerBundle"
        parameters:
        - name: "storeBundle"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "org.springframework.boot.ssl.SslStoreBundle"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.springframework.boot.ssl.SslStoreBundle"
            uuid: "<init>_sslStoreBundle1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "key"
          value:
            sapientType: "UNKNOWN"
            valueType: "org.springframework.boot.ssl.SslBundleKey"
            uuid: "<init>_sslBundleKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.ssl.DefaultSslManagerBundle"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "<init>_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "getTrustManagerFactory_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "javax.net.ssl.TrustManagerFactory"
        method: "getInstance"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "PKIX"
            valueType: "java.lang.String"
            uuid: "getTrustManagerFactory_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      suggestedContent: !<static_method_return>
        target: "javax.net.ssl.TrustManagerFactory"
        method: "getInstance"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "PKIX"
            valueType: "java.lang.String"
            uuid: "getTrustManagerFactory_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "javax.net.ssl.TrustManagerFactory"
      uuid: "getTrustManagerFactoryInstance_trustManagerFactory1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getTrustManagerFactory_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "getTrustManagerFactory_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Could not load trust manager factory: A"
            suggestedContent: !<regular>
              value: "Could not load trust manager factory: A"
            valueType: "java.lang.String"
            uuid: "getTrustManagerFactory_string3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Exception"
              parameters:
              - name: "message"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "A"
                  suggestedContent: !<regular>
                    value: "A"
                  valueType: "java.lang.String"
                  uuid: "getTrustManagerFactory_string2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.lang.Exception"
              parameters:
              - name: "message"
                value:
                  sapientType: "BASIC"
                  suggestedContent: !<regular>
                    value: "A"
                  valueType: "java.lang.String"
                  uuid: "getTrustManagerFactory_string2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Exception"
            uuid: "getTrustManagerFactory_exception1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            suggestedContent: !<regular>
              value: "Could not load trust manager factory: A"
            valueType: "java.lang.String"
            uuid: "getTrustManagerFactory_string3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<new>
              target: "java.lang.Exception"
              parameters:
              - name: "message"
                value:
                  sapientType: "BASIC"
                  suggestedContent: !<regular>
                    value: "A"
                  valueType: "java.lang.String"
                  uuid: "getTrustManagerFactory_string2"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Exception"
            uuid: "getTrustManagerFactory_exception1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.IllegalStateException"
      uuid: "getTrustManagerFactory_illegalStateException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "getKeyManagerFactoryInstance"
    signature: "getKeyManagerFactoryInstance(java.lang.String) : javax.net.ssl.KeyManagerFactory"
    instructionFingerprint: "7418FB14E4C944E98ACCFB62FAC78636"
  paths:
  - pathId: "path1"
    testPathName: "getKeyManagerFactoryInstanceTest"
    constructorSignature: "<init>(org.springframework.boot.ssl.SslStoreBundle,org.springframework.boot.ssl.SslBundleKey)\
      \ : void"
    filledByUser: false
    modelFingerprint: "36D161DA2EFBD7D9B2E94B21ABB92118"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4731762B0371DE072B6D5CD15DE3824C"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "algorithm"
      modelFingerprint: "F23387ABCB00D3E82336135B8D106A87"
      index: 2
      ignored: false
      valueUuid: "getKeyManagerFactoryInstance_string1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "310C1335E704127D721D516D10B3FEBF"
      index: 3
      ignored: false
      valueUuid: "getKeyManagerFactoryInstance_keyManagerFactory1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "7f36c4a2-eb8e-3ea9-a2db-fa5534af3737"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: javax.net.ssl.KeyManagerFactory.getInstance(java.lang.String)\
        \ : javax.net.ssl.KeyManagerFactory"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.DefaultSslManagerBundle"
        parameters:
        - name: "storeBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslStoreBundle"
            uuid: "<init>_sslStoreBundle1"
            fixed: false
            nameForMock: "exampleStoreBundle"
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "key"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.springframework.boot.ssl.SslBundleKey"
              method: "of"
              methodParameters:
              - name: "password"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "password1"
                  valueType: "java.lang.String"
                  uuid: "<init>_sslBundleKey1-password"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            suggestedContent: !<static_method_return>
              target: "org.springframework.boot.ssl.SslBundleKey"
              method: "of"
              methodParameters:
              - name: "password"
                value:
                  sapientType: "BASIC"
                  valueType: "java.lang.String"
                  uuid: "<init>_sslBundleKey1-password"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "org.springframework.boot.ssl.SslBundleKey"
            uuid: "<init>_sslBundleKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.ssl.DefaultSslManagerBundle"
        parameters:
        - name: "storeBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslStoreBundle"
            uuid: "<init>_sslStoreBundle1"
            fixed: false
            nameForMock: "exampleStoreBundle"
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "key"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.springframework.boot.ssl.SslBundleKey"
              method: "of"
              methodParameters:
              - name: "password"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "password1"
                  valueType: "java.lang.String"
                  uuid: "<init>_sslBundleKey1-password"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            suggestedContent: !<static_method_return>
              target: "org.springframework.boot.ssl.SslBundleKey"
              method: "of"
              methodParameters:
              - name: "password"
                value:
                  sapientType: "BASIC"
                  valueType: "java.lang.String"
                  uuid: "<init>_sslBundleKey1-password"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "org.springframework.boot.ssl.SslBundleKey"
            uuid: "<init>_sslBundleKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.ssl.DefaultSslManagerBundle"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "RSA"
      suggestedContent: !<regular>
        value: "RSA"
      valueType: "java.lang.String"
      uuid: "getKeyManagerFactoryInstance_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.KeyManagerFactory"
      uuid: "getKeyManagerFactoryInstance_keyManagerFactory1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "getTrustManagerFactoryInstance"
    signature: "getTrustManagerFactoryInstance(java.lang.String) : javax.net.ssl.TrustManagerFactory"
    instructionFingerprint: "DB8BFFE71317BDF0ADCB5C53C0AA75D4"
  paths:
  - pathId: "path1"
    testPathName: "getTrustManagerFactoryInstanceTest"
    constructorSignature: "<init>(org.springframework.boot.ssl.SslStoreBundle,org.springframework.boot.ssl.SslBundleKey)\
      \ : void"
    filledByUser: false
    modelFingerprint: "34056CA542AE35456C0DAD654FE80E9A"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4731762B0371DE072B6D5CD15DE3824C"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "algorithm"
      modelFingerprint: "493A0967CB8695D9925C3B54F6E2FD19"
      index: 2
      ignored: false
      valueUuid: "getTrustManagerFactoryInstance_string1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2070AABDC2D1C04F7D5A4BC62A499B0A"
      index: 3
      ignored: false
      valueUuid: "getTrustManagerFactoryInstance_trustManagerFactory1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "688d4816-af85-3886-b3be-3776adec2c3c"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: javax.net.ssl.TrustManagerFactory.getInstance(java.lang.String)\
        \ : javax.net.ssl.TrustManagerFactory"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ssl.DefaultSslManagerBundle"
        parameters:
        - name: "storeBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslStoreBundle"
            uuid: "<init>_sslStoreBundle1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "key"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.springframework.boot.ssl.SslBundleKey"
              method: "of"
              methodParameters:
              - name: "password"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "password1"
                  valueType: "java.lang.String"
                  uuid: "<init>_sslBundleKey1-password"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            suggestedContent: !<static_method_return>
              target: "org.springframework.boot.ssl.SslBundleKey"
              method: "of"
              methodParameters:
              - name: "password"
                value:
                  sapientType: "BASIC"
                  valueType: "java.lang.String"
                  uuid: "<init>_sslBundleKey1-password"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "org.springframework.boot.ssl.SslBundleKey"
            uuid: "<init>_sslBundleKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.ssl.DefaultSslManagerBundle"
        parameters:
        - name: "storeBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslStoreBundle"
            uuid: "<init>_sslStoreBundle1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "key"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.springframework.boot.ssl.SslBundleKey"
              method: "of"
              methodParameters:
              - name: "password"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "password1"
                  valueType: "java.lang.String"
                  uuid: "<init>_sslBundleKey1-password"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            suggestedContent: !<static_method_return>
              target: "org.springframework.boot.ssl.SslBundleKey"
              method: "of"
              methodParameters:
              - name: "password"
                value:
                  sapientType: "BASIC"
                  valueType: "java.lang.String"
                  uuid: "<init>_sslBundleKey1-password"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "org.springframework.boot.ssl.SslBundleKey"
            uuid: "<init>_sslBundleKey1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.ssl.DefaultSslManagerBundle"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "<valid_algorithm_value>"
      suggestedContent: !<regular>
        value: "<valid_algorithm_value>"
      valueType: "java.lang.String"
      uuid: "getTrustManagerFactoryInstance_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "javax.net.ssl.TrustManagerFactory"
      uuid: "getTrustManagerFactoryInstance_trustManagerFactory1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
