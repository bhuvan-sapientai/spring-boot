---
modelFingerprint: "3F514DC2AE15B4EEF599ED85CC89B966"
targetClass:
  fullClassName: "org.springframework.boot.web.servlet.server.StaticResourceJars"
methods:
- method:
    name: "getUrls"
    sourceCodeSignature: "List<URL> getUrls()"
    returnType: "java.util.List"
    genericReturnType: "java.net.URL"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "java.io.IOException"
    - idExternalInstruction: 0
      id: 5
      catchExceptions:
      - "java.io.IOException"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.net.URISyntaxException"
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.IllegalArgumentException"
    - idExternalInstruction: 0
      id: 6
      catchExceptions:
      - "java.io.IOException"
      - "java.nio.file.InvalidPathException"
    - idExternalInstruction: 0
      id: 5
      catchExceptions:
      - "java.io.IOException"
    - idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "java.io.IOException"
    - idExternalInstruction: 0
      id: 5
      catchExceptions:
      - "java.io.IOException"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.net.URISyntaxException"
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.IllegalArgumentException"
    - idExternalInstruction: 0
      id: 6
      catchExceptions:
      - "java.io.IOException"
      - "java.nio.file.InvalidPathException"
    - idExternalInstruction: 0
      id: 5
      catchExceptions:
      - "java.io.IOException"
    instructionFingerprint: "41010C5D3C4A7ADAEBF5DD326BF055B4"
  paths:
  - pathId: "path1"
    testPathName: "getUrlsWhenClassLoaderNotInstanceOfURLClassLoader"
    constructorSignature: "<init>() : void"
    modelFingerprint: "1CFD8BEB0D0A92F486E180F044C07A71"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "FA2CD23C45FC375F391AFA813721D8F6"
      methodExercised:
        expression: "getUrlsFrom(urls:objectArray):list2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "72D1A4EC63777297E56528110F981E55"
      valueUuid: "list2"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return getUrlsFrom(Stream.of(ManagementFactory.getRuntimeMXBean().getClassPath().split(File.pathSeparator))"
      lineNumber: 49
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type RuntimeMXBean - Method: getClassPath"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.StaticResourceJars"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.StaticResourceJars"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.net.URL"
      uuid: "list2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.net.URL[]"
      uuid: "objectArray"
      collectionUuid: "list"
      explicitCastNeeded: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.net.URL"
      uuid: "list2"
    branches:
    - lineNumber: 45
      expression: "classLoader instanceof URLClassLoader urlClassLoader"
      range: "(45,7)-(45,58)"
      evaluatedAs: false
- method:
    name: "getUrlsFrom"
    sourceCodeSignature: "List<URL> getUrlsFrom(URL... urls)"
    returnType: "java.util.List"
    genericReturnType: "java.net.URL"
    parameters:
    - name: "urls"
      type: "java.net.URL[]"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "java.io.IOException"
    - idExternalInstruction: 0
      id: 5
      catchExceptions:
      - "java.io.IOException"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.net.URISyntaxException"
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.IllegalArgumentException"
    - idExternalInstruction: 0
      id: 6
      catchExceptions:
      - "java.io.IOException"
      - "java.nio.file.InvalidPathException"
    - idExternalInstruction: 0
      id: 5
      catchExceptions:
      - "java.io.IOException"
    instructionFingerprint: "952E7AC53EA2F06AF6EB84E17A4C9728"
  paths:
  - pathId: "path10"
    testPathName: "getUrlsFromWhenCaughtURISyntaxExceptionThrowsIllegalStateException"
    constructorSignature: "<init>() : void"
    modelFingerprint: "0D3845C7D4FEB869D6D254A3F76077B7"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "urls"
      modelFingerprint: "F65B7BDAF60D35F9BE6CA1BE07035938"
      valueUuid: "urls"
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "BFA6B800AEC9FB12F3A93C77F031C64E"
      valueUuid: "uRL"
      methodExercised:
        expression: "toURI():uRI"
        throwsExceptions:
        - "java.net.URISyntaxException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B2EED9C120922661D978471650A3F6F7"
      valueUuid: "illegalStateException"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.net.URL.getProtocol() : java.lang.String"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.StaticResourceJars"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.StaticResourceJars"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "java.net.URL"
            uuid: "uRL"
            nameForMock: "uRL"
      valueType: "java.net.URL[]"
      uuid: "urls"
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "uRL"
      nameForMock: "uRL"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.URI"
        method: "create"
        methodParameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "str1"
            valueType: "java.lang.String"
            uuid: "uRI-str"
      valueType: "java.net.URI"
      uuid: "uRI"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Failed to create File from URL 'uRL'"
            valueType: "java.lang.String"
            uuid: "string2"
      valueType: "java.lang.IllegalStateException"
      uuid: "illegalStateException"
      fixed: true
    branches:
    - lineNumber: 57
      expression: "for-each(urls)"
      range: "(57,18)-(57,21)"
      evaluatedAs: true
    - lineNumber: 86
      expression: "!\\\"file\\\".equals(url.getProtocol())"
      range: "(86,8)-(86,40)"
      evaluatedAs: false
      internalMethodName: "addUrl"
    - lineNumber: 76
      expression: "catch-exception (URISyntaxException)"
      range: "(76,3)-(76,30)"
      evaluatedAs: true
      internalMethodName: "toFile"
    catchBlockExercised:
      idExternalInstruction: 21
      id: 2
      catchExceptions:
      - "java.net.URISyntaxException"
  - pathId: "path3"
    testPathName: "getUrlsFromWhenIsResourcesJarNotJarURLConnection"
    constructorSignature: "<init>() : void"
    modelFingerprint: "30CA141BFAB17A0C1F9C2F6F1E81123B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "urls"
      modelFingerprint: "CC4F19F27970BF76B6033FC7078D502E"
      valueUuid: "urls"
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "E7BAB8158AA020F828943D4248CE069E"
      valueUuid: "uniqueUuid4"
      methodExercised:
        expression: "getProtocol():string"
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "7ABA27F31206F575485E06859A33170A"
      valueUuid: "uniqueUuid5"
      methodExercised:
        expression: "openConnection():uRLConnection"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "E7BAB8158AA020F828943D4248CE069E"
      valueUuid: "uniqueUuid6"
      methodExercised:
        expression: "getProtocol():string3"
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "7ABA27F31206F575485E06859A33170A"
      valueUuid: "uniqueUuid7"
      methodExercised:
        expression: "openConnection():uRLConnection2"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "B8BAAFD262A73E72114909CDC3476E82"
      valueUuid: "uniqueUuid8"
      methodExercised:
        expression: "getProtocol():string5"
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "7ABA27F31206F575485E06859A33170A"
      valueUuid: "uniqueUuid9"
      methodExercised:
        expression: "openConnection():uRLConnection3"
        throwsExceptions:
        - "java.io.IOException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "17B14E7AD0F50EFCB6B9F76299FC4F5D"
      valueUuid: "arrayList"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.net.JarURLConnection.getJarFile() : java.util.jar.JarFile"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.StaticResourceJars"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.StaticResourceJars"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "java.net.URL"
            uuid: "uniqueUuid1"
          1:
            sapientType: "MOCK"
            valueType: "java.net.URL"
            uuid: "uniqueUuid2"
          2:
            sapientType: "MOCK"
            valueType: "java.net.URL"
            uuid: "uniqueUuid3"
      valueType: "java.net.URL[]"
      uuid: "urls"
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "uniqueUuid4"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "uniqueUuid5"
    - sapientType: "MOCK"
      valueType: "java.net.JarURLConnection"
      uuid: "uRLConnection"
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "uniqueUuid6"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "uniqueUuid7"
    - sapientType: "MOCK"
      valueType: "java.net.JarURLConnection"
      uuid: "uRLConnection2"
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "uniqueUuid8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "AK"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "uniqueUuid9"
    - sapientType: "MOCK"
      valueType: "java.net.JarURLConnection"
      uuid: "uRLConnection3"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.net.URL"
      uuid: "arrayList"
    branches:
    - lineNumber: 57
      expression: "for-each(urls)"
      range: "(57,18)-(57,21)"
      evaluatedAs: true
    - lineNumber: 86
      expression: "!\\\"file\\\".equals(url.getProtocol())"
      range: "(86,8)-(86,40)"
      evaluatedAs: true
      internalMethodName: "addUrl"
    - lineNumber: 111
      expression: "connection instanceof JarURLConnection jarURLConnection"
      range: "(111,7)-(111,61)"
      evaluatedAs: true
      internalMethodName: "addUrlConnection"
    - lineNumber: 118
      expression: "!connection.getUseCaches()"
      range: "(118,51)-(118,76)"
      evaluatedAs: false
      internalMethodName: "isResourcesJar"
    - lineNumber: 136
      expression: "jarFile.getName().endsWith(\\\".jar\\\")"
      range: "(136,11)-(136,44)"
      evaluatedAs: false
      internalMethodName: "isResourcesJar"
    - lineNumber: 139
      expression: "closeJarFile"
      range: "(139,8)-(139,19)"
      evaluatedAs: false
      internalMethodName: "isResourcesJar"
    - lineNumber: 111
      expression: "isResourcesJar(jarURLConnection)"
      range: "(111,66)-(111,97)"
      evaluatedAs: false
      internalMethodName: "addUrlConnection"
  - pathId: "path1"
    testPathName: "getUrlsFromWhenIsResourcesJarJarURLConnection"
    constructorSignature: "<init>() : void"
    modelFingerprint: "B13055367B06F5D0E73A284B622F6420"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "urls"
      modelFingerprint: "AC986EC38ECAFF420ACE5251F72AC647"
      valueUuid: "urls"
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "63B040E6CCD90C5147B3C0D45830A88E"
      valueUuid: "uniqueUuid3"
      methodExercised:
        expression: "getProtocol():string"
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "7ABA27F31206F575485E06859A33170A"
      valueUuid: "uniqueUuid4"
      methodExercised:
        expression: "openConnection():uRLConnection"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "3745DC4C48A3BE29E20C86AD5E1F505F"
      valueUuid: "uniqueUuid5"
      methodExercised:
        expression: "getProtocol():string3"
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "7ABA27F31206F575485E06859A33170A"
      valueUuid: "uniqueUuid6"
      methodExercised:
        expression: "openConnection():uRLConnection2"
        throwsExceptions:
        - "java.io.IOException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C2DDBEC8D438CBE751CCD6D0054172FF"
      valueUuid: "arrayList"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.net.JarURLConnection.getJarFile() : java.util.jar.JarFile"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.StaticResourceJars"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.StaticResourceJars"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "java.net.URL"
            uuid: "uniqueUuid1"
          1:
            sapientType: "MOCK"
            valueType: "java.net.URL"
            uuid: "uniqueUuid2"
      valueType: "java.net.URL[]"
      uuid: "urls"
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "uniqueUuid3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "uniqueUuid4"
    - sapientType: "MOCK"
      valueType: "java.net.JarURLConnection"
      uuid: "uRLConnection"
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "uniqueUuid5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "uniqueUuid6"
    - sapientType: "MOCK"
      valueType: "java.net.JarURLConnection"
      uuid: "uRLConnection2"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "java.net.URL"
          uuid: "uniqueUuid7"
        - sapientType: "MOCK"
          valueType: "java.net.URL"
          uuid: "uniqueUuid8"
      valueType: "java.util.List"
      genericValueType: "java.net.URL"
      uuid: "arrayList"
    branches:
    - lineNumber: 57
      expression: "for-each(urls)"
      range: "(57,18)-(57,21)"
      evaluatedAs: true
    - lineNumber: 86
      expression: "!\\\"file\\\".equals(url.getProtocol())"
      range: "(86,8)-(86,40)"
      evaluatedAs: true
      internalMethodName: "addUrl"
    - lineNumber: 111
      expression: "connection instanceof JarURLConnection jarURLConnection"
      range: "(111,7)-(111,61)"
      evaluatedAs: true
      internalMethodName: "addUrlConnection"
    - lineNumber: 118
      expression: "!connection.getUseCaches()"
      range: "(118,51)-(118,76)"
      evaluatedAs: true
      internalMethodName: "isResourcesJar"
    - lineNumber: 136
      expression: "jarFile.getName().endsWith(\\\".jar\\\")"
      range: "(136,11)-(136,44)"
      evaluatedAs: true
      internalMethodName: "isResourcesJar"
    - lineNumber: 136
      expression: "jarFile.getJarEntry(\\\"META-INF/resources\\\") != null"
      range: "(136,50)-(136,98)"
      evaluatedAs: true
      internalMethodName: "isResourcesJar"
    - lineNumber: 139
      expression: "closeJarFile"
      range: "(139,8)-(139,19)"
      evaluatedAs: true
      internalMethodName: "isResourcesJar"
    - lineNumber: 111
      expression: "isResourcesJar(jarURLConnection)"
      range: "(111,66)-(111,97)"
      evaluatedAs: true
      internalMethodName: "addUrlConnection"
  - pathId: "path9"
    testPathName: "getUrlsFromWhenCaughtIOExceptionThrowsIllegalStateException"
    constructorSignature: "<init>() : void"
    modelFingerprint: "E608098A0199BCEE3C5289B5527982F7"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "urls"
      modelFingerprint: "F392868B828BE3BD90F5A2CCADEC2FD3"
      valueUuid: "urls"
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "A3EFA6B6092362A79EE6245876444FA2"
      valueUuid: "uniqueUuid4"
      methodExercised:
        expression: "openConnection():uRLConnection"
        throwsExceptions:
        - "java.io.IOException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C249FCA0AA45B68474B7A9671BF4FD60"
      valueUuid: "illegalStateException"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.net.URL.getProtocol() : java.lang.String"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.StaticResourceJars"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.StaticResourceJars"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "ARRAY"
                  content: !<array>
                    values:
                      0:
                        sapientType: "MOCK"
                        valueType: "java.net.URL"
                        uuid: "uniqueUuid3"
                  valueType: "java.net.URL[][]"
                  uuid: "uniqueUuid2"
            valueType: "java.net.URL[]"
            uuid: "uniqueUuid1"
      valueType: "java.net.URL[]"
      uuid: "urls"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "java.net.URL"
                  uuid: "uniqueUuid6"
            valueType: "java.net.URL[][]"
            uuid: "uniqueUuid5"
      valueType: "java.net.URL[]"
      uuid: "uniqueUuid4"
    - sapientType: "MOCK"
      valueType: "java.net.JarURLConnection"
      uuid: "uRLConnection"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.IOException"
              parameters: []
            valueType: "java.io.IOException"
            uuid: "iOException"
      valueType: "java.lang.IllegalStateException"
      uuid: "illegalStateException"
      fixed: true
    branches:
    - lineNumber: 57
      expression: "for-each(urls)"
      range: "(57,18)-(57,21)"
      evaluatedAs: true
    - lineNumber: 86
      expression: "!\\\"file\\\".equals(url.getProtocol())"
      range: "(86,8)-(86,40)"
      evaluatedAs: true
      internalMethodName: "addUrl"
    - lineNumber: 111
      expression: "connection instanceof JarURLConnection jarURLConnection"
      range: "(111,7)-(111,61)"
      evaluatedAs: true
      internalMethodName: "addUrlConnection"
    - lineNumber: 118
      expression: "!connection.getUseCaches()"
      range: "(118,51)-(118,76)"
      evaluatedAs: false
      internalMethodName: "isResourcesJar"
    - lineNumber: 136
      expression: "jarFile.getName().endsWith(\\\".jar\\\")"
      range: "(136,11)-(136,44)"
      evaluatedAs: false
      internalMethodName: "isResourcesJar"
    - lineNumber: 139
      expression: "closeJarFile"
      range: "(139,8)-(139,19)"
      evaluatedAs: false
      internalMethodName: "isResourcesJar"
    - lineNumber: 111
      expression: "isResourcesJar(jarURLConnection)"
      range: "(111,66)-(111,97)"
      evaluatedAs: false
      internalMethodName: "addUrlConnection"
    - lineNumber: 99
      expression: "catch-exception (IOException)"
      range: "(99,3)-(99,23)"
      evaluatedAs: true
      internalMethodName: "addUrl"
    catchBlockExercised:
      idExternalInstruction: 29
      id: 4
      catchExceptions:
      - "java.io.IOException"
  - pathId: "path6"
    testPathName: "getUrlsFromWhenIsResourcesJarNotFile"
    constructorSignature: "<init>() : void"
    modelFingerprint: "3DA5171C3BB5653EB828C08123409702"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "urls"
      modelFingerprint: "CC4F19F27970BF76B6033FC7078D502E"
      valueUuid: "urls"
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "6AF2F7BFC28346C450C6FF2647EBE249"
      valueUuid: "uniqueUuid4"
      methodExercised:
        expression: "getProtocol():string"
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "528568AC95E15EB40C6EF0BD7B5065A9"
      valueUuid: "uniqueUuid5"
      methodExercised:
        expression: "toURI():uRI"
        throwsExceptions:
        - "java.net.URISyntaxException"
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "6AF2F7BFC28346C450C6FF2647EBE249"
      valueUuid: "uniqueUuid6"
      methodExercised:
        expression: "getProtocol():string3"
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "528568AC95E15EB40C6EF0BD7B5065A9"
      valueUuid: "uniqueUuid7"
      methodExercised:
        expression: "toURI():uRI2"
        throwsExceptions:
        - "java.net.URISyntaxException"
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "6AF2F7BFC28346C450C6FF2647EBE249"
      valueUuid: "uniqueUuid8"
      methodExercised:
        expression: "getProtocol():string4"
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "528568AC95E15EB40C6EF0BD7B5065A9"
      valueUuid: "uniqueUuid9"
      methodExercised:
        expression: "toURI():uRI3"
        throwsExceptions:
        - "java.net.URISyntaxException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8DEDD71CBA01CDA5A2A56A1AC08F0524"
      valueUuid: "arrayList"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "return new File(url.toURI());"
      lineNumber: 74
      details: "No constructor found to create an object without any exception for\
        \ class java.io.File"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.StaticResourceJars"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.StaticResourceJars"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "java.net.URL"
            uuid: "uniqueUuid1"
          1:
            sapientType: "MOCK"
            valueType: "java.net.URL"
            uuid: "uniqueUuid2"
          2:
            sapientType: "MOCK"
            valueType: "java.net.URL"
            uuid: "uniqueUuid3"
      valueType: "java.net.URL[]"
      uuid: "urls"
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "uniqueUuid4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "file"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "uniqueUuid5"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.URI"
        method: "create"
        methodParameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "str1"
            valueType: "java.lang.String"
            uuid: "uRI-str"
      valueType: "java.net.URI"
      uuid: "uRI"
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "uniqueUuid6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "file"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "uniqueUuid7"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.URI"
        method: "create"
        methodParameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "str1"
            valueType: "java.lang.String"
            uuid: "uRI2-str"
      valueType: "java.net.URI"
      uuid: "uRI2"
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "uniqueUuid8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "file"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "uniqueUuid9"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.URI"
        method: "create"
        methodParameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "str1"
            valueType: "java.lang.String"
            uuid: "uRI3-str"
      valueType: "java.net.URI"
      uuid: "uRI3"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "java.net.URL"
          uuid: "uniqueUuid10"
      valueType: "java.util.List"
      genericValueType: "java.net.URL"
      uuid: "arrayList"
    branches:
    - lineNumber: 57
      expression: "for-each(urls)"
      range: "(57,18)-(57,21)"
      evaluatedAs: true
    - lineNumber: 86
      expression: "!\\\"file\\\".equals(url.getProtocol())"
      range: "(86,8)-(86,40)"
      evaluatedAs: false
      internalMethodName: "addUrl"
    - lineNumber: 91
      expression: "file != null"
      range: "(91,9)-(91,20)"
      evaluatedAs: true
      internalMethodName: "addUrl"
    - lineNumber: 105
      expression: "file.isDirectory()"
      range: "(105,8)-(105,25)"
      evaluatedAs: true
      internalMethodName: "addUrlFile"
    - lineNumber: 105
      expression: "new File(file, \\\"META-INF/resources\\\").isDirectory()"
      range: "(105,30)-(105,79)"
      evaluatedAs: false
      internalMethodName: "addUrlFile"
    - lineNumber: 136
      expression: "jarFile.getName().endsWith(\\\".jar\\\")"
      range: "(136,11)-(136,44)"
      evaluatedAs: false
      internalMethodName: "isResourcesJar"
    - lineNumber: 139
      expression: "closeJarFile"
      range: "(139,8)-(139,19)"
      evaluatedAs: true
      internalMethodName: "isResourcesJar"
    - lineNumber: 105
      expression: "isResourcesJar(file)"
      range: "(105,85)-(105,104)"
      evaluatedAs: false
      internalMethodName: "addUrlFile"
  - pathId: "path5"
    testPathName: "getUrlsFromWhenIsResourcesJarFile"
    constructorSignature: "<init>() : void"
    modelFingerprint: "5D3D596A942A33D4BA122FA630EA6122"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "urls"
      modelFingerprint: "AC986EC38ECAFF420ACE5251F72AC647"
      valueUuid: "urls"
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "6AF2F7BFC28346C450C6FF2647EBE249"
      valueUuid: "uniqueUuid3"
      methodExercised:
        expression: "getProtocol():string"
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "528568AC95E15EB40C6EF0BD7B5065A9"
      valueUuid: "uniqueUuid4"
      methodExercised:
        expression: "toURI():uRI"
        throwsExceptions:
        - "java.net.URISyntaxException"
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "6AF2F7BFC28346C450C6FF2647EBE249"
      valueUuid: "uniqueUuid5"
      methodExercised:
        expression: "getProtocol():string3"
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "528568AC95E15EB40C6EF0BD7B5065A9"
      valueUuid: "uniqueUuid6"
      methodExercised:
        expression: "toURI():uRI2"
        throwsExceptions:
        - "java.net.URISyntaxException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C2DDBEC8D438CBE751CCD6D0054172FF"
      valueUuid: "arrayList"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "return new File(url.toURI());"
      lineNumber: 74
      details: "No constructor found to create an object without any exception for\
        \ class java.io.File"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.StaticResourceJars"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.StaticResourceJars"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "java.net.URL"
            uuid: "uniqueUuid1"
          1:
            sapientType: "MOCK"
            valueType: "java.net.URL"
            uuid: "uniqueUuid2"
      valueType: "java.net.URL[]"
      uuid: "urls"
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "uniqueUuid3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "file"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "uniqueUuid4"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.URI"
        method: "create"
        methodParameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "str1"
            valueType: "java.lang.String"
            uuid: "uRI-str"
      valueType: "java.net.URI"
      uuid: "uRI"
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "uniqueUuid5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "file"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "uniqueUuid6"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.URI"
        method: "create"
        methodParameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "str1"
            valueType: "java.lang.String"
            uuid: "uRI2-str"
      valueType: "java.net.URI"
      uuid: "uRI2"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "java.net.URL"
          uuid: "uniqueUuid7"
        - sapientType: "MOCK"
          valueType: "java.net.URL"
          uuid: "uniqueUuid8"
      valueType: "java.util.List"
      genericValueType: "java.net.URL"
      uuid: "arrayList"
    branches:
    - lineNumber: 57
      expression: "for-each(urls)"
      range: "(57,18)-(57,21)"
      evaluatedAs: true
    - lineNumber: 86
      expression: "!\\\"file\\\".equals(url.getProtocol())"
      range: "(86,8)-(86,40)"
      evaluatedAs: false
      internalMethodName: "addUrl"
    - lineNumber: 91
      expression: "file != null"
      range: "(91,9)-(91,20)"
      evaluatedAs: true
      internalMethodName: "addUrl"
    - lineNumber: 105
      expression: "file.isDirectory()"
      range: "(105,8)-(105,25)"
      evaluatedAs: true
      internalMethodName: "addUrlFile"
    - lineNumber: 105
      expression: "new File(file, \\\"META-INF/resources\\\").isDirectory()"
      range: "(105,30)-(105,79)"
      evaluatedAs: false
      internalMethodName: "addUrlFile"
    - lineNumber: 136
      expression: "jarFile.getName().endsWith(\\\".jar\\\")"
      range: "(136,11)-(136,44)"
      evaluatedAs: true
      internalMethodName: "isResourcesJar"
    - lineNumber: 136
      expression: "jarFile.getJarEntry(\\\"META-INF/resources\\\") != null"
      range: "(136,50)-(136,98)"
      evaluatedAs: true
      internalMethodName: "isResourcesJar"
    - lineNumber: 139
      expression: "closeJarFile"
      range: "(139,8)-(139,19)"
      evaluatedAs: true
      internalMethodName: "isResourcesJar"
    - lineNumber: 105
      expression: "isResourcesJar(file)"
      range: "(105,85)-(105,104)"
      evaluatedAs: true
      internalMethodName: "addUrlFile"
  - pathId: "path11"
    testPathName: "getUrlsFromWhenCloseJarFileAndIsResourcesJarJarURLConnection"
    constructorSignature: "<init>() : void"
    modelFingerprint: "B34BF87343C6E10C57061445B66EB18A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "urls"
      modelFingerprint: "F392868B828BE3BD90F5A2CCADEC2FD3"
      valueUuid: "urls"
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "6673468FE71E9D1AAAF2ED570B6CC07A"
      valueUuid: "uniqueUuid4"
      methodExercised:
        expression: "toURI():uRI"
        throwsExceptions:
        - "java.net.URISyntaxException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "17B14E7AD0F50EFCB6B9F76299FC4F5D"
      valueUuid: "arrayList"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.net.URL.getProtocol() : java.lang.String"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.StaticResourceJars"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.StaticResourceJars"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "ARRAY"
                  content: !<array>
                    values:
                      0:
                        sapientType: "MOCK"
                        valueType: "java.net.URL"
                        uuid: "uniqueUuid3"
                  valueType: "java.net.URL[][]"
                  uuid: "uniqueUuid2"
            valueType: "java.net.URL[]"
            uuid: "uniqueUuid1"
      valueType: "java.net.URL[]"
      uuid: "urls"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "java.net.URL"
                  uuid: "uniqueUuid6"
            valueType: "java.net.URL[][]"
            uuid: "uniqueUuid5"
      valueType: "java.net.URL[]"
      uuid: "uniqueUuid4"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.URI"
        method: "create"
        methodParameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "str1"
            valueType: "java.lang.String"
            uuid: "uRI-str"
      valueType: "java.net.URI"
      uuid: "uRI"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.net.URL"
      uuid: "arrayList"
    branches:
    - lineNumber: 57
      expression: "for-each(urls)"
      range: "(57,18)-(57,21)"
      evaluatedAs: true
    - lineNumber: 86
      expression: "!\\\"file\\\".equals(url.getProtocol())"
      range: "(86,8)-(86,40)"
      evaluatedAs: false
      internalMethodName: "addUrl"
    - lineNumber: 79
      expression: "catch-exception (IllegalArgumentException)"
      range: "(79,3)-(79,36)"
      evaluatedAs: true
      internalMethodName: "toFile"
    - lineNumber: 91
      expression: "file != null"
      range: "(91,9)-(91,20)"
      evaluatedAs: false
      internalMethodName: "addUrl"
    - lineNumber: 111
      expression: "connection instanceof JarURLConnection jarURLConnection"
      range: "(111,7)-(111,61)"
      evaluatedAs: true
      internalMethodName: "addUrlConnection"
    - lineNumber: 118
      expression: "!connection.getUseCaches()"
      range: "(118,51)-(118,76)"
      evaluatedAs: true
      internalMethodName: "isResourcesJar"
    - lineNumber: 136
      expression: "jarFile.getName().endsWith(\\\".jar\\\")"
      range: "(136,11)-(136,44)"
      evaluatedAs: true
      internalMethodName: "isResourcesJar"
    - lineNumber: 136
      expression: "jarFile.getJarEntry(\\\"META-INF/resources\\\") != null"
      range: "(136,50)-(136,98)"
      evaluatedAs: true
      internalMethodName: "isResourcesJar"
    - lineNumber: 139
      expression: "closeJarFile"
      range: "(139,8)-(139,19)"
      evaluatedAs: true
      internalMethodName: "isResourcesJar"
    - lineNumber: 111
      expression: "isResourcesJar(jarURLConnection)"
      range: "(111,66)-(111,97)"
      evaluatedAs: true
      internalMethodName: "addUrlConnection"
    catchBlockExercised:
      idExternalInstruction: 21
      id: 3
      catchExceptions:
      - "java.lang.IllegalArgumentException"
