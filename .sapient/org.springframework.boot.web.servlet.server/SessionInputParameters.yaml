---
modelFingerprint: "E9843E21591A7E3AAE11B9A7E18D39F4"
targetClass:
  fullClassName: "org.springframework.boot.web.servlet.server.Session"
methods:
- method:
    name: "getTimeout"
    sourceCodeSignature: "Duration getTimeout()"
    returnType: "java.time.Duration"
    instructionFingerprint: "63842264DB2F98D1B71197EC826F28D5"
  paths:
  - pathId: "path1"
    testPathName: "getTimeoutTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "E7A6467F048F754503AF9D19E25F2A88"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setTimeout"
    sourceCodeSignature: "void setTimeout(Duration timeout)"
    returnType: "void"
    parameters:
    - name: "timeout"
      type: "java.time.Duration"
    instructionFingerprint: "E3F87F105170EFBE267DE2A66380ADD8"
  paths:
  - pathId: "path1"
    testPathName: "setTimeoutTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "85EF2F0659EED5A4E366D421B36EAAC6"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getTrackingModes"
    sourceCodeSignature: "Set<Session.SessionTrackingMode> getTrackingModes()"
    returnType: "java.util.Set"
    genericReturnType: "org.springframework.boot.web.servlet.server.Session$SessionTrackingMode"
    instructionFingerprint: "A3C33FAC5CF94B72F5D2CC9F18A2F24F"
  paths:
  - pathId: "path1"
    testPathName: "getTrackingModesTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "B21F39B08CAB1ABCC4B4CF6F7734021B"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setTrackingModes"
    sourceCodeSignature: "void setTrackingModes(Set<Session.SessionTrackingMode> trackingModes)"
    returnType: "void"
    parameters:
    - name: "trackingModes"
      type: "java.util.Set"
    instructionFingerprint: "02BA552E2CD83633EC53A00C0B7A8FAB"
  paths:
  - pathId: "path1"
    testPathName: "setTrackingModesTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "A32510E5A25D3A4205706E1A7025656B"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "isPersistent"
    sourceCodeSignature: "boolean isPersistent()"
    returnType: "boolean"
    instructionFingerprint: "ACCB7F564DFE936DB79967D74F7D2C3B"
  paths:
  - pathId: "path1"
    testPathName: "isPersistentTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "1CBC648F9008DA9A9CCD74602D21A224"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setPersistent"
    sourceCodeSignature: "void setPersistent(boolean persistent)"
    returnType: "void"
    parameters:
    - name: "persistent"
      type: "boolean"
    instructionFingerprint: "9348C9DAB24611028E0CD94BE84BB873"
  paths:
  - pathId: "path1"
    testPathName: "setPersistentTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "CF6DA36C3833FA4FF83F90DC8E758B2E"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getStoreDir"
    sourceCodeSignature: "File getStoreDir()"
    returnType: "java.io.File"
    instructionFingerprint: "8B85FB41CDB5B47D14726EDE1F8BB219"
  paths:
  - pathId: "path1"
    testPathName: "getStoreDirTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "3CBAA9C3CD1E2D41D36F3FFA9BEC64F6"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setStoreDir"
    sourceCodeSignature: "void setStoreDir(File storeDir)"
    returnType: "void"
    parameters:
    - name: "storeDir"
      type: "java.io.File"
    instructionFingerprint: "A7838F858D901910F0B43EFD015F09A0"
  paths:
  - pathId: "path1"
    testPathName: "setStoreDirTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "522D58E5C9C39B5670CE24B777B15559"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "storeDir"
      modelFingerprint: "02EE10210FF37095971EDD88C25285BE"
      valueUuid: "storeDir"
    - type: "FIELD"
      name: "sessionStoreDirectory"
      modelFingerprint: "6281C027F4EF707B8A457010409F8153"
      valueUuid: "sessionStoreDirectory"
      methodExercised:
        expression: "setDirectory(directory:storeDir):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    - type: "STATE_VERIFICATION_FIELD"
      name: "storeDir"
      modelFingerprint: "1B469683206B509BBC9DE30EE8803B52"
      valueUuid: "storeDir"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "this.sessionStoreDirectory.setDirectory(storeDir);"
      lineNumber: 93
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: sessionStoreDirectory - Method: setDirectory"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Session"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.Session"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "storeDir-pathname"
      valueType: "java.io.File"
      uuid: "storeDir"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.SessionStoreDirectory"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.SessionStoreDirectory"
      uuid: "sessionStoreDirectory"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "storeDir-pathname"
      valueType: "java.io.File"
      uuid: "storeDir"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "storeDir-pathname"
      valueType: "java.io.File"
      uuid: "storeDir"
- method:
    name: "getCookie"
    sourceCodeSignature: "Cookie getCookie()"
    returnType: "org.springframework.boot.web.servlet.server.Session$Cookie"
    instructionFingerprint: "344B8CA7DA89F2FC7A80BB79E4D7C40A"
  paths:
  - pathId: "path1"
    testPathName: "getCookieTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "D0E14160D48B60C29E3D03B2D9BA1665"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getSessionStoreDirectory"
    sourceCodeSignature: "SessionStoreDirectory getSessionStoreDirectory()"
    returnType: "org.springframework.boot.web.servlet.server.SessionStoreDirectory"
    instructionFingerprint: "9BD10A49A7DE24C111DCD27D7EF07FF9"
  paths:
  - pathId: "path1"
    testPathName: "getSessionStoreDirectoryTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "947337B3B53D22901C210FE6AD67DBF5"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
