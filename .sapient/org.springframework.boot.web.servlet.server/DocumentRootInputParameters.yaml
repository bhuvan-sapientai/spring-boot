---
modelFingerprint: "7BA0EDA579EDE38DEDF7ED7AC0606446"
methods:
- method:
    name: "getDirectory"
    signature: "getDirectory() : java.io.File"
    instructionFingerprint: "B3E5FBA6B45FDCCBFF1015595919E679"
  paths:
  - pathId: "path1"
    testPathName: "getDirectoryTest"
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    filledByUser: false
    modelFingerprint: "CE5712AC4A04EEBB349FD522A5341C16"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "526624a2-3523-319b-90eb-0e0c05afd89c"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "setDirectory"
    signature: "setDirectory(java.io.File) : void"
    instructionFingerprint: "5391D2F23E78EDD0215BAB95BB393FD1"
  paths:
  - pathId: "path1"
    testPathName: "setDirectoryTest"
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    filledByUser: false
    modelFingerprint: "C5B3EFCE15AE7EA63E23F8C59C60E05C"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "318fe060-64c3-337f-8c27-09c97a21c8f3"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "getValidDirectory"
    signature: "getValidDirectory() : java.io.File"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "891503C8CC68BDFD57D48894CB802BB5"
  paths:
  - pathId: "path1"
    testPathName: "getValidDirectoryWhenThisLoggerIsDebugEnabled"
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    filledByUser: false
    modelFingerprint: "70C957C852A9D919E933232819B65716"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "CCDED7067443A576627DFE38C92F8296"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "1ED67D9039D9A518F34DCCE68E22C0D8"
      index: 2
      ignored: false
      methodExercised:
        target: "target"
        name: "getCodeSourceArchive"
        parameters:
        - name: "codeSource"
          valueUuid: "getCodeSourceArchive_codeSource1"
        signature: "getCodeSourceArchive(CodeSource): File"
        returnValueUuid: "getCodeSourceArchive_file1"
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "987A7EFA5808642C7824CEDDEC8B8A42"
      index: 3
      ignored: false
      valueUuid: "getArchiveFileDocumentRoot_file1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "2dee4d95-f631-3e76-b80f-a3d7dbc8796a"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "CLASS_TYPE_COULD_NOT_BE_MOCKED_AND_NEEDS_TO_STRING"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.DocumentRoot"
        parameters:
        - name: "logger"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.apache.commons.logging.impl.NoOpLog"
            uuid: "<init>_log1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.web.servlet.server.DocumentRoot"
        parameters:
        - name: "logger"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.apache.commons.logging.impl.NoOpLog"
            uuid: "<init>_log1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.web.servlet.server.DocumentRoot"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "getCodeSourceArchive_file1-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "getCodeSourceArchive_file1-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.io.File"
      uuid: "getCodeSourceArchive_file1"
      fixed: false
      nameForMock: "getCodeSourceArchive_file1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.security.CodeSource"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "java.security.ProtectionDomain"
            localVariableValue:
              sapientType: "CLASS"
              content: !<regular>
                value: "org.springframework.boot.web.servlet.server.DocumentRoot"
              valueType: "java.lang.Class"
              genericValueType: "org.springframework.boot.web.servlet.server.DocumentRoot"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters: []
            methodName: "getProtectionDomain"
          suggestedContent: !<method_return_from_value>
            target: "java.security.ProtectionDomain"
            localVariableValue:
              sapientType: "CLASS"
              content: !<regular>
                value: "org.springframework.boot.web.servlet.server.DocumentRoot"
              valueType: "java.lang.Class"
              genericValueType: "org.springframework.boot.web.servlet.server.DocumentRoot"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters: []
            methodName: "getProtectionDomain"
          valueType: "java.security.ProtectionDomain"
          uuid: "getCodeSourceArchive_protectionDomain1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getCodeSource"
      suggestedContent: !<method_return_from_value>
        target: "java.security.CodeSource"
        localVariableValue:
          sapientType: "OBJECT"
          suggestedContent: !<method_return_from_value>
            target: "java.security.ProtectionDomain"
            localVariableValue:
              sapientType: "CLASS"
              content: !<regular>
                value: "org.springframework.boot.web.servlet.server.DocumentRoot"
              valueType: "java.lang.Class"
              genericValueType: "org.springframework.boot.web.servlet.server.DocumentRoot"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters: []
            methodName: "getProtectionDomain"
          valueType: "java.security.ProtectionDomain"
          uuid: "getCodeSourceArchive_protectionDomain1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getCodeSource"
      valueType: "java.security.CodeSource"
      uuid: "getCodeSourceArchive_codeSource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "getArchiveFileDocumentRoot_file1-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "getArchiveFileDocumentRoot_file1-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.io.File"
      uuid: "getArchiveFileDocumentRoot_file1"
      fixed: false
      nameForMock: "getArchiveFileDocumentRoot_file1"
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "getValidDirectoryWhenThisLoggerNotIsDebugEnabled"
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    filledByUser: false
    modelFingerprint: "19D3A1ACB5E32A73DAFB43F9E92232C7"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "579dfd8a-ce8e-30c3-bd3e-e5484ba7e203"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "CLASS_TYPE_COULD_NOT_BE_MOCKED_AND_NEEDS_TO_STRING"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path3"
    testPathName: "getValidDirectoryWhenFileIsNotNullAndThisLoggerIsDebugEnabled"
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    filledByUser: false
    modelFingerprint: "8B2AF09BCBA290B1BCE1EBE8C2F05B05"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "f688b0d8-c2bc-33a4-84b8-9c2bdf0c8700"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "CLASS_TYPE_COULD_NOT_BE_MOCKED_AND_NEEDS_TO_STRING"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path4"
    testPathName: "getValidDirectoryWhenFileIsNotNullAndThisLoggerNotIsDebugEnabled"
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    filledByUser: false
    modelFingerprint: "12DE42A668FB6D85DAFB6A0676E05027"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "c345fc0b-94f8-3a85-b2d1-2622725f1733"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "CLASS_TYPE_COULD_NOT_BE_MOCKED_AND_NEEDS_TO_STRING"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path7"
    testPathName: "getValidDirectoryWhenThisLoggerNotIsDebugEnabledAndThisLoggerNotIsDebugEnabled"
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    filledByUser: false
    modelFingerprint: "4AB3A128B4D32C041CA6060B63B77351"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "CCDED7067443A576627DFE38C92F8296"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "FCAD39B909B2B873E98DB29CB58ED830"
      index: 2
      ignored: false
      methodExercised:
        target: "target"
        name: "getCodeSourceArchive"
        parameters:
        - name: "codeSource"
          valueUuid: "getCodeSourceArchive_codeSource1"
        signature: "getCodeSourceArchive(CodeSource): File"
        returnValueUuid: "getCodeSourceArchive_file1"
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "1ED67D9039D9A518F34DCCE68E22C0D8"
      index: 3
      ignored: false
      methodExercised:
        target: "target"
        name: "getCodeSourceArchive"
        parameters:
        - name: "codeSource"
          valueUuid: "getCodeSourceArchive_codeSource2"
        signature: "getCodeSourceArchive(CodeSource): File"
        returnValueUuid: "getCodeSourceArchive_file2"
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2FFBEFAB126390302F660530B7E392AB"
      index: 4
      ignored: false
      methodExercised:
        target: "target"
        name: "getExplodedWarFileDocumentRoot"
        parameters:
        - name: "codeSourceFile"
          valueUuid: "getCodeSourceArchive_file2"
        signature: "getExplodedWarFileDocumentRoot(File): File"
        returnValueUuid: "getExplodedWarFileDocumentRoot_file1"
        access: 16
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5E095939A35B7771BE0F377F8ED158BE"
      index: 5
      ignored: false
      valueUuid: "getCommonDocumentRoot_file4"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "435668b7-3e13-30f7-842c-abc83369e6f7"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "CLASS_TYPE_COULD_NOT_BE_MOCKED_AND_NEEDS_TO_STRING"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.DocumentRoot"
        parameters:
        - name: "logger"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.apache.commons.logging.impl.NoOpLog"
            uuid: "<init>_log1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.web.servlet.server.DocumentRoot"
        parameters:
        - name: "logger"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.apache.commons.logging.impl.NoOpLog"
            uuid: "<init>_log1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.web.servlet.server.DocumentRoot"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.io.File"
      uuid: "getCodeSourceArchive_file1"
      fixed: true
      nameForMock: "getCodeSourceArchive_file1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.security.CodeSource"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "java.security.ProtectionDomain"
            localVariableValue:
              sapientType: "CLASS"
              content: !<regular>
                value: "org.springframework.boot.web.servlet.server.DocumentRoot"
              valueType: "java.lang.Class"
              genericValueType: "org.springframework.boot.web.servlet.server.DocumentRoot"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters: []
            methodName: "getProtectionDomain"
          suggestedContent: !<method_return_from_value>
            target: "java.security.ProtectionDomain"
            localVariableValue:
              sapientType: "CLASS"
              content: !<regular>
                value: "org.springframework.boot.web.servlet.server.DocumentRoot"
              valueType: "java.lang.Class"
              genericValueType: "org.springframework.boot.web.servlet.server.DocumentRoot"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters: []
            methodName: "getProtectionDomain"
          valueType: "java.security.ProtectionDomain"
          uuid: "getCodeSourceArchive_protectionDomain1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getCodeSource"
      suggestedContent: !<method_return_from_value>
        target: "java.security.CodeSource"
        localVariableValue:
          sapientType: "OBJECT"
          suggestedContent: !<method_return_from_value>
            target: "java.security.ProtectionDomain"
            localVariableValue:
              sapientType: "CLASS"
              content: !<regular>
                value: "org.springframework.boot.web.servlet.server.DocumentRoot"
              valueType: "java.lang.Class"
              genericValueType: "org.springframework.boot.web.servlet.server.DocumentRoot"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters: []
            methodName: "getProtectionDomain"
          valueType: "java.security.ProtectionDomain"
          uuid: "getCodeSourceArchive_protectionDomain1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getCodeSource"
      valueType: "java.security.CodeSource"
      uuid: "getCodeSourceArchive_codeSource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "getCodeSourceArchive_file2-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "getCodeSourceArchive_file2-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.io.File"
      uuid: "getCodeSourceArchive_file2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.security.CodeSource"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "java.security.ProtectionDomain"
            localVariableValue:
              sapientType: "CLASS"
              content: !<regular>
                value: "org.springframework.boot.web.servlet.server.DocumentRoot"
              valueType: "java.lang.Class"
              genericValueType: "org.springframework.boot.web.servlet.server.DocumentRoot"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters: []
            methodName: "getProtectionDomain"
          suggestedContent: !<method_return_from_value>
            target: "java.security.ProtectionDomain"
            localVariableValue:
              sapientType: "CLASS"
              content: !<regular>
                value: "org.springframework.boot.web.servlet.server.DocumentRoot"
              valueType: "java.lang.Class"
              genericValueType: "org.springframework.boot.web.servlet.server.DocumentRoot"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters: []
            methodName: "getProtectionDomain"
          valueType: "java.security.ProtectionDomain"
          uuid: "getCodeSourceArchive_protectionDomain2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getCodeSource"
      suggestedContent: !<method_return_from_value>
        target: "java.security.CodeSource"
        localVariableValue:
          sapientType: "OBJECT"
          suggestedContent: !<method_return_from_value>
            target: "java.security.ProtectionDomain"
            localVariableValue:
              sapientType: "CLASS"
              content: !<regular>
                value: "org.springframework.boot.web.servlet.server.DocumentRoot"
              valueType: "java.lang.Class"
              genericValueType: "org.springframework.boot.web.servlet.server.DocumentRoot"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters: []
            methodName: "getProtectionDomain"
          valueType: "java.security.ProtectionDomain"
          uuid: "getCodeSourceArchive_protectionDomain2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getCodeSource"
      valueType: "java.security.CodeSource"
      uuid: "getCodeSourceArchive_codeSource2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.io.File"
      uuid: "getExplodedWarFileDocumentRoot_file1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "getCodeSourceArchive_file2-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "getCodeSourceArchive_file2-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.io.File"
      uuid: "getCodeSourceArchive_file2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.io.File"
      uuid: "getCommonDocumentRoot_file4"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path9"
    testPathName: "getValidDirectoryWhenFileIsNullAndThisLoggerNotIsDebugEnabledAndThisLoggerNotIsDebugEnabled"
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    filledByUser: false
    modelFingerprint: "8F4E5B523F1B5B55D22BD70454157A87"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "373794e8-6df0-333f-863b-0e25f1c400da"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path5"
    testPathName: "getValidDirectoryWhenFileIsNullAndThisLoggerIsDebugEnabled"
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    filledByUser: false
    modelFingerprint: "632738E9D6ED84D03BEF6DBE85AAEA2B"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "CCDED7067443A576627DFE38C92F8296"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "1ED67D9039D9A518F34DCCE68E22C0D8"
      index: 2
      ignored: false
      methodExercised:
        target: "target"
        name: "getCodeSourceArchive"
        parameters:
        - name: "codeSource"
          valueUuid: "getCodeSourceArchive_codeSource1"
        signature: "getCodeSourceArchive(CodeSource): File"
        returnValueUuid: "getCodeSourceArchive_file1"
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "1ED67D9039D9A518F34DCCE68E22C0D8"
      index: 3
      ignored: false
      methodExercised:
        target: "target"
        name: "getCodeSourceArchive"
        parameters:
        - name: "codeSource"
          valueUuid: "getCodeSourceArchive_codeSource2"
        signature: "getCodeSourceArchive(CodeSource): File"
        returnValueUuid: "getCodeSourceArchive_file2"
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "2FFBEFAB126390302F660530B7E392AB"
      index: 4
      ignored: false
      methodExercised:
        target: "target"
        name: "getExplodedWarFileDocumentRoot"
        parameters:
        - name: "codeSourceFile"
          valueUuid: "getCodeSourceArchive_file2"
        signature: "getExplodedWarFileDocumentRoot(File): File"
        returnValueUuid: "getExplodedWarFileDocumentRoot_file1"
        access: 16
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5E095939A35B7771BE0F377F8ED158BE"
      index: 5
      ignored: false
      valueUuid: "getCommonDocumentRoot_file4"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "161be609-c57f-3f50-be85-f2346a6e703b"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "CLASS_TYPE_COULD_NOT_BE_MOCKED_AND_NEEDS_TO_STRING"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.DocumentRoot"
        parameters:
        - name: "logger"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.apache.commons.logging.impl.NoOpLog"
            uuid: "<init>_log1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.web.servlet.server.DocumentRoot"
        parameters:
        - name: "logger"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.apache.commons.logging.impl.NoOpLog"
            uuid: "<init>_log1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.web.servlet.server.DocumentRoot"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "getCodeSourceArchive_file1-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "getCodeSourceArchive_file1-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.io.File"
      uuid: "getCodeSourceArchive_file1"
      fixed: false
      nameForMock: "getCodeSourceArchive_file1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.security.CodeSource"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "java.security.ProtectionDomain"
            localVariableValue:
              sapientType: "CLASS"
              content: !<regular>
                value: "org.springframework.boot.web.servlet.server.DocumentRoot"
              valueType: "java.lang.Class"
              genericValueType: "org.springframework.boot.web.servlet.server.DocumentRoot"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters: []
            methodName: "getProtectionDomain"
          suggestedContent: !<method_return_from_value>
            target: "java.security.ProtectionDomain"
            localVariableValue:
              sapientType: "CLASS"
              content: !<regular>
                value: "org.springframework.boot.web.servlet.server.DocumentRoot"
              valueType: "java.lang.Class"
              genericValueType: "org.springframework.boot.web.servlet.server.DocumentRoot"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters: []
            methodName: "getProtectionDomain"
          valueType: "java.security.ProtectionDomain"
          uuid: "getCodeSourceArchive_protectionDomain1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getCodeSource"
      suggestedContent: !<method_return_from_value>
        target: "java.security.CodeSource"
        localVariableValue:
          sapientType: "OBJECT"
          suggestedContent: !<method_return_from_value>
            target: "java.security.ProtectionDomain"
            localVariableValue:
              sapientType: "CLASS"
              content: !<regular>
                value: "org.springframework.boot.web.servlet.server.DocumentRoot"
              valueType: "java.lang.Class"
              genericValueType: "org.springframework.boot.web.servlet.server.DocumentRoot"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters: []
            methodName: "getProtectionDomain"
          valueType: "java.security.ProtectionDomain"
          uuid: "getCodeSourceArchive_protectionDomain1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getCodeSource"
      valueType: "java.security.CodeSource"
      uuid: "getCodeSourceArchive_codeSource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "getCodeSourceArchive_file2-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "getCodeSourceArchive_file2-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.io.File"
      uuid: "getCodeSourceArchive_file2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.security.CodeSource"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "java.security.ProtectionDomain"
            localVariableValue:
              sapientType: "CLASS"
              content: !<regular>
                value: "org.springframework.boot.web.servlet.server.DocumentRoot"
              valueType: "java.lang.Class"
              genericValueType: "org.springframework.boot.web.servlet.server.DocumentRoot"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters: []
            methodName: "getProtectionDomain"
          suggestedContent: !<method_return_from_value>
            target: "java.security.ProtectionDomain"
            localVariableValue:
              sapientType: "CLASS"
              content: !<regular>
                value: "org.springframework.boot.web.servlet.server.DocumentRoot"
              valueType: "java.lang.Class"
              genericValueType: "org.springframework.boot.web.servlet.server.DocumentRoot"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters: []
            methodName: "getProtectionDomain"
          valueType: "java.security.ProtectionDomain"
          uuid: "getCodeSourceArchive_protectionDomain2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getCodeSource"
      suggestedContent: !<method_return_from_value>
        target: "java.security.CodeSource"
        localVariableValue:
          sapientType: "OBJECT"
          suggestedContent: !<method_return_from_value>
            target: "java.security.ProtectionDomain"
            localVariableValue:
              sapientType: "CLASS"
              content: !<regular>
                value: "org.springframework.boot.web.servlet.server.DocumentRoot"
              valueType: "java.lang.Class"
              genericValueType: "org.springframework.boot.web.servlet.server.DocumentRoot"
              fixed: true
              equalsMethodPresent: false
              explicitCastNeeded: false
            methodParameters: []
            methodName: "getProtectionDomain"
          valueType: "java.security.ProtectionDomain"
          uuid: "getCodeSourceArchive_protectionDomain2"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "getCodeSource"
      valueType: "java.security.CodeSource"
      uuid: "getCodeSourceArchive_codeSource2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.io.File"
      uuid: "getExplodedWarFileDocumentRoot_file1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "getCodeSourceArchive_file2-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "getCodeSourceArchive_file2-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.io.File"
      uuid: "getCodeSourceArchive_file2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.io.File"
      uuid: "getCommonDocumentRoot_file4"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path6"
    testPathName: "getValidDirectoryWhenThisLoggerNotIsDebugEnabledAndThisLoggerIsDebugEnabled"
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    filledByUser: false
    modelFingerprint: "DE37F16A05A215191B894A767D5BBC6D"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "1c539a78-9f35-30f6-bf9f-33c0800a43dc"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "CLASS_TYPE_COULD_NOT_BE_MOCKED_AND_NEEDS_TO_STRING"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path8"
    testPathName: "getValidDirectoryWhenRootNotExistsAndFileIsNullAndThisLoggerNotIsDebugEnabledAndThisLoggerNotIsDebugEnabled"
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    filledByUser: false
    modelFingerprint: "39E3BE1BEF2B1A9B8D1A21C0E5E99885"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "1bcb84ac-0273-3ce3-bb18-46f5baec0e04"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.exists() : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "getCodeSourceArchive"
    signature: "getCodeSourceArchive(java.security.CodeSource) : java.io.File"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "8B9F698D2557B8B8DDF60F7BC84FA23C"
  paths:
  - pathId: "path1"
    testPathName: "getCodeSourceArchive1WhenLocationIsNull"
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    filledByUser: false
    modelFingerprint: "B21A6A6A6D07E17F84C4B7A318848D42"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "4aea818d-e9e3-3e5f-9047-6a50c71df33b"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.CodeSource.getLocation() : java.net.URL"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path4"
    testPathName: "getCodeSourceArchive1WhenCodeSourceIsNullAndLocationIsNull"
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    filledByUser: false
    modelFingerprint: "507FD5837706184744A491728F3CD1FF"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "CCDED7067443A576627DFE38C92F8296"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "codeSource"
      modelFingerprint: "793E7EE7F19B1A200063C9C0146ED8E9"
      index: 2
      ignored: false
      valueUuid: "getCodeSourceArchive_codeSource1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5E095939A35B7771BE0F377F8ED158BE"
      index: 3
      ignored: false
      valueUuid: "getCodeSourceArchive_file1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "373d8374-841d-3f85-bbf4-9883767db820"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.DocumentRoot"
        parameters:
        - name: "logger"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.apache.commons.logging.impl.NoOpLog"
            uuid: "<init>_log1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.web.servlet.server.DocumentRoot"
        parameters:
        - name: "logger"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.apache.commons.logging.impl.NoOpLog"
            uuid: "<init>_log1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.web.servlet.server.DocumentRoot"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.security.CodeSource"
      uuid: "getCodeSourceArchive_codeSource1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.io.File"
      uuid: "getCodeSourceArchive_file1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "getCodeSourceArchive1WhenIndexNotEqualsMinus1"
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    filledByUser: false
    modelFingerprint: "D9D03AF30F6DCC0DDFB5788A51F8C785"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "CCDED7067443A576627DFE38C92F8296"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "codeSource"
      modelFingerprint: "BA36B043F9873BF91BAB91D411230F3C"
      index: 2
      ignored: false
      valueUuid: "getCodeSourceArchive_codeSource1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FBF8186195B09818765E4A7586132858"
      index: 3
      ignored: false
      valueUuid: "getCodeSourceArchive_file1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "890b0a31-866d-30c9-985d-fab39dfd8141"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.CodeSource.getLocation() : java.net.URL"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.DocumentRoot"
        parameters:
        - name: "logger"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.apache.commons.logging.impl.NoOpLog"
            uuid: "<init>_log1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.web.servlet.server.DocumentRoot"
        parameters:
        - name: "logger"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.apache.commons.logging.impl.NoOpLog"
            uuid: "<init>_log1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.web.servlet.server.DocumentRoot"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.security.CodeSource"
        parameters:
        - name: "url"
          value:
            sapientType: "MOCK"
            valueType: "java.net.URL"
            uuid: "getCodeSourceArchive_codeSource1-url"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "certs"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            suggestedContent: !<array>
              values: {}
            valueType: "java.security.cert.Certificate[]"
            uuid: "getCodeSourceArchive_codeSource1-certs"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "java.security.CodeSource"
        parameters:
        - name: "url"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "java.net.URL"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "java.net.URL"
            uuid: "getCodeSourceArchive_codeSource1-url"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "certs"
          value:
            sapientType: "ARRAY"
            valueType: "java.security.cert.Certificate[]"
            uuid: "getCodeSourceArchive_codeSource1-certs"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.security.CodeSource"
      uuid: "getCodeSourceArchive_codeSource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            suggestedContent: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "getCodeSourceArchive_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            suggestedContent: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "getCodeSourceArchive_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.io.File"
      uuid: "getCodeSourceArchive_file1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "getCodeSourceArchive1WhenIndexEqualsMinus1"
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    filledByUser: false
    modelFingerprint: "50BB66DCCB58A64D53257009AE970841"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "3614d411-244a-3f62-acb6-82d33db8d6d9"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.CodeSource.getLocation() : java.net.URL"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path5"
    testPathName: "getCodeSourceArchive1WhenCaughtException"
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    filledByUser: false
    modelFingerprint: "27106ADCB4CEFBBE5CA295129DACA712"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "CCDED7067443A576627DFE38C92F8296"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "codeSource"
      modelFingerprint: "BA36B043F9873BF91BAB91D411230F3C"
      index: 2
      ignored: false
      valueUuid: "getCodeSourceArchive_codeSource1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "location"
      modelFingerprint: "372886E6B1E4D23A9996C39B9BE1A358"
      index: 3
      ignored: false
      idsTryCatchBlockSurrounding:
      - 2
      valueUuid: "getCodeSourceArchive_uRL1"
      methodExercised:
        target: "location"
        name: "openConnection"
        parameters: []
        throwsExceptions:
        - "java.io.IOException"
        signature: "openConnection(): URLConnection throws java.io.IOException"
        returnValueUuid: "getCodeSourceArchive_uRLConnection1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "jarURLConnection"
      modelFingerprint: "D0B40DDFE07AFC6E1CAE804A9FC658B0"
      index: 4
      ignored: false
      idsTryCatchBlockSurrounding:
      - 2
      valueUuid: "getCodeSourceArchive_uRLConnection1"
      methodExercised:
        target: "jarURLConnection"
        name: "getJarFile"
        parameters: []
        throwsExceptions:
        - "java.io.IOException"
        signature: "getJarFile(): JarFile throws java.io.IOException"
        returnValueUuid: "getCodeSourceArchive_jarFile1"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5E095939A35B7771BE0F377F8ED158BE"
      index: 5
      ignored: false
      valueUuid: "getCodeSourceArchive_file2"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "5dcb5663-bf3e-3d4e-80f7-cb47a0648026"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.security.CodeSource.getLocation() : java.net.URL"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.DocumentRoot"
        parameters:
        - name: "logger"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.apache.commons.logging.impl.NoOpLog"
            uuid: "<init>_log1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.web.servlet.server.DocumentRoot"
        parameters:
        - name: "logger"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.apache.commons.logging.impl.NoOpLog"
            uuid: "<init>_log1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.web.servlet.server.DocumentRoot"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.security.CodeSource"
        parameters:
        - name: "url"
          value:
            sapientType: "MOCK"
            valueType: "java.net.URL"
            uuid: "getCodeSourceArchive_codeSource1-url"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "certs"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            suggestedContent: !<array>
              values: {}
            valueType: "java.security.cert.Certificate[]"
            uuid: "getCodeSourceArchive_codeSource1-certs"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "java.security.CodeSource"
        parameters:
        - name: "url"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "java.net.URL"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "java.net.URL"
            uuid: "getCodeSourceArchive_codeSource1-url"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "certs"
          value:
            sapientType: "ARRAY"
            valueType: "java.security.cert.Certificate[]"
            uuid: "getCodeSourceArchive_codeSource1-certs"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.security.CodeSource"
      uuid: "getCodeSourceArchive_codeSource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "getCodeSourceArchive_uRL1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.net.JarURLConnection"
      uuid: "getCodeSourceArchive_uRLConnection1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.net.JarURLConnection"
      uuid: "getCodeSourceArchive_uRLConnection1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.jar.JarFile"
      uuid: "getCodeSourceArchive_jarFile1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.io.File"
      uuid: "getCodeSourceArchive_file2"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "getExplodedWarFileDocumentRoot"
    signature: "getExplodedWarFileDocumentRoot(java.io.File) : java.io.File"
    instructionFingerprint: "AE847594632C5EE962EFFE5E1C66D3A6"
  paths:
  - pathId: "path3"
    testPathName: "getExplodedWarFileDocumentRoot1WhenCodeSourceFileIsNull"
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    filledByUser: false
    modelFingerprint: "7E40AA1A768C90484ED359F1513023EE"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "facaee8b-8551-36b8-b6e0-0f0f5cbb6733"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "CLASS_TYPE_COULD_NOT_BE_MOCKED_AND_NEEDS_TO_STRING"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path6"
    testPathName: "getExplodedWarFileDocumentRoot1WhenThisLoggerNotIsDebugEnabledAndCodeSourceFileIsNull"
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    filledByUser: false
    modelFingerprint: "1111C66C48A20193B4A5DA4D8B855232"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "a1fdefa5-6392-3554-a147-7b507f602577"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path1"
    testPathName: "getExplodedWarFileDocumentRoot1WhenWebInfPathIndexGreaterThanOrEqualsTo0"
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    filledByUser: false
    modelFingerprint: "191C3B44206636EBCDE09B1C23E58676"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "CCDED7067443A576627DFE38C92F8296"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "codeSourceFile"
      modelFingerprint: "61E45DFBE948078CEF7B91C8E02CF20E"
      index: 2
      ignored: false
      valueUuid: "getExplodedWarFileDocumentRoot_file1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FBF8186195B09818765E4A7586132858"
      index: 3
      ignored: false
      valueUuid: "getExplodedWarFileDocumentRoot_file2"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "58c29682-3126-3aff-8fe0-23c7f8ba0036"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "CLASS_TYPE_COULD_NOT_BE_MOCKED_AND_NEEDS_TO_STRING"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.DocumentRoot"
        parameters:
        - name: "logger"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.apache.commons.logging.impl.NoOpLog"
            uuid: "<init>_log1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.web.servlet.server.DocumentRoot"
        parameters:
        - name: "logger"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.apache.commons.logging.impl.NoOpLog"
            uuid: "<init>_log1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.web.servlet.server.DocumentRoot"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "getExplodedWarFileDocumentRoot_file1-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "getExplodedWarFileDocumentRoot_file1-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.io.File"
      uuid: "getExplodedWarFileDocumentRoot_file1"
      fixed: false
      nameForMock: "getExplodedWarFileDocumentRoot_file1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            suggestedContent: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "getExplodedWarFileDocumentRoot_string4"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            suggestedContent: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "getExplodedWarFileDocumentRoot_string4"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.io.File"
      uuid: "getExplodedWarFileDocumentRoot_file2"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "getExplodedWarFileDocumentRoot1WhenWebInfPathIndexLessThan0"
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    filledByUser: false
    modelFingerprint: "D8BECDE731AFEA3663920ABA339197B7"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "CCDED7067443A576627DFE38C92F8296"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "codeSourceFile"
      modelFingerprint: "61E45DFBE948078CEF7B91C8E02CF20E"
      index: 2
      ignored: false
      valueUuid: "getExplodedWarFileDocumentRoot_file1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5E095939A35B7771BE0F377F8ED158BE"
      index: 3
      ignored: false
      valueUuid: "getExplodedWarFileDocumentRoot_file2"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "0cc41f0a-ebac-3814-ba84-16b1732078e4"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "CLASS_TYPE_COULD_NOT_BE_MOCKED_AND_NEEDS_TO_STRING"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.DocumentRoot"
        parameters:
        - name: "logger"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.apache.commons.logging.impl.NoOpLog"
            uuid: "<init>_log1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.web.servlet.server.DocumentRoot"
        parameters:
        - name: "logger"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.apache.commons.logging.impl.NoOpLog"
            uuid: "<init>_log1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.web.servlet.server.DocumentRoot"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "getExplodedWarFileDocumentRoot_file1-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "getExplodedWarFileDocumentRoot_file1-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.io.File"
      uuid: "getExplodedWarFileDocumentRoot_file1"
      fixed: false
      nameForMock: "getExplodedWarFileDocumentRoot_file1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.io.File"
      uuid: "getExplodedWarFileDocumentRoot_file2"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path4"
    testPathName: "getExplodedWarFileDocumentRoot1WhenCodeSourceFileExistsAndWebInfPathIndexGreaterThanOrEqualsTo0"
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    filledByUser: false
    modelFingerprint: "048D87C47896585567777BA8BF17B53F"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "72e47da8-30b2-39e1-ad17-c2ed6948d131"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.exists() : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path5"
    testPathName: "getExplodedWarFileDocumentRoot1WhenCodeSourceFileExistsAndWebInfPathIndexLessThan0"
    constructorSignature: "<init>(org.apache.commons.logging.Log) : void"
    filledByUser: false
    modelFingerprint: "32FDC4C3E2A2ECBCA3A28CF883B824DF"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "0f59a204-4640-31c6-a0f2-1b18fa0a4144"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.exists() : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
