---
modelFingerprint: "E5C64CC9AB01626251334C5E2B3CFE6C"
targetClass:
  fullClassName: "org.springframework.boot.web.servlet.server.Encoding"
methods:
- method:
    name: "getCharset"
    sourceCodeSignature: "Charset getCharset()"
    returnType: "java.nio.charset.Charset"
    instructionFingerprint: "04E287305548C901A1EA1BEE856E3CC1"
  paths:
  - pathId: "path1"
    testPathName: "getCharsetTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "9C25F5DA06C2681375EC191E151A9310"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setCharset"
    sourceCodeSignature: "void setCharset(Charset charset)"
    returnType: "void"
    parameters:
    - name: "charset"
      type: "java.nio.charset.Charset"
    instructionFingerprint: "473E2B585557891C5F353D8ECA200E04"
  paths:
  - pathId: "path1"
    testPathName: "setCharsetTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "3F7B14FD5F4884E39564841DC86E363C"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "isForce"
    sourceCodeSignature: "boolean isForce()"
    returnType: "boolean"
    instructionFingerprint: "1F7DDB286474B261F52EECE673E0F224"
  paths:
  - pathId: "path1"
    testPathName: "isForceTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "1D7B6AAD6ED7025CA376177F3A4A1B2A"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "52785AAEEFCEB874D7B8C5DB08D93CCC"
      valueUuid: "boolean2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Encoding"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.Encoding"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
- method:
    name: "setForce"
    sourceCodeSignature: "void setForce(boolean force)"
    returnType: "void"
    parameters:
    - name: "force"
      type: "boolean"
    instructionFingerprint: "006440662E2AADDDA223C69335CC7D62"
  paths:
  - pathId: "path1"
    testPathName: "setForceTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "E2DACC22018F1635F52F5AB82068A10B"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "force"
      modelFingerprint: "714E41667C5B707393E56F37402987C6"
      valueUuid: "force"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Encoding"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.Encoding"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "force"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "isForceRequest"
    sourceCodeSignature: "boolean isForceRequest()"
    returnType: "boolean"
    instructionFingerprint: "8E03A444B2143DF60253EE9FE44814B4"
  paths:
  - pathId: "path1"
    testPathName: "isForceRequestTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "1D7B6AAD6ED7025CA376177F3A4A1B2A"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "52785AAEEFCEB874D7B8C5DB08D93CCC"
      valueUuid: "boolean2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Encoding"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.Encoding"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
- method:
    name: "setForceRequest"
    sourceCodeSignature: "void setForceRequest(boolean forceRequest)"
    returnType: "void"
    parameters:
    - name: "forceRequest"
      type: "boolean"
    instructionFingerprint: "EAECE50A7D8F6329D503F15AEC4D8CC1"
  paths:
  - pathId: "path1"
    testPathName: "setForceRequestTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "775114797B476B01388A353448A5F625"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "forceRequest"
      modelFingerprint: "C41BD7F3156809BA03C2706C5BE82B7F"
      valueUuid: "forceRequest"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Encoding"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.Encoding"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "forceRequest"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "isForceResponse"
    sourceCodeSignature: "boolean isForceResponse()"
    returnType: "boolean"
    instructionFingerprint: "B3A6E4892D2C8CE94026589BEAF210AA"
  paths:
  - pathId: "path1"
    testPathName: "isForceResponseTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "1D7B6AAD6ED7025CA376177F3A4A1B2A"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "52785AAEEFCEB874D7B8C5DB08D93CCC"
      valueUuid: "boolean2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Encoding"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.Encoding"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
- method:
    name: "setForceResponse"
    sourceCodeSignature: "void setForceResponse(boolean forceResponse)"
    returnType: "void"
    parameters:
    - name: "forceResponse"
      type: "boolean"
    instructionFingerprint: "58F35407E00AB27045240FD93851B69C"
  paths:
  - pathId: "path1"
    testPathName: "setForceResponseTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "AFC62B59876E3E48B87256B1AC909AE6"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "forceResponse"
      modelFingerprint: "141F2D7963737ABD42D44F22718E6CB8"
      valueUuid: "forceResponse"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Encoding"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.Encoding"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "forceResponse"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "getMapping"
    sourceCodeSignature: "Map<Locale, Charset> getMapping()"
    returnType: "java.util.Map"
    genericReturnType: "java.util.Locale,java.nio.charset.Charset"
    instructionFingerprint: "FF7E2AF79ADA01D7195F38070AD4C06A"
  paths:
  - pathId: "path1"
    testPathName: "getMappingTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "A95C8044CC817C77A4D2EF322BE8CC80"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setMapping"
    sourceCodeSignature: "void setMapping(Map<Locale, Charset> mapping)"
    returnType: "void"
    parameters:
    - name: "mapping"
      type: "java.util.Map"
    instructionFingerprint: "CF4472A0C53DDEE01E05E1CD53B9286B"
  paths:
  - pathId: "path1"
    testPathName: "setMappingTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "B1EC6B2909A12B69404A06DC014B8265"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "shouldForce"
    sourceCodeSignature: "boolean shouldForce(Type type)"
    returnType: "boolean"
    parameters:
    - name: "type"
      type: "org.springframework.boot.web.servlet.server.Encoding$Type"
    instructionFingerprint: "8F9F8BA77A5EEF7D620F710E6039B89A"
  paths:
  - pathId: "path1"
    testPathName: "shouldForceWhenTypeNotEqualsTypeREQUEST"
    constructorSignature: "<init>() : void"
    modelFingerprint: "7C81206AB483DBAEDB2307FC74B8494B"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "type"
      modelFingerprint: "A364F3983B10DEC424B844F531CD09BB"
      valueUuid: "type"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "52785AAEEFCEB874D7B8C5DB08D93CCC"
      valueUuid: "boolean2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Encoding"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.Encoding"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "RESPONSE"
      valueType: "org.springframework.boot.web.servlet.server.Encoding$Type"
      uuid: "type"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    branches:
    - lineNumber: 108
      expression: "type != Type.REQUEST"
      range: "(108,20)-(108,39)"
      evaluatedAs: true
    - lineNumber: 109
      expression: "force == null"
      range: "(109,7)-(109,19)"
      evaluatedAs: true
    - lineNumber: 112
      expression: "force == null"
      range: "(112,7)-(112,19)"
      evaluatedAs: true
    - lineNumber: 113
      expression: "type == Type.REQUEST"
      range: "(113,13)-(113,32)"
      evaluatedAs: false
  - pathId: "path2"
    testPathName: "shouldForceWhenTypeEqualsTypeREQUEST"
    constructorSignature: "<init>() : void"
    modelFingerprint: "3C141B9089332035B3D943657419E03E"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "type"
      modelFingerprint: "5AA51882421FC8E892E842AFAF534DE8"
      valueUuid: "type"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "06995997EF514A52A48A8FF5BB3D13A0"
      valueUuid: "boolean2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.servlet.server.Encoding"
        parameters: []
      valueType: "org.springframework.boot.web.servlet.server.Encoding"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "REQUEST"
      valueType: "org.springframework.boot.web.servlet.server.Encoding$Type"
      uuid: "type"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    branches:
    - lineNumber: 108
      expression: "type != Type.REQUEST"
      range: "(108,20)-(108,39)"
      evaluatedAs: false
    - lineNumber: 109
      expression: "force == null"
      range: "(109,7)-(109,19)"
      evaluatedAs: true
    - lineNumber: 112
      expression: "force == null"
      range: "(112,7)-(112,19)"
      evaluatedAs: true
    - lineNumber: 113
      expression: "type == Type.REQUEST"
      range: "(113,13)-(113,32)"
      evaluatedAs: true
