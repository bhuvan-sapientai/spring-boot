---
modelFingerprint: "E3BF632054C07AA3DA00B3824C25ABDD"
targetClass:
  fullClassName: "org.springframework.boot.context.ContextIdApplicationContextInitializer"
methods:
- method:
    name: "setOrder"
    sourceCodeSignature: "void setOrder(int order)"
    returnType: "void"
    parameters:
    - name: "order"
      type: "int"
    instructionFingerprint: "F88C98C2D7593841680C2CA0FECB4028"
  paths:
  - pathId: "path1"
    testPathName: "setOrderTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "508F327E707578A7601DD6859FED6F5D"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getOrder"
    sourceCodeSignature: "int getOrder()"
    returnType: "int"
    instructionFingerprint: "342D4E4F854A43E567A525BCBCDEA20C"
  paths:
  - pathId: "path1"
    testPathName: "getOrderTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "5F67CB3BDB2A41A05DABA3827201DFA1"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "initialize"
    sourceCodeSignature: "void initialize(ConfigurableApplicationContext applicationContext)"
    returnType: "void"
    parameters:
    - name: "applicationContext"
      type: "org.springframework.context.ConfigurableApplicationContext"
    instructionFingerprint: "0322E3EA70EFAD073E2768AE582D4C60"
  paths:
  - pathId: "path1"
    testPathName: "initializeWhenParentContainsBeanContextIdGetName"
    constructorSignature: "<init>() : void"
    modelFingerprint: "D642D99A1CA7EA1B8C908CF1C2D192AE"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "applicationContext"
      modelFingerprint: "DF659A8AABEBC6871FFB4901FD8A4D44"
      valueUuid: "applicationContext"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "D606F109D7F437291F4C234291BAEA74"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getParent():applicationContext2"
    - type: "LOCAL_VARIABLE"
      name: "parent"
      modelFingerprint: "B94F53CDDB835C78B3555F081385164E"
      valueUuid: "applicationContext2"
      methodExercised:
        expression: "containsBean(name:string):boolean1"
    - type: "LOCAL_VARIABLE"
      name: "parent"
      modelFingerprint: "6C86CE3E34DCE2BDE8AECC8AC6FD72CD"
      valueUuid: "applicationContext2"
      methodExercised:
        expression: "getBean(requiredType:uniqueUuid1):object"
        throwsExceptions:
        - "org.springframework.beans.BeansException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "941A619A762108CA66D5F76A7164BF65"
      valueUuid: "object"
      methodExercised:
        expression: "createChildId():contextIdApplicationContextInitializer.ContextId"
    - type: "LOCAL_VARIABLE"
      name: "contextId"
      modelFingerprint: "90B10AAD86DCD41F78ACB00E16C1151A"
      valueUuid: "contextIdApplicationContextInitializer.ContextId"
      methodExercised:
        expression: "getId():string2"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "1DD86AE1E112DD8728446EFA657CE749"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "setId(id:string2):void"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "609C6B5F8E19B62507154D334DC81156"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A5822CEEE2B59E70CEE6565E6D5A4035"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:string3,singletonObject:contextIdApplicationContextInitializer.ContextId):void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.ContextIdApplicationContextInitializer"
        parameters: []
      valueType: "org.springframework.boot.context.ContextIdApplicationContextInitializer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext2"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.context.ContextIdApplicationContextInitializer$ContextId"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.ContextIdApplicationContextInitializer$ContextId"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.context.ContextIdApplicationContextInitializer$ContextId"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.context.ContextIdApplicationContextInitializer$ContextId"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.ContextIdApplicationContextInitializer$ContextId"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.ContextIdApplicationContextInitializer$ContextId"
      uuid: "contextIdApplicationContextInitializer.ContextId"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.ContextIdApplicationContextInitializer$ContextId"
      uuid: "contextIdApplicationContextInitializer.ContextId"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getId1"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "applicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getId1"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.context.ContextIdApplicationContextInitializer$ContextId"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.ContextIdApplicationContextInitializer$ContextId"
      uuid: "contextIdApplicationContextInitializer.ContextId"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 61
      expression: "parent != null"
      range: "(61,7)-(61,20)"
      evaluatedAs: true
      internalMethodName: "getContextId"
    - lineNumber: 61
      expression: "parent.containsBean(ContextId.class.getName())"
      range: "(61,25)-(61,70)"
      evaluatedAs: true
      internalMethodName: "getContextId"
  - pathId: "path2"
    testPathName: "initializeWhenStringUtilsHasTextName"
    constructorSignature: "<init>() : void"
    modelFingerprint: "1B2E87EE07965DE2A64CB58B7B595532"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "applicationContext"
      modelFingerprint: "DF659A8AABEBC6871FFB4901FD8A4D44"
      valueUuid: "applicationContext"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "D606F109D7F437291F4C234291BAEA74"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getParent():applicationContext2"
    - type: "LOCAL_VARIABLE"
      name: "parent"
      modelFingerprint: "650D42FA3ED29768E2FD0F0841CCA8CD"
      valueUuid: "applicationContext2"
      methodExercised:
        expression: "containsBean(name:string):boolean1"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "862B2199EAED822A0A6CD36A8ACF2BC7"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getEnvironment():configurableEnvironment"
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "CDD4AFAABC84CFB63D9EE0C04CEE6661"
      valueUuid: "configurableEnvironment"
      methodExercised:
        expression: "getProperty(key:uniqueUuid2):string2"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "A91647CB447119BB97CB86EA51675C61"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:string2):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "contextId"
      modelFingerprint: "96D2D0CE11EC58058EB75F517AC5F580"
      valueUuid: "contextIdApplicationContextInitializer.ContextId"
      methodExercised:
        expression: "getId():string3"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "1DD86AE1E112DD8728446EFA657CE749"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "setId(id:string3):void"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "609C6B5F8E19B62507154D334DC81156"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "261CC94F679253ADF87968EE3ACF7D5D"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:string4,singletonObject:contextIdApplicationContextInitializer.ContextId):void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "applicationContext.setId(contextId.getId());"
      lineNumber: 55
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: contextId - Method: getId"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.ContextIdApplicationContextInitializer"
        parameters: []
      valueType: "org.springframework.boot.context.ContextIdApplicationContextInitializer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.context.ContextIdApplicationContextInitializer$ContextId"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.application.name"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.ContextIdApplicationContextInitializer$ContextId"
      uuid: "contextIdApplicationContextInitializer.ContextId"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getId1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "applicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getId1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.context.ContextIdApplicationContextInitializer$ContextId"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.ContextIdApplicationContextInitializer$ContextId"
      uuid: "contextIdApplicationContextInitializer.ContextId"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 61
      expression: "parent != null"
      range: "(61,7)-(61,20)"
      evaluatedAs: true
      internalMethodName: "getContextId"
    - lineNumber: 61
      expression: "parent.containsBean(ContextId.class.getName())"
      range: "(61,25)-(61,70)"
      evaluatedAs: false
      internalMethodName: "getContextId"
    - lineNumber: 69
      expression: "StringUtils.hasText(name)"
      range: "(69,10)-(69,34)"
      evaluatedAs: true
      internalMethodName: "getApplicationId"
  - pathId: "path3"
    testPathName: "initializeWhenParentNotContainsBeanContextIdGetNameAndStringUtilsNotHasTextName"
    constructorSignature: "<init>() : void"
    modelFingerprint: "D99B3FC227F13362EFA42AFC9BFD6BCB"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "applicationContext"
      modelFingerprint: "DF659A8AABEBC6871FFB4901FD8A4D44"
      valueUuid: "applicationContext"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "D606F109D7F437291F4C234291BAEA74"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getParent():applicationContext2"
    - type: "LOCAL_VARIABLE"
      name: "parent"
      modelFingerprint: "650D42FA3ED29768E2FD0F0841CCA8CD"
      valueUuid: "applicationContext2"
      methodExercised:
        expression: "containsBean(name:string):boolean1"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "862B2199EAED822A0A6CD36A8ACF2BC7"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getEnvironment():configurableEnvironment"
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "CDD4AFAABC84CFB63D9EE0C04CEE6661"
      valueUuid: "configurableEnvironment"
      methodExercised:
        expression: "getProperty(key:uniqueUuid3):string2"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "54487C1342835B70D21156D482BFAC73"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:string2):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "contextId"
      modelFingerprint: "7B79750F11CE8BCF3199F9CA50D8F97B"
      valueUuid: "contextIdApplicationContextInitializer.ContextId"
      methodExercised:
        expression: "getId():string3"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "1DD86AE1E112DD8728446EFA657CE749"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "setId(id:string3):void"
    - type: "LOCAL_VARIABLE"
      name: "applicationContext"
      modelFingerprint: "609C6B5F8E19B62507154D334DC81156"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getBeanFactory():configurableListableBeanFactory"
        throwsExceptions:
        - "java.lang.IllegalStateException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "2C31EDBF5DA78A604E6FCF0BEF509E6F"
      valueUuid: "configurableListableBeanFactory"
      methodExercised:
        expression: "registerSingleton(beanName:string4,singletonObject:contextIdApplicationContextInitializer.ContextId):void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "applicationContext.setId(contextId.getId());"
      lineNumber: 55
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: contextId - Method: getId"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.ContextIdApplicationContextInitializer"
        parameters: []
      valueType: "org.springframework.boot.context.ContextIdApplicationContextInitializer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext2"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.context.ContextIdApplicationContextInitializer$ContextId"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.application.name"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.ContextIdApplicationContextInitializer$ContextId"
      uuid: "contextIdApplicationContextInitializer.ContextId"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getId1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "applicationContext"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getId1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "configurableListableBeanFactory"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.context.ContextIdApplicationContextInitializer$ContextId"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.ContextIdApplicationContextInitializer$ContextId"
      uuid: "contextIdApplicationContextInitializer.ContextId"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 61
      expression: "parent != null"
      range: "(61,7)-(61,20)"
      evaluatedAs: true
      internalMethodName: "getContextId"
    - lineNumber: 61
      expression: "parent.containsBean(ContextId.class.getName())"
      range: "(61,25)-(61,70)"
      evaluatedAs: false
      internalMethodName: "getContextId"
    - lineNumber: 69
      expression: "StringUtils.hasText(name)"
      range: "(69,10)-(69,34)"
      evaluatedAs: false
      internalMethodName: "getApplicationId"
