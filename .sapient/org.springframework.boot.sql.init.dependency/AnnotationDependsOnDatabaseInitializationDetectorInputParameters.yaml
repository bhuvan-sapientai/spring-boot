---
modelFingerprint: "8B1F77BAE9DB39676B2C525EA4D94ACF"
targetClass:
  fullClassName: "org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector"
methods:
- method:
    name: "detect"
    sourceCodeSignature: "Set<String> detect(ConfigurableListableBeanFactory beanFactory)"
    returnType: "java.util.Set"
    genericReturnType: "java.lang.String"
    parameters:
    - name: "beanFactory"
      type: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
    instructionFingerprint: "C92A7FC765351429E66CC4D0FE6DF3E5"
  paths:
  - pathId: "path1"
    testPathName: "detectWhenBeanFactoryFindAnnotationOnBeanBeanNameDependsOnDatabaseInitializationFalseIsNotNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "7F907CE0D618E5EB3FEFC67E6D0EC1F0"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "beanFactory"
      modelFingerprint: "2B7EF4D05F05B01EB1F2B9BE20317A7C"
      valueUuid: "beanFactory"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "5ADE31BCC1F71599BC5F14A617145F91"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "getBeanDefinitionNames():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "beanFactory"
      modelFingerprint: "FAB52875254E13948F6C667B76C4DC66"
      valueUuid: "beanFactory"
      methodExercised:
        expression: "findAnnotationOnBean(beanName:string,annotationType:uniqueUuid1,allowFactoryBeanInit:uniqueUuid2):annotation"
        throwsExceptions:
        - "org.springframework.beans.factory.NoSuchBeanDefinitionException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "491C3148861BDB1651A746483A837353"
      valueUuid: "hashSet"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector"
        parameters: []
      valueType: "org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getBeanDefinitionNamesItem1"
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
      uuid: "beanFactory"
    - sapientType: "MOCK"
      valueType: "java.lang.annotation.Annotation"
      uuid: "annotation"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getBeanDefinitionNamesItem1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.sql.init.dependency.DependsOnDatabaseInitialization"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.sql.init.dependency.DependsOnDatabaseInitialization"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashSet"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "return_of_getBeanDefinitionNamesItem1"
          valueType: "java.lang.String"
          uuid: "string"
      valueType: "java.util.Set"
      genericValueType: "java.lang.String"
      uuid: "hashSet"
    branches:
    - lineNumber: 35
      expression: "for-each(beanFactory.getBeanDefinitionNames())"
      range: "(35,26)-(35,61)"
      evaluatedAs: true
    - lineNumber: 36
      expression: "beanFactory.findAnnotationOnBean(beanName, DependsOnDatabaseInitialization.class,\
        \ false) != null"
      range: "(36,8)-(36,103)"
      evaluatedAs: true
