---
modelFingerprint: "F6083F00D96202AEC646204C2BC86699"
targetClass:
  fullClassName: "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer"
methods:
- method:
    name: "registerBeanDefinitions"
    sourceCodeSignature: "void registerBeanDefinitions(AnnotationMetadata importingClassMetadata,\
      \ BeanDefinitionRegistry registry)"
    returnType: "void"
    parameters:
    - name: "importingClassMetadata"
      type: "org.springframework.core.type.AnnotationMetadata"
    - name: "registry"
      type: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
    instructionFingerprint: "9D8B9673EDC4B0D75324BB226698C335"
  paths:
  - pathId: "path1"
    testPathName: "registerBeanDefinitionsWhenRegistryNotContainsBeanDefinitionName"
    constructorSignature: "<init>() : void"
    modelFingerprint: "C2122DB8AEBBE6523124886FE4655FEF"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "importingClassMetadata"
      modelFingerprint: "EF85B2B2F70FD2316923FBC9DEB8C311"
      valueUuid: "importingClassMetadata"
    - type: "INPUT"
      name: "registry"
      modelFingerprint: "14F926E67FDB678BF2FEC697D6F094DC"
      valueUuid: "registry"
    - type: "LOCAL_VARIABLE"
      name: "registry"
      modelFingerprint: "D7B2ABA0B015328A5D1DCE541A517B7A"
      valueUuid: "registry"
      methodExercised:
        expression: "containsBeanDefinition(beanName:string):boolean1"
    - type: "STATIC"
      name: "BeanDefinitionBuilder.class.real"
      modelFingerprint: "355D32468E5176C63B577E1FD928CED5"
      valueUuid: "BeanDefinitionBuilder.class.real"
      methodExercised:
        expression: "rootBeanDefinition(beanClass:uniqueUuid1):beanDefinitionBuilder"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "builder"
      modelFingerprint: "CA644B881A2D5D3167CD17F931761002"
      valueUuid: "beanDefinitionBuilder"
      methodExercised:
        expression: "getBeanDefinition():abstractBeanDefinition"
    - type: "LOCAL_VARIABLE"
      name: "registry"
      modelFingerprint: "150B8AB4C2199950E799C173051CC58F"
      valueUuid: "registry"
      methodExercised:
        expression: "registerBeanDefinition(beanName:string,beanDefinition:abstractBeanDefinition):void"
        throwsExceptions:
        - "org.springframework.beans.factory.BeanDefinitionStoreException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer"
        parameters: []
      valueType: "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.type.AnnotationMetadata"
      uuid: "importingClassMetadata"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "REAL"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "BeanDefinitionBuilder.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
        method: "rootBeanDefinition"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor"
            uuid: "uniqueUuid2"
            fixed: true
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
        method: "rootBeanDefinition"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor"
            uuid: "uniqueUuid3"
            fixed: true
      valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
      uuid: "beanDefinitionBuilder"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
            method: "rootBeanDefinition"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor"
                valueType: "java.lang.Class"
                genericValueType: "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor"
                fixed: true
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder"
        methodParameters: []
        methodName: "getBeanDefinition"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "abstractBeanDefinition"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.factory.support.BeanDefinitionRegistry"
      uuid: "registry"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.beans.factory.support.AbstractBeanDefinition"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
            method: "rootBeanDefinition"
            methodParameters:
            - value:
                sapientType: "CLASS"
                content: !<regular>
                  value: "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor"
                valueType: "java.lang.Class"
                genericValueType: "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor"
                fixed: true
          valueType: "org.springframework.beans.factory.support.BeanDefinitionBuilder"
          uuid: "beanDefinitionBuilder"
        methodParameters: []
        methodName: "getBeanDefinition"
      valueType: "org.springframework.beans.factory.support.AbstractBeanDefinition"
      uuid: "abstractBeanDefinition"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 71
      expression: "!registry.containsBeanDefinition(name)"
      range: "(71,7)-(71,44)"
      evaluatedAs: true
