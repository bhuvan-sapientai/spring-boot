---
modelFingerprint: "7C59BF8C0BF6AFF8CE6869B3F2CD26F3"
targetClass:
  fullClassName: "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor"
methods:
- method:
    name: "getOrder"
    sourceCodeSignature: "int getOrder()"
    returnType: "int"
    instructionFingerprint: "D097CF84226A0A5BDFC73B598FC0E93C"
  paths:
  - pathId: "path1"
    testPathName: "getOrderTest"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory)\
      \ : void"
    modelFingerprint: "B0AF2A2E3CD7A356EF9E8AB34CCC46E7"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "postProcessEnvironment"
    sourceCodeSignature: "void postProcessEnvironment(ConfigurableEnvironment environment,\
      \ SpringApplication application)"
    returnType: "void"
    parameters:
    - name: "environment"
      type: "org.springframework.core.env.ConfigurableEnvironment"
    - name: "application"
      type: "org.springframework.boot.SpringApplication"
    instructionFingerprint: "0055449D8D5F9D959624F30635C93AC8"
  paths:
  - pathId: "path1"
    testPathName: "postProcessEnvironmentTest"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory)\
      \ : void"
    modelFingerprint: "8865F43D585CCAB841EFD05FAEB0F9B0"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "978995471A63D9FC87674EB6D3908572"
      valueUuid: "target"
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "3F73E3E0E26E26EEEFAD4DD95D3AE3D4"
      valueUuid: "environment"
    - type: "INPUT"
      name: "application"
      modelFingerprint: "86BFF8B99831ED759F640847C7C0F409"
      valueUuid: "application"
    - type: "LOCAL_VARIABLE"
      name: "logFactory"
      modelFingerprint: "99A0BE66994AC8F793BDC7CE0024EE04"
      valueUuid: "logFactory"
      methodExercised:
        expression: "getLog(destination:uniqueUuid2):log"
    - type: "STATIC"
      name: "RandomValuePropertySource.class"
      modelFingerprint: "ED04D86C27E54C9BD16A7307B7C1103F"
      valueUuid: "RandomValuePropertySource.class"
      methodExercised:
        expression: "addToEnvironment(environment:environment,logger:log):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor"
        parameters:
        - name: "logFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.DeferredLogFactory"
            uuid: "logFactory"
      valueType: "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "application"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.DeferredLogFactory"
      uuid: "logFactory"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.env.RandomValuePropertySource"
      uuid: "RandomValuePropertySource.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
