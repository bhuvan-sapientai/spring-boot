---
modelFingerprint: "7DBACF8807C5330A9ECDB1C67E382CF5"
targetClass:
  fullClassName: "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor"
methods:
- method:
    name: "postProcessEnvironment"
    sourceCodeSignature: "void postProcessEnvironment(ConfigurableEnvironment environment,\
      \ SpringApplication application)"
    returnType: "void"
    parameters:
    - name: "environment"
      type: "org.springframework.core.env.ConfigurableEnvironment"
    - name: "application"
      type: "org.springframework.boot.SpringApplication"
    instructionFingerprint: "5B0CCC3B48189B4E21A6D9F0DC3BB763"
  paths:
  - pathId: "path1"
    testPathName: "postProcessEnvironmentWhenPropertySourceIsNotNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "408AAB168082A8E2509B9EC8CE8FBC38"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "2AB40C7309B23844284816875A86BEFD"
      valueUuid: "environment"
    - type: "INPUT"
      name: "application"
      modelFingerprint: "74E45AF33EDBBB06DE0D71FF3E227B5D"
      valueUuid: "application"
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "E97B1B215647A456976BAD20E92F84F8"
      valueUuid: "environment"
      methodExercised:
        expression: "getPropertySources():mutablePropertySources"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E59C32CD5DFD6C74E7C403EC84EA1038"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "get(name:string):propertySource"
    - type: "LOCAL_VARIABLE"
      name: "application"
      modelFingerprint: "687767F37E672AC9E6DCAF412A328CB8"
      valueUuid: "application"
      methodExercised:
        expression: "getEnvironmentPrefix():environmentPrefix"
    - type: "LOCAL_VARIABLE"
      name: "propertySource"
      modelFingerprint: "B5321590795B95A29E33A936D80D204F"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getSource():source"
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "E97B1B215647A456976BAD20E92F84F8"
      valueUuid: "environment"
      methodExercised:
        expression: "getPropertySources():mutablePropertySources2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "DD0AF676E410FDBE78A5A3D6E0BFC8B6"
      valueUuid: "mutablePropertySources2"
      methodExercised:
        expression: "replace(name:string,propertySource:systemEnvironmentPropertySourceEnvironmentPostProcessor.OriginAwareSystemEnvironmentPropertySource):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor"
        parameters: []
      valueType: "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            uuid: "application-primarySources"
        propertiesMap:
          environmentPrefix:
            sapientType: "BASIC"
            content: !<regular>
              value: "environmentPrefix1"
            valueType: "java.lang.String"
            uuid: "environmentPrefix"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "application"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertySource"
      genericValueType: "?"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "string"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            uuid: "application-primarySources"
        propertiesMap:
          environmentPrefix:
            sapientType: "BASIC"
            content: !<regular>
              value: "environmentPrefix1"
            valueType: "java.lang.String"
            uuid: "environmentPrefix"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "application"
    - sapientType: "BASIC"
      content: !<regular>
        value: "environmentPrefix1"
      valueType: "java.lang.String"
      uuid: "environmentPrefix"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertySource"
      genericValueType: "?"
      uuid: "propertySource"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      uuid: "source"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "string"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource"
      uuid: "systemEnvironmentPropertySourceEnvironmentPostProcessor.OriginAwareSystemEnvironmentPropertySource"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 54
      expression: "propertySource != null"
      range: "(54,7)-(54,28)"
      evaluatedAs: true
- method:
    name: "getOrder"
    sourceCodeSignature: "int getOrder()"
    returnType: "int"
    instructionFingerprint: "342D4E4F854A43E567A525BCBCDEA20C"
  paths:
  - pathId: "path1"
    testPathName: "getOrderTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "653FFA1AA760AA49CDA80251DDB17A5F"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setOrder"
    sourceCodeSignature: "void setOrder(int order)"
    returnType: "void"
    parameters:
    - name: "order"
      type: "int"
    instructionFingerprint: "F88C98C2D7593841680C2CA0FECB4028"
  paths:
  - pathId: "path1"
    testPathName: "setOrderTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "508F327E707578A7601DD6859FED6F5D"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
