---
modelFingerprint: "3575017D4221CC568210C1331A256FBB"
targetClass:
  fullClassName: "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener"
methods:
- method:
    name: "with"
    sourceCodeSignature: "EnvironmentPostProcessorApplicationListener with(EnvironmentPostProcessorsFactory\
      \ postProcessorsFactory)"
    returnType: "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener"
    parameters:
    - name: "postProcessorsFactory"
      type: "org.springframework.boot.env.EnvironmentPostProcessorsFactory"
    instructionFingerprint: "F7D8211B1AD26C2D64FC7BB96C465EE3"
  paths:
  - pathId: "path1"
    testPathName: "withTest"
    modelFingerprint: "DEBDEB8331975560E017E96FFC356A17"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "postProcessorsFactory"
      modelFingerprint: "99DFA60BEC0676EC418B99F7DB632EBE"
      valueUuid: "postProcessorsFactory"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3AA28F9F37A7DFBECFAEB248F714A97"
      valueUuid: "environmentPostProcessorApplicationListenerNotNull"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.env.EnvironmentPostProcessorsFactory"
      uuid: "postProcessorsFactory"
    - sapientType: "NOT_NULL"
      valueType: "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener"
      uuid: "environmentPostProcessorApplicationListenerNotNull"
      fixed: true
- method:
    name: "supportsEventType"
    sourceCodeSignature: "boolean supportsEventType(Class<? extends ApplicationEvent>\
      \ eventType)"
    returnType: "boolean"
    parameters:
    - name: "eventType"
      type: "java.lang.Class"
    instructionFingerprint: "2C5A350EC263DA8D6DFC0B744BE8C470"
  paths:
  - pathId: "path1"
    testPathName: "supportsEventTypeWhenApplicationFailedEventIsAssignableFromEventType"
    constructorSignature: "<init>() : void"
    modelFingerprint: "6C61C84468DE687EB12454263A3251DC"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "eventType"
      modelFingerprint: "2CF14DBA0326330A9676DE7648F25050"
      valueUuid: "eventType"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isAssignableFrom(java.lang.Class<?\
        \ extends org.springframework.context.ApplicationEvent>) : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener"
        parameters: []
      valueType: "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener"
      uuid: "target"
    - sapientType: "CLASS"
      content: !<regular>
        value: "? extends org.springframework.context.ApplicationEvent"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.springframework.context.ApplicationEvent"
      uuid: "eventType"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 86
      expression: "ApplicationEnvironmentPreparedEvent.class.isAssignableFrom(eventType)"
      range: "(86,10)-(86,78)"
      evaluatedAs: false
    - lineNumber: 87
      expression: "ApplicationPreparedEvent.class.isAssignableFrom(eventType)"
      range: "(87,8)-(87,65)"
      evaluatedAs: false
    - lineNumber: 88
      expression: "ApplicationFailedEvent.class.isAssignableFrom(eventType)"
      range: "(88,8)-(88,63)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "supportsEventTypeWhenApplicationFailedEventNotIsAssignableFromEventType"
    constructorSignature: "<init>() : void"
    modelFingerprint: "6B0C4AFAB9920CD3E53218276CB29D0E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "eventType"
      modelFingerprint: "2CF14DBA0326330A9676DE7648F25050"
      valueUuid: "eventType"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isAssignableFrom(java.lang.Class<?\
        \ extends org.springframework.context.ApplicationEvent>) : boolean"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener"
        parameters: []
      valueType: "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener"
      uuid: "target"
    - sapientType: "CLASS"
      content: !<regular>
        value: "? extends org.springframework.context.ApplicationEvent"
      valueType: "java.lang.Class"
      genericValueType: "? extends org.springframework.context.ApplicationEvent"
      uuid: "eventType"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 86
      expression: "ApplicationEnvironmentPreparedEvent.class.isAssignableFrom(eventType)"
      range: "(86,10)-(86,78)"
      evaluatedAs: false
    - lineNumber: 87
      expression: "ApplicationPreparedEvent.class.isAssignableFrom(eventType)"
      range: "(87,8)-(87,65)"
      evaluatedAs: false
    - lineNumber: 88
      expression: "ApplicationFailedEvent.class.isAssignableFrom(eventType)"
      range: "(88,8)-(88,63)"
      evaluatedAs: false
- method:
    name: "onApplicationEvent"
    sourceCodeSignature: "void onApplicationEvent(ApplicationEvent event)"
    returnType: "void"
    parameters:
    - name: "event"
      type: "org.springframework.context.ApplicationEvent"
    instructionFingerprint: "0E1A71BF5A5CEB4E7390A372E46E9399"
  paths:
  - pathId: "path3"
    testPathName: "onApplicationEventWhenEventNotInstanceOfApplicationFailedEvent"
    constructorSignature: "<init>() : void"
    modelFingerprint: "DDC75A8E90B548CBA7BB72AC14E3F988"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "event"
      modelFingerprint: "7303C501EF2A21A3B85DEC6F19C5F1EE"
      valueUuid: "event"
    - type: "FIELD"
      name: "deferredLogs"
      modelFingerprint: "3FCF1C2A7A12D3001A610B02ED3E6A7E"
      valueUuid: "deferredLogs"
      methodExercised:
        expression: "switchOverAll():void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener"
        parameters: []
      valueType: "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.event.ApplicationPreparedEvent"
      uuid: "event"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.DeferredLogs"
        parameters: []
      valueType: "org.springframework.boot.logging.DeferredLogs"
      uuid: "deferredLogs"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 93
      expression: "event instanceof ApplicationEnvironmentPreparedEvent environmentPreparedEvent"
      range: "(93,7)-(93,83)"
      evaluatedAs: false
    - lineNumber: 96
      expression: "event instanceof ApplicationPreparedEvent"
      range: "(96,7)-(96,47)"
      evaluatedAs: true
    - lineNumber: 99
      expression: "event instanceof ApplicationFailedEvent"
      range: "(99,7)-(99,45)"
      evaluatedAs: false
  - pathId: "path4"
    testPathName: "onApplicationEventWhenEventInstanceOfApplicationFailedEvent"
    constructorSignature: "<init>() : void"
    modelFingerprint: "2A2EDD2043D3F0ABAC814FA301198D0A"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "event"
      modelFingerprint: "D369CC8CBA4CCD33366D1004A6407399"
      valueUuid: "event"
    - type: "FIELD"
      name: "deferredLogs"
      modelFingerprint: "3FCF1C2A7A12D3001A610B02ED3E6A7E"
      valueUuid: "deferredLogs"
      methodExercised:
        expression: "switchOverAll():void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener"
        parameters: []
      valueType: "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.event.ApplicationFailedEvent"
      uuid: "event"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.DeferredLogs"
        parameters: []
      valueType: "org.springframework.boot.logging.DeferredLogs"
      uuid: "deferredLogs"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 93
      expression: "event instanceof ApplicationEnvironmentPreparedEvent environmentPreparedEvent"
      range: "(93,7)-(93,83)"
      evaluatedAs: false
    - lineNumber: 96
      expression: "event instanceof ApplicationPreparedEvent"
      range: "(96,7)-(96,47)"
      evaluatedAs: false
    - lineNumber: 99
      expression: "event instanceof ApplicationFailedEvent"
      range: "(99,7)-(99,45)"
      evaluatedAs: true
  - pathId: "path1"
    testPathName: "onApplicationEventWhenGetEnvironmentPostProcessorsApplicationGetResourceLoaderEventGetBootstrapContextIsNotEmptyAndEven"
    constructorSignature: "<init>() : void"
    modelFingerprint: "3CFD88D8B90B9191C5651DD3CAC4BA3D"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "event"
      modelFingerprint: "BCA843B1CF64881555A94C3191C4A824"
      valueUuid: "event"
    - type: "LOCAL_VARIABLE"
      name: "event"
      modelFingerprint: "88806B0BB27CAC71BC12436B296393BE"
      valueUuid: "event"
      methodExercised:
        expression: "getEnvironment():environment"
    - type: "LOCAL_VARIABLE"
      name: "event"
      modelFingerprint: "AC4E3D9A608CCDA88307FE5DF6CC0305"
      valueUuid: "event"
      methodExercised:
        expression: "getSpringApplication():springApplication"
    - type: "LOCAL_VARIABLE"
      name: "application"
      modelFingerprint: "924A235471FAF7A7EDFE39AF2E5D1A96"
      valueUuid: "springApplication"
      methodExercised:
        expression: "getResourceLoader():resourceLoader"
    - type: "LOCAL_VARIABLE"
      name: "event"
      modelFingerprint: "2591C08692BE87A3DD754EE1D08B7697"
      valueUuid: "event"
      methodExercised:
        expression: "getBootstrapContext():configurableBootstrapContext"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "62698D9C57A51BF517A17D4899D3284A"
      methodExercised:
        expression: "getEnvironmentPostProcessors(resourceLoader:resourceLoader,bootstrapContext:configurableBootstrapContext):list"
    - type: "LOCAL_VARIABLE"
      name: "postProcessor"
      modelFingerprint: "E497FEFD342120BF3A9229DC7F2198DE"
      valueUuid: "object"
      methodExercised:
        expression: "postProcessEnvironment(environment:environment,application:springApplication):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener"
        parameters: []
      valueType: "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent"
      uuid: "event"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent"
      uuid: "event"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent"
      uuid: "event"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            uuid: "springApplication-primarySources"
        propertiesMap:
          resourceLoader:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "springApplication"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            uuid: "springApplication-primarySources"
        propertiesMap:
          resourceLoader:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "springApplication"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent"
      uuid: "event"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ConfigurableBootstrapContext"
      uuid: "configurableBootstrapContext"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.env.EnvironmentPostProcessor"
          uuid: "object"
          collectionUuid: "list"
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.env.EnvironmentPostProcessor"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ConfigurableBootstrapContext"
      uuid: "configurableBootstrapContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.env.EnvironmentPostProcessor"
      uuid: "object"
      collectionUuid: "list"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.SpringApplication"
        parameters:
        - name: "primarySources"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.Class[]"
            uuid: "springApplication-primarySources"
        propertiesMap:
          resourceLoader:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "springApplication"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 93
      expression: "event instanceof ApplicationEnvironmentPreparedEvent environmentPreparedEvent"
      range: "(93,7)-(93,83)"
      evaluatedAs: true
    - lineNumber: 107
      expression: "for-each(getEnvironmentPostProcessors(application.getResourceLoader(),\
        \ event.getBootstrapContext()))"
      range: "(107,49)-(108,32)"
      evaluatedAs: true
      internalMethodName: "onApplicationEnvironmentPreparedEvent"
    - lineNumber: 96
      expression: "event instanceof ApplicationPreparedEvent"
      range: "(96,7)-(96,47)"
      evaluatedAs: false
    - lineNumber: 99
      expression: "event instanceof ApplicationFailedEvent"
      range: "(99,7)-(99,45)"
      evaluatedAs: false
- method:
    name: "getEnvironmentPostProcessors"
    sourceCodeSignature: "List<EnvironmentPostProcessor> getEnvironmentPostProcessors(ResourceLoader\
      \ resourceLoader, ConfigurableBootstrapContext bootstrapContext)"
    returnType: "java.util.List"
    genericReturnType: "org.springframework.boot.env.EnvironmentPostProcessor"
    parameters:
    - name: "resourceLoader"
      type: "org.springframework.core.io.ResourceLoader"
    - name: "bootstrapContext"
      type: "org.springframework.boot.ConfigurableBootstrapContext"
    instructionFingerprint: "446D39B09BC9BBF1CFD4B4918F6D9E87"
  paths:
  - pathId: "path1"
    testPathName: "getEnvironmentPostProcessorsWhenResourceLoaderIsNotNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "CE03693D145E9FA842836784B7D96EE6"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "resourceLoader"
      modelFingerprint: "2E069C5563D3086BF4B1FEA580A031FD"
      valueUuid: "resourceLoader"
    - type: "INPUT"
      name: "bootstrapContext"
      modelFingerprint: "10B4C5E8932B1B51CBD0F88CC11CB35F"
      valueUuid: "bootstrapContext"
    - type: "LOCAL_VARIABLE"
      name: "resourceLoader"
      modelFingerprint: "36FDB8D01F79AF7FAD58B70C2DB945C7"
      valueUuid: "resourceLoader"
      methodExercised:
        expression: "getClassLoader():classLoader"
    - type: "LOCAL_VARIABLE"
      name: "postProcessorsFactory"
      modelFingerprint: "789C6C8DD0F1E4668E0F6D8622E3755B"
      valueUuid: "object"
      methodExercised:
        expression: "getEnvironmentPostProcessors(logFactory:deferredLogs,bootstrapContext:bootstrapContext):list"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "47F13FEBA14FC1FFDB2EC077DCF24619"
      valueUuid: "list"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "EnvironmentPostProcessorsFactory postProcessorsFactory = this.postProcessorsFactory.apply(classLoader);"
      lineNumber: 128
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: postProcessorsFactory - Method: apply"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener"
        parameters: []
      valueType: "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ConfigurableBootstrapContext"
      uuid: "bootstrapContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.env.EnvironmentPostProcessorsFactory"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.env.EnvironmentPostProcessor"
      uuid: "list"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.logging.DeferredLogs"
      uuid: "deferredLogs"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ConfigurableBootstrapContext"
      uuid: "bootstrapContext"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.env.EnvironmentPostProcessor"
      uuid: "list"
    branches:
    - lineNumber: 127
      expression: "resourceLoader != null"
      range: "(127,30)-(127,51)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getEnvironmentPostProcessorsWhenResourceLoaderIsNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "BE4A49EB5035AA2258414987C6E4C520"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "resourceLoader"
      modelFingerprint: "EC291F04DA80AD300B8AF50515D052FE"
      valueUuid: "resourceLoader"
    - type: "INPUT"
      name: "bootstrapContext"
      modelFingerprint: "10B4C5E8932B1B51CBD0F88CC11CB35F"
      valueUuid: "bootstrapContext"
    - type: "LOCAL_VARIABLE"
      name: "postProcessorsFactory"
      modelFingerprint: "789C6C8DD0F1E4668E0F6D8622E3755B"
      valueUuid: "object"
      methodExercised:
        expression: "getEnvironmentPostProcessors(logFactory:deferredLogs,bootstrapContext:bootstrapContext):list"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "47F13FEBA14FC1FFDB2EC077DCF24619"
      valueUuid: "list"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "EnvironmentPostProcessorsFactory postProcessorsFactory = this.postProcessorsFactory.apply(classLoader);"
      lineNumber: 128
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: postProcessorsFactory - Method: apply"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener"
        parameters: []
      valueType: "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener"
      uuid: "target"
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ConfigurableBootstrapContext"
      uuid: "bootstrapContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.env.EnvironmentPostProcessorsFactory"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.env.EnvironmentPostProcessor"
      uuid: "list"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.logging.DeferredLogs"
      uuid: "deferredLogs"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ConfigurableBootstrapContext"
      uuid: "bootstrapContext"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.env.EnvironmentPostProcessor"
      uuid: "list"
    branches:
    - lineNumber: 127
      expression: "resourceLoader != null"
      range: "(127,30)-(127,51)"
      evaluatedAs: false
- method:
    name: "getOrder"
    sourceCodeSignature: "int getOrder()"
    returnType: "int"
    instructionFingerprint: "342D4E4F854A43E567A525BCBCDEA20C"
  paths:
  - pathId: "path1"
    testPathName: "getOrderTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "4E8FC2771E0BFFF027839E0CBEDE7D80"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setOrder"
    sourceCodeSignature: "void setOrder(int order)"
    returnType: "void"
    parameters:
    - name: "order"
      type: "int"
    instructionFingerprint: "F88C98C2D7593841680C2CA0FECB4028"
  paths:
  - pathId: "path1"
    testPathName: "setOrderTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "3558B5A55413D2EF708A9D08AC33A281"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
