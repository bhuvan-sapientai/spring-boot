---
modelFingerprint: "7671A49E5796DF6502A94810279D1BE7"
targetClass:
  fullClassName: "org.springframework.boot.env.OriginTrackedYamlLoader"
methods:
- method:
    name: "createYaml"
    sourceCodeSignature: "Yaml createYaml()"
    returnType: "org.yaml.snakeyaml.Yaml"
    instructionFingerprint: "E0D283E5387E088118A06E0F331B0ED4"
  paths:
  - pathId: "path1"
    testPathName: "createYamlTest"
    constructorSignature: "<init>(org.springframework.core.io.Resource) : void"
    modelFingerprint: "A213F0E931F389B0EDCA3A40B5DC2355"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "525917AF246822CF9B1683755B15C62A"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "1C66D96074E6665CB6BDD4CBA3CE9C68"
      valueUuid: "yamlNotNull"
    disabled: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedYamlLoader"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.Resource"
            uuid: "resource"
      valueType: "org.springframework.boot.env.OriginTrackedYamlLoader"
      uuid: "target"
    - sapientType: "NOT_NULL"
      valueType: "org.yaml.snakeyaml.Yaml"
      uuid: "yamlNotNull"
      fixed: true
- method:
    name: "load"
    sourceCodeSignature: "List<Map<String, Object>> load()"
    returnType: "java.util.List"
    genericReturnType: "java.util.Map<java.lang.String,java.lang.Object>"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.io.IOException"
    instructionFingerprint: "90C76E63CD97E9E3F4B30E5294516C08"
  paths:
  - pathId: "path5"
    testPathName: "loadTest"
    constructorSignature: "<init>(org.springframework.core.io.Resource) : void"
    modelFingerprint: "7839A25F2B8267924A7AC856F4586011"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "938136B73E4E799E742BDAF524F53582"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      name: "resource"
      modelFingerprint: "5B5C35D79B6C52369B57922472DE393E"
      valueUuid: "resource"
      methodExercised:
        expression: "getInputStream():inputStream"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      name: "yaml"
      modelFingerprint: "DD34335E81A123623B8C828F9BD94D40"
      valueUuid: "yaml"
      methodExercised:
        expression: "loadAll(yaml:unicodeReader):iterable"
    - type: "STATIC"
      name: "CollectionFactory.class"
      modelFingerprint: "4A5EDFE9BC11173D6EE6BD267F6D28F3"
      valueUuid: "CollectionFactory.class"
      methodExercised:
        expression: "createStringAdaptingProperties():properties"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "AA9E20E79BE1AF4A0C00E18D70CD1C0C"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:uniqueUuid1):boolean6"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E669AB37A3CA07E4175C603AED1BB119"
      valueUuid: "arrayList"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      lineNumber: 203
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: yaml - Method: loadAll"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedYamlLoader"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.Resource"
            uuid: "resource"
            nameForMock: "resource"
      valueType: "org.springframework.boot.env.OriginTrackedYamlLoader"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
      nameForMock: "resource"
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "inputStream"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.yaml.snakeyaml.Yaml"
        parameters:
        - name: "constructor"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.constructor.Constructor"
              parameters:
              - name: "loadingConfig"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.yaml.snakeyaml.LoaderOptions"
                    parameters: []
                    propertiesMap:
                      allowDuplicateKeys:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: false
                        valueType: "boolean"
                        fixed: true
                      tagInspector:
                        sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                        valueType: "org.yaml.snakeyaml.inspector.TagInspector"
                        uuid: "tagInspector"
                  valueType: "org.yaml.snakeyaml.LoaderOptions"
                  uuid: "loaderOptions"
                  fixed: true
            valueType: "org.yaml.snakeyaml.constructor.Constructor"
            uuid: "constructor"
            fixed: true
        - name: "representer"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.representer.Representer"
              parameters:
              - name: "options"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.yaml.snakeyaml.DumperOptions"
                    parameters: []
                  valueType: "org.yaml.snakeyaml.DumperOptions"
                  uuid: "dumperOptions"
                  fixed: true
            valueType: "org.yaml.snakeyaml.representer.Representer"
            uuid: "representer"
            fixed: true
        - name: "dumperOptions"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.DumperOptions"
              parameters: []
            valueType: "org.yaml.snakeyaml.DumperOptions"
            uuid: "dumperOptions"
            fixed: true
        - name: "loadingConfig"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.LoaderOptions"
              parameters: []
              propertiesMap:
                allowDuplicateKeys:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: false
                  valueType: "boolean"
                  fixed: true
                tagInspector:
                  sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                  valueType: "org.yaml.snakeyaml.inspector.TagInspector"
                  uuid: "tagInspector"
            valueType: "org.yaml.snakeyaml.LoaderOptions"
            uuid: "loaderOptions"
            fixed: true
      valueType: "org.yaml.snakeyaml.Yaml"
      uuid: "yaml"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "COLLECTION"
          content: !<collection>
            parameters: []
            values: []
          valueType: "java.util.Map"
          uuid: "object"
          collectionUuid: "iterable"
      valueType: "java.lang.Iterable"
      genericValueType: "java.lang.Object"
      uuid: "iterable"
    - sapientType: "ANY"
      valueType: "org.yaml.snakeyaml.reader.UnicodeReader"
      uuid: "unicodeReader"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.CollectionFactory"
      uuid: "CollectionFactory.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Properties"
      uuid: "properties"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.util.Map<java.lang.String,java.lang.Object>"
      uuid: "arrayList"
  - pathId: "path1"
    testPathName: "loadTest3"
    constructorSignature: "<init>(org.springframework.core.io.Resource) : void"
    modelFingerprint: "DD8E0585DC35304C53EFF045F88BEDA6"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "938136B73E4E799E742BDAF524F53582"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      name: "resource"
      modelFingerprint: "5B5C35D79B6C52369B57922472DE393E"
      valueUuid: "resource"
      methodExercised:
        expression: "getInputStream():inputStream"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      name: "yaml"
      modelFingerprint: "DD34335E81A123623B8C828F9BD94D40"
      valueUuid: "yaml"
      methodExercised:
        expression: "loadAll(yaml:unicodeReader):iterable"
    - type: "STATIC"
      name: "CollectionFactory.class"
      modelFingerprint: "85B9D085237570ADB69E0F3213A14338"
      valueUuid: "CollectionFactory.class"
      methodExercised:
        expression: "createStringAdaptingProperties():properties"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "AA9E20E79BE1AF4A0C00E18D70CD1C0C"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:uniqueUuid3):boolean6"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E669AB37A3CA07E4175C603AED1BB119"
      valueUuid: "arrayList"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      lineNumber: 203
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: yaml - Method: loadAll"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedYamlLoader"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.Resource"
            uuid: "resource"
            nameForMock: "resource"
      valueType: "org.springframework.boot.env.OriginTrackedYamlLoader"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
      nameForMock: "resource"
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "inputStream"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.yaml.snakeyaml.Yaml"
        parameters:
        - name: "constructor"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.constructor.Constructor"
              parameters:
              - name: "loadingConfig"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.yaml.snakeyaml.LoaderOptions"
                    parameters: []
                    propertiesMap:
                      allowDuplicateKeys:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: false
                        valueType: "boolean"
                        fixed: true
                      tagInspector:
                        sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                        valueType: "org.yaml.snakeyaml.inspector.TagInspector"
                        uuid: "tagInspector"
                  valueType: "org.yaml.snakeyaml.LoaderOptions"
                  uuid: "loaderOptions"
                  fixed: true
            valueType: "org.yaml.snakeyaml.constructor.Constructor"
            uuid: "constructor"
            fixed: true
        - name: "representer"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.representer.Representer"
              parameters:
              - name: "options"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.yaml.snakeyaml.DumperOptions"
                    parameters: []
                  valueType: "org.yaml.snakeyaml.DumperOptions"
                  uuid: "dumperOptions"
                  fixed: true
            valueType: "org.yaml.snakeyaml.representer.Representer"
            uuid: "representer"
            fixed: true
        - name: "dumperOptions"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.DumperOptions"
              parameters: []
            valueType: "org.yaml.snakeyaml.DumperOptions"
            uuid: "dumperOptions"
            fixed: true
        - name: "loadingConfig"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.LoaderOptions"
              parameters: []
              propertiesMap:
                allowDuplicateKeys:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: false
                  valueType: "boolean"
                  fixed: true
                tagInspector:
                  sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                  valueType: "org.yaml.snakeyaml.inspector.TagInspector"
                  uuid: "tagInspector"
            valueType: "org.yaml.snakeyaml.LoaderOptions"
            uuid: "loaderOptions"
            fixed: true
      valueType: "org.yaml.snakeyaml.Yaml"
      uuid: "yaml"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "COLLECTION"
          content: !<collection>
            parameters: []
            values: []
          valueType: "java.util.Map"
          uuid: "object"
          collectionUuid: "iterable"
      valueType: "java.lang.Iterable"
      genericValueType: "java.lang.Object"
      uuid: "iterable"
    - sapientType: "ANY"
      valueType: "org.yaml.snakeyaml.reader.UnicodeReader"
      uuid: "unicodeReader"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.CollectionFactory"
      uuid: "CollectionFactory.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "object2"
              valueType: "java.lang.String"
              uuid: "string2"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "object4"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.Object"
          uuid: "uniqueUuid2"
      valueType: "java.util.Properties"
      uuid: "properties"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.util.Map<java.lang.String,java.lang.Object>"
      uuid: "arrayList"
  - pathId: "path12"
    testPathName: "loadTest5"
    constructorSignature: "<init>(org.springframework.core.io.Resource) : void"
    modelFingerprint: "E18F079038EDBE5C709C9FF68A166021"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "938136B73E4E799E742BDAF524F53582"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      name: "resource"
      modelFingerprint: "5B5C35D79B6C52369B57922472DE393E"
      valueUuid: "resource"
      methodExercised:
        expression: "getInputStream():inputStream"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      name: "yaml"
      modelFingerprint: "DAEAFDC73B3B9365A58B0289CDDFD3C5"
      valueUuid: "yaml"
      methodExercised:
        expression: "loadAll(yaml:unicodeReader):iterable"
    - type: "STATIC"
      name: "CollectionFactory.class"
      modelFingerprint: "D07B05EC55CAD7E1BA88B24E747EF313"
      valueUuid: "CollectionFactory.class"
      methodExercised:
        expression: "createStringAdaptingProperties():properties"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "AA9E20E79BE1AF4A0C00E18D70CD1C0C"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:uniqueUuid6):boolean4"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E669AB37A3CA07E4175C603AED1BB119"
      valueUuid: "arrayList"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      lineNumber: 203
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: yaml - Method: loadAll"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedYamlLoader"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.Resource"
            uuid: "resource"
            nameForMock: "resource"
      valueType: "org.springframework.boot.env.OriginTrackedYamlLoader"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
      nameForMock: "resource"
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "inputStream"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.yaml.snakeyaml.Yaml"
        parameters:
        - name: "constructor"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.constructor.Constructor"
              parameters:
              - name: "loadingConfig"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.yaml.snakeyaml.LoaderOptions"
                    parameters: []
                    propertiesMap:
                      allowDuplicateKeys:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: false
                        valueType: "boolean"
                        fixed: true
                      tagInspector:
                        sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                        valueType: "org.yaml.snakeyaml.inspector.TagInspector"
                        uuid: "tagInspector"
                  valueType: "org.yaml.snakeyaml.LoaderOptions"
                  uuid: "loaderOptions"
                  fixed: true
            valueType: "org.yaml.snakeyaml.constructor.Constructor"
            uuid: "constructor"
            fixed: true
        - name: "representer"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.representer.Representer"
              parameters:
              - name: "options"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.yaml.snakeyaml.DumperOptions"
                    parameters: []
                  valueType: "org.yaml.snakeyaml.DumperOptions"
                  uuid: "dumperOptions"
                  fixed: true
            valueType: "org.yaml.snakeyaml.representer.Representer"
            uuid: "representer"
            fixed: true
        - name: "dumperOptions"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.DumperOptions"
              parameters: []
            valueType: "org.yaml.snakeyaml.DumperOptions"
            uuid: "dumperOptions"
            fixed: true
        - name: "loadingConfig"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.LoaderOptions"
              parameters: []
              propertiesMap:
                allowDuplicateKeys:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: false
                  valueType: "boolean"
                  fixed: true
                tagInspector:
                  sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                  valueType: "org.yaml.snakeyaml.inspector.TagInspector"
                  uuid: "tagInspector"
            valueType: "org.yaml.snakeyaml.LoaderOptions"
            uuid: "loaderOptions"
            fixed: true
      valueType: "org.yaml.snakeyaml.Yaml"
      uuid: "yaml"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
          valueType: "java.lang.Object"
          uuid: "object"
          collectionUuid: "iterable"
      valueType: "java.lang.Iterable"
      genericValueType: "java.lang.Object"
      uuid: "iterable"
    - sapientType: "ANY"
      valueType: "org.yaml.snakeyaml.reader.UnicodeReader"
      uuid: "unicodeReader"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.CollectionFactory"
      uuid: "CollectionFactory.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "document"
              valueType: "java.lang.String"
              uuid: "uniqueUuid5"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "iterable"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.Object"
          uuid: "uniqueUuid4"
      valueType: "java.util.Properties"
      uuid: "properties"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.util.Map<java.lang.String,java.lang.Object>"
      uuid: "arrayList"
  - pathId: "path3"
    testPathName: "loadTest8"
    constructorSignature: "<init>(org.springframework.core.io.Resource) : void"
    modelFingerprint: "3B631504FF510413E71E99479F3B62B7"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "938136B73E4E799E742BDAF524F53582"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      name: "resource"
      modelFingerprint: "5B5C35D79B6C52369B57922472DE393E"
      valueUuid: "resource"
      methodExercised:
        expression: "getInputStream():inputStream"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      name: "yaml"
      modelFingerprint: "DD34335E81A123623B8C828F9BD94D40"
      valueUuid: "yaml"
      methodExercised:
        expression: "loadAll(yaml:unicodeReader):iterable"
    - type: "STATIC"
      name: "CollectionFactory.class"
      modelFingerprint: "4A5EDFE9BC11173D6EE6BD267F6D28F3"
      valueUuid: "CollectionFactory.class"
      methodExercised:
        expression: "createStringAdaptingProperties():properties"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "AA9E20E79BE1AF4A0C00E18D70CD1C0C"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:uniqueUuid7):boolean6"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E669AB37A3CA07E4175C603AED1BB119"
      valueUuid: "arrayList"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      lineNumber: 203
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: yaml - Method: loadAll"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedYamlLoader"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.Resource"
            uuid: "resource"
            nameForMock: "resource"
      valueType: "org.springframework.boot.env.OriginTrackedYamlLoader"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
      nameForMock: "resource"
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "inputStream"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.yaml.snakeyaml.Yaml"
        parameters:
        - name: "constructor"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.constructor.Constructor"
              parameters:
              - name: "loadingConfig"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.yaml.snakeyaml.LoaderOptions"
                    parameters: []
                    propertiesMap:
                      allowDuplicateKeys:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: false
                        valueType: "boolean"
                        fixed: true
                      tagInspector:
                        sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                        valueType: "org.yaml.snakeyaml.inspector.TagInspector"
                        uuid: "tagInspector"
                  valueType: "org.yaml.snakeyaml.LoaderOptions"
                  uuid: "loaderOptions"
                  fixed: true
            valueType: "org.yaml.snakeyaml.constructor.Constructor"
            uuid: "constructor"
            fixed: true
        - name: "representer"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.representer.Representer"
              parameters:
              - name: "options"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.yaml.snakeyaml.DumperOptions"
                    parameters: []
                  valueType: "org.yaml.snakeyaml.DumperOptions"
                  uuid: "dumperOptions"
                  fixed: true
            valueType: "org.yaml.snakeyaml.representer.Representer"
            uuid: "representer"
            fixed: true
        - name: "dumperOptions"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.DumperOptions"
              parameters: []
            valueType: "org.yaml.snakeyaml.DumperOptions"
            uuid: "dumperOptions"
            fixed: true
        - name: "loadingConfig"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.LoaderOptions"
              parameters: []
              propertiesMap:
                allowDuplicateKeys:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: false
                  valueType: "boolean"
                  fixed: true
                tagInspector:
                  sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                  valueType: "org.yaml.snakeyaml.inspector.TagInspector"
                  uuid: "tagInspector"
            valueType: "org.yaml.snakeyaml.LoaderOptions"
            uuid: "loaderOptions"
            fixed: true
      valueType: "org.yaml.snakeyaml.Yaml"
      uuid: "yaml"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "COLLECTION"
          content: !<collection>
            parameters: []
            values: []
          valueType: "java.util.Map"
          uuid: "object"
          collectionUuid: "iterable"
      valueType: "java.lang.Iterable"
      genericValueType: "java.lang.Object"
      uuid: "iterable"
    - sapientType: "ANY"
      valueType: "org.yaml.snakeyaml.reader.UnicodeReader"
      uuid: "unicodeReader"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.CollectionFactory"
      uuid: "CollectionFactory.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Properties"
      uuid: "properties"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.util.Map<java.lang.String,java.lang.Object>"
      uuid: "arrayList"
  - pathId: "path9"
    testPathName: "loadTest9"
    constructorSignature: "<init>(org.springframework.core.io.Resource) : void"
    modelFingerprint: "F18CA5C604311C530CAC7A288EDBF86C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "938136B73E4E799E742BDAF524F53582"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      name: "resource"
      modelFingerprint: "5B5C35D79B6C52369B57922472DE393E"
      valueUuid: "resource"
      methodExercised:
        expression: "getInputStream():inputStream"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      name: "yaml"
      modelFingerprint: "DD34335E81A123623B8C828F9BD94D40"
      valueUuid: "yaml"
      methodExercised:
        expression: "loadAll(yaml:unicodeReader):iterable"
    - type: "STATIC"
      name: "CollectionFactory.class"
      modelFingerprint: "56D52188C74B87D27461120E16265341"
      valueUuid: "CollectionFactory.class"
      methodExercised:
        expression: "createStringAdaptingProperties():properties"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "AA9E20E79BE1AF4A0C00E18D70CD1C0C"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:uniqueUuid10):boolean6"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E669AB37A3CA07E4175C603AED1BB119"
      valueUuid: "arrayList"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      lineNumber: 203
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: yaml - Method: loadAll"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedYamlLoader"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.Resource"
            uuid: "resource"
            nameForMock: "resource"
      valueType: "org.springframework.boot.env.OriginTrackedYamlLoader"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
      nameForMock: "resource"
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "inputStream"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.yaml.snakeyaml.Yaml"
        parameters:
        - name: "constructor"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.constructor.Constructor"
              parameters:
              - name: "loadingConfig"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.yaml.snakeyaml.LoaderOptions"
                    parameters: []
                    propertiesMap:
                      allowDuplicateKeys:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: false
                        valueType: "boolean"
                        fixed: true
                      tagInspector:
                        sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                        valueType: "org.yaml.snakeyaml.inspector.TagInspector"
                        uuid: "tagInspector"
                  valueType: "org.yaml.snakeyaml.LoaderOptions"
                  uuid: "loaderOptions"
                  fixed: true
            valueType: "org.yaml.snakeyaml.constructor.Constructor"
            uuid: "constructor"
            fixed: true
        - name: "representer"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.representer.Representer"
              parameters:
              - name: "options"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.yaml.snakeyaml.DumperOptions"
                    parameters: []
                  valueType: "org.yaml.snakeyaml.DumperOptions"
                  uuid: "dumperOptions"
                  fixed: true
            valueType: "org.yaml.snakeyaml.representer.Representer"
            uuid: "representer"
            fixed: true
        - name: "dumperOptions"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.DumperOptions"
              parameters: []
            valueType: "org.yaml.snakeyaml.DumperOptions"
            uuid: "dumperOptions"
            fixed: true
        - name: "loadingConfig"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.LoaderOptions"
              parameters: []
              propertiesMap:
                allowDuplicateKeys:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: false
                  valueType: "boolean"
                  fixed: true
                tagInspector:
                  sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                  valueType: "org.yaml.snakeyaml.inspector.TagInspector"
                  uuid: "tagInspector"
            valueType: "org.yaml.snakeyaml.LoaderOptions"
            uuid: "loaderOptions"
            fixed: true
      valueType: "org.yaml.snakeyaml.Yaml"
      uuid: "yaml"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "COLLECTION"
          content: !<collection>
            parameters: []
            values: []
          valueType: "java.util.Map"
          uuid: "object"
          collectionUuid: "iterable"
      valueType: "java.lang.Iterable"
      genericValueType: "java.lang.Object"
      uuid: "iterable"
    - sapientType: "ANY"
      valueType: "org.yaml.snakeyaml.reader.UnicodeReader"
      uuid: "unicodeReader"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.CollectionFactory"
      uuid: "CollectionFactory.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "[object2]"
              valueType: "java.lang.String"
              uuid: "string3"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "uniqueUuid9"
              fixed: true
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.Object"
          uuid: "uniqueUuid8"
      valueType: "java.util.Properties"
      uuid: "properties"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.util.Map<java.lang.String,java.lang.Object>"
      uuid: "arrayList"
  - pathId: "path4"
    testPathName: "loadTest13"
    constructorSignature: "<init>(org.springframework.core.io.Resource) : void"
    modelFingerprint: "C835B3AC654D46DD779D7748EFF729D5"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "938136B73E4E799E742BDAF524F53582"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      name: "resource"
      modelFingerprint: "5B5C35D79B6C52369B57922472DE393E"
      valueUuid: "resource"
      methodExercised:
        expression: "getInputStream():inputStream"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      name: "yaml"
      modelFingerprint: "DD34335E81A123623B8C828F9BD94D40"
      valueUuid: "yaml"
      methodExercised:
        expression: "loadAll(yaml:unicodeReader):iterable"
    - type: "STATIC"
      name: "CollectionFactory.class"
      modelFingerprint: "37DB24A308015B054387173D9C051C27"
      valueUuid: "CollectionFactory.class"
      methodExercised:
        expression: "createStringAdaptingProperties():properties"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "AA9E20E79BE1AF4A0C00E18D70CD1C0C"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:uniqueUuid13):boolean6"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E669AB37A3CA07E4175C603AED1BB119"
      valueUuid: "arrayList"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      lineNumber: 203
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: yaml - Method: loadAll"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedYamlLoader"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.Resource"
            uuid: "resource"
            nameForMock: "resource"
      valueType: "org.springframework.boot.env.OriginTrackedYamlLoader"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
      nameForMock: "resource"
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "inputStream"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.yaml.snakeyaml.Yaml"
        parameters:
        - name: "constructor"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.constructor.Constructor"
              parameters:
              - name: "loadingConfig"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.yaml.snakeyaml.LoaderOptions"
                    parameters: []
                    propertiesMap:
                      allowDuplicateKeys:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: false
                        valueType: "boolean"
                        fixed: true
                      tagInspector:
                        sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                        valueType: "org.yaml.snakeyaml.inspector.TagInspector"
                        uuid: "tagInspector"
                  valueType: "org.yaml.snakeyaml.LoaderOptions"
                  uuid: "loaderOptions"
                  fixed: true
            valueType: "org.yaml.snakeyaml.constructor.Constructor"
            uuid: "constructor"
            fixed: true
        - name: "representer"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.representer.Representer"
              parameters:
              - name: "options"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.yaml.snakeyaml.DumperOptions"
                    parameters: []
                  valueType: "org.yaml.snakeyaml.DumperOptions"
                  uuid: "dumperOptions"
                  fixed: true
            valueType: "org.yaml.snakeyaml.representer.Representer"
            uuid: "representer"
            fixed: true
        - name: "dumperOptions"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.DumperOptions"
              parameters: []
            valueType: "org.yaml.snakeyaml.DumperOptions"
            uuid: "dumperOptions"
            fixed: true
        - name: "loadingConfig"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.LoaderOptions"
              parameters: []
              propertiesMap:
                allowDuplicateKeys:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: false
                  valueType: "boolean"
                  fixed: true
                tagInspector:
                  sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                  valueType: "org.yaml.snakeyaml.inspector.TagInspector"
                  uuid: "tagInspector"
            valueType: "org.yaml.snakeyaml.LoaderOptions"
            uuid: "loaderOptions"
            fixed: true
      valueType: "org.yaml.snakeyaml.Yaml"
      uuid: "yaml"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "COLLECTION"
          content: !<collection>
            parameters: []
            values: []
          valueType: "java.util.Map"
          uuid: "object"
          collectionUuid: "iterable"
      valueType: "java.lang.Iterable"
      genericValueType: "java.lang.Object"
      uuid: "iterable"
    - sapientType: "ANY"
      valueType: "org.yaml.snakeyaml.reader.UnicodeReader"
      uuid: "unicodeReader"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.CollectionFactory"
      uuid: "CollectionFactory.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "object2"
              valueType: "java.lang.String"
              uuid: "string2"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "uniqueUuid12"
              fixed: true
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.Object"
          uuid: "uniqueUuid11"
      valueType: "java.util.Properties"
      uuid: "properties"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "uniqueUuid13"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.util.Map<java.lang.String,java.lang.Object>"
      uuid: "arrayList"
  - pathId: "path13"
    testPathName: "loadTest14"
    constructorSignature: "<init>(org.springframework.core.io.Resource) : void"
    modelFingerprint: "04E3C4C5398FBB1E03833803697C4999"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "938136B73E4E799E742BDAF524F53582"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      name: "resource"
      modelFingerprint: "5B5C35D79B6C52369B57922472DE393E"
      valueUuid: "resource"
      methodExercised:
        expression: "getInputStream():inputStream"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      name: "yaml"
      modelFingerprint: "F1D587114BCA3E4369D6F91C39B6BA61"
      valueUuid: "yaml"
      methodExercised:
        expression: "loadAll(yaml:unicodeReader):iterable"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E669AB37A3CA07E4175C603AED1BB119"
      valueUuid: "arrayList"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      lineNumber: 203
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: yaml - Method: loadAll"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedYamlLoader"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.Resource"
            uuid: "resource"
            nameForMock: "resource"
      valueType: "org.springframework.boot.env.OriginTrackedYamlLoader"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
      nameForMock: "resource"
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "inputStream"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.yaml.snakeyaml.Yaml"
        parameters:
        - name: "constructor"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.constructor.Constructor"
              parameters:
              - name: "loadingConfig"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.yaml.snakeyaml.LoaderOptions"
                    parameters: []
                    propertiesMap:
                      allowDuplicateKeys:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: false
                        valueType: "boolean"
                        fixed: true
                      tagInspector:
                        sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                        valueType: "org.yaml.snakeyaml.inspector.TagInspector"
                        uuid: "tagInspector"
                  valueType: "org.yaml.snakeyaml.LoaderOptions"
                  uuid: "loaderOptions"
                  fixed: true
            valueType: "org.yaml.snakeyaml.constructor.Constructor"
            uuid: "constructor"
            fixed: true
        - name: "representer"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.representer.Representer"
              parameters:
              - name: "options"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.yaml.snakeyaml.DumperOptions"
                    parameters: []
                  valueType: "org.yaml.snakeyaml.DumperOptions"
                  uuid: "dumperOptions"
                  fixed: true
            valueType: "org.yaml.snakeyaml.representer.Representer"
            uuid: "representer"
            fixed: true
        - name: "dumperOptions"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.DumperOptions"
              parameters: []
            valueType: "org.yaml.snakeyaml.DumperOptions"
            uuid: "dumperOptions"
            fixed: true
        - name: "loadingConfig"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.LoaderOptions"
              parameters: []
              propertiesMap:
                allowDuplicateKeys:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: false
                  valueType: "boolean"
                  fixed: true
                tagInspector:
                  sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                  valueType: "org.yaml.snakeyaml.inspector.TagInspector"
                  uuid: "tagInspector"
            valueType: "org.yaml.snakeyaml.LoaderOptions"
            uuid: "loaderOptions"
            fixed: true
      valueType: "org.yaml.snakeyaml.Yaml"
      uuid: "yaml"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "NULL"
          valueType: "java.lang.Object"
          uuid: "object"
          fixed: true
          collectionUuid: "iterable"
      valueType: "java.lang.Iterable"
      genericValueType: "java.lang.Object"
      uuid: "iterable"
    - sapientType: "ANY"
      valueType: "org.yaml.snakeyaml.reader.UnicodeReader"
      uuid: "unicodeReader"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.util.Map<java.lang.String,java.lang.Object>"
      uuid: "arrayList"
  - pathId: "path20"
    testPathName: "loadWhenDefaultBranch"
    constructorSignature: "<init>(org.springframework.core.io.Resource) : void"
    modelFingerprint: "15D0C09AB8F3E4EC1477F84B9B26E5B7"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "938136B73E4E799E742BDAF524F53582"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      name: "resource"
      modelFingerprint: "5B5C35D79B6C52369B57922472DE393E"
      valueUuid: "resource"
      methodExercised:
        expression: "getInputStream():inputStream"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      name: "yaml"
      modelFingerprint: "DD34335E81A123623B8C828F9BD94D40"
      valueUuid: "yaml"
      methodExercised:
        expression: "loadAll(yaml:unicodeReader):iterable"
    - type: "STATIC"
      name: "CollectionFactory.class"
      modelFingerprint: "56D52188C74B87D27461120E16265341"
      valueUuid: "CollectionFactory.class"
      methodExercised:
        expression: "createStringAdaptingProperties():properties"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "AA9E20E79BE1AF4A0C00E18D70CD1C0C"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:uniqueUuid16):boolean6"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "reader"
      modelFingerprint: "AF4DD8299FE503BF30B3CCCF2746BE87"
      valueUuid: "unicodeReader"
      methodExercised:
        expression: "close():void10"
        throwsExceptions:
        - "java.io.IOException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E669AB37A3CA07E4175C603AED1BB119"
      valueUuid: "arrayList"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      lineNumber: 203
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: yaml - Method: loadAll"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedYamlLoader"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.Resource"
            uuid: "resource"
            nameForMock: "resource"
      valueType: "org.springframework.boot.env.OriginTrackedYamlLoader"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
      nameForMock: "resource"
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "inputStream"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.yaml.snakeyaml.Yaml"
        parameters:
        - name: "constructor"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.constructor.Constructor"
              parameters:
              - name: "loadingConfig"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.yaml.snakeyaml.LoaderOptions"
                    parameters: []
                    propertiesMap:
                      allowDuplicateKeys:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: false
                        valueType: "boolean"
                        fixed: true
                      tagInspector:
                        sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                        valueType: "org.yaml.snakeyaml.inspector.TagInspector"
                        uuid: "tagInspector"
                  valueType: "org.yaml.snakeyaml.LoaderOptions"
                  uuid: "loaderOptions"
                  fixed: true
            valueType: "org.yaml.snakeyaml.constructor.Constructor"
            uuid: "constructor"
            fixed: true
        - name: "representer"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.representer.Representer"
              parameters:
              - name: "options"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.yaml.snakeyaml.DumperOptions"
                    parameters: []
                  valueType: "org.yaml.snakeyaml.DumperOptions"
                  uuid: "dumperOptions"
                  fixed: true
            valueType: "org.yaml.snakeyaml.representer.Representer"
            uuid: "representer"
            fixed: true
        - name: "dumperOptions"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.DumperOptions"
              parameters: []
            valueType: "org.yaml.snakeyaml.DumperOptions"
            uuid: "dumperOptions"
            fixed: true
        - name: "loadingConfig"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.LoaderOptions"
              parameters: []
              propertiesMap:
                allowDuplicateKeys:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: false
                  valueType: "boolean"
                  fixed: true
                tagInspector:
                  sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                  valueType: "org.yaml.snakeyaml.inspector.TagInspector"
                  uuid: "tagInspector"
            valueType: "org.yaml.snakeyaml.LoaderOptions"
            uuid: "loaderOptions"
            fixed: true
      valueType: "org.yaml.snakeyaml.Yaml"
      uuid: "yaml"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "COLLECTION"
          content: !<collection>
            parameters: []
            values: []
          valueType: "java.util.Map"
          uuid: "object"
          collectionUuid: "iterable"
      valueType: "java.lang.Iterable"
      genericValueType: "java.lang.Object"
      uuid: "iterable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.yaml.snakeyaml.reader.UnicodeReader"
        parameters:
        - name: "in"
          value:
            sapientType: "INPUT_STREAM"
            content: !<inputStream>
              values: []
            valueType: "java.io.InputStream"
            uuid: "inputStream"
      valueType: "org.yaml.snakeyaml.reader.UnicodeReader"
      uuid: "unicodeReader"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.CollectionFactory"
      uuid: "CollectionFactory.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "[object2]"
              valueType: "java.lang.String"
              uuid: "string3"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: ""
              valueType: "java.lang.String"
              uuid: "uniqueUuid15"
              fixed: true
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.Object"
          uuid: "uniqueUuid14"
      valueType: "java.util.Properties"
      uuid: "properties"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "uniqueUuid16"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.yaml.snakeyaml.reader.UnicodeReader"
        parameters:
        - name: "in"
          value:
            sapientType: "INPUT_STREAM"
            content: !<inputStream>
              values: []
            valueType: "java.io.InputStream"
            uuid: "inputStream"
      valueType: "org.yaml.snakeyaml.reader.UnicodeReader"
      uuid: "unicodeReader"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.util.Map<java.lang.String,java.lang.Object>"
      uuid: "arrayList"
    branches:
    - lineNumber: 202
      expression: "branch expression (line 202)"
      range: "(202,1)-(202,200)"
      evaluatedAs: true
      internalMethodName: "process"
    catchBlockExercised:
      idExternalInstruction: 30
      id: 2
      catchExceptions:
      - "java.lang.Throwable"
  - pathId: "path19"
    testPathName: "loadWhenDefaultBranchThrowsThrowable"
    constructorSignature: "<init>(org.springframework.core.io.Resource) : void"
    modelFingerprint: "47177512F2F283E0076A90220EE00D4A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "938136B73E4E799E742BDAF524F53582"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      name: "resource"
      modelFingerprint: "5B5C35D79B6C52369B57922472DE393E"
      valueUuid: "resource"
      methodExercised:
        expression: "getInputStream():inputStream"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      name: "yaml"
      modelFingerprint: "DAEAFDC73B3B9365A58B0289CDDFD3C5"
      valueUuid: "yaml"
      methodExercised:
        expression: "loadAll(yaml:unicodeReader):iterable"
    - type: "STATIC"
      name: "CollectionFactory.class"
      modelFingerprint: "D07B05EC55CAD7E1BA88B24E747EF313"
      valueUuid: "CollectionFactory.class"
      methodExercised:
        expression: "createStringAdaptingProperties():properties"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "AA9E20E79BE1AF4A0C00E18D70CD1C0C"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:uniqueUuid19):boolean4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "reader"
      modelFingerprint: "AF4DD8299FE503BF30B3CCCF2746BE87"
      valueUuid: "unicodeReader"
      methodExercised:
        expression: "close():void6"
        throwsExceptions:
        - "java.io.IOException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "49E493EB56B47EDEB5C173968793BABC"
      valueUuid: "throwable"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      lineNumber: 203
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: yaml - Method: loadAll"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedYamlLoader"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.Resource"
            uuid: "resource"
      valueType: "org.springframework.boot.env.OriginTrackedYamlLoader"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
    - sapientType: "INPUT_STREAM"
      content: !<inputStream>
        values: []
      valueType: "java.io.InputStream"
      uuid: "inputStream"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.yaml.snakeyaml.Yaml"
        parameters:
        - name: "constructor"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.constructor.Constructor"
              parameters:
              - name: "loadingConfig"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.yaml.snakeyaml.LoaderOptions"
                    parameters: []
                    propertiesMap:
                      allowDuplicateKeys:
                        sapientType: "BASIC"
                        content: !<regular>
                          value: false
                        valueType: "boolean"
                        fixed: true
                      tagInspector:
                        sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                        valueType: "org.yaml.snakeyaml.inspector.TagInspector"
                        uuid: "tagInspector"
                  valueType: "org.yaml.snakeyaml.LoaderOptions"
                  uuid: "loaderOptions"
                  fixed: true
            valueType: "org.yaml.snakeyaml.constructor.Constructor"
            uuid: "constructor"
            fixed: true
        - name: "representer"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.representer.Representer"
              parameters:
              - name: "options"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.yaml.snakeyaml.DumperOptions"
                    parameters: []
                  valueType: "org.yaml.snakeyaml.DumperOptions"
                  uuid: "dumperOptions"
                  fixed: true
            valueType: "org.yaml.snakeyaml.representer.Representer"
            uuid: "representer"
            fixed: true
        - name: "dumperOptions"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.DumperOptions"
              parameters: []
            valueType: "org.yaml.snakeyaml.DumperOptions"
            uuid: "dumperOptions"
            fixed: true
        - name: "loadingConfig"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.yaml.snakeyaml.LoaderOptions"
              parameters: []
              propertiesMap:
                allowDuplicateKeys:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: false
                  valueType: "boolean"
                  fixed: true
                tagInspector:
                  sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                  valueType: "org.yaml.snakeyaml.inspector.TagInspector"
                  uuid: "tagInspector"
            valueType: "org.yaml.snakeyaml.LoaderOptions"
            uuid: "loaderOptions"
            fixed: true
      valueType: "org.yaml.snakeyaml.Yaml"
      uuid: "yaml"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
          valueType: "java.lang.Object"
          uuid: "object"
          collectionUuid: "iterable"
      valueType: "java.lang.Iterable"
      genericValueType: "java.lang.Object"
      uuid: "iterable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.yaml.snakeyaml.reader.UnicodeReader"
        parameters:
        - name: "in"
          value:
            sapientType: "INPUT_STREAM"
            content: !<inputStream>
              values: []
            valueType: "java.io.InputStream"
            uuid: "inputStream"
      valueType: "org.yaml.snakeyaml.reader.UnicodeReader"
      uuid: "unicodeReader"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.CollectionFactory"
      uuid: "CollectionFactory.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "document"
              valueType: "java.lang.String"
              uuid: "uniqueUuid18"
              fixed: true
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "iterable"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.Object"
          uuid: "uniqueUuid17"
      valueType: "java.util.Properties"
      uuid: "properties"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "uniqueUuid19"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.yaml.snakeyaml.reader.UnicodeReader"
        parameters:
        - name: "in"
          value:
            sapientType: "INPUT_STREAM"
            content: !<inputStream>
              values: []
            valueType: "java.io.InputStream"
            uuid: "inputStream"
      valueType: "org.yaml.snakeyaml.reader.UnicodeReader"
      uuid: "unicodeReader"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "throwable"
    branches:
    - lineNumber: 202
      expression: "branch expression (line 202)"
      range: "(202,1)-(202,200)"
      evaluatedAs: true
      internalMethodName: "process"
    catchBlockExercised:
      idExternalInstruction: 30
      id: 1
      catchExceptions:
      - "java.lang.Throwable"
