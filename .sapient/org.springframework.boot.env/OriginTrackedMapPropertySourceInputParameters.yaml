---
modelFingerprint: "8F0D62FCE5DE5FECD53F896AC57D9C44"
targetClass:
  fullClassName: "org.springframework.boot.env.OriginTrackedMapPropertySource"
methods:
- method:
    name: "getProperty"
    sourceCodeSignature: "Object getProperty(String name)"
    returnType: "java.lang.Object"
    parameters:
    - name: "name"
      type: "java.lang.String"
    instructionFingerprint: "FCC77E5AA16129ABC96DF3276156507A"
  paths:
  - pathId: "path1"
    testPathName: "getPropertyWhenValueInstanceOfOriginTrackedValue"
    constructorSignature: "<init>(java.lang.String,java.util.Map,boolean) : void"
    modelFingerprint: "D1DD4FAB239D8749B95F5E60A52E720F"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D55DC379BB3D564F95D31B2BABE96432"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "63F0AEB18588FDD50129913BF544F767"
      valueUuid: "name"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "4A0BE7D0089781EFFA3F43FDBBE8F682"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "hasText(text:name2,message:uniqueUuid1):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "80FDDA2DFF38962B9DDE499302AEBEBE"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:source,message:uniqueUuid3):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "originTrackedValue"
      modelFingerprint: "126A3DE06F106485E078CB4724F490E5"
      valueUuid: "object"
      methodExercised:
        expression: "getValue():value"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "value"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedMapPropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "name2"
        - name: "source"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "sourceItem1Key1"
                    valueType: "java.lang.String"
                    uuid: "name"
                  value:
                    sapientType: "OBJECT"
                    content: !<static_method_return>
                      target: "org.springframework.boot.origin.OriginTrackedValue"
                      method: "of"
                      methodParameters:
                      - name: "value"
                        value:
                          sapientType: "OBJECT"
                          content: !<new>
                            target: "java.lang.Object"
                            parameters: []
                          valueType: "java.lang.Object"
                          uuid: "value"
                    valueType: "org.springframework.boot.origin.OriginTrackedValue"
                    uuid: "object"
                    collectionUuid: "source"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "java.lang.String,java.lang.Object"
            uuid: "source"
        - name: "immutable"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "immutable"
      valueType: "org.springframework.boot.env.OriginTrackedMapPropertySource"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "sourceItem1Key1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source name must contain at least one character"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "sourceItem1Key1"
              valueType: "java.lang.String"
              uuid: "name"
            value:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "org.springframework.boot.origin.OriginTrackedValue"
                method: "of"
                methodParameters:
                - name: "value"
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "value"
              valueType: "org.springframework.boot.origin.OriginTrackedValue"
              uuid: "object"
              collectionUuid: "source"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid2"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "source"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.origin.OriginTrackedValue"
        method: "of"
        methodParameters:
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "value"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "object"
      collectionUuid: "source"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "value"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "value"
    branches:
    - lineNumber: 65
      expression: "value instanceof OriginTrackedValue originTrackedValue"
      range: "(65,7)-(65,60)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getPropertyWhenValueNotInstanceOfOriginTrackedValue"
    constructorSignature: "<init>(java.lang.String,java.util.Map,boolean) : void"
    modelFingerprint: "05F8A3689B05258C9CC4A392ED38A034"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "95B4CA397BE13DB3B83C603D755CF4F7"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "63F0AEB18588FDD50129913BF544F767"
      valueUuid: "name"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "4A0BE7D0089781EFFA3F43FDBBE8F682"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "hasText(text:name2,message:uniqueUuid4):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D71587D725BEF0DF7DD0BEDD7A12E7AF"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:source,message:uniqueUuid6):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedMapPropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "name2"
        - name: "source"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "sourceItem1Key1"
                    valueType: "java.lang.String"
                    uuid: "name"
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "object"
                    collectionUuid: "source"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "java.lang.String,java.lang.Object"
            uuid: "source"
        - name: "immutable"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "immutable"
      valueType: "org.springframework.boot.env.OriginTrackedMapPropertySource"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "sourceItem1Key1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source name must contain at least one character"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "sourceItem1Key1"
              valueType: "java.lang.String"
              uuid: "name"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "source"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid5"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "source"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
      collectionUuid: "source"
    branches:
    - lineNumber: 65
      expression: "value instanceof OriginTrackedValue originTrackedValue"
      range: "(65,7)-(65,60)"
      evaluatedAs: false
- method:
    name: "getOrigin"
    sourceCodeSignature: "Origin getOrigin(String name)"
    returnType: "org.springframework.boot.origin.Origin"
    parameters:
    - name: "name"
      type: "java.lang.String"
    instructionFingerprint: "7BBF51C13B7AFAD91BF0B509933367D6"
  paths:
  - pathId: "path1"
    testPathName: "getOriginWhenValueInstanceOfOriginTrackedValue"
    constructorSignature: "<init>(java.lang.String,java.util.Map,boolean) : void"
    modelFingerprint: "F2F3285C9B69A937D1324F90F1DE701F"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "66784A42C1AC74F1741DDC0BBE9B9493"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "63F0AEB18588FDD50129913BF544F767"
      valueUuid: "name"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "4A0BE7D0089781EFFA3F43FDBBE8F682"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "hasText(text:name2,message:uniqueUuid7):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "E1ABC8EB1994614F51595FFA6CCEDFE6"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:source,message:uniqueUuid9):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "originTrackedValue"
      modelFingerprint: "C1DF5ECE4B068A4912DDC7C960DBEC2C"
      valueUuid: "object"
      methodExercised:
        expression: "getOrigin():origin"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5692B041B63EBC5E48D608049DCE404F"
      valueUuid: "origin"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedMapPropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "name2"
        - name: "source"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "sourceItem1Key1"
                    valueType: "java.lang.String"
                    uuid: "name"
                  value:
                    sapientType: "OBJECT"
                    content: !<static_method_return>
                      target: "org.springframework.boot.origin.OriginTrackedValue"
                      method: "of"
                      methodParameters:
                      - name: "value"
                        value:
                          sapientType: "OBJECT"
                          content: !<new>
                            target: "java.lang.Object"
                            parameters: []
                          valueType: "java.lang.Object"
                          uuid: "object-value"
                      - name: "origin"
                        value:
                          sapientType: "MOCK"
                          valueType: "org.springframework.boot.origin.Origin"
                          uuid: "origin"
                    valueType: "org.springframework.boot.origin.OriginTrackedValue"
                    uuid: "object"
                    collectionUuid: "source"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "java.lang.String,java.lang.Object"
            uuid: "source"
        - name: "immutable"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "immutable"
      valueType: "org.springframework.boot.env.OriginTrackedMapPropertySource"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "sourceItem1Key1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source name must contain at least one character"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "sourceItem1Key1"
              valueType: "java.lang.String"
              uuid: "name"
            value:
              sapientType: "OBJECT"
              content: !<static_method_return>
                target: "org.springframework.boot.origin.OriginTrackedValue"
                method: "of"
                methodParameters:
                - name: "value"
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "object-value"
                - name: "origin"
                  value:
                    sapientType: "MOCK"
                    valueType: "org.springframework.boot.origin.Origin"
                    uuid: "origin"
              valueType: "org.springframework.boot.origin.OriginTrackedValue"
              uuid: "object"
              collectionUuid: "source"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid8"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "source"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.origin.OriginTrackedValue"
        method: "of"
        methodParameters:
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "object-value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "object"
      collectionUuid: "source"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
    branches:
    - lineNumber: 74
      expression: "value instanceof OriginTrackedValue originTrackedValue"
      range: "(74,7)-(74,60)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getOriginWhenValueNotInstanceOfOriginTrackedValue"
    constructorSignature: "<init>(java.lang.String,java.util.Map,boolean) : void"
    modelFingerprint: "B4381A16E4DD4D902FEA3CEB11309769"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "95B4CA397BE13DB3B83C603D755CF4F7"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "63F0AEB18588FDD50129913BF544F767"
      valueUuid: "name"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "4A0BE7D0089781EFFA3F43FDBBE8F682"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "hasText(text:name2,message:uniqueUuid10):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D71587D725BEF0DF7DD0BEDD7A12E7AF"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:source,message:uniqueUuid12):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0214C9C5D06299F998DBB148236EA3F2"
      valueUuid: "origin"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedMapPropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "name2"
        - name: "source"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "sourceItem1Key1"
                    valueType: "java.lang.String"
                    uuid: "name"
                  value:
                    sapientType: "OBJECT"
                    content: !<new>
                      target: "java.lang.Object"
                      parameters: []
                    valueType: "java.lang.Object"
                    uuid: "object"
                    collectionUuid: "source"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "java.lang.String,java.lang.Object"
            uuid: "source"
        - name: "immutable"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "immutable"
      valueType: "org.springframework.boot.env.OriginTrackedMapPropertySource"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "sourceItem1Key1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source name must contain at least one character"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "sourceItem1Key1"
              valueType: "java.lang.String"
              uuid: "name"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object"
              collectionUuid: "source"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid11"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "source"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid12"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
      fixed: true
    branches:
    - lineNumber: 74
      expression: "value instanceof OriginTrackedValue originTrackedValue"
      range: "(74,7)-(74,60)"
      evaluatedAs: false
- method:
    name: "isImmutable"
    sourceCodeSignature: "boolean isImmutable()"
    returnType: "boolean"
    instructionFingerprint: "1F2CD406C9100AE3EA3E44F3518101F1"
  paths:
  - pathId: "path1"
    testPathName: "isImmutableWhenThisImmutable"
    constructorSignature: "<init>(java.lang.String,java.util.Map,boolean) : void"
    modelFingerprint: "ABB4C0CD3E82907B25A808A6DE3A7344"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 82
      expression: "this.immutable"
      range: "(82,10)-(82,23)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "isImmutableWhenThisNotImmutable"
    constructorSignature: "<init>(java.lang.String,java.util.Map,boolean) : void"
    modelFingerprint: "CA99B0C0B4A5BCABE33036A6549A22A1"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 82
      expression: "this.immutable"
      range: "(82,10)-(82,23)"
      evaluatedAs: false
