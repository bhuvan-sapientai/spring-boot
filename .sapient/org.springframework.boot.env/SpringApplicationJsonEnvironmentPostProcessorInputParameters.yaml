---
modelFingerprint: "9141F05702D530445B154A34832763E6"
targetClass:
  fullClassName: "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor"
methods:
- method:
    name: "getOrder"
    sourceCodeSignature: "int getOrder()"
    returnType: "int"
    instructionFingerprint: "342D4E4F854A43E567A525BCBCDEA20C"
  paths:
  - pathId: "path1"
    testPathName: "getOrderTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "75F24F5A565121B4BCC5FE0FC49CFDED"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "setOrder"
    sourceCodeSignature: "void setOrder(int order)"
    returnType: "void"
    parameters:
    - name: "order"
      type: "int"
    instructionFingerprint: "F88C98C2D7593841680C2CA0FECB4028"
  paths:
  - pathId: "path1"
    testPathName: "setOrderTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "508F327E707578A7601DD6859FED6F5D"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "postProcessEnvironment"
    sourceCodeSignature: "void postProcessEnvironment(ConfigurableEnvironment environment,\
      \ SpringApplication application)"
    returnType: "void"
    parameters:
    - name: "environment"
      type: "org.springframework.core.env.ConfigurableEnvironment"
    - name: "application"
      type: "org.springframework.boot.SpringApplication"
    instructionFingerprint: "A3EFEFCAADC596FD749DCD9078EC352C"
  paths:
  - pathId: "path4"
    testPathName: "postProcessEnvironmentWhenClassUtilsNotIsPresentSERVLET_ENVIRONMENT_CLASSNullAndSourcesNotContainsName"
    constructorSignature: "<init>() : void"
    modelFingerprint: "98267FC86D138C9EBD9AE0E6243EE5F4"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "2AB40C7309B23844284816875A86BEFD"
      valueUuid: "environment"
    - type: "INPUT"
      name: "application"
      modelFingerprint: "86BFF8B99831ED759F640847C7C0F409"
      valueUuid: "application"
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "E97B1B215647A456976BAD20E92F84F8"
      valueUuid: "environment"
      methodExercised:
        expression: "getPropertySources():mutablePropertySources"
    - type: "LOCAL_VARIABLE"
      name: "propertySources"
      modelFingerprint: "8D777FEC2275B7A42CD1B771458221A7"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "stream():stream"
    - type: "STATIC"
      name: "JsonParserFactory.class"
      modelFingerprint: "9D74D3538AE252B5C692AD3A1AE4732E"
      valueUuid: "JsonParserFactory.class"
      methodExercised:
        expression: "getJsonParser():jsonParser"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "parser"
      modelFingerprint: "E081965506A9EC1D560D8FD89FA30CE4"
      valueUuid: "jsonParser"
      methodExercised:
        expression: "parseMap(json:string):map"
        throwsExceptions:
        - "org.springframework.boot.json.JsonParseException"
    - type: "STATIC"
      name: "CollectionUtils.class"
      modelFingerprint: "A464D07577751144E89B96291F029674"
      valueUuid: "CollectionUtils.class"
      methodExercised:
        expression: "isEmpty(map:object2):boolean3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "E97B1B215647A456976BAD20E92F84F8"
      valueUuid: "environment"
      methodExercised:
        expression: "getPropertySources():mutablePropertySources2"
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "0F464A855DF273BE766ABE3478F48523"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "isPresent(className:uniqueUuid2,classLoader:uniqueUuid3):boolean4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "973C15CF62FADCAB5E756BBBF46DFE45"
      valueUuid: "mutablePropertySources2"
      methodExercised:
        expression: "contains(name:string5):boolean5"
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "E5AB2F330B4372735AC8B83C636ED7AC"
      valueUuid: "mutablePropertySources2"
      methodExercised:
        expression: "addFirst(propertySource:propertySource):void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.stream.Stream.map(java.util.function.Function)\
        \ : java.util.stream.Stream<org.springframework.core.env.PropertySource<?>>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor"
        parameters: []
      valueType: "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "application"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.stream.Stream"
        method: "empty"
        methodParameters: []
      valueType: "java.util.stream.Stream"
      uuid: "stream"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParserFactory"
      uuid: "JsonParserFactory.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "string3"
              collectionUuid: "map"
            value:
              sapientType: "COLLECTION"
              content: !<collection>
                parameters: []
                values: []
              valueType: "java.util.Map"
              genericValueType: "?,?"
              uuid: "object2"
              collectionUuid: "map"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid1"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "BASIC"
      content: !<regular>
        value: "json1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "?,?"
      uuid: "object2"
      collectionUuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.web.context.support.StandardServletEnvironment"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "NULL"
      uuid: "uniqueUuid3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemProperties"
      valueType: "java.lang.String"
      uuid: "string5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.core.env.PropertySource"
      uuid: "propertySource"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 106
      expression: "!map.isEmpty()"
      range: "(106,7)-(106,20)"
      evaluatedAs: true
      internalMethodName: "processJson"
    - lineNumber: 123
      expression: "prefix != null"
      range: "(123,24)-(123,37)"
      evaluatedAs: false
      internalMethodName: "flatten"
    - lineNumber: 129
      expression: "value instanceof Map"
      range: "(129,7)-(129,26)"
      evaluatedAs: true
      internalMethodName: "extract"
    - lineNumber: 130
      expression: "CollectionUtils.isEmpty((Map<?, ?>) value)"
      range: "(130,8)-(130,49)"
      evaluatedAs: false
      internalMethodName: "extract"
    - lineNumber: 164
      expression: "ClassUtils.isPresent(SERVLET_ENVIRONMENT_CLASS, null)"
      range: "(164,7)-(164,59)"
      evaluatedAs: false
      internalMethodName: "findPropertySource"
    - lineNumber: 155
      expression: "sources.contains(name)"
      range: "(155,7)-(155,28)"
      evaluatedAs: false
      internalMethodName: "addJsonPropertySource"
  - pathId: "path8"
    testPathName: "postProcessEnvironmentWhenValueNotInstanceOfCollectionAndClassUtilsNotIsPresentSERVLET_ENVIRONMENT_CLASSNullAndSourcesN"
    constructorSignature: "<init>() : void"
    modelFingerprint: "018DAEC336C8227A2028EC407945DB7D"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "2AB40C7309B23844284816875A86BEFD"
      valueUuid: "environment"
    - type: "INPUT"
      name: "application"
      modelFingerprint: "86BFF8B99831ED759F640847C7C0F409"
      valueUuid: "application"
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "E97B1B215647A456976BAD20E92F84F8"
      valueUuid: "environment"
      methodExercised:
        expression: "getPropertySources():mutablePropertySources"
    - type: "LOCAL_VARIABLE"
      name: "propertySources"
      modelFingerprint: "8D777FEC2275B7A42CD1B771458221A7"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "stream():stream"
    - type: "STATIC"
      name: "JsonParserFactory.class"
      modelFingerprint: "9D74D3538AE252B5C692AD3A1AE4732E"
      valueUuid: "JsonParserFactory.class"
      methodExercised:
        expression: "getJsonParser():jsonParser"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "parser"
      modelFingerprint: "E335BBAD010CD3D5DDA16FE26D19B6AA"
      valueUuid: "jsonParser"
      methodExercised:
        expression: "parseMap(json:string):map"
        throwsExceptions:
        - "org.springframework.boot.json.JsonParseException"
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "E97B1B215647A456976BAD20E92F84F8"
      valueUuid: "environment"
      methodExercised:
        expression: "getPropertySources():mutablePropertySources2"
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "0F464A855DF273BE766ABE3478F48523"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "isPresent(className:uniqueUuid5,classLoader:uniqueUuid6):boolean4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "973C15CF62FADCAB5E756BBBF46DFE45"
      valueUuid: "mutablePropertySources2"
      methodExercised:
        expression: "contains(name:string5):boolean5"
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "E5AB2F330B4372735AC8B83C636ED7AC"
      valueUuid: "mutablePropertySources2"
      methodExercised:
        expression: "addFirst(propertySource:propertySource):void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.stream.Stream.map(java.util.function.Function)\
        \ : java.util.stream.Stream<org.springframework.core.env.PropertySource<?>>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor"
        parameters: []
      valueType: "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "application"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.stream.Stream"
        method: "empty"
        methodParameters: []
      valueType: "java.util.stream.Stream"
      uuid: "stream"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParserFactory"
      uuid: "JsonParserFactory.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "string3"
              collectionUuid: "map"
            value:
              sapientType: "OBJECT"
              content: !<new>
                target: "java.lang.Object"
                parameters: []
              valueType: "java.lang.Object"
              uuid: "object2"
              collectionUuid: "map"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid4"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "BASIC"
      content: !<regular>
        value: "json1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.web.context.support.StandardServletEnvironment"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "NULL"
      uuid: "uniqueUuid6"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemProperties"
      valueType: "java.lang.String"
      uuid: "string5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.core.env.PropertySource"
      uuid: "propertySource"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 106
      expression: "!map.isEmpty()"
      range: "(106,7)-(106,20)"
      evaluatedAs: true
      internalMethodName: "processJson"
    - lineNumber: 123
      expression: "prefix != null"
      range: "(123,24)-(123,37)"
      evaluatedAs: false
      internalMethodName: "flatten"
    - lineNumber: 129
      expression: "value instanceof Map"
      range: "(129,7)-(129,26)"
      evaluatedAs: false
      internalMethodName: "extract"
    - lineNumber: 136
      expression: "value instanceof Collection"
      range: "(136,12)-(136,38)"
      evaluatedAs: false
      internalMethodName: "extract"
    - lineNumber: 164
      expression: "ClassUtils.isPresent(SERVLET_ENVIRONMENT_CLASS, null)"
      range: "(164,7)-(164,59)"
      evaluatedAs: false
      internalMethodName: "findPropertySource"
    - lineNumber: 155
      expression: "sources.contains(name)"
      range: "(155,7)-(155,28)"
      evaluatedAs: false
      internalMethodName: "addJsonPropertySource"
  - pathId: "path1"
    testPathName: "postProcessEnvironmentWhenSourcesContainsName"
    constructorSignature: "<init>() : void"
    modelFingerprint: "1843185384919768B632235A782F0E8B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "2AB40C7309B23844284816875A86BEFD"
      valueUuid: "environment"
    - type: "INPUT"
      name: "application"
      modelFingerprint: "86BFF8B99831ED759F640847C7C0F409"
      valueUuid: "application"
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "E97B1B215647A456976BAD20E92F84F8"
      valueUuid: "environment"
      methodExercised:
        expression: "getPropertySources():mutablePropertySources"
    - type: "LOCAL_VARIABLE"
      name: "propertySources"
      modelFingerprint: "8D777FEC2275B7A42CD1B771458221A7"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "stream():stream"
    - type: "STATIC"
      name: "JsonParserFactory.class"
      modelFingerprint: "9D74D3538AE252B5C692AD3A1AE4732E"
      valueUuid: "JsonParserFactory.class"
      methodExercised:
        expression: "getJsonParser():jsonParser"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "parser"
      modelFingerprint: "E081965506A9EC1D560D8FD89FA30CE4"
      valueUuid: "jsonParser"
      methodExercised:
        expression: "parseMap(json:string):map"
        throwsExceptions:
        - "org.springframework.boot.json.JsonParseException"
    - type: "STATIC"
      name: "CollectionUtils.class"
      modelFingerprint: "D8D5364B3B08E7B525A18112DA5844EF"
      valueUuid: "CollectionUtils.class"
      methodExercised:
        expression: "isEmpty(map:object2):boolean3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "E97B1B215647A456976BAD20E92F84F8"
      valueUuid: "environment"
      methodExercised:
        expression: "getPropertySources():mutablePropertySources2"
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "10F864D6E41EEE4C4B1973EAA0DB818F"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "isPresent(className:uniqueUuid8,classLoader:uniqueUuid9):boolean4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "8D777FEC2275B7A42CD1B771458221A7"
      valueUuid: "mutablePropertySources2"
      methodExercised:
        expression: "stream():stream4"
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "F162D5E7459A08E1F15E505C4A5011E2"
      valueUuid: "mutablePropertySources2"
      methodExercised:
        expression: "contains(name:string5):boolean5"
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "43D04BD21A9EE96BE10C9C8CC3BFC2A3"
      valueUuid: "mutablePropertySources2"
      methodExercised:
        expression: "addBefore(relativePropertySourceName:string5,propertySource:propertySource):void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.stream.Stream.map(java.util.function.Function)\
        \ : java.util.stream.Stream<org.springframework.core.env.PropertySource<?>>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor"
        parameters: []
      valueType: "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "application"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.stream.Stream"
        method: "empty"
        methodParameters: []
      valueType: "java.util.stream.Stream"
      uuid: "stream"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParserFactory"
      uuid: "JsonParserFactory.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "string3"
              collectionUuid: "map"
            value:
              sapientType: "COLLECTION"
              content: !<collection>
                parameters: []
                values: []
              valueType: "java.util.Map"
              genericValueType: "?,?"
              uuid: "object2"
              collectionUuid: "map"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid7"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "BASIC"
      content: !<regular>
        value: "json1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "?,?"
      uuid: "object2"
      collectionUuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.web.context.support.StandardServletEnvironment"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "NULL"
      uuid: "uniqueUuid9"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.stream.Stream"
        method: "empty"
        methodParameters: []
      valueType: "java.util.stream.Stream"
      uuid: "stream4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources2"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemProperties"
      valueType: "java.lang.String"
      uuid: "string5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemProperties"
      valueType: "java.lang.String"
      uuid: "string5"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.core.env.PropertySource"
      uuid: "propertySource"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 106
      expression: "!map.isEmpty()"
      range: "(106,7)-(106,20)"
      evaluatedAs: true
      internalMethodName: "processJson"
    - lineNumber: 123
      expression: "prefix != null"
      range: "(123,24)-(123,37)"
      evaluatedAs: false
      internalMethodName: "flatten"
    - lineNumber: 129
      expression: "value instanceof Map"
      range: "(129,7)-(129,26)"
      evaluatedAs: true
      internalMethodName: "extract"
    - lineNumber: 130
      expression: "CollectionUtils.isEmpty((Map<?, ?>) value)"
      range: "(130,8)-(130,49)"
      evaluatedAs: true
      internalMethodName: "extract"
    - lineNumber: 164
      expression: "ClassUtils.isPresent(SERVLET_ENVIRONMENT_CLASS, null)"
      range: "(164,7)-(164,59)"
      evaluatedAs: true
      internalMethodName: "findPropertySource"
    - lineNumber: 169
      expression: "servletPropertySource != null"
      range: "(169,8)-(169,36)"
      evaluatedAs: false
      internalMethodName: "findPropertySource"
    - lineNumber: 155
      expression: "sources.contains(name)"
      range: "(155,7)-(155,28)"
      evaluatedAs: true
      internalMethodName: "addJsonPropertySource"
  - pathId: "path5"
    testPathName: "postProcessEnvironmentWhenCollectionUtilsIsEmptyValueAndClassUtilsNotIsPresentSERVLET_ENVIRONMENT_CLASSNullAndSourcesNo"
    constructorSignature: "<init>() : void"
    modelFingerprint: "DEC6E316A59A6B511B113788092CB821"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "2AB40C7309B23844284816875A86BEFD"
      valueUuid: "environment"
    - type: "INPUT"
      name: "application"
      modelFingerprint: "86BFF8B99831ED759F640847C7C0F409"
      valueUuid: "application"
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "E97B1B215647A456976BAD20E92F84F8"
      valueUuid: "environment"
      methodExercised:
        expression: "getPropertySources():mutablePropertySources"
    - type: "LOCAL_VARIABLE"
      name: "propertySources"
      modelFingerprint: "8D777FEC2275B7A42CD1B771458221A7"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "stream():stream"
    - type: "STATIC"
      name: "JsonParserFactory.class"
      modelFingerprint: "9D74D3538AE252B5C692AD3A1AE4732E"
      valueUuid: "JsonParserFactory.class"
      methodExercised:
        expression: "getJsonParser():jsonParser"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "parser"
      modelFingerprint: "2C49EC612272F30177AFDAAC0D0CB81D"
      valueUuid: "jsonParser"
      methodExercised:
        expression: "parseMap(json:string):map"
        throwsExceptions:
        - "org.springframework.boot.json.JsonParseException"
    - type: "STATIC"
      name: "CollectionUtils.class"
      modelFingerprint: "DE9AA82D3ADE608BEF8EC5190B14EBE1"
      valueUuid: "CollectionUtils.class"
      methodExercised:
        expression: "isEmpty(collection:object2):boolean4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "E97B1B215647A456976BAD20E92F84F8"
      valueUuid: "environment"
      methodExercised:
        expression: "getPropertySources():mutablePropertySources2"
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "0F464A855DF273BE766ABE3478F48523"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "isPresent(className:uniqueUuid11,classLoader:uniqueUuid12):boolean5"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "973C15CF62FADCAB5E756BBBF46DFE45"
      valueUuid: "mutablePropertySources2"
      methodExercised:
        expression: "contains(name:string5):boolean6"
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "E5AB2F330B4372735AC8B83C636ED7AC"
      valueUuid: "mutablePropertySources2"
      methodExercised:
        expression: "addFirst(propertySource:propertySource):void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.stream.Stream.map(java.util.function.Function)\
        \ : java.util.stream.Stream<org.springframework.core.env.PropertySource<?>>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor"
        parameters: []
      valueType: "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "application"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.stream.Stream"
        method: "empty"
        methodParameters: []
      valueType: "java.util.stream.Stream"
      uuid: "stream"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParserFactory"
      uuid: "JsonParserFactory.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "string3"
              collectionUuid: "map"
            value:
              sapientType: "COLLECTION"
              content: !<collection>
                parameters: []
                values: []
              valueType: "java.util.Collection"
              genericValueType: "?"
              uuid: "object2"
              collectionUuid: "map"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid10"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "BASIC"
      content: !<regular>
        value: "json1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "?"
      uuid: "object2"
      collectionUuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.web.context.support.StandardServletEnvironment"
      valueType: "java.lang.String"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "NULL"
      uuid: "uniqueUuid12"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemProperties"
      valueType: "java.lang.String"
      uuid: "string5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.core.env.PropertySource"
      uuid: "propertySource"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 106
      expression: "!map.isEmpty()"
      range: "(106,7)-(106,20)"
      evaluatedAs: true
      internalMethodName: "processJson"
    - lineNumber: 123
      expression: "prefix != null"
      range: "(123,24)-(123,37)"
      evaluatedAs: false
      internalMethodName: "flatten"
    - lineNumber: 129
      expression: "value instanceof Map"
      range: "(129,7)-(129,26)"
      evaluatedAs: false
      internalMethodName: "extract"
    - lineNumber: 136
      expression: "value instanceof Collection"
      range: "(136,12)-(136,38)"
      evaluatedAs: true
      internalMethodName: "extract"
    - lineNumber: 137
      expression: "CollectionUtils.isEmpty((Collection<?>) value)"
      range: "(137,8)-(137,53)"
      evaluatedAs: true
      internalMethodName: "extract"
    - lineNumber: 164
      expression: "ClassUtils.isPresent(SERVLET_ENVIRONMENT_CLASS, null)"
      range: "(164,7)-(164,59)"
      evaluatedAs: false
      internalMethodName: "findPropertySource"
    - lineNumber: 155
      expression: "sources.contains(name)"
      range: "(155,7)-(155,28)"
      evaluatedAs: false
      internalMethodName: "addJsonPropertySource"
  - pathId: "path6"
    testPathName: "postProcessEnvironmentWhenClassUtilsNotIsPresentSERVLET_ENVIRONMENT_CLASSNullAndSourcesNotContainsName2"
    constructorSignature: "<init>() : void"
    modelFingerprint: "39C3A780327F85160BD26C8019F23480"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "2AB40C7309B23844284816875A86BEFD"
      valueUuid: "environment"
    - type: "INPUT"
      name: "application"
      modelFingerprint: "86BFF8B99831ED759F640847C7C0F409"
      valueUuid: "application"
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "E97B1B215647A456976BAD20E92F84F8"
      valueUuid: "environment"
      methodExercised:
        expression: "getPropertySources():mutablePropertySources"
    - type: "LOCAL_VARIABLE"
      name: "propertySources"
      modelFingerprint: "8D777FEC2275B7A42CD1B771458221A7"
      valueUuid: "mutablePropertySources"
      methodExercised:
        expression: "stream():stream"
    - type: "STATIC"
      name: "JsonParserFactory.class"
      modelFingerprint: "9D74D3538AE252B5C692AD3A1AE4732E"
      valueUuid: "JsonParserFactory.class"
      methodExercised:
        expression: "getJsonParser():jsonParser"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "parser"
      modelFingerprint: "653DB16D62D639321406FA0CE52D64C8"
      valueUuid: "jsonParser"
      methodExercised:
        expression: "parseMap(json:string):map"
        throwsExceptions:
        - "org.springframework.boot.json.JsonParseException"
    - type: "STATIC"
      name: "CollectionUtils.class"
      modelFingerprint: "2DB2903145CEC48357DA35A335B98CBD"
      valueUuid: "CollectionUtils.class"
      methodExercised:
        expression: "isEmpty(collection:object2):boolean4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "E97B1B215647A456976BAD20E92F84F8"
      valueUuid: "environment"
      methodExercised:
        expression: "getPropertySources():mutablePropertySources2"
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "0F464A855DF273BE766ABE3478F48523"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "isPresent(className:uniqueUuid14,classLoader:uniqueUuid15):boolean7"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "973C15CF62FADCAB5E756BBBF46DFE45"
      valueUuid: "mutablePropertySources2"
      methodExercised:
        expression: "contains(name:string6):boolean8"
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "E5AB2F330B4372735AC8B83C636ED7AC"
      valueUuid: "mutablePropertySources2"
      methodExercised:
        expression: "addFirst(propertySource:propertySource):void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.stream.Stream.map(java.util.function.Function)\
        \ : java.util.stream.Stream<org.springframework.core.env.PropertySource<?>>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor"
        parameters: []
      valueType: "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.SpringApplication"
      uuid: "application"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.stream.Stream"
        method: "empty"
        methodParameters: []
      valueType: "java.util.stream.Stream"
      uuid: "stream"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParserFactory"
      uuid: "JsonParserFactory.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.json.JsonParser"
      uuid: "jsonParser"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.HashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "A"
              valueType: "java.lang.String"
              uuid: "string3"
              collectionUuid: "map"
            value:
              sapientType: "COLLECTION"
              content: !<collection>
                collectionClass: "java.util.ArrayList"
                parameters: []
                values:
                - sapientType: "OBJECT"
                  content: !<new>
                    target: "java.lang.Object"
                    parameters: []
                  valueType: "java.lang.Object"
                  uuid: "object3"
                  collectionUuid: "object2"
              valueType: "java.util.Collection"
              genericValueType: "?"
              uuid: "object2"
              collectionUuid: "map"
          valueType: "java.util.Map$Entry"
          uuid: "uniqueUuid13"
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,java.lang.Object"
      uuid: "map"
    - sapientType: "BASIC"
      content: !<regular>
        value: "json1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
          valueType: "java.lang.Object"
          uuid: "object3"
          collectionUuid: "object2"
      valueType: "java.util.Collection"
      genericValueType: "?"
      uuid: "object2"
      collectionUuid: "map"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.web.context.support.StandardServletEnvironment"
      valueType: "java.lang.String"
      uuid: "uniqueUuid14"
      fixed: true
    - sapientType: "NULL"
      uuid: "uniqueUuid15"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemProperties"
      valueType: "java.lang.String"
      uuid: "string6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.core.env.PropertySource"
      uuid: "propertySource"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 106
      expression: "!map.isEmpty()"
      range: "(106,7)-(106,20)"
      evaluatedAs: true
      internalMethodName: "processJson"
    - lineNumber: 123
      expression: "prefix != null"
      range: "(123,24)-(123,37)"
      evaluatedAs: false
      internalMethodName: "flatten"
    - lineNumber: 129
      expression: "value instanceof Map"
      range: "(129,7)-(129,26)"
      evaluatedAs: false
      internalMethodName: "extract"
    - lineNumber: 136
      expression: "value instanceof Collection"
      range: "(136,12)-(136,38)"
      evaluatedAs: true
      internalMethodName: "extract"
    - lineNumber: 137
      expression: "CollectionUtils.isEmpty((Collection<?>) value)"
      range: "(137,8)-(137,53)"
      evaluatedAs: false
      internalMethodName: "extract"
    - lineNumber: 142
      expression: "for-each((Collection<Object>) value)"
      range: "(142,25)-(142,50)"
      evaluatedAs: true
      internalMethodName: "extract"
    - lineNumber: 164
      expression: "ClassUtils.isPresent(SERVLET_ENVIRONMENT_CLASS, null)"
      range: "(164,7)-(164,59)"
      evaluatedAs: false
      internalMethodName: "findPropertySource"
    - lineNumber: 155
      expression: "sources.contains(name)"
      range: "(155,7)-(155,28)"
      evaluatedAs: false
      internalMethodName: "addJsonPropertySource"
