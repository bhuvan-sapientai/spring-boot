---
modelFingerprint: "146C20527945421E28E9ABD35230A7AE"
targetClass:
  fullClassName: "org.springframework.boot.env.PropertiesPropertySourceLoader"
methods:
- method:
    name: "getFileExtensions"
    sourceCodeSignature: "String[] getFileExtensions()"
    returnType: "java.lang.String[]"
    instructionFingerprint: "25D7F3651F02C914A6EC45C73FE171D3"
  paths:
  - pathId: "path1"
    testPathName: "getFileExtensionsTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "1009C278107B23DF9A15C689192101DA"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F68EEB21994B6DA355D8C85A73FFFD49"
      valueUuid: "stringArray"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.PropertiesPropertySourceLoader"
        parameters: []
      valueType: "org.springframework.boot.env.PropertiesPropertySourceLoader"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "properties"
            valueType: "java.lang.String"
            uuid: "uniqueUuid1"
            fixed: true
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "xml"
            valueType: "java.lang.String"
            uuid: "uniqueUuid2"
            fixed: true
      valueType: "java.lang.String[]"
      uuid: "stringArray"
- method:
    name: "load"
    sourceCodeSignature: "List<PropertySource<?>> load(String name, Resource resource)"
    returnType: "java.util.List"
    genericReturnType: "org.springframework.core.env.PropertySource<?>"
    throwsExceptions:
    - "java.io.IOException"
    parameters:
    - name: "name"
      type: "java.lang.String"
    - name: "resource"
      type: "org.springframework.core.io.Resource"
    instructionFingerprint: "8203858E63C5572D357DEDE2A41DF646"
  paths:
  - pathId: "path1"
    testPathName: "loadWhenILessThanPropertiesSizeAndPropertiesSizeEquals1"
    constructorSignature: "<init>() : void"
    modelFingerprint: "399F872B2EC1826526EE3CB794B44F64"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "C174903056EA54F5F524621E7ADF08B4"
      valueUuid: "name"
    - type: "INPUT"
      name: "resource"
      modelFingerprint: "211A0FF35EB7CE9BF6E340D6C9D32D91"
      valueUuid: "resource"
    - type: "LOCAL_VARIABLE"
      name: "resource"
      modelFingerprint: "A47E82F53D2BEACC7833E4E1B71DE2C4"
      valueUuid: "resource"
      methodExercised:
        expression: "getFilename():string"
    - type: "STATIC"
      name: "PropertiesLoaderUtils.class"
      modelFingerprint: "3B16643BC07428D79976666425BD5277"
      valueUuid: "PropertiesLoaderUtils.class"
      methodExercised:
        expression: "loadProperties(resource:resource):properties"
        throwsExceptions:
        - "java.io.IOException"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2E14B0AE261945B4EFDEE950F18220D4"
      valueUuid: "arrayList2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.PropertiesPropertySourceLoader"
        parameters: []
      valueType: "org.springframework.boot.env.PropertiesPropertySourceLoader"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "BC"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
    - sapientType: "BASIC"
      content: !<regular>
        value: ".xml"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.PropertiesLoaderUtils"
      uuid: "PropertiesLoaderUtils.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Properties"
      uuid: "properties"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters:
        - name: "initialCapacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "int1"
            collectionUuid: "arrayList"
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.env.OriginTrackedMapPropertySource"
            parameters:
            - name: "name"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "BC"
                valueType: "java.lang.String"
                uuid: "string3"
            - name: "source"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.util.Map"
                uuid: "map2"
            - name: "immutable"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: true
                valueType: "boolean"
                fixed: true
          valueType: "org.springframework.boot.env.OriginTrackedMapPropertySource"
          uuid: "originTrackedMapPropertySource"
          fixed: true
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.env.PropertySource<?>"
      uuid: "arrayList2"
    branches:
    - lineNumber: 66
      expression: "filename != null"
      range: "(66,7)-(66,22)"
      evaluatedAs: true
      internalMethodName: "loadProperties"
    - lineNumber: 66
      expression: "filename.endsWith(XML_FILE_EXTENSION)"
      range: "(66,27)-(66,63)"
      evaluatedAs: true
      internalMethodName: "loadProperties"
    - lineNumber: 50
      expression: "properties.isEmpty()"
      range: "(50,7)-(50,26)"
      evaluatedAs: false
    - lineNumber: 54
      expression: "i < properties.size()"
      range: "(54,19)-(54,39)"
      evaluatedAs: true
    - lineNumber: 55
      expression: "properties.size() != 1"
      range: "(55,29)-(55,50)"
      evaluatedAs: false
  - pathId: "path2"
    testPathName: "loadWhenPropertiesNotIsEmptyAndILessThanPropertiesSizeAndPropertiesSizeEquals1"
    constructorSignature: "<init>() : void"
    modelFingerprint: "1FBD166A448184ABD9A8449E3CAB07CD"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "2023CF8095530A2FE39433EF5E339693"
      valueUuid: "name"
    - type: "INPUT"
      name: "resource"
      modelFingerprint: "211A0FF35EB7CE9BF6E340D6C9D32D91"
      valueUuid: "resource"
    - type: "LOCAL_VARIABLE"
      name: "resource"
      modelFingerprint: "515DEE0C0F939004AD202958627ECC70"
      valueUuid: "resource"
      methodExercised:
        expression: "getFilename():string"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "7A26E0AB819808C24D585AAEE1AAA01F"
      valueUuid: "originTrackedPropertiesLoader"
      methodExercised:
        expression: "load():list"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "D1ED6AA2D85621E40A82BACAC6AB8656"
      valueUuid: "originTrackedPropertiesLoader.Document"
      methodExercised:
        expression: "asMap():map"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0FD2BD233F4C0E49FDC01AD58E8C07F4"
      valueUuid: "arrayList2"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "List<Document> documents = new OriginTrackedPropertiesLoader(resource).load();"
      lineNumber: 70
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type OriginTrackedPropertiesLoader - Method: load"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.PropertiesPropertySourceLoader"
        parameters: []
      valueType: "org.springframework.boot.env.PropertiesPropertySourceLoader"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "E"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ABCD"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.Resource"
            uuid: "resource"
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader"
      uuid: "originTrackedPropertiesLoader"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
          uuid: "originTrackedPropertiesLoader.Document"
          collectionUuid: "list"
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document"
      collectionUuid: "list"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,org.springframework.boot.origin.OriginTrackedValue"
      uuid: "map"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters:
        - name: "initialCapacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "int1"
            collectionUuid: "arrayList"
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.env.OriginTrackedMapPropertySource"
            parameters:
            - name: "name"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "E"
                valueType: "java.lang.String"
                uuid: "string3"
            - name: "source"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.util.Map"
                genericValueType: "java.lang.String,org.springframework.boot.origin.OriginTrackedValue"
                uuid: "map3"
            - name: "immutable"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: true
                valueType: "boolean"
                fixed: true
          valueType: "org.springframework.boot.env.OriginTrackedMapPropertySource"
          uuid: "originTrackedMapPropertySource"
          fixed: true
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.env.PropertySource<?>"
      uuid: "arrayList2"
    branches:
    - lineNumber: 66
      expression: "filename != null"
      range: "(66,7)-(66,22)"
      evaluatedAs: true
      internalMethodName: "loadProperties"
    - lineNumber: 66
      expression: "filename.endsWith(XML_FILE_EXTENSION)"
      range: "(66,27)-(66,63)"
      evaluatedAs: false
      internalMethodName: "loadProperties"
    - lineNumber: 50
      expression: "properties.isEmpty()"
      range: "(50,7)-(50,26)"
      evaluatedAs: false
    - lineNumber: 54
      expression: "i < properties.size()"
      range: "(54,19)-(54,39)"
      evaluatedAs: true
    - lineNumber: 55
      expression: "properties.size() != 1"
      range: "(55,29)-(55,50)"
      evaluatedAs: false
