---
modelFingerprint: "5D80EC928E9701A5B56DA5B20BAC06A6"
targetClass:
  fullClassName: "org.springframework.boot.env.OriginTrackedPropertiesLoader"
methods:
- method:
    name: "load"
    sourceCodeSignature: "List<Document> load()"
    returnType: "java.util.List"
    genericReturnType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
    throwsExceptions:
    - "java.io.IOException"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Throwable"
    instructionFingerprint: "E219518F51D1C994FB3A867985DA6C1F"
  paths:
  - pathId: "path1"
    testPathName: "loadTest"
    constructorSignature: "<init>(org.springframework.core.io.Resource) : void"
    modelFingerprint: "B6646F5A10109690905C96787F7B068A"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "525917AF246822CF9B1683755B15C62A"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "EE3EFEC8F90FF7867AB63B918B44AF57"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:resource,message:uniqueUuid1):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "8468F10ADA2F6231F9364DC409E30697"
      methodExercised:
        expression: "load(expandLists:uniqueUuid2):list"
        throwsExceptions:
        - "java.io.IOException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F299740DF313693CA44053F238292D40"
      valueUuid: "list"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.Resource"
            uuid: "resource"
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Resource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "list"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "list"
- method:
    name: "load"
    sourceCodeSignature: "List<Document> load(boolean expandLists)"
    returnType: "java.util.List"
    genericReturnType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
    throwsExceptions:
    - "java.io.IOException"
    parameters:
    - name: "expandLists"
      type: "boolean"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Throwable"
    instructionFingerprint: "025E86B756980CE15E965C9EA9945108"
  paths:
  - pathId: "path29"
    testPathName: "load1WhenKeyNotEndsWith__AndReaderNotIsWhiteSpaceAndReaderIsEndOfLineAndDefaultBranchThrowsThrowable"
    constructorSignature: "<init>(org.springframework.core.io.Resource) : void"
    modelFingerprint: "CEAF6F37008105A49232A88E0EAEBBF8"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "525917AF246822CF9B1683755B15C62A"
      valueUuid: "target"
    - type: "INPUT"
      name: "expandLists"
      modelFingerprint: "0BB84A470B6CB860924D817BFA5E0BFF"
      valueUuid: "expandLists"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "EE3EFEC8F90FF7867AB63B918B44AF57"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:resource,message:uniqueUuid3):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "reader"
      modelFingerprint: "FE3A16B58F031A33A9F2970C3B42E900"
      valueUuid: "originTrackedPropertiesLoader.CharacterReader"
      methodExercised:
        expression: "read():boolean1"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "C770706C405076917C73454E50A9C9AE"
      valueUuid: "originTrackedPropertiesLoader.Document"
      methodExercised:
        expression: "isEmpty():boolean4"
    - type: "LOCAL_VARIABLE"
      name: "reader"
      modelFingerprint: "376C3B73151988739B03BC53D8EE90F8"
      valueUuid: "originTrackedPropertiesLoader.CharacterReader"
      methodExercised:
        expression: "skipComment():void3"
        throwsExceptions:
        - "java.io.IOException"
        privateAccess: true
    - type: "LOCAL_VARIABLE"
      name: "reader"
      modelFingerprint: "69461678BD026AFD84A15A07CC9B4AA1"
      valueUuid: "originTrackedPropertiesLoader.CharacterReader"
      methodExercised:
        expression: "read():boolean6"
        throwsExceptions:
        - "java.io.IOException"
    - type: "STATIC"
      name: "OriginTrackedValue.class"
      modelFingerprint: "3E32B6F05BE0990CEE0B9B5858F97F18"
      valueUuid: "OriginTrackedValue.class"
      methodExercised:
        expression: "of(value:string3,origin:textResourceOrigin):originTrackedValue"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "163CE8736C99305CED25498EEF99ABB9"
      valueUuid: "originTrackedPropertiesLoader.Document"
      methodExercised:
        expression: "put(key:string2,value:originTrackedValue):void7"
    - type: "LOCAL_VARIABLE"
      name: "reader"
      modelFingerprint: "69461678BD026AFD84A15A07CC9B4AA1"
      valueUuid: "originTrackedPropertiesLoader.CharacterReader"
      methodExercised:
        expression: "read():boolean11"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      name: "reader"
      modelFingerprint: "83CAF4D34FBF1F72A9F6EFF5C9F83AA7"
      valueUuid: "originTrackedPropertiesLoader.CharacterReader"
      methodExercised:
        expression: "close():void8"
        throwsExceptions:
        - "java.io.IOException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "49E493EB56B47EDEB5C173968793BABC"
      valueUuid: "throwable"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.Resource"
            uuid: "resource"
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expandLists"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Resource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$CharacterReader"
      uuid: "originTrackedPropertiesLoader.CharacterReader"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
        parameters: []
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$CharacterReader"
      uuid: "originTrackedPropertiesLoader.CharacterReader"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$CharacterReader"
      uuid: "originTrackedPropertiesLoader.CharacterReader"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "OriginTrackedValue.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "originTrackedValue"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.origin.TextResourceOrigin"
      uuid: "textResourceOrigin"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
        parameters: []
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "originTrackedValue"
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$CharacterReader"
      uuid: "originTrackedPropertiesLoader.CharacterReader"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean11"
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$CharacterReader"
      uuid: "originTrackedPropertiesLoader.CharacterReader"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "throwable"
    branches:
    - lineNumber: 81
      expression: "reader.read()"
      range: "(81,11)-(81,23)"
      evaluatedAs: true
    - lineNumber: 82
      expression: "reader.isCommentPrefixCharacter()"
      range: "(82,9)-(82,41)"
      evaluatedAs: true
    - lineNumber: 166
      expression: "reader.isSameLastLineCommentPrefix()"
      range: "(166,7)-(166,42)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 84
      expression: "isNewDocument(reader)"
      range: "(84,10)-(84,30)"
      evaluatedAs: false
    - lineNumber: 91
      expression: "document.isEmpty()"
      range: "(91,11)-(91,28)"
      evaluatedAs: true
    - lineNumber: 91
      expression: "!documents.isEmpty()"
      range: "(91,33)-(91,52)"
      evaluatedAs: false
    - lineNumber: 135
      expression: "!reader.isEndOfLine()"
      range: "(135,10)-(135,30)"
      evaluatedAs: false
      internalMethodName: "loadKey"
    - lineNumber: 114
      expression: "expandLists"
      range: "(114,7)-(114,17)"
      evaluatedAs: true
      internalMethodName: "loadKeyAndValue"
    - lineNumber: 114
      expression: "key.endsWith(\\\"[]\\\")"
      range: "(114,22)-(114,39)"
      evaluatedAs: false
      internalMethodName: "loadKeyAndValue"
    - lineNumber: 153
      expression: "reader.isWhiteSpace()"
      range: "(153,10)-(153,30)"
      evaluatedAs: false
      internalMethodName: "loadValue"
    - lineNumber: 157
      expression: "!reader.isEndOfLine()"
      range: "(157,10)-(157,30)"
      evaluatedAs: false
      internalMethodName: "loadValue"
    - lineNumber: 80
      expression: "branch expression (line 80)"
      range: "(80,1)-(80,200)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Throwable"
  - pathId: "path9"
    testPathName: "load1WhenNotPreviousWhitespaceAndNotExpandListsAndReaderNotIsWhiteSpaceAndReaderIsEndOfLineAndDocumentIsEmpty"
    constructorSignature: "<init>(org.springframework.core.io.Resource) : void"
    modelFingerprint: "AC145C08BFE29A3D950334664F0DA603"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "525917AF246822CF9B1683755B15C62A"
      valueUuid: "target"
    - type: "INPUT"
      name: "expandLists"
      modelFingerprint: "F87D77C8085193EEF6C367CC90A981C1"
      valueUuid: "expandLists"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "EE3EFEC8F90FF7867AB63B918B44AF57"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:resource,message:uniqueUuid4):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "C770706C405076917C73454E50A9C9AE"
      valueUuid: "originTrackedPropertiesLoader.Document"
      methodExercised:
        expression: "isEmpty():boolean4"
    - type: "STATIC"
      name: "OriginTrackedValue.class"
      modelFingerprint: "70ADEA2BED111AE9DA8E48E4EA25715B"
      valueUuid: "OriginTrackedValue.class"
      methodExercised:
        expression: "of(value:string3,origin:textResourceOrigin):originTrackedValue"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "163CE8736C99305CED25498EEF99ABB9"
      valueUuid: "originTrackedPropertiesLoader.Document"
      methodExercised:
        expression: "put(key:string2,value:originTrackedValue):void7"
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "C770706C405076917C73454E50A9C9AE"
      valueUuid: "originTrackedPropertiesLoader.Document"
      methodExercised:
        expression: "isEmpty():boolean16"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "33ACD1EE6AE9F59E10B0CC09A1D0D0EE"
      valueUuid: "arrayList"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.Resource"
            uuid: "resource"
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expandLists"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Resource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
        parameters: []
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "OriginTrackedValue.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "originTrackedValue"
    - sapientType: "BASIC"
      content: !<regular>
        value: " "
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.origin.TextResourceOrigin"
      uuid: "textResourceOrigin"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
        parameters: []
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "originTrackedValue"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
        parameters: []
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean16"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "arrayList"
    branches:
    - lineNumber: 81
      expression: "reader.read()"
      range: "(81,11)-(81,23)"
      evaluatedAs: true
    - lineNumber: 82
      expression: "reader.isCommentPrefixCharacter()"
      range: "(82,9)-(82,41)"
      evaluatedAs: true
    - lineNumber: 166
      expression: "reader.isSameLastLineCommentPrefix()"
      range: "(166,7)-(166,42)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 84
      expression: "isNewDocument(reader)"
      range: "(84,10)-(84,30)"
      evaluatedAs: false
    - lineNumber: 91
      expression: "document.isEmpty()"
      range: "(91,11)-(91,28)"
      evaluatedAs: true
    - lineNumber: 91
      expression: "!documents.isEmpty()"
      range: "(91,33)-(91,52)"
      evaluatedAs: false
    - lineNumber: 135
      expression: "!reader.isEndOfLine()"
      range: "(135,10)-(135,30)"
      evaluatedAs: true
      internalMethodName: "loadKey"
    - lineNumber: 136
      expression: "reader.isPropertyDelimiter()"
      range: "(136,8)-(136,35)"
      evaluatedAs: false
      internalMethodName: "loadKey"
    - lineNumber: 140
      expression: "!reader.isWhiteSpace()"
      range: "(140,8)-(140,29)"
      evaluatedAs: true
      internalMethodName: "loadKey"
    - lineNumber: 140
      expression: "previousWhitespace"
      range: "(140,34)-(140,51)"
      evaluatedAs: false
      internalMethodName: "loadKey"
    - lineNumber: 114
      expression: "expandLists"
      range: "(114,7)-(114,17)"
      evaluatedAs: false
      internalMethodName: "loadKeyAndValue"
    - lineNumber: 153
      expression: "reader.isWhiteSpace()"
      range: "(153,10)-(153,30)"
      evaluatedAs: false
      internalMethodName: "loadValue"
    - lineNumber: 157
      expression: "!reader.isEndOfLine()"
      range: "(157,10)-(157,30)"
      evaluatedAs: false
      internalMethodName: "loadValue"
    - lineNumber: 105
      expression: "!document.isEmpty()"
      range: "(105,7)-(105,25)"
      evaluatedAs: false
  - pathId: "path33"
    testPathName: "load1WhenReaderNotIsWhiteSpaceAndReaderIsEndOfLineAndDefaultBranchAndDocumentNotIsEmptyAndDocumentsNotContainsDocument"
    constructorSignature: "<init>(org.springframework.core.io.Resource) : void"
    modelFingerprint: "DD2CFBEA850DFE64E564CFC9FF4BA2BC"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "525917AF246822CF9B1683755B15C62A"
      valueUuid: "target"
    - type: "INPUT"
      name: "expandLists"
      modelFingerprint: "0BB84A470B6CB860924D817BFA5E0BFF"
      valueUuid: "expandLists"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "EE3EFEC8F90FF7867AB63B918B44AF57"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:resource,message:uniqueUuid5):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "reader"
      modelFingerprint: "FE3A16B58F031A33A9F2970C3B42E900"
      valueUuid: "originTrackedPropertiesLoader.CharacterReader"
      methodExercised:
        expression: "read():boolean1"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "C770706C405076917C73454E50A9C9AE"
      valueUuid: "originTrackedPropertiesLoader.Document"
      methodExercised:
        expression: "isEmpty():boolean4"
    - type: "LOCAL_VARIABLE"
      name: "reader"
      modelFingerprint: "376C3B73151988739B03BC53D8EE90F8"
      valueUuid: "originTrackedPropertiesLoader.CharacterReader"
      methodExercised:
        expression: "skipComment():void3"
        throwsExceptions:
        - "java.io.IOException"
        privateAccess: true
    - type: "LOCAL_VARIABLE"
      name: "reader"
      modelFingerprint: "69461678BD026AFD84A15A07CC9B4AA1"
      valueUuid: "originTrackedPropertiesLoader.CharacterReader"
      methodExercised:
        expression: "read():boolean6"
        throwsExceptions:
        - "java.io.IOException"
    - type: "STATIC"
      name: "OriginTrackedValue.class"
      modelFingerprint: "3E32B6F05BE0990CEE0B9B5858F97F18"
      valueUuid: "OriginTrackedValue.class"
      methodExercised:
        expression: "of(value:string3,origin:textResourceOrigin):originTrackedValue"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "163CE8736C99305CED25498EEF99ABB9"
      valueUuid: "originTrackedPropertiesLoader.Document"
      methodExercised:
        expression: "put(key:string2,value:originTrackedValue):void7"
    - type: "LOCAL_VARIABLE"
      name: "reader"
      modelFingerprint: "69461678BD026AFD84A15A07CC9B4AA1"
      valueUuid: "originTrackedPropertiesLoader.CharacterReader"
      methodExercised:
        expression: "read():boolean11"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      name: "reader"
      modelFingerprint: "83CAF4D34FBF1F72A9F6EFF5C9F83AA7"
      valueUuid: "originTrackedPropertiesLoader.CharacterReader"
      methodExercised:
        expression: "close():void8"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "ED0EC5DF30E136790A6ADBD6F3B501A1"
      valueUuid: "originTrackedPropertiesLoader.Document"
      methodExercised:
        expression: "isEmpty():boolean12"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0A46A872136645512CC6D97E768127B5"
      valueUuid: "arrayList"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.Resource"
            uuid: "resource"
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expandLists"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Resource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$CharacterReader"
      uuid: "originTrackedPropertiesLoader.CharacterReader"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
        parameters: []
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$CharacterReader"
      uuid: "originTrackedPropertiesLoader.CharacterReader"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$CharacterReader"
      uuid: "originTrackedPropertiesLoader.CharacterReader"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "OriginTrackedValue.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "originTrackedValue"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.origin.TextResourceOrigin"
      uuid: "textResourceOrigin"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
        parameters: []
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "originTrackedValue"
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$CharacterReader"
      uuid: "originTrackedPropertiesLoader.CharacterReader"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean11"
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$CharacterReader"
      uuid: "originTrackedPropertiesLoader.CharacterReader"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
        parameters: []
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean12"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
            parameters: []
          valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
          uuid: "originTrackedPropertiesLoader.Document"
          fixed: true
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "arrayList"
    branches:
    - lineNumber: 81
      expression: "reader.read()"
      range: "(81,11)-(81,23)"
      evaluatedAs: true
    - lineNumber: 82
      expression: "reader.isCommentPrefixCharacter()"
      range: "(82,9)-(82,41)"
      evaluatedAs: true
    - lineNumber: 166
      expression: "reader.isSameLastLineCommentPrefix()"
      range: "(166,7)-(166,42)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 84
      expression: "isNewDocument(reader)"
      range: "(84,10)-(84,30)"
      evaluatedAs: false
    - lineNumber: 91
      expression: "document.isEmpty()"
      range: "(91,11)-(91,28)"
      evaluatedAs: true
    - lineNumber: 91
      expression: "!documents.isEmpty()"
      range: "(91,33)-(91,52)"
      evaluatedAs: false
    - lineNumber: 135
      expression: "!reader.isEndOfLine()"
      range: "(135,10)-(135,30)"
      evaluatedAs: false
      internalMethodName: "loadKey"
    - lineNumber: 114
      expression: "expandLists"
      range: "(114,7)-(114,17)"
      evaluatedAs: true
      internalMethodName: "loadKeyAndValue"
    - lineNumber: 114
      expression: "key.endsWith(\\\"[]\\\")"
      range: "(114,22)-(114,39)"
      evaluatedAs: false
      internalMethodName: "loadKeyAndValue"
    - lineNumber: 153
      expression: "reader.isWhiteSpace()"
      range: "(153,10)-(153,30)"
      evaluatedAs: false
      internalMethodName: "loadValue"
    - lineNumber: 157
      expression: "!reader.isEndOfLine()"
      range: "(157,10)-(157,30)"
      evaluatedAs: false
      internalMethodName: "loadValue"
    - lineNumber: 80
      expression: "branch expression (line 80)"
      range: "(80,1)-(80,200)"
      evaluatedAs: true
    - lineNumber: 105
      expression: "!document.isEmpty()"
      range: "(105,7)-(105,25)"
      evaluatedAs: true
    - lineNumber: 105
      expression: "!documents.contains(document)"
      range: "(105,30)-(105,58)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Throwable"
  - pathId: "path1"
    testPathName: "load1WhenSplitListsNotAndReaderIsListDelimiterAndDocumentNotIsEmptyAndDocumentsNotContainsDocument"
    constructorSignature: "<init>(org.springframework.core.io.Resource) : void"
    modelFingerprint: "DE83FFE0B4FDB2F005F6F7E989AF017A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "525917AF246822CF9B1683755B15C62A"
      valueUuid: "target"
    - type: "INPUT"
      name: "expandLists"
      modelFingerprint: "0BB84A470B6CB860924D817BFA5E0BFF"
      valueUuid: "expandLists"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "EE3EFEC8F90FF7867AB63B918B44AF57"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:resource,message:uniqueUuid6):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "C770706C405076917C73454E50A9C9AE"
      valueUuid: "originTrackedPropertiesLoader.Document"
      methodExercised:
        expression: "isEmpty():boolean4"
    - type: "STATIC"
      name: "OriginTrackedValue.class"
      modelFingerprint: "AA159667CDE128BEDDAF3F492B080621"
      valueUuid: "OriginTrackedValue.class"
      methodExercised:
        expression: "of(value:string3,origin:textResourceOrigin):originTrackedValue"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "163CE8736C99305CED25498EEF99ABB9"
      valueUuid: "originTrackedPropertiesLoader.Document"
      methodExercised:
        expression: "put(key:string2,value:originTrackedValue):void7"
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "ED0EC5DF30E136790A6ADBD6F3B501A1"
      valueUuid: "originTrackedPropertiesLoader.Document"
      methodExercised:
        expression: "isEmpty():boolean19"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0A46A872136645512CC6D97E768127B5"
      valueUuid: "arrayList"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.Resource"
            uuid: "resource"
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expandLists"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Resource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
        parameters: []
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "OriginTrackedValue.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "originTrackedValue"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.origin.TextResourceOrigin"
      uuid: "textResourceOrigin"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
        parameters: []
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "originTrackedValue"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
        parameters: []
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean19"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
            parameters: []
          valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
          uuid: "originTrackedPropertiesLoader.Document"
          fixed: true
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "arrayList"
    branches:
    - lineNumber: 81
      expression: "reader.read()"
      range: "(81,11)-(81,23)"
      evaluatedAs: true
    - lineNumber: 82
      expression: "reader.isCommentPrefixCharacter()"
      range: "(82,9)-(82,41)"
      evaluatedAs: true
    - lineNumber: 166
      expression: "reader.isSameLastLineCommentPrefix()"
      range: "(166,7)-(166,42)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 84
      expression: "isNewDocument(reader)"
      range: "(84,10)-(84,30)"
      evaluatedAs: false
    - lineNumber: 91
      expression: "document.isEmpty()"
      range: "(91,11)-(91,28)"
      evaluatedAs: true
    - lineNumber: 91
      expression: "!documents.isEmpty()"
      range: "(91,33)-(91,52)"
      evaluatedAs: false
    - lineNumber: 135
      expression: "!reader.isEndOfLine()"
      range: "(135,10)-(135,30)"
      evaluatedAs: true
      internalMethodName: "loadKey"
    - lineNumber: 136
      expression: "reader.isPropertyDelimiter()"
      range: "(136,8)-(136,35)"
      evaluatedAs: true
      internalMethodName: "loadKey"
    - lineNumber: 114
      expression: "expandLists"
      range: "(114,7)-(114,17)"
      evaluatedAs: true
      internalMethodName: "loadKeyAndValue"
    - lineNumber: 114
      expression: "key.endsWith(\\\"[]\\\")"
      range: "(114,22)-(114,39)"
      evaluatedAs: false
      internalMethodName: "loadKeyAndValue"
    - lineNumber: 153
      expression: "reader.isWhiteSpace()"
      range: "(153,10)-(153,30)"
      evaluatedAs: true
      internalMethodName: "loadValue"
    - lineNumber: 153
      expression: "!reader.isEndOfLine()"
      range: "(153,35)-(153,55)"
      evaluatedAs: true
      internalMethodName: "loadValue"
    - lineNumber: 157
      expression: "!reader.isEndOfLine()"
      range: "(157,10)-(157,30)"
      evaluatedAs: true
      internalMethodName: "loadValue"
    - lineNumber: 157
      expression: "!(splitLists && reader.isListDelimiter())"
      range: "(157,35)-(157,75)"
      evaluatedAs: true
      internalMethodName: "loadValue"
    - lineNumber: 105
      expression: "!document.isEmpty()"
      range: "(105,7)-(105,25)"
      evaluatedAs: true
    - lineNumber: 105
      expression: "!documents.contains(document)"
      range: "(105,30)-(105,58)"
      evaluatedAs: true
  - pathId: "path23"
    testPathName: "load1WhenReaderIsEndOfLineAndNotExpandListsAndReaderNotIsWhiteSpaceAndReaderIsEndOfLineAndDocumentIsEmpty"
    constructorSignature: "<init>(org.springframework.core.io.Resource) : void"
    modelFingerprint: "ED0A3A749A03096B4E8137731E660890"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "525917AF246822CF9B1683755B15C62A"
      valueUuid: "target"
    - type: "INPUT"
      name: "expandLists"
      modelFingerprint: "F87D77C8085193EEF6C367CC90A981C1"
      valueUuid: "expandLists"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "EE3EFEC8F90FF7867AB63B918B44AF57"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:resource,message:uniqueUuid7):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "EA8B9A15391423B37DE34A44FD64D25C"
      valueUuid: "textResourceOrigin.Location"
      methodExercised:
        expression: "getColumn():column"
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "ED0EC5DF30E136790A6ADBD6F3B501A1"
      valueUuid: "originTrackedPropertiesLoader.Document"
      methodExercised:
        expression: "isEmpty():boolean6"
    - type: "STATIC"
      name: "OriginTrackedValue.class"
      modelFingerprint: "3E32B6F05BE0990CEE0B9B5858F97F18"
      valueUuid: "OriginTrackedValue.class"
      methodExercised:
        expression: "of(value:string3,origin:textResourceOrigin):originTrackedValue"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "163CE8736C99305CED25498EEF99ABB9"
      valueUuid: "originTrackedPropertiesLoader.Document"
      methodExercised:
        expression: "put(key:string2,value:originTrackedValue):void8"
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "C770706C405076917C73454E50A9C9AE"
      valueUuid: "originTrackedPropertiesLoader.Document"
      methodExercised:
        expression: "isEmpty():boolean12"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "33ACD1EE6AE9F59E10B0CC09A1D0D0EE"
      valueUuid: "arrayList"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.Resource"
            uuid: "resource"
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expandLists"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Resource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.origin.TextResourceOrigin$Location"
        parameters:
        - name: "line"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "textResourceOrigin.Location-line"
        - name: "column"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: -1
            valueType: "int"
            uuid: "column"
      valueType: "org.springframework.boot.origin.TextResourceOrigin$Location"
      uuid: "textResourceOrigin.Location"
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "int"
      uuid: "column"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
        parameters: []
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "OriginTrackedValue.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "originTrackedValue"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.origin.TextResourceOrigin"
      uuid: "textResourceOrigin"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
        parameters: []
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "originTrackedValue"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
        parameters: []
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean12"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "arrayList"
    branches:
    - lineNumber: 81
      expression: "reader.read()"
      range: "(81,11)-(81,23)"
      evaluatedAs: true
    - lineNumber: 82
      expression: "reader.isCommentPrefixCharacter()"
      range: "(82,9)-(82,41)"
      evaluatedAs: true
    - lineNumber: 166
      expression: "reader.isSameLastLineCommentPrefix()"
      range: "(166,7)-(166,42)"
      evaluatedAs: false
      internalMethodName: "isNewDocument"
    - lineNumber: 169
      expression: "reader.getLocation().getColumn() == 0"
      range: "(169,20)-(169,56)"
      evaluatedAs: false
      internalMethodName: "isNewDocument"
    - lineNumber: 170
      expression: "result"
      range: "(170,12)-(170,17)"
      evaluatedAs: false
      internalMethodName: "isNewDocument"
    - lineNumber: 171
      expression: "result"
      range: "(171,12)-(171,17)"
      evaluatedAs: false
      internalMethodName: "isNewDocument"
    - lineNumber: 172
      expression: "result"
      range: "(172,12)-(172,17)"
      evaluatedAs: false
      internalMethodName: "isNewDocument"
    - lineNumber: 173
      expression: "!reader.isEndOfLine()"
      range: "(173,7)-(173,27)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 177
      expression: "result"
      range: "(177,10)-(177,15)"
      evaluatedAs: false
      internalMethodName: "isNewDocument"
    - lineNumber: 84
      expression: "isNewDocument(reader)"
      range: "(84,10)-(84,30)"
      evaluatedAs: false
    - lineNumber: 91
      expression: "document.isEmpty()"
      range: "(91,11)-(91,28)"
      evaluatedAs: false
    - lineNumber: 135
      expression: "!reader.isEndOfLine()"
      range: "(135,10)-(135,30)"
      evaluatedAs: false
      internalMethodName: "loadKey"
    - lineNumber: 114
      expression: "expandLists"
      range: "(114,7)-(114,17)"
      evaluatedAs: false
      internalMethodName: "loadKeyAndValue"
    - lineNumber: 153
      expression: "reader.isWhiteSpace()"
      range: "(153,10)-(153,30)"
      evaluatedAs: false
      internalMethodName: "loadValue"
    - lineNumber: 157
      expression: "!reader.isEndOfLine()"
      range: "(157,10)-(157,30)"
      evaluatedAs: false
      internalMethodName: "loadValue"
    - lineNumber: 105
      expression: "!document.isEmpty()"
      range: "(105,7)-(105,25)"
      evaluatedAs: false
  - pathId: "path22"
    testPathName: "load1WhenReaderIsEndOfLineAndNotExpandListsAndReaderNotIsWhiteSpaceAndReaderIsEndOfLineAndDocumentIsEmpty2"
    constructorSignature: "<init>(org.springframework.core.io.Resource) : void"
    modelFingerprint: "8DCB3D5B43AA49FEFFE78D7E4AD11001"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "525917AF246822CF9B1683755B15C62A"
      valueUuid: "target"
    - type: "INPUT"
      name: "expandLists"
      modelFingerprint: "F87D77C8085193EEF6C367CC90A981C1"
      valueUuid: "expandLists"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "EE3EFEC8F90FF7867AB63B918B44AF57"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:resource,message:uniqueUuid8):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "13AA4345281735D5D34A4DEFC4D4AF2E"
      valueUuid: "textResourceOrigin.Location"
      methodExercised:
        expression: "getColumn():column"
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "ED0EC5DF30E136790A6ADBD6F3B501A1"
      valueUuid: "originTrackedPropertiesLoader.Document"
      methodExercised:
        expression: "isEmpty():boolean7"
    - type: "STATIC"
      name: "OriginTrackedValue.class"
      modelFingerprint: "3E32B6F05BE0990CEE0B9B5858F97F18"
      valueUuid: "OriginTrackedValue.class"
      methodExercised:
        expression: "of(value:string3,origin:textResourceOrigin):originTrackedValue"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "163CE8736C99305CED25498EEF99ABB9"
      valueUuid: "originTrackedPropertiesLoader.Document"
      methodExercised:
        expression: "put(key:string2,value:originTrackedValue):void7"
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "C770706C405076917C73454E50A9C9AE"
      valueUuid: "originTrackedPropertiesLoader.Document"
      methodExercised:
        expression: "isEmpty():boolean13"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "33ACD1EE6AE9F59E10B0CC09A1D0D0EE"
      valueUuid: "arrayList"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.Resource"
            uuid: "resource"
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expandLists"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Resource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.origin.TextResourceOrigin$Location"
        parameters:
        - name: "line"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "textResourceOrigin.Location-line"
        - name: "column"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "column"
      valueType: "org.springframework.boot.origin.TextResourceOrigin$Location"
      uuid: "textResourceOrigin.Location"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "column"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
        parameters: []
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "OriginTrackedValue.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "originTrackedValue"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.origin.TextResourceOrigin"
      uuid: "textResourceOrigin"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
        parameters: []
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "originTrackedValue"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
        parameters: []
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean13"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "arrayList"
    branches:
    - lineNumber: 81
      expression: "reader.read()"
      range: "(81,11)-(81,23)"
      evaluatedAs: true
    - lineNumber: 82
      expression: "reader.isCommentPrefixCharacter()"
      range: "(82,9)-(82,41)"
      evaluatedAs: true
    - lineNumber: 166
      expression: "reader.isSameLastLineCommentPrefix()"
      range: "(166,7)-(166,42)"
      evaluatedAs: false
      internalMethodName: "isNewDocument"
    - lineNumber: 169
      expression: "reader.getLocation().getColumn() == 0"
      range: "(169,20)-(169,56)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 170
      expression: "result"
      range: "(170,12)-(170,17)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 182
      expression: "check.getAsBoolean()"
      range: "(182,10)-(182,29)"
      evaluatedAs: false
      internalMethodName: "readAndExpect"
    - lineNumber: 170
      expression: "readAndExpect(reader, reader::isHyphenCharacter)"
      range: "(170,22)-(170,69)"
      evaluatedAs: false
      internalMethodName: "isNewDocument"
    - lineNumber: 171
      expression: "result"
      range: "(171,12)-(171,17)"
      evaluatedAs: false
      internalMethodName: "isNewDocument"
    - lineNumber: 172
      expression: "result"
      range: "(172,12)-(172,17)"
      evaluatedAs: false
      internalMethodName: "isNewDocument"
    - lineNumber: 173
      expression: "!reader.isEndOfLine()"
      range: "(173,7)-(173,27)"
      evaluatedAs: false
      internalMethodName: "isNewDocument"
    - lineNumber: 177
      expression: "result"
      range: "(177,10)-(177,15)"
      evaluatedAs: false
      internalMethodName: "isNewDocument"
    - lineNumber: 84
      expression: "isNewDocument(reader)"
      range: "(84,10)-(84,30)"
      evaluatedAs: false
    - lineNumber: 91
      expression: "document.isEmpty()"
      range: "(91,11)-(91,28)"
      evaluatedAs: false
    - lineNumber: 135
      expression: "!reader.isEndOfLine()"
      range: "(135,10)-(135,30)"
      evaluatedAs: false
      internalMethodName: "loadKey"
    - lineNumber: 114
      expression: "expandLists"
      range: "(114,7)-(114,17)"
      evaluatedAs: false
      internalMethodName: "loadKeyAndValue"
    - lineNumber: 153
      expression: "reader.isWhiteSpace()"
      range: "(153,10)-(153,30)"
      evaluatedAs: false
      internalMethodName: "loadValue"
    - lineNumber: 157
      expression: "!reader.isEndOfLine()"
      range: "(157,10)-(157,30)"
      evaluatedAs: false
      internalMethodName: "loadValue"
    - lineNumber: 105
      expression: "!document.isEmpty()"
      range: "(105,7)-(105,25)"
      evaluatedAs: false
  - pathId: "path21"
    testPathName: "load1WhenReaderIsEndOfLineAndNotExpandListsAndReaderNotIsWhiteSpaceAndReaderIsEndOfLineAndDocumentIsEmpty3"
    constructorSignature: "<init>(org.springframework.core.io.Resource) : void"
    modelFingerprint: "8C22AA74BD954403FC3DFFFBB7ED9BAB"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "525917AF246822CF9B1683755B15C62A"
      valueUuid: "target"
    - type: "INPUT"
      name: "expandLists"
      modelFingerprint: "F87D77C8085193EEF6C367CC90A981C1"
      valueUuid: "expandLists"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "EE3EFEC8F90FF7867AB63B918B44AF57"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:resource,message:uniqueUuid9):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "13AA4345281735D5D34A4DEFC4D4AF2E"
      valueUuid: "textResourceOrigin.Location"
      methodExercised:
        expression: "getColumn():column"
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "ED0EC5DF30E136790A6ADBD6F3B501A1"
      valueUuid: "originTrackedPropertiesLoader.Document"
      methodExercised:
        expression: "isEmpty():boolean9"
    - type: "STATIC"
      name: "OriginTrackedValue.class"
      modelFingerprint: "3E32B6F05BE0990CEE0B9B5858F97F18"
      valueUuid: "OriginTrackedValue.class"
      methodExercised:
        expression: "of(value:string3,origin:textResourceOrigin):originTrackedValue"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "163CE8736C99305CED25498EEF99ABB9"
      valueUuid: "originTrackedPropertiesLoader.Document"
      methodExercised:
        expression: "put(key:string2,value:originTrackedValue):void7"
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "C770706C405076917C73454E50A9C9AE"
      valueUuid: "originTrackedPropertiesLoader.Document"
      methodExercised:
        expression: "isEmpty():boolean15"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "33ACD1EE6AE9F59E10B0CC09A1D0D0EE"
      valueUuid: "arrayList"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.Resource"
            uuid: "resource"
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expandLists"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Resource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.origin.TextResourceOrigin$Location"
        parameters:
        - name: "line"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "textResourceOrigin.Location-line"
        - name: "column"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "column"
      valueType: "org.springframework.boot.origin.TextResourceOrigin$Location"
      uuid: "textResourceOrigin.Location"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "column"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
        parameters: []
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "OriginTrackedValue.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "originTrackedValue"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.origin.TextResourceOrigin"
      uuid: "textResourceOrigin"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
        parameters: []
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "originTrackedValue"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
        parameters: []
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean15"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "arrayList"
    branches:
    - lineNumber: 81
      expression: "reader.read()"
      range: "(81,11)-(81,23)"
      evaluatedAs: true
    - lineNumber: 82
      expression: "reader.isCommentPrefixCharacter()"
      range: "(82,9)-(82,41)"
      evaluatedAs: true
    - lineNumber: 166
      expression: "reader.isSameLastLineCommentPrefix()"
      range: "(166,7)-(166,42)"
      evaluatedAs: false
      internalMethodName: "isNewDocument"
    - lineNumber: 169
      expression: "reader.getLocation().getColumn() == 0"
      range: "(169,20)-(169,56)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 170
      expression: "result"
      range: "(170,12)-(170,17)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 182
      expression: "check.getAsBoolean()"
      range: "(182,10)-(182,29)"
      evaluatedAs: true
      internalMethodName: "readAndExpect"
    - lineNumber: 170
      expression: "readAndExpect(reader, reader::isHyphenCharacter)"
      range: "(170,22)-(170,69)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 171
      expression: "result"
      range: "(171,12)-(171,17)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 171
      expression: "readAndExpect(reader, reader::isHyphenCharacter)"
      range: "(171,22)-(171,69)"
      evaluatedAs: false
      internalMethodName: "isNewDocument"
    - lineNumber: 172
      expression: "result"
      range: "(172,12)-(172,17)"
      evaluatedAs: false
      internalMethodName: "isNewDocument"
    - lineNumber: 173
      expression: "!reader.isEndOfLine()"
      range: "(173,7)-(173,27)"
      evaluatedAs: false
      internalMethodName: "isNewDocument"
    - lineNumber: 177
      expression: "result"
      range: "(177,10)-(177,15)"
      evaluatedAs: false
      internalMethodName: "isNewDocument"
    - lineNumber: 84
      expression: "isNewDocument(reader)"
      range: "(84,10)-(84,30)"
      evaluatedAs: false
    - lineNumber: 91
      expression: "document.isEmpty()"
      range: "(91,11)-(91,28)"
      evaluatedAs: false
    - lineNumber: 135
      expression: "!reader.isEndOfLine()"
      range: "(135,10)-(135,30)"
      evaluatedAs: false
      internalMethodName: "loadKey"
    - lineNumber: 114
      expression: "expandLists"
      range: "(114,7)-(114,17)"
      evaluatedAs: false
      internalMethodName: "loadKeyAndValue"
    - lineNumber: 153
      expression: "reader.isWhiteSpace()"
      range: "(153,10)-(153,30)"
      evaluatedAs: false
      internalMethodName: "loadValue"
    - lineNumber: 157
      expression: "!reader.isEndOfLine()"
      range: "(157,10)-(157,30)"
      evaluatedAs: false
      internalMethodName: "loadValue"
    - lineNumber: 105
      expression: "!document.isEmpty()"
      range: "(105,7)-(105,25)"
      evaluatedAs: false
  - pathId: "path20"
    testPathName: "load1WhenReaderIsEndOfLineAndNotExpandListsAndReaderNotIsWhiteSpaceAndReaderIsEndOfLineAndDocumentIsEmpty4"
    constructorSignature: "<init>(org.springframework.core.io.Resource) : void"
    modelFingerprint: "4BE0338A84D4595049D172E74CE4FCCF"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "525917AF246822CF9B1683755B15C62A"
      valueUuid: "target"
    - type: "INPUT"
      name: "expandLists"
      modelFingerprint: "F87D77C8085193EEF6C367CC90A981C1"
      valueUuid: "expandLists"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "EE3EFEC8F90FF7867AB63B918B44AF57"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:resource,message:uniqueUuid10):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "13AA4345281735D5D34A4DEFC4D4AF2E"
      valueUuid: "textResourceOrigin.Location"
      methodExercised:
        expression: "getColumn():column"
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "ED0EC5DF30E136790A6ADBD6F3B501A1"
      valueUuid: "originTrackedPropertiesLoader.Document"
      methodExercised:
        expression: "isEmpty():boolean11"
    - type: "STATIC"
      name: "OriginTrackedValue.class"
      modelFingerprint: "3E32B6F05BE0990CEE0B9B5858F97F18"
      valueUuid: "OriginTrackedValue.class"
      methodExercised:
        expression: "of(value:string3,origin:textResourceOrigin):originTrackedValue"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "163CE8736C99305CED25498EEF99ABB9"
      valueUuid: "originTrackedPropertiesLoader.Document"
      methodExercised:
        expression: "put(key:string2,value:originTrackedValue):void7"
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "C770706C405076917C73454E50A9C9AE"
      valueUuid: "originTrackedPropertiesLoader.Document"
      methodExercised:
        expression: "isEmpty():boolean17"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "33ACD1EE6AE9F59E10B0CC09A1D0D0EE"
      valueUuid: "arrayList"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.Resource"
            uuid: "resource"
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expandLists"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Resource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.origin.TextResourceOrigin$Location"
        parameters:
        - name: "line"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "textResourceOrigin.Location-line"
        - name: "column"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "column"
      valueType: "org.springframework.boot.origin.TextResourceOrigin$Location"
      uuid: "textResourceOrigin.Location"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "column"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
        parameters: []
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean11"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "OriginTrackedValue.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "originTrackedValue"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.origin.TextResourceOrigin"
      uuid: "textResourceOrigin"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
        parameters: []
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "originTrackedValue"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
        parameters: []
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean17"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "arrayList"
    branches:
    - lineNumber: 81
      expression: "reader.read()"
      range: "(81,11)-(81,23)"
      evaluatedAs: true
    - lineNumber: 82
      expression: "reader.isCommentPrefixCharacter()"
      range: "(82,9)-(82,41)"
      evaluatedAs: true
    - lineNumber: 166
      expression: "reader.isSameLastLineCommentPrefix()"
      range: "(166,7)-(166,42)"
      evaluatedAs: false
      internalMethodName: "isNewDocument"
    - lineNumber: 169
      expression: "reader.getLocation().getColumn() == 0"
      range: "(169,20)-(169,56)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 170
      expression: "result"
      range: "(170,12)-(170,17)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 182
      expression: "check.getAsBoolean()"
      range: "(182,10)-(182,29)"
      evaluatedAs: true
      internalMethodName: "readAndExpect"
    - lineNumber: 170
      expression: "readAndExpect(reader, reader::isHyphenCharacter)"
      range: "(170,22)-(170,69)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 171
      expression: "result"
      range: "(171,12)-(171,17)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 171
      expression: "readAndExpect(reader, reader::isHyphenCharacter)"
      range: "(171,22)-(171,69)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 172
      expression: "result"
      range: "(172,12)-(172,17)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 172
      expression: "readAndExpect(reader, reader::isHyphenCharacter)"
      range: "(172,22)-(172,69)"
      evaluatedAs: false
      internalMethodName: "isNewDocument"
    - lineNumber: 173
      expression: "!reader.isEndOfLine()"
      range: "(173,7)-(173,27)"
      evaluatedAs: false
      internalMethodName: "isNewDocument"
    - lineNumber: 177
      expression: "result"
      range: "(177,10)-(177,15)"
      evaluatedAs: false
      internalMethodName: "isNewDocument"
    - lineNumber: 84
      expression: "isNewDocument(reader)"
      range: "(84,10)-(84,30)"
      evaluatedAs: false
    - lineNumber: 91
      expression: "document.isEmpty()"
      range: "(91,11)-(91,28)"
      evaluatedAs: false
    - lineNumber: 135
      expression: "!reader.isEndOfLine()"
      range: "(135,10)-(135,30)"
      evaluatedAs: false
      internalMethodName: "loadKey"
    - lineNumber: 114
      expression: "expandLists"
      range: "(114,7)-(114,17)"
      evaluatedAs: false
      internalMethodName: "loadKeyAndValue"
    - lineNumber: 153
      expression: "reader.isWhiteSpace()"
      range: "(153,10)-(153,30)"
      evaluatedAs: false
      internalMethodName: "loadValue"
    - lineNumber: 157
      expression: "!reader.isEndOfLine()"
      range: "(157,10)-(157,30)"
      evaluatedAs: false
      internalMethodName: "loadValue"
    - lineNumber: 105
      expression: "!document.isEmpty()"
      range: "(105,7)-(105,25)"
      evaluatedAs: false
  - pathId: "path13"
    testPathName: "load1WhenNotExpandListsAndReaderNotIsWhiteSpaceAndReaderIsEndOfLineAndDocumentNotIsEmptyAndDocumentsNotContainsDocument"
    constructorSignature: "<init>(org.springframework.core.io.Resource) : void"
    modelFingerprint: "A8D086B27C37BAF57D30A9F7292030E9"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "525917AF246822CF9B1683755B15C62A"
      valueUuid: "target"
    - type: "INPUT"
      name: "expandLists"
      modelFingerprint: "F87D77C8085193EEF6C367CC90A981C1"
      valueUuid: "expandLists"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "EE3EFEC8F90FF7867AB63B918B44AF57"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:resource,message:uniqueUuid11):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "13AA4345281735D5D34A4DEFC4D4AF2E"
      valueUuid: "textResourceOrigin.Location"
      methodExercised:
        expression: "getColumn():column"
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "ED0EC5DF30E136790A6ADBD6F3B501A1"
      valueUuid: "originTrackedPropertiesLoader.Document"
      methodExercised:
        expression: "isEmpty():boolean13"
    - type: "STATIC"
      name: "OriginTrackedValue.class"
      modelFingerprint: "3E32B6F05BE0990CEE0B9B5858F97F18"
      valueUuid: "OriginTrackedValue.class"
      methodExercised:
        expression: "of(value:string3,origin:textResourceOrigin):originTrackedValue"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "163CE8736C99305CED25498EEF99ABB9"
      valueUuid: "originTrackedPropertiesLoader.Document2"
      methodExercised:
        expression: "put(key:string2,value:originTrackedValue):void6"
    - type: "LOCAL_VARIABLE"
      name: "document"
      modelFingerprint: "ED0EC5DF30E136790A6ADBD6F3B501A1"
      valueUuid: "originTrackedPropertiesLoader.Document2"
      methodExercised:
        expression: "isEmpty():boolean20"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8AB4BE0A4CE504F5EDC25DD775BAF0CD"
      valueUuid: "arrayList"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_UNFILLED_PARAMS"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.Resource"
            uuid: "resource"
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expandLists"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Resource must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.origin.TextResourceOrigin$Location"
        parameters:
        - name: "line"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "textResourceOrigin.Location-line"
        - name: "column"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "column"
      valueType: "org.springframework.boot.origin.TextResourceOrigin$Location"
      uuid: "textResourceOrigin.Location"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "column"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
        parameters: []
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean13"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "OriginTrackedValue.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "originTrackedValue"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.origin.TextResourceOrigin"
      uuid: "textResourceOrigin"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
        parameters: []
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document2"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.OriginTrackedValue"
      uuid: "originTrackedValue"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
        parameters: []
      valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "originTrackedPropertiesLoader.Document2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean20"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
            parameters: []
          valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
          uuid: "originTrackedPropertiesLoader.Document"
          fixed: true
        - sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
            parameters: []
          valueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
          uuid: "originTrackedPropertiesLoader.Document2"
          fixed: true
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.env.OriginTrackedPropertiesLoader$Document"
      uuid: "arrayList"
    branches:
    - lineNumber: 81
      expression: "reader.read()"
      range: "(81,11)-(81,23)"
      evaluatedAs: true
    - lineNumber: 82
      expression: "reader.isCommentPrefixCharacter()"
      range: "(82,9)-(82,41)"
      evaluatedAs: true
    - lineNumber: 166
      expression: "reader.isSameLastLineCommentPrefix()"
      range: "(166,7)-(166,42)"
      evaluatedAs: false
      internalMethodName: "isNewDocument"
    - lineNumber: 169
      expression: "reader.getLocation().getColumn() == 0"
      range: "(169,20)-(169,56)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 170
      expression: "result"
      range: "(170,12)-(170,17)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 182
      expression: "check.getAsBoolean()"
      range: "(182,10)-(182,29)"
      evaluatedAs: true
      internalMethodName: "readAndExpect"
    - lineNumber: 170
      expression: "readAndExpect(reader, reader::isHyphenCharacter)"
      range: "(170,22)-(170,69)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 171
      expression: "result"
      range: "(171,12)-(171,17)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 171
      expression: "readAndExpect(reader, reader::isHyphenCharacter)"
      range: "(171,22)-(171,69)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 172
      expression: "result"
      range: "(172,12)-(172,17)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 172
      expression: "readAndExpect(reader, reader::isHyphenCharacter)"
      range: "(172,22)-(172,69)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 173
      expression: "!reader.isEndOfLine()"
      range: "(173,7)-(173,27)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 177
      expression: "result"
      range: "(177,10)-(177,15)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 177
      expression: "reader.isEndOfLine()"
      range: "(177,20)-(177,39)"
      evaluatedAs: true
      internalMethodName: "isNewDocument"
    - lineNumber: 84
      expression: "isNewDocument(reader)"
      range: "(84,10)-(84,30)"
      evaluatedAs: true
    - lineNumber: 85
      expression: "!document.isEmpty()"
      range: "(85,11)-(85,29)"
      evaluatedAs: true
    - lineNumber: 135
      expression: "!reader.isEndOfLine()"
      range: "(135,10)-(135,30)"
      evaluatedAs: false
      internalMethodName: "loadKey"
    - lineNumber: 114
      expression: "expandLists"
      range: "(114,7)-(114,17)"
      evaluatedAs: false
      internalMethodName: "loadKeyAndValue"
    - lineNumber: 153
      expression: "reader.isWhiteSpace()"
      range: "(153,10)-(153,30)"
      evaluatedAs: false
      internalMethodName: "loadValue"
    - lineNumber: 157
      expression: "!reader.isEndOfLine()"
      range: "(157,10)-(157,30)"
      evaluatedAs: false
      internalMethodName: "loadValue"
    - lineNumber: 105
      expression: "!document.isEmpty()"
      range: "(105,7)-(105,25)"
      evaluatedAs: true
    - lineNumber: 105
      expression: "!documents.contains(document)"
      range: "(105,30)-(105,58)"
      evaluatedAs: true
