---
modelFingerprint: "9720C295B60AD7D38E636CCF73E16396"
targetClass:
  fullClassName: "org.springframework.boot.env.YamlPropertySourceLoader"
methods:
- method:
    name: "getFileExtensions"
    sourceCodeSignature: "String[] getFileExtensions()"
    returnType: "java.lang.String[]"
    instructionFingerprint: "F671AEFC63CC36EE1D9698587C6F0980"
  paths:
  - pathId: "path1"
    testPathName: "getFileExtensionsTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "0FBDC2B2EAF99BE5DE051750206E1E0B"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "61FD529CD78412D61F9D56B10D8850E5"
      valueUuid: "stringArray"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.YamlPropertySourceLoader"
        parameters: []
      valueType: "org.springframework.boot.env.YamlPropertySourceLoader"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "yml"
            valueType: "java.lang.String"
            uuid: "uniqueUuid1"
            fixed: true
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "yaml"
            valueType: "java.lang.String"
            uuid: "uniqueUuid2"
            fixed: true
      valueType: "java.lang.String[]"
      uuid: "stringArray"
- method:
    name: "load"
    sourceCodeSignature: "List<PropertySource<?>> load(String name, Resource resource)"
    returnType: "java.util.List"
    genericReturnType: "org.springframework.core.env.PropertySource<?>"
    throwsExceptions:
    - "java.io.IOException"
    parameters:
    - name: "name"
      type: "java.lang.String"
    - name: "resource"
      type: "org.springframework.core.io.Resource"
    instructionFingerprint: "BE60FDE9D82BDE616F1F6D11BC3062B2"
  paths:
  - pathId: "path1"
    testPathName: "loadWhenLoadedIsEmpty"
    constructorSignature: "<init>() : void"
    modelFingerprint: "490646A9E48A704EFF3FB16C3DE80D7D"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "63F0AEB18588FDD50129913BF544F767"
      valueUuid: "name"
    - type: "INPUT"
      name: "resource"
      modelFingerprint: "BA86CE2795FE636A14F7AA167E17D618"
      valueUuid: "resource"
    - type: "STATIC"
      name: "ClassUtils.class.real"
      modelFingerprint: "FB9EB2012BAB2E2E52C40E88F025911E"
      valueUuid: "ClassUtils.class.real"
      methodExercised:
        expression: "isPresent(className:uniqueUuid3,classLoader:classLoader):boolean1"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "CA7F5A1F9D2288B9AC6C87981B8CB0DD"
      valueUuid: "originTrackedYamlLoader"
      methodExercised:
        expression: "load():list"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CC65128FA75149C1A00D63AA8E611812"
      valueUuid: "list2"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "List<Map<String, Object>> loaded = new OriginTrackedYamlLoader(resource).load();"
      lineNumber: 50
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type OriginTrackedYamlLoader - Method: load"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.YamlPropertySourceLoader"
        parameters: []
      valueType: "org.springframework.boot.env.YamlPropertySourceLoader"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.yaml.snakeyaml.Yaml"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "org.springframework.boot.env.YamlPropertySourceLoader"
          valueType: "java.lang.Class"
          genericValueType: "org.springframework.boot.env.YamlPropertySourceLoader"
          uuid: "uniqueUuid4"
          fixed: true
        methodParameters: []
        methodName: "getClassLoader"
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedYamlLoader"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.Resource"
            uuid: "resource"
      valueType: "org.springframework.boot.env.OriginTrackedYamlLoader"
      uuid: "originTrackedYamlLoader"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.util.Map<java.lang.String,java.lang.Object>"
      uuid: "list"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.env.PropertySource<?>"
      uuid: "list2"
    branches:
    - lineNumber: 46
      expression: "!ClassUtils.isPresent(\\\"org.yaml.snakeyaml.Yaml\\\", getClass().getClassLoader())"
      range: "(46,7)-(46,83)"
      evaluatedAs: false
    - lineNumber: 51
      expression: "loaded.isEmpty()"
      range: "(51,7)-(51,22)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "loadWhenLoadedSizeNotEquals1"
    constructorSignature: "<init>() : void"
    modelFingerprint: "66C95EA2693A3D1D53CA745612CDB759"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "5EC9153806E3BAD5D8C7DECC2BA5EC60"
      valueUuid: "name"
    - type: "INPUT"
      name: "resource"
      modelFingerprint: "BA86CE2795FE636A14F7AA167E17D618"
      valueUuid: "resource"
    - type: "STATIC"
      name: "ClassUtils.class.real"
      modelFingerprint: "FB9EB2012BAB2E2E52C40E88F025911E"
      valueUuid: "ClassUtils.class.real"
      methodExercised:
        expression: "isPresent(className:uniqueUuid5,classLoader:classLoader):boolean1"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "79C9AE9FD3C87DE5E83E05FBCAC73EA7"
      valueUuid: "originTrackedYamlLoader"
      methodExercised:
        expression: "load():list"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7CCA537295EAFD27866AFFC216D5BF24"
      valueUuid: "arrayList"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "List<Map<String, Object>> loaded = new OriginTrackedYamlLoader(resource).load();"
      lineNumber: 50
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type OriginTrackedYamlLoader - Method: load"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.YamlPropertySourceLoader"
        parameters: []
      valueType: "org.springframework.boot.env.YamlPropertySourceLoader"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.yaml.snakeyaml.Yaml"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "org.springframework.boot.env.YamlPropertySourceLoader"
          valueType: "java.lang.Class"
          genericValueType: "org.springframework.boot.env.YamlPropertySourceLoader"
          uuid: "uniqueUuid6"
          fixed: true
        methodParameters: []
        methodName: "getClassLoader"
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedYamlLoader"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.Resource"
            uuid: "resource"
      valueType: "org.springframework.boot.env.OriginTrackedYamlLoader"
      uuid: "originTrackedYamlLoader"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "COLLECTION"
          content: !<collection>
            parameters: []
            values: []
          valueType: "java.util.Map"
          genericValueType: "java.lang.String,java.lang.Object"
          uuid: "map"
          collectionUuid: "list"
        - sapientType: "COLLECTION"
          content: !<collection>
            parameters: []
            values: []
          valueType: "java.util.Map"
          genericValueType: "java.lang.String,java.lang.Object"
          uuid: "listItem1"
      valueType: "java.util.List"
      genericValueType: "java.util.Map<java.lang.String,java.lang.Object>"
      uuid: "list"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters:
        - name: "initialCapacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "int1"
            collectionUuid: "list"
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.env.OriginTrackedMapPropertySource"
            parameters:
            - name: "name"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "A (document #0)"
                valueType: "java.lang.String"
                uuid: "string3"
            - name: "source"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.util.Map"
                genericValueType: "java.lang.String,java.lang.Object"
                uuid: "map2"
            - name: "immutable"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: true
                valueType: "boolean"
                fixed: true
          valueType: "org.springframework.boot.env.OriginTrackedMapPropertySource"
          uuid: "originTrackedMapPropertySource"
          fixed: true
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.env.PropertySource<?>"
      uuid: "arrayList"
    branches:
    - lineNumber: 46
      expression: "!ClassUtils.isPresent(\\\"org.yaml.snakeyaml.Yaml\\\", getClass().getClassLoader())"
      range: "(46,7)-(46,83)"
      evaluatedAs: false
    - lineNumber: 51
      expression: "loaded.isEmpty()"
      range: "(51,7)-(51,22)"
      evaluatedAs: false
    - lineNumber: 55
      expression: "i < loaded.size()"
      range: "(55,19)-(55,35)"
      evaluatedAs: true
    - lineNumber: 56
      expression: "loaded.size() != 1"
      range: "(56,29)-(56,46)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "loadWhenLoadedSizeEquals1"
    constructorSignature: "<init>() : void"
    modelFingerprint: "5899FB43956A0CDCDBE6AACD8B118B5D"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "5EC9153806E3BAD5D8C7DECC2BA5EC60"
      valueUuid: "name"
    - type: "INPUT"
      name: "resource"
      modelFingerprint: "BA86CE2795FE636A14F7AA167E17D618"
      valueUuid: "resource"
    - type: "STATIC"
      name: "ClassUtils.class.real"
      modelFingerprint: "FB9EB2012BAB2E2E52C40E88F025911E"
      valueUuid: "ClassUtils.class.real"
      methodExercised:
        expression: "isPresent(className:uniqueUuid7,classLoader:classLoader):boolean1"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "BFC979C19774C63D65AF9B39A03D088A"
      valueUuid: "originTrackedYamlLoader"
      methodExercised:
        expression: "load():list"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A488F51EA6402FF3FCE459D73DD49DF1"
      valueUuid: "arrayList"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "List<Map<String, Object>> loaded = new OriginTrackedYamlLoader(resource).load();"
      lineNumber: 50
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type OriginTrackedYamlLoader - Method: load"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.YamlPropertySourceLoader"
        parameters: []
      valueType: "org.springframework.boot.env.YamlPropertySourceLoader"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "resource"
    - sapientType: "REAL"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.yaml.snakeyaml.Yaml"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.ClassLoader"
        localVariableValue:
          sapientType: "CLASS"
          content: !<regular>
            value: "org.springframework.boot.env.YamlPropertySourceLoader"
          valueType: "java.lang.Class"
          genericValueType: "org.springframework.boot.env.YamlPropertySourceLoader"
          uuid: "uniqueUuid8"
          fixed: true
        methodParameters: []
        methodName: "getClassLoader"
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.OriginTrackedYamlLoader"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.Resource"
            uuid: "resource"
      valueType: "org.springframework.boot.env.OriginTrackedYamlLoader"
      uuid: "originTrackedYamlLoader"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "COLLECTION"
          content: !<collection>
            parameters: []
            values: []
          valueType: "java.util.Map"
          genericValueType: "java.lang.String,java.lang.Object"
          uuid: "map"
          collectionUuid: "list"
      valueType: "java.util.List"
      genericValueType: "java.util.Map<java.lang.String,java.lang.Object>"
      uuid: "list"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters:
        - name: "initialCapacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "int1"
            collectionUuid: "list"
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.env.OriginTrackedMapPropertySource"
            parameters:
            - name: "name"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "A"
                valueType: "java.lang.String"
                uuid: "string2"
            - name: "source"
              value:
                sapientType: "COLLECTION"
                content: !<collection>
                  parameters: []
                  values: []
                valueType: "java.util.Map"
                genericValueType: "java.lang.String,java.lang.Object"
                uuid: "map2"
            - name: "immutable"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: true
                valueType: "boolean"
                fixed: true
          valueType: "org.springframework.boot.env.OriginTrackedMapPropertySource"
          uuid: "originTrackedMapPropertySource"
          fixed: true
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.env.PropertySource<?>"
      uuid: "arrayList"
    branches:
    - lineNumber: 46
      expression: "!ClassUtils.isPresent(\\\"org.yaml.snakeyaml.Yaml\\\", getClass().getClassLoader())"
      range: "(46,7)-(46,83)"
      evaluatedAs: false
    - lineNumber: 51
      expression: "loaded.isEmpty()"
      range: "(51,7)-(51,22)"
      evaluatedAs: false
    - lineNumber: 55
      expression: "i < loaded.size()"
      range: "(55,19)-(55,35)"
      evaluatedAs: true
    - lineNumber: 56
      expression: "loaded.size() != 1"
      range: "(56,29)-(56,46)"
      evaluatedAs: false
