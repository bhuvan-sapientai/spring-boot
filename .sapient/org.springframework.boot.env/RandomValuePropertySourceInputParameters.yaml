---
modelFingerprint: "241E52A7286666202FE23AEEAD0E1394"
methods:
- method:
    name: "getProperty"
    signature: "getProperty(java.lang.String) : java.lang.Object"
    instructionFingerprint: "C4F0738D085A76FCB042E42B2BE9629F"
  paths:
  - pathId: "path1"
    testPathName: "getPropertyWhenNameNotStartsWithPREFIX"
    constructorSignature: "<init>(java.lang.String) : void"
    filledByUser: false
    modelFingerprint: "F5B910F2A670F89157579368EFC92AF4"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B35F492ED6A50C55408626D900A6BD02"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "name"
      modelFingerprint: "308CDAF7AAC25CDDF68DF4714986A49D"
      index: 2
      ignored: false
      valueUuid: "getProperty_string1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "FB9071665D14C1BA12AEEA53DFEA8E38"
      index: 3
      ignored: false
      valueUuid: "uuid2"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "hasText"
        parameters:
        - name: "text"
          valueUuid: "<init>_string1"
        - name: "message"
          valueUuid: "uuid1"
        signature: "hasText(String,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "681531ABF28F8632368125526ABB58A3"
      index: 4
      ignored: false
      valueUuid: "uuid4"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "<init>_random1"
        - name: "message"
          valueUuid: "uuid3"
        signature: "notNull(Random,String): void"
        returnValueUuid: "<init>_void2"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7FF3E62C4C26664215CB4A88EF6B4C11"
      index: 5
      ignored: false
      valueUuid: "getProperty_object1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "dbfc859f-fd81-3175-baac-e4014845ddae"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.RandomValuePropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            suggestedContent: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.env.RandomValuePropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            suggestedContent: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.env.RandomValuePropertySource"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      suggestedContent: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      suggestedContent: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "<init>_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source name must contain at least one character"
      valueType: "java.lang.String"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.Random"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "java.util.Random"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.util.Random"
      uuid: "<init>_random1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source must not be null"
      valueType: "java.lang.String"
      uuid: "uuid3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "getProperty_object1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "getPropertyWhenTypeEqualsInt"
    constructorSignature: "<init>(java.lang.String) : void"
    filledByUser: false
    modelFingerprint: "80A078851FE33EC2731A36412E9D74C2"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B35F492ED6A50C55408626D900A6BD02"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "name"
      modelFingerprint: "E3FA3850437C8E5BED3B6530F98AEEBE"
      index: 2
      ignored: false
      valueUuid: "getProperty_string1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "FB9071665D14C1BA12AEEA53DFEA8E38"
      index: 3
      ignored: false
      valueUuid: "uuid6"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "hasText"
        parameters:
        - name: "text"
          valueUuid: "<init>_string1"
        - name: "message"
          valueUuid: "uuid5"
        signature: "hasText(String,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "681531ABF28F8632368125526ABB58A3"
      index: 4
      ignored: false
      valueUuid: "uuid8"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "<init>_random1"
        - name: "message"
          valueUuid: "uuid7"
        signature: "notNull(Random,String): void"
        returnValueUuid: "<init>_void2"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "LogMessage"
      modelFingerprint: "59384F97022C41F1C625D08CD4E72293"
      index: 5
      ignored: false
      valueUuid: "uuid10"
      methodExercised:
        target: "org.springframework.core.log.LogMessage"
        name: "format"
        parameters:
        - name: "format"
          valueUuid: "uuid9"
        - name: "arg1"
          valueUuid: "getProperty_string1"
        signature: "format(String,String): LogMessage"
        returnValueUuid: "getProperty_logMessage1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "A7C6FDECABADFCFADFDD01DA7A86A7C7"
      index: 6
      ignored: false
      methodExercised:
        target: "target"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getRandomValue_object1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "57C2F592F25273396BE50D988194C8F7"
      index: 7
      ignored: false
      valueUuid: "getRandomValue_object1"
      methodExercised:
        target: "java.util.Random"
        name: "nextInt"
        parameters: []
        signature: "nextInt(): int"
        returnValueUuid: "getRandomValue_int1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "9543F5B65A8C0BAEE1C8D798EA3A4053"
      index: 8
      ignored: false
      valueUuid: "getRandomValue_integer1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "0f36305b-0097-3cd7-b65c-d72420b2f717"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.RandomValuePropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            suggestedContent: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.env.RandomValuePropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            suggestedContent: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.env.RandomValuePropertySource"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "random.int"
      suggestedContent: !<regular>
        value: "random.int"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      suggestedContent: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "<init>_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source name must contain at least one character"
      valueType: "java.lang.String"
      uuid: "uuid5"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.Random"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "java.util.Random"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.util.Random"
      uuid: "<init>_random1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source must not be null"
      valueType: "java.lang.String"
      uuid: "uuid7"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.log.LogMessage"
      uuid: "uuid10"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.log.LogMessage"
      uuid: "getProperty_logMessage1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Generating random property for '%s'"
      valueType: "java.lang.String"
      uuid: "uuid9"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "random.int"
      suggestedContent: !<regular>
        value: "random.int"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.Random"
      uuid: "getRandomValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "java.util.Random"
      uuid: "getRandomValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      suggestedContent: !<regular>
        value: 0
      valueType: "int"
      uuid: "getRandomValue_int1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      suggestedContent: !<regular>
        value: 0
      valueType: "java.lang.Integer"
      uuid: "getRandomValue_integer1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "getPropertyWhenTypeEqualsLong"
    constructorSignature: "<init>(java.lang.String) : void"
    filledByUser: false
    modelFingerprint: "C0DE10B5C44A2319DA08B80A60E8D6E9"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B35F492ED6A50C55408626D900A6BD02"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "name"
      modelFingerprint: "165751D900E0C03265D47E873ACD76A2"
      index: 2
      ignored: false
      valueUuid: "getProperty_string1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "FB9071665D14C1BA12AEEA53DFEA8E38"
      index: 3
      ignored: false
      valueUuid: "uuid12"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "hasText"
        parameters:
        - name: "text"
          valueUuid: "<init>_string1"
        - name: "message"
          valueUuid: "uuid11"
        signature: "hasText(String,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "681531ABF28F8632368125526ABB58A3"
      index: 4
      ignored: false
      valueUuid: "uuid14"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "<init>_random1"
        - name: "message"
          valueUuid: "uuid13"
        signature: "notNull(Random,String): void"
        returnValueUuid: "<init>_void2"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "LogMessage"
      modelFingerprint: "C81E263AD1B8C7B3153CFF9429151DFE"
      index: 5
      ignored: false
      valueUuid: "uuid16"
      methodExercised:
        target: "org.springframework.core.log.LogMessage"
        name: "format"
        parameters:
        - name: "format"
          valueUuid: "uuid15"
        - name: "arg1"
          valueUuid: "getProperty_string1"
        signature: "format(String,String): LogMessage"
        returnValueUuid: "getProperty_logMessage1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "A7C6FDECABADFCFADFDD01DA7A86A7C7"
      index: 6
      ignored: false
      methodExercised:
        target: "target"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getRandomValue_object1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "3B1CBED6278C66D09C23DA29591AADC5"
      index: 7
      ignored: false
      valueUuid: "getRandomValue_object1"
      methodExercised:
        target: "java.util.Random"
        name: "nextLong"
        parameters: []
        signature: "nextLong(): long"
        returnValueUuid: "getRandomValue_long1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FC413E74AC7EF8A693D408B3983D66AD"
      index: 8
      ignored: false
      valueUuid: "getRandomValue_long2"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "f65e35f5-8987-3b69-a505-8fc9cd21e135"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.RandomValuePropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            suggestedContent: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.env.RandomValuePropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            suggestedContent: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.env.RandomValuePropertySource"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "random.long"
      suggestedContent: !<regular>
        value: "random.long"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid12"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      suggestedContent: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "<init>_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source name must contain at least one character"
      valueType: "java.lang.String"
      uuid: "uuid11"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid14"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.Random"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "java.util.Random"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.util.Random"
      uuid: "<init>_random1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source must not be null"
      valueType: "java.lang.String"
      uuid: "uuid13"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.log.LogMessage"
      uuid: "uuid16"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.log.LogMessage"
      uuid: "getProperty_logMessage1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Generating random property for '%s'"
      valueType: "java.lang.String"
      uuid: "uuid15"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "random.long"
      suggestedContent: !<regular>
        value: "random.long"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.Random"
      uuid: "getRandomValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "java.util.Random"
      uuid: "getRandomValue_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      suggestedContent: !<regular>
        value: 0
      valueType: "long"
      uuid: "getRandomValue_long1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      suggestedContent: !<regular>
        value: 0
      valueType: "java.lang.Long"
      uuid: "getRandomValue_long2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path4"
    testPathName: "getPropertyWhenRangeIsNotNull"
    constructorSignature: "<init>(java.lang.String) : void"
    filledByUser: false
    modelFingerprint: "EB3F0C5DB1597938C382F1FC3A8BA790"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "A52EADA6F53FF33E0B37F97063856CB9"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "name"
      modelFingerprint: "5A4BF5DB300213333C220C44E9169F8F"
      index: 2
      ignored: false
      valueUuid: "getProperty_string1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "CFB1D714E0438F1A4E48A4C3136075FB"
      index: 3
      ignored: false
      valueUuid: "uuid2"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "hasText"
        parameters:
        - name: "text"
          valueUuid: "<init>_string1"
        - name: "message"
          valueUuid: "uuid1"
        signature: "hasText(String,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "681531ABF28F8632368125526ABB58A3"
      index: 4
      ignored: false
      valueUuid: "uuid4"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "<init>_random1"
        - name: "message"
          valueUuid: "uuid3"
        signature: "notNull(Random,String): void"
        returnValueUuid: "<init>_void2"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "LogMessage"
      modelFingerprint: "993C13EBF9FEBEEF38D8CBDECB05226D"
      index: 5
      ignored: false
      valueUuid: "uuid6"
      methodExercised:
        target: "org.springframework.core.log.LogMessage"
        name: "format"
        parameters:
        - name: "format"
          valueUuid: "uuid5"
        - name: "arg1"
          valueUuid: "getProperty_string1"
        signature: "format(String,String): LogMessage"
        returnValueUuid: "getProperty_logMessage1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "RandomValuePropertySource.Range"
      modelFingerprint: "2CF17B1B46EBDCE7B667261A16B5320F"
      index: 6
      ignored: false
      valueUuid: "uuid8"
      methodExercised:
        target: "org.springframework.boot.env.RandomValuePropertySource$Range"
        name: "of"
        parameters:
        - name: "value"
          valueUuid: "getRange_string1"
        - name: "parse"
          valueUuid: "uuid7"
        signature: "of(String,Function): RandomValuePropertySource$Range"
        returnValueUuid: "getRandomValue_randomValuePropertySource.Range1"
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "A7C6FDECABADFCFADFDD01DA7A86A7C7"
      index: 7
      ignored: false
      methodExercised:
        target: "target"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getNextIntInRange_object1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "range"
      modelFingerprint: "BD4466B7A564C6F8D5A823152A1913C9"
      index: 8
      ignored: false
      valueUuid: "getRandomValue_randomValuePropertySource.Range1"
      methodExercised:
        target: "range"
        name: "getMin"
        parameters: []
        signature: "getMin(): Number"
        returnValueUuid: "getNextIntInRange_number1"
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "range"
      modelFingerprint: "2FF3D4A1C0DF082D45FCED1E6A47F602"
      index: 9
      ignored: false
      valueUuid: "getRandomValue_randomValuePropertySource.Range1"
      methodExercised:
        target: "range"
        name: "getMax"
        parameters: []
        signature: "getMax(): Number"
        returnValueUuid: "getNextIntInRange_number2"
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "92BA5C649586B16DAADAA4A5EA954E38"
      index: 10
      ignored: false
      valueUuid: "getNextIntInRange_object1"
      methodExercised:
        target: "java.util.Random"
        name: "ints"
        parameters:
        - name: "streamSize"
          valueUuid: "uuid9"
        - name: "randomNumberOrigin"
          valueUuid: "getNextIntInRange_int1"
        - name: "randomNumberBound"
          valueUuid: "getNextIntInRange_int2"
        signature: "ints(long,int,int): IntStream"
        returnValueUuid: "getNextIntInRange_intStream1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "D83F923687A63AA3C57684FC28F23D1B"
      index: 11
      ignored: false
      valueUuid: "uuid11"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "getNextIntInRange_boolean1"
        - name: "messageSupplier"
          valueUuid: "uuid10"
        signature: "state(boolean,Supplier): void"
        returnValueUuid: "assertPresent_void1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "288FA6CCE183EB422B4A84C365D07A06"
      index: 12
      ignored: false
      valueUuid: "getRandomValue_integer1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "09c5b2c4-a3dd-37b7-a254-a6c85c44ac03"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.stream.IntStream.findFirst() : java.util.OptionalInt"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.RandomValuePropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "C"
            suggestedContent: !<regular>
              value: "C"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.env.RandomValuePropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            suggestedContent: !<regular>
              value: "C"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.env.RandomValuePropertySource"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "random.intAB"
      suggestedContent: !<regular>
        value: "random.intAB"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      suggestedContent: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "<init>_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source name must contain at least one character"
      valueType: "java.lang.String"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.Random"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "java.util.Random"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.util.Random"
      uuid: "<init>_random1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source must not be null"
      valueType: "java.lang.String"
      uuid: "uuid3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.log.LogMessage"
      uuid: "uuid6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.log.LogMessage"
      uuid: "getProperty_logMessage1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Generating random property for '%s'"
      valueType: "java.lang.String"
      uuid: "uuid5"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "random.intAB"
      suggestedContent: !<regular>
        value: "random.intAB"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.env.RandomValuePropertySource$Range"
      uuid: "uuid8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.env.RandomValuePropertySource$Range"
      uuid: "getRandomValue_randomValuePropertySource.Range1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      suggestedContent: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "getRange_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Function"
      uuid: "uuid7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.Random"
      uuid: "getNextIntInRange_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.env.RandomValuePropertySource$Range"
      uuid: "getRandomValue_randomValuePropertySource.Range1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      suggestedContent: !<regular>
        value: 1
      valueType: "java.lang.Integer"
      uuid: "getNextIntInRange_number1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.env.RandomValuePropertySource$Range"
      uuid: "getRandomValue_randomValuePropertySource.Range1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      suggestedContent: !<regular>
        value: 1
      valueType: "java.lang.Integer"
      uuid: "getNextIntInRange_number2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "java.util.Random"
      uuid: "getNextIntInRange_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.stream.IntStream"
        method: "empty"
        methodParameters: []
      suggestedContent: !<static_method_return>
        target: "java.util.stream.IntStream"
        method: "empty"
        methodParameters: []
      valueType: "java.util.stream.IntStream"
      uuid: "getNextIntInRange_intStream1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "long"
      uuid: "uuid9"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      suggestedContent: !<regular>
        value: 1
      valueType: "int"
      uuid: "getNextIntInRange_int1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      suggestedContent: !<regular>
        value: 1
      valueType: "int"
      uuid: "getNextIntInRange_int2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid11"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "assertPresent_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getNextIntInRange_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid10"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      suggestedContent: !<regular>
        value: 1
      valueType: "java.lang.Integer"
      uuid: "getRandomValue_integer1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path5"
    testPathName: "getPropertyWhenRangeIsNullAndRangeIsNotNull"
    constructorSignature: "<init>(java.lang.String) : void"
    filledByUser: false
    modelFingerprint: "4CB15E4B9329C34433A0E078448893A6"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "C5AA1AE099D98DE853C93C74963D3C8E"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "name"
      modelFingerprint: "152403AE23B874E1C4B9566F486B9148"
      index: 2
      ignored: false
      valueUuid: "getProperty_string1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "D74A5D0F27A4EF4FA8A9CB4C326E188A"
      index: 3
      ignored: false
      valueUuid: "uuid2"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "hasText"
        parameters:
        - name: "text"
          valueUuid: "<init>_string1"
        - name: "message"
          valueUuid: "uuid1"
        signature: "hasText(String,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "681531ABF28F8632368125526ABB58A3"
      index: 4
      ignored: false
      valueUuid: "uuid4"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "<init>_random1"
        - name: "message"
          valueUuid: "uuid3"
        signature: "notNull(Random,String): void"
        returnValueUuid: "<init>_void2"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "LogMessage"
      modelFingerprint: "A85DF46D99843A44697A93BF03826A69"
      index: 5
      ignored: false
      valueUuid: "uuid6"
      methodExercised:
        target: "org.springframework.core.log.LogMessage"
        name: "format"
        parameters:
        - name: "format"
          valueUuid: "uuid5"
        - name: "arg1"
          valueUuid: "getProperty_string1"
        signature: "format(String,String): LogMessage"
        returnValueUuid: "getProperty_logMessage1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "RandomValuePropertySource.Range"
      modelFingerprint: "2CF17B1B46EBDCE7B667261A16B5320F"
      index: 6
      ignored: false
      valueUuid: "uuid8"
      methodExercised:
        target: "org.springframework.boot.env.RandomValuePropertySource$Range"
        name: "of"
        parameters:
        - name: "value"
          valueUuid: "getRange_string2"
        - name: "parse"
          valueUuid: "uuid7"
        signature: "of(String,Function): RandomValuePropertySource$Range"
        returnValueUuid: "getRandomValue_randomValuePropertySource.Range1"
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "A7C6FDECABADFCFADFDD01DA7A86A7C7"
      index: 7
      ignored: false
      methodExercised:
        target: "target"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getNextLongInRange_object1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "range"
      modelFingerprint: "B7E74949BD7DF02BBB4F5D146093532B"
      index: 8
      ignored: false
      valueUuid: "getRandomValue_randomValuePropertySource.Range1"
      methodExercised:
        target: "range"
        name: "getMin"
        parameters: []
        signature: "getMin(): Number"
        returnValueUuid: "getNextLongInRange_number1"
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "range"
      modelFingerprint: "8559D59C6A6F064E364E175040C21E6D"
      index: 9
      ignored: false
      valueUuid: "getRandomValue_randomValuePropertySource.Range1"
      methodExercised:
        target: "range"
        name: "getMax"
        parameters: []
        signature: "getMax(): Number"
        returnValueUuid: "getNextLongInRange_number2"
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "DCF53B11BC453AD7CA5450D891D0B07B"
      index: 10
      ignored: false
      valueUuid: "getNextLongInRange_object1"
      methodExercised:
        target: "java.util.Random"
        name: "longs"
        parameters:
        - name: "streamSize"
          valueUuid: "uuid9"
        - name: "randomNumberOrigin"
          valueUuid: "getNextLongInRange_long1"
        - name: "randomNumberBound"
          valueUuid: "getNextLongInRange_long2"
        signature: "longs(long,long,long): LongStream"
        returnValueUuid: "getNextLongInRange_longStream1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "D83F923687A63AA3C57684FC28F23D1B"
      index: 11
      ignored: false
      valueUuid: "uuid11"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "getNextLongInRange_boolean1"
        - name: "messageSupplier"
          valueUuid: "uuid10"
        signature: "state(boolean,Supplier): void"
        returnValueUuid: "assertPresent_void1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B24D1B53940DDAA9888B1BCADAAE1F0E"
      index: 12
      ignored: false
      valueUuid: "getRandomValue_long1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "c3f8f3ae-6ab4-3435-b568-f8708d2d87c9"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.stream.LongStream.findFirst() : java.util.OptionalLong"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.RandomValuePropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "name1"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.env.RandomValuePropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.env.RandomValuePropertySource"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "<init>_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source name must contain at least one character"
      valueType: "java.lang.String"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.Random"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "java.util.Random"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.util.Random"
      uuid: "<init>_random1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source must not be null"
      valueType: "java.lang.String"
      uuid: "uuid3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.log.LogMessage"
      uuid: "uuid6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.log.LogMessage"
      uuid: "getProperty_logMessage1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Generating random property for '%s'"
      valueType: "java.lang.String"
      uuid: "uuid5"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.env.RandomValuePropertySource$Range"
      uuid: "uuid8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.env.RandomValuePropertySource$Range"
      uuid: "getRandomValue_randomValuePropertySource.Range1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "value1"
      valueType: "java.lang.String"
      uuid: "getRange_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Function"
      uuid: "uuid7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.Random"
      uuid: "getNextLongInRange_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.env.RandomValuePropertySource$Range"
      uuid: "getRandomValue_randomValuePropertySource.Range1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "java.lang.Long"
      uuid: "getNextLongInRange_number1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.env.RandomValuePropertySource$Range"
      uuid: "getRandomValue_randomValuePropertySource.Range1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "java.lang.Long"
      uuid: "getNextLongInRange_number2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "java.util.Random"
      uuid: "getNextLongInRange_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.stream.LongStream"
        method: "empty"
        methodParameters: []
      suggestedContent: !<static_method_return>
        target: "java.util.stream.LongStream"
        method: "empty"
        methodParameters: []
      valueType: "java.util.stream.LongStream"
      uuid: "getNextLongInRange_longStream1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "long"
      uuid: "uuid9"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "long"
      uuid: "getNextLongInRange_long1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "long"
      uuid: "getNextLongInRange_long2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid11"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "assertPresent_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getNextLongInRange_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uuid10"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "java.lang.Long"
      uuid: "getRandomValue_long1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path10"
    testPathName: "getPropertyWhenTypeNotEqualsUuid"
    constructorSignature: "<init>(java.lang.String) : void"
    filledByUser: false
    modelFingerprint: "D79C872BD58108A5CDD3042D7C0A97E4"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "cf9cfca0-55fc-300f-9b74-6f51222eef0f"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path6"
    testPathName: "getPropertyWhenTypeEqualsUuid"
    constructorSignature: "<init>(java.lang.String) : void"
    filledByUser: false
    modelFingerprint: "17B4AAE03E8CCAB311E95D5CF0DAF4C5"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "C5AA1AE099D98DE853C93C74963D3C8E"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "name"
      modelFingerprint: "152403AE23B874E1C4B9566F486B9148"
      index: 2
      ignored: false
      valueUuid: "getProperty_string1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "D74A5D0F27A4EF4FA8A9CB4C326E188A"
      index: 3
      ignored: false
      valueUuid: "uuid46"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "hasText"
        parameters:
        - name: "text"
          valueUuid: "<init>_string1"
        - name: "message"
          valueUuid: "uuid45"
        signature: "hasText(String,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "681531ABF28F8632368125526ABB58A3"
      index: 4
      ignored: false
      valueUuid: "uuid48"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "<init>_random1"
        - name: "message"
          valueUuid: "uuid47"
        signature: "notNull(Random,String): void"
        returnValueUuid: "<init>_void2"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "LogMessage"
      modelFingerprint: "A85DF46D99843A44697A93BF03826A69"
      index: 5
      ignored: false
      valueUuid: "uuid50"
      methodExercised:
        target: "org.springframework.core.log.LogMessage"
        name: "format"
        parameters:
        - name: "format"
          valueUuid: "uuid49"
        - name: "arg1"
          valueUuid: "getProperty_string1"
        signature: "format(String,String): LogMessage"
        returnValueUuid: "getProperty_logMessage1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "UUID"
      modelFingerprint: "55AB2319A46635ABD9D881999C415B19"
      index: 6
      ignored: false
      valueUuid: "uuid51"
      methodExercised:
        target: "java.util.UUID"
        name: "randomUUID"
        parameters: []
        signature: "randomUUID(): UUID"
        returnValueUuid: "getRandomValue_uUID1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 7
      ignored: false
      valueUuid: "getRandomValue_string1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "9f897460-478e-39e7-baae-a7f212da7774"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "CLASS_TYPE_COULD_NOT_BE_MOCKED_AND_NEEDS_TO_STRING"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.RandomValuePropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "name1"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.env.RandomValuePropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.env.RandomValuePropertySource"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid46"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "<init>_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source name must contain at least one character"
      valueType: "java.lang.String"
      uuid: "uuid45"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid48"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.Random"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "java.util.Random"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.util.Random"
      uuid: "<init>_random1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source must not be null"
      valueType: "java.lang.String"
      uuid: "uuid47"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.log.LogMessage"
      uuid: "uuid50"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.log.LogMessage"
      uuid: "getProperty_logMessage1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Generating random property for '%s'"
      valueType: "java.lang.String"
      uuid: "uuid49"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.UUID"
      uuid: "uuid51"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.UUID"
        method: "fromString"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "12345678-0000-abcd-1234-abcdef123456"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      suggestedContent: !<static_method_return>
        target: "java.util.UUID"
        method: "fromString"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "12345678-0000-abcd-1234-abcdef123456"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.util.UUID"
      uuid: "getRandomValue_uUID1"
      fixed: false
      nameForMock: "getRandomValue_uUID1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "result1"
      valueType: "java.lang.String"
      uuid: "getRandomValue_string1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path7"
    testPathName: "getPropertyWhenRangeIsNullAndTypeNotEqualsUuid"
    constructorSignature: "<init>(java.lang.String) : void"
    filledByUser: false
    modelFingerprint: "493C82747498CD7F064AC8C6A2C75C69"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "44a19db3-1328-3a5e-86a2-a88fed9be328"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path8"
    testPathName: "getPropertyWhenRangeIsNullAndRangeIsNullAndTypeNotEqualsUuid"
    constructorSignature: "<init>(java.lang.String) : void"
    filledByUser: false
    modelFingerprint: "0B201DABD902E0033B519C1CB5FA0DB2"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "52f35f09-9ace-3036-8bf9-b5579e32a612"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path9"
    testPathName: "getPropertyWhenTypeLengthNotGreaterThanStartIndexAndRangeIsNullAndRangeIsNullAndTypeNotEqualsUuid"
    constructorSignature: "<init>(java.lang.String) : void"
    filledByUser: false
    modelFingerprint: "8571CC6BEEB2B8C70E716049286C2DAD"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "736631CEF1E21045A02A6B71B7201F1A"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "name"
      modelFingerprint: "124B12406C51BD5968DA8D646B6460D5"
      index: 2
      ignored: false
      valueUuid: "getProperty_string1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "72030E333DC53411760BFF036B450253"
      index: 3
      ignored: false
      valueUuid: "uuid65"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "hasText"
        parameters:
        - name: "text"
          valueUuid: "<init>_string1"
        - name: "message"
          valueUuid: "uuid64"
        signature: "hasText(String,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "681531ABF28F8632368125526ABB58A3"
      index: 4
      ignored: false
      valueUuid: "uuid67"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "<init>_random1"
        - name: "message"
          valueUuid: "uuid66"
        signature: "notNull(Random,String): void"
        returnValueUuid: "<init>_void2"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "LogMessage"
      modelFingerprint: "C91EC89B88ECFEB413D905DAE4FC9B3F"
      index: 5
      ignored: false
      valueUuid: "uuid69"
      methodExercised:
        target: "org.springframework.core.log.LogMessage"
        name: "format"
        parameters:
        - name: "format"
          valueUuid: "uuid68"
        - name: "arg1"
          valueUuid: "getProperty_string1"
        signature: "format(String,String): LogMessage"
        returnValueUuid: "getProperty_logMessage1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "A7C6FDECABADFCFADFDD01DA7A86A7C7"
      index: 6
      ignored: false
      methodExercised:
        target: "target"
        name: "getSource"
        parameters: []
        signature: "getSource(): Object"
        returnValueUuid: "getRandomBytes_object1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "916313C1E6665F32EFCA5FD6D83F2EE0"
      index: 7
      ignored: false
      valueUuid: "getRandomBytes_object1"
      methodExercised:
        target: "java.util.Random"
        name: "nextBytes"
        parameters:
        - name: "rnd"
          valueUuid: "getRandomBytes_byte[]1"
        signature: "nextBytes(byte[]): void"
        returnValueUuid: "getRandomBytes_void1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F1327E0B235DCAE318815630CC130710"
      index: 8
      ignored: false
      valueUuid: "getRandomBytes_string1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "e2c2da42-b907-3228-a688-d482ea1cf485"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.RandomValuePropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            suggestedContent: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.env.RandomValuePropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            suggestedContent: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.env.RandomValuePropertySource"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "random.intA"
      suggestedContent: !<regular>
        value: "random.intA"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid65"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      suggestedContent: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "<init>_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source name must contain at least one character"
      valueType: "java.lang.String"
      uuid: "uuid64"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid67"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.Random"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "java.util.Random"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.util.Random"
      uuid: "<init>_random1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source must not be null"
      valueType: "java.lang.String"
      uuid: "uuid66"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.log.LogMessage"
      uuid: "uuid69"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.log.LogMessage"
      uuid: "getProperty_logMessage1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Generating random property for '%s'"
      valueType: "java.lang.String"
      uuid: "uuid68"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "random.intA"
      suggestedContent: !<regular>
        value: "random.intA"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.Random"
      uuid: "getRandomBytes_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "java.util.Random"
      uuid: "getRandomBytes_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "getRandomBytes_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          2:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          3:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          4:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          5:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          6:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          7:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          8:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          9:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          10:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          11:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          12:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          13:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          14:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          15:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      suggestedContent: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          2:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          3:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          4:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          5:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          6:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          7:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          8:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          9:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          10:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          11:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          12:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          13:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          14:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          15:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "byte"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "byte[]"
      uuid: "getRandomBytes_byte[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "00000000000000000000000000000000"
      valueType: "java.lang.String"
      uuid: "getRandomBytes_string1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "addToEnvironment"
    signature: "addToEnvironment(org.springframework.core.env.ConfigurableEnvironment)\
      \ : void"
    instructionFingerprint: "BA364D57725FE9CBBCAE6E75C037BB84"
  paths:
  - pathId: "path1"
    testPathName: "addToEnvironmentTest"
    filledByUser: false
    modelFingerprint: "9270176C40299E827F40CF18AA13BBB9"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "962B65C2F1EA756AFD656B8B0436E5E4"
      index: 1
      ignored: false
      valueUuid: "addToEnvironment_configurableEnvironment1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "RandomValuePropertySource"
      modelFingerprint: "C60D25B211EEE50740105EC9EFD6DCE3"
      index: 2
      ignored: false
      valueUuid: "uuid70"
      methodExercised:
        target: "org.springframework.boot.env.RandomValuePropertySource"
        name: "addToEnvironment"
        parameters:
        - name: "environment"
          valueUuid: "addToEnvironment_configurableEnvironment1"
        - name: "logger"
          valueUuid: "<clinit>_log1"
        signature: "addToEnvironment(ConfigurableEnvironment,Log): void"
        returnValueUuid: "addToEnvironment_void1"
        access: 8
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 3
      ignored: false
      valueUuid: "uuid71"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "f501c243-87af-3b86-af39-384eda5bac28"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "addToEnvironment_configurableEnvironment1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.env.RandomValuePropertySource"
      uuid: "uuid70"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "addToEnvironment_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "addToEnvironment_configurableEnvironment1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.apache.commons.logging.LogFactory"
        method: "getLog"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.env.RandomValuePropertySource"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.boot.env.RandomValuePropertySource"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      suggestedContent: !<static_method_return>
        target: "org.apache.commons.logging.LogFactory"
        method: "getLog"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.env.RandomValuePropertySource"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.boot.env.RandomValuePropertySource"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.apache.commons.logging.Log"
      uuid: "<clinit>_log1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid71"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "addToEnvironment"
    signature: "addToEnvironment(org.springframework.core.env.ConfigurableEnvironment,org.apache.commons.logging.Log)\
      \ : void"
    instructionFingerprint: "0813D99FAC027B269477970F1A472E55"
  paths:
  - pathId: "path1"
    testPathName: "addToEnvironment1WhenExistingIsNotNull"
    filledByUser: false
    modelFingerprint: "E4B151CF02B61DE6D410F969259E7479"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "81E728D1D9282AF5B8509F27D0207EB4"
      index: 1
      ignored: false
      valueUuid: "addToEnvironment_configurableEnvironment1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "logger"
      modelFingerprint: "4F5A7E4F5CEB3171188E89A274180320"
      index: 2
      ignored: false
      valueUuid: "addToEnvironment_log1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "A1BC4CE198708953BDAB55E146058919"
      index: 3
      ignored: false
      valueUuid: "addToEnvironment_configurableEnvironment1"
      methodExercised:
        target: "environment"
        name: "getPropertySources"
        parameters: []
        signature: "getPropertySources(): MutablePropertySources"
        returnValueUuid: "addToEnvironment_mutablePropertySources1"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "EA33DEB92FCBEE1DF8FD13D60FAE2335"
      index: 4
      ignored: false
      valueUuid: "addToEnvironment_mutablePropertySources1"
      methodExercised:
        target: "sources"
        name: "get"
        parameters:
        - name: "name"
          valueUuid: "uuid72"
        signature: "get(String): PropertySource"
        returnValueUuid: "addToEnvironment_propertySource1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 5
      ignored: false
      valueUuid: "uuid73"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "f1611580-9925-3d58-8c21-50def6dc3b5f"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "addToEnvironment_configurableEnvironment1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "addToEnvironment_log1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "addToEnvironment_configurableEnvironment1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "addToEnvironment_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "addToEnvironment_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertySource"
      genericValueType: "?"
      uuid: "addToEnvironment_propertySource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "random"
      valueType: "java.lang.String"
      uuid: "uuid72"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid73"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "addToEnvironment1WhenSourcesGetStandardEnvironmentSYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAMEIsNotNull"
    filledByUser: false
    modelFingerprint: "4C495622C479D728AF21E683C5C99291"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "81E728D1D9282AF5B8509F27D0207EB4"
      index: 1
      ignored: false
      valueUuid: "addToEnvironment_configurableEnvironment1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "logger"
      modelFingerprint: "4F5A7E4F5CEB3171188E89A274180320"
      index: 2
      ignored: false
      valueUuid: "addToEnvironment_log1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "A1BC4CE198708953BDAB55E146058919"
      index: 3
      ignored: false
      valueUuid: "addToEnvironment_configurableEnvironment1"
      methodExercised:
        target: "environment"
        name: "getPropertySources"
        parameters: []
        signature: "getPropertySources(): MutablePropertySources"
        returnValueUuid: "addToEnvironment_mutablePropertySources1"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "EAF871C0BF180A405DED78A177B8D4A3"
      index: 4
      ignored: false
      valueUuid: "addToEnvironment_mutablePropertySources1"
      methodExercised:
        target: "sources"
        name: "get"
        parameters:
        - name: "name"
          valueUuid: "uuid74"
        signature: "get(String): PropertySource"
        returnValueUuid: "addToEnvironment_propertySource1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "6B821172E7083FA3E9FA47CA5211C6FB"
      index: 5
      ignored: false
      valueUuid: "uuid77"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "hasText"
        parameters:
        - name: "text"
          valueUuid: "uuid75"
        - name: "message"
          valueUuid: "uuid76"
        signature: "hasText(String,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "681531ABF28F8632368125526ABB58A3"
      index: 6
      ignored: false
      valueUuid: "uuid79"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "<init>_random1"
        - name: "message"
          valueUuid: "uuid78"
        signature: "notNull(Random,String): void"
        returnValueUuid: "<init>_void2"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "D9400616B79581A885C182A1B4C029EB"
      index: 7
      ignored: false
      valueUuid: "addToEnvironment_mutablePropertySources1"
      methodExercised:
        target: "sources"
        name: "get"
        parameters:
        - name: "name"
          valueUuid: "uuid80"
        signature: "get(String): PropertySource"
        returnValueUuid: "addToEnvironment_propertySource2"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "F125E05D48971C736717745B7DD0D446"
      index: 8
      ignored: false
      valueUuid: "addToEnvironment_mutablePropertySources1"
      methodExercised:
        target: "sources"
        name: "addAfter"
        parameters:
        - name: "relativePropertySourceName"
          valueUuid: "uuid81"
        - name: "propertySource"
          valueUuid: "addToEnvironment_randomValuePropertySource1"
        signature: "addAfter(String,RandomValuePropertySource): void"
        returnValueUuid: "addToEnvironment_void1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 9
      ignored: false
      valueUuid: "uuid82"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "c19f6f13-17e5-3394-9061-aec3afcbc131"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "addToEnvironment_configurableEnvironment1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "addToEnvironment_log1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "addToEnvironment_configurableEnvironment1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "addToEnvironment_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "addToEnvironment_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.springframework.core.env.PropertySource"
      genericValueType: "?"
      uuid: "addToEnvironment_propertySource1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "random"
      valueType: "java.lang.String"
      uuid: "uuid74"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid77"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "random"
      valueType: "java.lang.String"
      uuid: "uuid75"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source name must contain at least one character"
      valueType: "java.lang.String"
      uuid: "uuid76"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid79"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.Random"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "java.util.Random"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.util.Random"
      uuid: "<init>_random1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source must not be null"
      valueType: "java.lang.String"
      uuid: "uuid78"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "addToEnvironment_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertySource"
      genericValueType: "?"
      uuid: "addToEnvironment_propertySource2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "uuid80"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "addToEnvironment_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "addToEnvironment_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "uuid81"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.RandomValuePropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "random"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "org.springframework.boot.env.RandomValuePropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "random"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.env.RandomValuePropertySource"
      uuid: "addToEnvironment_randomValuePropertySource1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid82"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "addToEnvironment1WhenSourcesGetStandardEnvironmentSYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAMEIsNull"
    filledByUser: false
    modelFingerprint: "6ED5264437ED0E8F13ECB57027329613"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "81E728D1D9282AF5B8509F27D0207EB4"
      index: 1
      ignored: false
      valueUuid: "addToEnvironment_configurableEnvironment1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "logger"
      modelFingerprint: "4F5A7E4F5CEB3171188E89A274180320"
      index: 2
      ignored: false
      valueUuid: "addToEnvironment_log1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "A1BC4CE198708953BDAB55E146058919"
      index: 3
      ignored: false
      valueUuid: "addToEnvironment_configurableEnvironment1"
      methodExercised:
        target: "environment"
        name: "getPropertySources"
        parameters: []
        signature: "getPropertySources(): MutablePropertySources"
        returnValueUuid: "addToEnvironment_mutablePropertySources1"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "EAF871C0BF180A405DED78A177B8D4A3"
      index: 4
      ignored: false
      valueUuid: "addToEnvironment_mutablePropertySources1"
      methodExercised:
        target: "sources"
        name: "get"
        parameters:
        - name: "name"
          valueUuid: "uuid83"
        signature: "get(String): PropertySource"
        returnValueUuid: "addToEnvironment_propertySource1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "6B821172E7083FA3E9FA47CA5211C6FB"
      index: 5
      ignored: false
      valueUuid: "uuid86"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "hasText"
        parameters:
        - name: "text"
          valueUuid: "uuid84"
        - name: "message"
          valueUuid: "uuid85"
        signature: "hasText(String,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "681531ABF28F8632368125526ABB58A3"
      index: 6
      ignored: false
      valueUuid: "uuid88"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "<init>_random1"
        - name: "message"
          valueUuid: "uuid87"
        signature: "notNull(Random,String): void"
        returnValueUuid: "<init>_void2"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "1DB2E38C859B8618820ADC7B2CE9D9A8"
      index: 7
      ignored: false
      valueUuid: "addToEnvironment_mutablePropertySources1"
      methodExercised:
        target: "sources"
        name: "get"
        parameters:
        - name: "name"
          valueUuid: "uuid89"
        signature: "get(String): PropertySource"
        returnValueUuid: "addToEnvironment_propertySource2"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "sources"
      modelFingerprint: "F04522F3E966A3223260699312024E0B"
      index: 8
      ignored: false
      valueUuid: "addToEnvironment_mutablePropertySources1"
      methodExercised:
        target: "sources"
        name: "addLast"
        parameters:
        - name: "propertySource"
          valueUuid: "addToEnvironment_randomValuePropertySource1"
        signature: "addLast(RandomValuePropertySource): void"
        returnValueUuid: "addToEnvironment_void1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 9
      ignored: false
      valueUuid: "uuid90"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "7363f093-0718-3913-ad2f-da425b1f9448"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "addToEnvironment_configurableEnvironment1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "addToEnvironment_log1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "addToEnvironment_configurableEnvironment1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "addToEnvironment_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "addToEnvironment_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.springframework.core.env.PropertySource"
      genericValueType: "?"
      uuid: "addToEnvironment_propertySource1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "random"
      valueType: "java.lang.String"
      uuid: "uuid83"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid86"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "random"
      valueType: "java.lang.String"
      uuid: "uuid84"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source name must contain at least one character"
      valueType: "java.lang.String"
      uuid: "uuid85"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid88"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.Random"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "java.util.Random"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.util.Random"
      uuid: "<init>_random1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source must not be null"
      valueType: "java.lang.String"
      uuid: "uuid87"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "addToEnvironment_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.springframework.core.env.PropertySource"
      genericValueType: "?"
      uuid: "addToEnvironment_propertySource2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemEnvironment"
      valueType: "java.lang.String"
      uuid: "uuid89"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "addToEnvironment_mutablePropertySources1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "addToEnvironment_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.env.RandomValuePropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "random"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "org.springframework.boot.env.RandomValuePropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "random"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.env.RandomValuePropertySource"
      uuid: "addToEnvironment_randomValuePropertySource1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid90"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
