---
modelFingerprint: "C4BFC4CF5965FDABB984AA2AC97D76C0"
targetClass:
  fullClassName: "org.springframework.boot.json.BasicJsonParser"
methods:
- method:
    name: "parseMap"
    sourceCodeSignature: "Map<String, Object> parseMap(String json)"
    returnType: "java.util.Map"
    genericReturnType: "java.lang.String,java.lang.Object"
    parameters:
    - name: "json"
      type: "java.lang.String"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "6183028630E60BD28F9577FAC4175AFE"
  paths:
  - pathId: "path1"
    testPathName: "parseMap1Test"
    constructorSignature: "<init>() : void"
    modelFingerprint: "D11786FBEE454E9BEAC6B3285F9C9C4C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "json"
      modelFingerprint: "AABF88858C428E2F64D31CE490B9CBFA"
      valueUuid: "json"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "FE60B821DA5DF8DDC699B220D157DEFD"
      methodExercised:
        expression: "tryParse(parser:uniqueUuid1,check:uniqueUuid2):object"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "1EF37C57E33972B769CD2AF945F4BDCE"
      valueUuid: "object"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.json.BasicJsonParser"
        parameters: []
      valueType: "org.springframework.boot.json.BasicJsonParser"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "json1"
      valueType: "java.lang.String"
      uuid: "json"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "ANY"
      valueType: "java.util.concurrent.Callable"
      uuid: "uniqueUuid1"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Exception"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Exception"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      uuid: "object"
      explicitCastNeeded: true
- method:
    name: "parseList"
    sourceCodeSignature: "List<Object> parseList(String json)"
    returnType: "java.util.List"
    genericReturnType: "java.lang.Object"
    parameters:
    - name: "json"
      type: "java.lang.String"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "83ED14D41AB4DD011531B01BC73FAE16"
  paths:
  - pathId: "path1"
    testPathName: "parseList1Test"
    constructorSignature: "<init>() : void"
    modelFingerprint: "5AB0D4487DEE9C6227224B0860B90416"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "json"
      modelFingerprint: "AABF88858C428E2F64D31CE490B9CBFA"
      valueUuid: "json"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "458998A712DD31EDF49504479E8B9FBC"
      methodExercised:
        expression: "tryParse(parser:uniqueUuid3,check:uniqueUuid4):object"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2735C41F3FD359DA7E8D3F0016E80A67"
      valueUuid: "object"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.json.BasicJsonParser"
        parameters: []
      valueType: "org.springframework.boot.json.BasicJsonParser"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "json1"
      valueType: "java.lang.String"
      uuid: "json"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "ANY"
      valueType: "java.util.concurrent.Callable"
      uuid: "uniqueUuid3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Exception"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Exception"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "object"
      explicitCastNeeded: true
