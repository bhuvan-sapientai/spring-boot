---
modelFingerprint: "1EAD4D4B49E8B533DBF28E36579A3F27"
targetClass:
  fullClassName: "org.springframework.boot.context.metrics.buffering.BufferingApplicationStartup"
methods:
- method:
    name: "startRecording"
    sourceCodeSignature: "void startRecording()"
    returnType: "void"
    instructionFingerprint: "4C945323FD0A8019E74288F73B008E92"
  paths:
  - pathId: "path1"
    testPathName: "startRecordingTest"
    constructorSignature: "<init>(int,java.time.Clock) : void"
    modelFingerprint: "D2337A389703A0D12089E453055BF456"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "DD2B4149F895A9B27F31DBB20BB6AAF1"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      name: "clock"
      modelFingerprint: "8B02610D7DAD843B26F9E5D3A8D65ED5"
      valueUuid: "clock"
      methodExercised:
        expression: "instant():instant"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "E2BF27B1E374DE6AB8B672295ABEB729"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "state(expression:boolean1,message:uniqueUuid2):void"
        staticAccess: true
    - type: "FIELD"
      name: "clock"
      modelFingerprint: "AB4D8C85B211F04FB3B601E7B6B1E31B"
      valueUuid: "clock"
      methodExercised:
        expression: "instant():instant2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.metrics.buffering.BufferingApplicationStartup"
        parameters:
        - name: "capacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "capacity"
        - name: "clock"
          value:
            sapientType: "MOCK"
            valueType: "java.time.Clock"
            uuid: "clock"
      valueType: "org.springframework.boot.context.metrics.buffering.BufferingApplicationStartup"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.time.Clock"
      uuid: "clock"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Instant"
        method: "ofEpochSecond"
        methodParameters:
        - name: "epochSecond"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1700000000
            valueType: "int"
            uuid: "uniqueUuid1"
            fixed: true
      valueType: "java.time.Instant"
      uuid: "instant"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
      collectionUuid: "concurrentLinkedQueue"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Cannot restart recording once steps have been buffered."
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "java.time.Clock"
      uuid: "clock"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Instant"
        method: "ofEpochSecond"
        methodParameters:
        - name: "epochSecond"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1700000000
            valueType: "int"
            uuid: "uniqueUuid3"
            fixed: true
      valueType: "java.time.Instant"
      uuid: "instant2"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "addFilter"
    sourceCodeSignature: "void addFilter(Predicate<StartupStep> filter)"
    returnType: "void"
    parameters:
    - name: "filter"
      type: "java.util.function.Predicate"
    instructionFingerprint: "BADB61D7C6B88350484133B85C2460F8"
  paths:
  - pathId: "path1"
    testPathName: "addFilterTest"
    constructorSignature: "<init>(int,java.time.Clock) : void"
    modelFingerprint: "8A90B02D6048D356CD098C540DE1DE90"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "DD2B4149F895A9B27F31DBB20BB6AAF1"
      valueUuid: "target"
    - type: "INPUT"
      name: "filter"
      modelFingerprint: "BD0C5F5D2E99870F4D3376D5FBB81661"
      valueUuid: "filter"
    - type: "LOCAL_VARIABLE"
      name: "clock"
      modelFingerprint: "8B02610D7DAD843B26F9E5D3A8D65ED5"
      valueUuid: "clock"
      methodExercised:
        expression: "instant():instant"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Predicate.and(java.util.function.Predicate<org.springframework.core.metrics.StartupStep>)\
        \ : java.util.function.Predicate"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.metrics.buffering.BufferingApplicationStartup"
        parameters:
        - name: "capacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "capacity"
        - name: "clock"
          value:
            sapientType: "MOCK"
            valueType: "java.time.Clock"
            uuid: "clock"
      valueType: "org.springframework.boot.context.metrics.buffering.BufferingApplicationStartup"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.util.function.Predicate"
      uuid: "filter"
    - sapientType: "MOCK"
      valueType: "java.time.Clock"
      uuid: "clock"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Instant"
        method: "ofEpochSecond"
        methodParameters:
        - name: "epochSecond"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1700000000
            valueType: "int"
            uuid: "uniqueUuid4"
            fixed: true
      valueType: "java.time.Instant"
      uuid: "instant"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "start"
    sourceCodeSignature: "StartupStep start(String name)"
    returnType: "org.springframework.core.metrics.StartupStep"
    parameters:
    - name: "name"
      type: "java.lang.String"
    instructionFingerprint: "E7080C149318037C37195BEE824812F3"
  paths:
  - pathId: "path1"
    testPathName: "startWhenThisCurrentCompareAndSetCurrentNext"
    constructorSignature: "<init>(int,java.time.Clock) : void"
    modelFingerprint: "1EE72856CB80DD34FD068EE3C30E72BA"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "DD2B4149F895A9B27F31DBB20BB6AAF1"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "63F0AEB18588FDD50129913BF544F767"
      valueUuid: "name"
    - type: "LOCAL_VARIABLE"
      name: "clock"
      modelFingerprint: "8B02610D7DAD843B26F9E5D3A8D65ED5"
      valueUuid: "clock"
      methodExercised:
        expression: "instant():instant"
    - type: "FIELD"
      name: "clock"
      modelFingerprint: "AB4D8C85B211F04FB3B601E7B6B1E31B"
      valueUuid: "clock"
      methodExercised:
        expression: "instant():instant2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F82871D63B31A590BBAAB3E0556EEF13"
      valueUuid: "bufferedStartupStepNotNull"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "if (this.current.compareAndSet(current, next)) {"
      lineNumber: 116
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: current - Method: compareAndSet"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.metrics.buffering.BufferingApplicationStartup"
        parameters:
        - name: "capacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "capacity"
        - name: "clock"
          value:
            sapientType: "MOCK"
            valueType: "java.time.Clock"
            uuid: "clock"
      valueType: "org.springframework.boot.context.metrics.buffering.BufferingApplicationStartup"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "java.time.Clock"
      uuid: "clock"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Instant"
        method: "ofEpochSecond"
        methodParameters:
        - name: "epochSecond"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1700000000
            valueType: "int"
            uuid: "uniqueUuid5"
            fixed: true
      valueType: "java.time.Instant"
      uuid: "instant"
    - sapientType: "MOCK"
      valueType: "java.time.Clock"
      uuid: "clock"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Instant"
        method: "ofEpochSecond"
        methodParameters:
        - name: "epochSecond"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1700000000
            valueType: "int"
            uuid: "uniqueUuid6"
            fixed: true
      valueType: "java.time.Instant"
      uuid: "instant2"
    - sapientType: "NOT_NULL"
      valueType: "org.springframework.boot.context.metrics.buffering.BufferedStartupStep"
      uuid: "bufferedStartupStepNotNull"
      fixed: true
    branches:
    - lineNumber: 137
      expression: "step != null"
      range: "(137,10)-(137,21)"
      evaluatedAs: false
      internalMethodName: "getLatestActive"
    - lineNumber: 116
      expression: "this.current.compareAndSet(current, next)"
      range: "(116,8)-(116,48)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "startWhenThisCurrentNotCompareAndSetCurrentNext"
    constructorSignature: "<init>(int,java.time.Clock) : void"
    modelFingerprint: "22D03669B89CD8AE0FEB29509ABAC4AB"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "DD2B4149F895A9B27F31DBB20BB6AAF1"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "63F0AEB18588FDD50129913BF544F767"
      valueUuid: "name"
    - type: "LOCAL_VARIABLE"
      name: "clock"
      modelFingerprint: "8B02610D7DAD843B26F9E5D3A8D65ED5"
      valueUuid: "clock"
      methodExercised:
        expression: "instant():instant"
    - type: "FIELD"
      name: "clock"
      modelFingerprint: "AB4D8C85B211F04FB3B601E7B6B1E31B"
      valueUuid: "clock"
      methodExercised:
        expression: "instant():instant2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "if (this.current.compareAndSet(current, next)) {"
      lineNumber: 116
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: current - Method: compareAndSet"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.metrics.buffering.BufferingApplicationStartup"
        parameters:
        - name: "capacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "capacity"
        - name: "clock"
          value:
            sapientType: "MOCK"
            valueType: "java.time.Clock"
            uuid: "clock"
      valueType: "org.springframework.boot.context.metrics.buffering.BufferingApplicationStartup"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "java.time.Clock"
      uuid: "clock"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Instant"
        method: "ofEpochSecond"
        methodParameters:
        - name: "epochSecond"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1700000000
            valueType: "int"
            uuid: "uniqueUuid7"
            fixed: true
      valueType: "java.time.Instant"
      uuid: "instant"
    - sapientType: "MOCK"
      valueType: "java.time.Clock"
      uuid: "clock"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Instant"
        method: "ofEpochSecond"
        methodParameters:
        - name: "epochSecond"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1700000000
            valueType: "int"
            uuid: "uniqueUuid8"
            fixed: true
      valueType: "java.time.Instant"
      uuid: "instant2"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 137
      expression: "step != null"
      range: "(137,10)-(137,21)"
      evaluatedAs: false
      internalMethodName: "getLatestActive"
    - lineNumber: 116
      expression: "this.current.compareAndSet(current, next)"
      range: "(116,8)-(116,48)"
      evaluatedAs: false
- method:
    name: "getBufferedTimeline"
    sourceCodeSignature: "StartupTimeline getBufferedTimeline()"
    returnType: "org.springframework.boot.context.metrics.buffering.StartupTimeline"
    instructionFingerprint: "EBA6B7B6CB952AB196B4EBF2986B2997"
  paths:
  - pathId: "path1"
    testPathName: "getBufferedTimelineTest"
    constructorSignature: "<init>(int,java.time.Clock) : void"
    modelFingerprint: "1AE6B30302939ECE5190958806BF1586"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "DD2B4149F895A9B27F31DBB20BB6AAF1"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      name: "clock"
      modelFingerprint: "8B02610D7DAD843B26F9E5D3A8D65ED5"
      valueUuid: "clock"
      methodExercised:
        expression: "instant():instant"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6A04865AAF583E04B6C81EB57A5DD0D9"
      valueUuid: "startupTimeline"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.metrics.buffering.BufferingApplicationStartup"
        parameters:
        - name: "capacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "capacity"
        - name: "clock"
          value:
            sapientType: "MOCK"
            valueType: "java.time.Clock"
            uuid: "clock"
      valueType: "org.springframework.boot.context.metrics.buffering.BufferingApplicationStartup"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.time.Clock"
      uuid: "clock"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Instant"
        method: "ofEpochSecond"
        methodParameters:
        - name: "epochSecond"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1700000000
            valueType: "int"
            uuid: "uniqueUuid9"
            fixed: true
      valueType: "java.time.Instant"
      uuid: "instant"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.metrics.buffering.StartupTimeline"
        parameters:
        - name: "startTime"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Instant"
              method: "ofEpochSecond"
              methodParameters:
              - name: "epochSecond"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 1700000000
                  valueType: "int"
                  fixed: true
            valueType: "java.time.Instant"
            uuid: "instant"
        - name: "events"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters:
              - name: "c"
                value:
                  sapientType: "COLLECTION"
                  content: !<collection>
                    collectionClass: "java.util.concurrent.ConcurrentLinkedQueue"
                    parameters: []
                    values: []
                  valueType: "java.util.concurrent.ConcurrentLinkedQueue"
                  genericValueType: "org.springframework.boot.context.metrics.buffering.StartupTimeline$TimelineEvent"
                  uuid: "concurrentLinkedQueue"
              values: []
            valueType: "java.util.ArrayList"
            uuid: "arrayList"
      valueType: "org.springframework.boot.context.metrics.buffering.StartupTimeline"
      uuid: "startupTimeline"
      fixed: true
- method:
    name: "drainBufferedTimeline"
    sourceCodeSignature: "StartupTimeline drainBufferedTimeline()"
    returnType: "org.springframework.boot.context.metrics.buffering.StartupTimeline"
    instructionFingerprint: "00D66B60A59B2708458C291D1E52D3AF"
  paths:
  - pathId: "path1"
    testPathName: "drainBufferedTimelineWhenIteratorNotHasNext"
    constructorSignature: "<init>(int,java.time.Clock) : void"
    modelFingerprint: "63718549897F7026F0F1C0603191A7C9"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "DD2B4149F895A9B27F31DBB20BB6AAF1"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      name: "clock"
      modelFingerprint: "8B02610D7DAD843B26F9E5D3A8D65ED5"
      valueUuid: "clock"
      methodExercised:
        expression: "instant():instant"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D2D033DC307C1BF6D9BA4B826BB931A0"
      valueUuid: "startupTimeline"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.metrics.buffering.BufferingApplicationStartup"
        parameters:
        - name: "capacity"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "capacity"
        - name: "clock"
          value:
            sapientType: "MOCK"
            valueType: "java.time.Clock"
            uuid: "clock"
      valueType: "org.springframework.boot.context.metrics.buffering.BufferingApplicationStartup"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.time.Clock"
      uuid: "clock"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Instant"
        method: "ofEpochSecond"
        methodParameters:
        - name: "epochSecond"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1700000000
            valueType: "int"
            uuid: "uniqueUuid10"
            fixed: true
      valueType: "java.time.Instant"
      uuid: "instant"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.metrics.buffering.StartupTimeline"
        parameters:
        - name: "startTime"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Instant"
              method: "ofEpochSecond"
              methodParameters:
              - name: "epochSecond"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 1700000000
                  valueType: "int"
                  fixed: true
            valueType: "java.time.Instant"
            uuid: "instant"
        - name: "events"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.context.metrics.buffering.StartupTimeline$TimelineEvent"
            uuid: "arrayList"
      valueType: "org.springframework.boot.context.metrics.buffering.StartupTimeline"
      uuid: "startupTimeline"
      fixed: true
    branches:
    - lineNumber: 165
      expression: "iterator.hasNext()"
      range: "(165,10)-(165,27)"
      evaluatedAs: false
