---
modelFingerprint: "1F9CB98049481900A8FEAAC8D7AFC115"
targetClass:
  fullClassName: "org.springframework.boot.web.client.ClientHttpRequestFactories"
methods:
- method:
    name: "get"
    sourceCodeSignature: "ClientHttpRequestFactory get(ClientHttpRequestFactorySettings\
      \ settings)"
    returnType: "org.springframework.http.client.ClientHttpRequestFactory"
    parameters:
    - name: "settings"
      type: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
    instructionFingerprint: "3055D453322FD009293AE1EEB20AE545"
  paths:
  - pathId: "path1"
    testPathName: "getWhenAPACHE_HTTP_CLIENT_PRESENT"
    modelFingerprint: "774A74EEAB97855BFA88FE3338813785"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "settings"
      modelFingerprint: "A3A7497A608A21017C035BE57E37226A"
      valueUuid: "settings"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "C54F55404453E85FD479FF2EAC99C3CD"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:settings,message:uniqueUuid1):void"
        staticAccess: true
    - type: "STATIC"
      name: "ClientHttpRequestFactories.HttpComponents.class"
      modelFingerprint: "5F7E81FD1531B776B49F76DAF4682D49"
      valueUuid: "ClientHttpRequestFactories.HttpComponents.class"
      methodExercised:
        expression: "get(settings:settings):httpComponentsClientHttpRequestFactory"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "4B094C67FA42FE48D3FEEF0AFB5994E3"
      valueUuid: "httpComponentsClientHttpRequestFactory"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Settings must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactories$HttpComponents"
      uuid: "ClientHttpRequestFactories.HttpComponents.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.client.HttpComponentsClientHttpRequestFactory"
      uuid: "httpComponentsClientHttpRequestFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.client.HttpComponentsClientHttpRequestFactory"
      uuid: "httpComponentsClientHttpRequestFactory"
    branches:
    - lineNumber: 102
      expression: "APACHE_HTTP_CLIENT_PRESENT"
      range: "(102,7)-(102,32)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getWhenJETTY_CLIENT_PRESENT"
    modelFingerprint: "DF49FF6D48C03A6FB38F989B208F96D5"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "settings"
      modelFingerprint: "A3A7497A608A21017C035BE57E37226A"
      valueUuid: "settings"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "C54F55404453E85FD479FF2EAC99C3CD"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:settings,message:uniqueUuid2):void"
        staticAccess: true
    - type: "STATIC"
      name: "ClientHttpRequestFactories.Jetty.class"
      modelFingerprint: "16569165AEC74B7A74F4A38F9EAD9CCD"
      valueUuid: "ClientHttpRequestFactories.Jetty.class"
      methodExercised:
        expression: "get(settings:settings):jettyClientHttpRequestFactory"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "00141BB669B9BE9642A09C8659E3F6CF"
      valueUuid: "jettyClientHttpRequestFactory"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Settings must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactories$Jetty"
      uuid: "ClientHttpRequestFactories.Jetty.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.client.JettyClientHttpRequestFactory"
      uuid: "jettyClientHttpRequestFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.client.JettyClientHttpRequestFactory"
      uuid: "jettyClientHttpRequestFactory"
    branches:
    - lineNumber: 102
      expression: "APACHE_HTTP_CLIENT_PRESENT"
      range: "(102,7)-(102,32)"
      evaluatedAs: false
    - lineNumber: 105
      expression: "JETTY_CLIENT_PRESENT"
      range: "(105,7)-(105,26)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "getWhenOKHTTP_CLIENT_PRESENT"
    modelFingerprint: "6FB8342CE3E45202455C77626E7515D3"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "settings"
      modelFingerprint: "A3A7497A608A21017C035BE57E37226A"
      valueUuid: "settings"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "C54F55404453E85FD479FF2EAC99C3CD"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:settings,message:uniqueUuid3):void"
        staticAccess: true
    - type: "STATIC"
      name: "ClientHttpRequestFactories.OkHttp.class"
      modelFingerprint: "5EB02551B725E1E3F64C495A40342892"
      valueUuid: "ClientHttpRequestFactories.OkHttp.class"
      methodExercised:
        expression: "get(settings:settings):okHttp3ClientHttpRequestFactory"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F8B74E82B42B27F6950C30078F712EF0"
      valueUuid: "okHttp3ClientHttpRequestFactory"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Settings must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactories$OkHttp"
      uuid: "ClientHttpRequestFactories.OkHttp.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.client.OkHttp3ClientHttpRequestFactory"
      uuid: "okHttp3ClientHttpRequestFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.client.OkHttp3ClientHttpRequestFactory"
      uuid: "okHttp3ClientHttpRequestFactory"
    branches:
    - lineNumber: 102
      expression: "APACHE_HTTP_CLIENT_PRESENT"
      range: "(102,7)-(102,32)"
      evaluatedAs: false
    - lineNumber: 105
      expression: "JETTY_CLIENT_PRESENT"
      range: "(105,7)-(105,26)"
      evaluatedAs: false
    - lineNumber: 108
      expression: "OKHTTP_CLIENT_PRESENT"
      range: "(108,7)-(108,27)"
      evaluatedAs: true
  - pathId: "path4"
    testPathName: "getWhenNotOKHTTP_CLIENT_PRESENT"
    modelFingerprint: "86A78438CBE3F2E4F21349BC8CDF4A18"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "settings"
      modelFingerprint: "A3A7497A608A21017C035BE57E37226A"
      valueUuid: "settings"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "C54F55404453E85FD479FF2EAC99C3CD"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:settings,message:uniqueUuid4):void"
        staticAccess: true
    - type: "STATIC"
      name: "ClientHttpRequestFactories.Simple.class"
      modelFingerprint: "D043A377A4F1B835A45850C99937EDFF"
      valueUuid: "ClientHttpRequestFactories.Simple.class"
      methodExercised:
        expression: "get(settings:settings):simpleClientHttpRequestFactory"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6823F5D34E70F228A4BF127DE2CFA2EE"
      valueUuid: "simpleClientHttpRequestFactory"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Settings must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactories$Simple"
      uuid: "ClientHttpRequestFactories.Simple.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.client.SimpleClientHttpRequestFactory"
      uuid: "simpleClientHttpRequestFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.client.SimpleClientHttpRequestFactory"
      uuid: "simpleClientHttpRequestFactory"
    branches:
    - lineNumber: 102
      expression: "APACHE_HTTP_CLIENT_PRESENT"
      range: "(102,7)-(102,32)"
      evaluatedAs: false
    - lineNumber: 105
      expression: "JETTY_CLIENT_PRESENT"
      range: "(105,7)-(105,26)"
      evaluatedAs: false
    - lineNumber: 108
      expression: "OKHTTP_CLIENT_PRESENT"
      range: "(108,7)-(108,27)"
      evaluatedAs: false
- method:
    name: "get"
    sourceCodeSignature: "<T extends ClientHttpRequestFactory> T get(Class<T> requestFactoryType,\
      \ ClientHttpRequestFactorySettings settings)"
    returnType: "org.springframework.http.client.ClientHttpRequestFactory"
    parameters:
    - name: "requestFactoryType"
      type: "java.lang.Class"
    - name: "settings"
      type: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
    instructionFingerprint: "4A22BDF0F781284710E6A0D70BBCDBA0"
  paths:
  - pathId: "path1"
    testPathName: "get1WhenRequestFactoryTypeEqualsClientHttpRequestFactory"
    modelFingerprint: "AFDC7CB0B7E2A125D9CC00C94F044DF6"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "requestFactoryType"
      modelFingerprint: "4FDB6AC49565114AF57105A93F09170D"
      valueUuid: "uniqueUuid5"
    - type: "INPUT"
      name: "settings"
      modelFingerprint: "A3A7497A608A21017C035BE57E37226A"
      valueUuid: "settings"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "C54F55404453E85FD479FF2EAC99C3CD"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:settings,message:uniqueUuid6):void"
        staticAccess: true
    - type: "STATIC"
      name: "ClientHttpRequestFactories.class"
      modelFingerprint: "3483A4E08E6A06B3A505A8197C017C88"
      valueUuid: "ClientHttpRequestFactories.class"
      methodExercised:
        expression: "get(settings:settings):clientHttpRequestFactory"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CAD650C3BB18C261E98A19E69C3CC613"
      valueUuid: "clientHttpRequestFactory"
    disabled: false
    allValues:
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.http.client.ClientHttpRequestFactory"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.http.client.ClientHttpRequestFactory"
      uuid: "uniqueUuid5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Settings must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactories"
      uuid: "ClientHttpRequestFactories.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.client.ClientHttpRequestFactory"
      uuid: "clientHttpRequestFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.client.ClientHttpRequestFactory"
      uuid: "clientHttpRequestFactory"
    branches:
    - lineNumber: 137
      expression: "requestFactoryType == ClientHttpRequestFactory.class"
      range: "(137,7)-(137,58)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "get1WhenRequestFactoryTypeEqualsHttpComponentsClientHttpRequestFactory"
    modelFingerprint: "D26D0CBE4F7EAEED68B90585E06DF149"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "requestFactoryType"
      modelFingerprint: "6353EF2108B23838C202FD20F5169FA0"
      valueUuid: "uniqueUuid7"
    - type: "INPUT"
      name: "settings"
      modelFingerprint: "A3A7497A608A21017C035BE57E37226A"
      valueUuid: "settings"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "C54F55404453E85FD479FF2EAC99C3CD"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:settings,message:uniqueUuid8):void"
        staticAccess: true
    - type: "STATIC"
      name: "ClientHttpRequestFactories.HttpComponents.class"
      modelFingerprint: "5F7E81FD1531B776B49F76DAF4682D49"
      valueUuid: "ClientHttpRequestFactories.HttpComponents.class"
      methodExercised:
        expression: "get(settings:settings):httpComponentsClientHttpRequestFactory"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "4B094C67FA42FE48D3FEEF0AFB5994E3"
      valueUuid: "httpComponentsClientHttpRequestFactory"
    disabled: false
    allValues:
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.http.client.HttpComponentsClientHttpRequestFactory"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.http.client.HttpComponentsClientHttpRequestFactory"
      uuid: "uniqueUuid7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Settings must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactories$HttpComponents"
      uuid: "ClientHttpRequestFactories.HttpComponents.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.client.HttpComponentsClientHttpRequestFactory"
      uuid: "httpComponentsClientHttpRequestFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.client.HttpComponentsClientHttpRequestFactory"
      uuid: "httpComponentsClientHttpRequestFactory"
    branches:
    - lineNumber: 137
      expression: "requestFactoryType == ClientHttpRequestFactory.class"
      range: "(137,7)-(137,58)"
      evaluatedAs: false
    - lineNumber: 140
      expression: "requestFactoryType == HttpComponentsClientHttpRequestFactory.class"
      range: "(140,7)-(140,72)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "get1WhenRequestFactoryTypeEqualsJettyClientHttpRequestFactory"
    modelFingerprint: "B49A79F92CF2AFB121CEBDAF424BA1B8"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "requestFactoryType"
      modelFingerprint: "5F4A4EE11B3D29944FD572106192897F"
      valueUuid: "uniqueUuid9"
    - type: "INPUT"
      name: "settings"
      modelFingerprint: "A3A7497A608A21017C035BE57E37226A"
      valueUuid: "settings"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "C54F55404453E85FD479FF2EAC99C3CD"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:settings,message:uniqueUuid10):void"
        staticAccess: true
    - type: "STATIC"
      name: "ClientHttpRequestFactories.Jetty.class"
      modelFingerprint: "16569165AEC74B7A74F4A38F9EAD9CCD"
      valueUuid: "ClientHttpRequestFactories.Jetty.class"
      methodExercised:
        expression: "get(settings:settings):jettyClientHttpRequestFactory"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "00141BB669B9BE9642A09C8659E3F6CF"
      valueUuid: "jettyClientHttpRequestFactory"
    disabled: false
    allValues:
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.http.client.JettyClientHttpRequestFactory"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.http.client.JettyClientHttpRequestFactory"
      uuid: "uniqueUuid9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Settings must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactories$Jetty"
      uuid: "ClientHttpRequestFactories.Jetty.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.client.JettyClientHttpRequestFactory"
      uuid: "jettyClientHttpRequestFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.client.JettyClientHttpRequestFactory"
      uuid: "jettyClientHttpRequestFactory"
    branches:
    - lineNumber: 137
      expression: "requestFactoryType == ClientHttpRequestFactory.class"
      range: "(137,7)-(137,58)"
      evaluatedAs: false
    - lineNumber: 140
      expression: "requestFactoryType == HttpComponentsClientHttpRequestFactory.class"
      range: "(140,7)-(140,72)"
      evaluatedAs: false
    - lineNumber: 143
      expression: "requestFactoryType == JettyClientHttpRequestFactory.class"
      range: "(143,7)-(143,63)"
      evaluatedAs: true
  - pathId: "path4"
    testPathName: "get1WhenRequestFactoryTypeEqualsJdkClientHttpRequestFactory"
    modelFingerprint: "C2E6005CD282A403E352BB8CB5D15F7D"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "requestFactoryType"
      modelFingerprint: "FD44A8CC5F39D365E89E0368A5175D92"
      valueUuid: "uniqueUuid11"
    - type: "INPUT"
      name: "settings"
      modelFingerprint: "A3A7497A608A21017C035BE57E37226A"
      valueUuid: "settings"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "C54F55404453E85FD479FF2EAC99C3CD"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:settings,message:uniqueUuid12):void"
        staticAccess: true
    - type: "STATIC"
      name: "ClientHttpRequestFactories.Jdk.class"
      modelFingerprint: "2B22AD43EBC816014E152AE04266117E"
      valueUuid: "ClientHttpRequestFactories.Jdk.class"
      methodExercised:
        expression: "get(settings:settings):jdkClientHttpRequestFactory"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D41220D300695B91F0B830DE1CD29CE6"
      valueUuid: "jdkClientHttpRequestFactory"
    disabled: false
    allValues:
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.http.client.JdkClientHttpRequestFactory"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.http.client.JdkClientHttpRequestFactory"
      uuid: "uniqueUuid11"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Settings must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid12"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactories$Jdk"
      uuid: "ClientHttpRequestFactories.Jdk.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.client.JdkClientHttpRequestFactory"
      uuid: "jdkClientHttpRequestFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.client.JdkClientHttpRequestFactory"
      uuid: "jdkClientHttpRequestFactory"
    branches:
    - lineNumber: 137
      expression: "requestFactoryType == ClientHttpRequestFactory.class"
      range: "(137,7)-(137,58)"
      evaluatedAs: false
    - lineNumber: 140
      expression: "requestFactoryType == HttpComponentsClientHttpRequestFactory.class"
      range: "(140,7)-(140,72)"
      evaluatedAs: false
    - lineNumber: 143
      expression: "requestFactoryType == JettyClientHttpRequestFactory.class"
      range: "(143,7)-(143,63)"
      evaluatedAs: false
    - lineNumber: 146
      expression: "requestFactoryType == JdkClientHttpRequestFactory.class"
      range: "(146,7)-(146,61)"
      evaluatedAs: true
  - pathId: "path5"
    testPathName: "get1WhenRequestFactoryTypeEqualsSimpleClientHttpRequestFactory"
    modelFingerprint: "9D0D33BCB7DD4EAAEBAFD5E31502F78A"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "requestFactoryType"
      modelFingerprint: "0D82F5A36EFF7CD1CDC2220E9F29F5C6"
      valueUuid: "uniqueUuid13"
    - type: "INPUT"
      name: "settings"
      modelFingerprint: "A3A7497A608A21017C035BE57E37226A"
      valueUuid: "settings"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "C54F55404453E85FD479FF2EAC99C3CD"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:settings,message:uniqueUuid14):void"
        staticAccess: true
    - type: "STATIC"
      name: "ClientHttpRequestFactories.Simple.class"
      modelFingerprint: "D043A377A4F1B835A45850C99937EDFF"
      valueUuid: "ClientHttpRequestFactories.Simple.class"
      methodExercised:
        expression: "get(settings:settings):simpleClientHttpRequestFactory"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6823F5D34E70F228A4BF127DE2CFA2EE"
      valueUuid: "simpleClientHttpRequestFactory"
    disabled: false
    allValues:
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.http.client.SimpleClientHttpRequestFactory"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.http.client.SimpleClientHttpRequestFactory"
      uuid: "uniqueUuid13"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Settings must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid14"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactories$Simple"
      uuid: "ClientHttpRequestFactories.Simple.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.client.SimpleClientHttpRequestFactory"
      uuid: "simpleClientHttpRequestFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.client.SimpleClientHttpRequestFactory"
      uuid: "simpleClientHttpRequestFactory"
    branches:
    - lineNumber: 137
      expression: "requestFactoryType == ClientHttpRequestFactory.class"
      range: "(137,7)-(137,58)"
      evaluatedAs: false
    - lineNumber: 140
      expression: "requestFactoryType == HttpComponentsClientHttpRequestFactory.class"
      range: "(140,7)-(140,72)"
      evaluatedAs: false
    - lineNumber: 143
      expression: "requestFactoryType == JettyClientHttpRequestFactory.class"
      range: "(143,7)-(143,63)"
      evaluatedAs: false
    - lineNumber: 146
      expression: "requestFactoryType == JdkClientHttpRequestFactory.class"
      range: "(146,7)-(146,61)"
      evaluatedAs: false
    - lineNumber: 149
      expression: "requestFactoryType == SimpleClientHttpRequestFactory.class"
      range: "(149,7)-(149,64)"
      evaluatedAs: true
  - pathId: "path6"
    testPathName: "get1WhenRequestFactoryTypeEqualsOkHttp3ClientHttpRequestFactory"
    modelFingerprint: "10CF663CA83AC313B1BEEEB401B6A62A"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "requestFactoryType"
      modelFingerprint: "C7FBFDDFBCFF2095FD3D95B5C54EF6DF"
      valueUuid: "uniqueUuid15"
    - type: "INPUT"
      name: "settings"
      modelFingerprint: "A3A7497A608A21017C035BE57E37226A"
      valueUuid: "settings"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "C54F55404453E85FD479FF2EAC99C3CD"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:settings,message:uniqueUuid16):void"
        staticAccess: true
    - type: "STATIC"
      name: "ClientHttpRequestFactories.OkHttp.class"
      modelFingerprint: "5EB02551B725E1E3F64C495A40342892"
      valueUuid: "ClientHttpRequestFactories.OkHttp.class"
      methodExercised:
        expression: "get(settings:settings):okHttp3ClientHttpRequestFactory"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F8B74E82B42B27F6950C30078F712EF0"
      valueUuid: "okHttp3ClientHttpRequestFactory"
    disabled: false
    allValues:
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.http.client.OkHttp3ClientHttpRequestFactory"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.http.client.OkHttp3ClientHttpRequestFactory"
      uuid: "uniqueUuid15"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Settings must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid16"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactories$OkHttp"
      uuid: "ClientHttpRequestFactories.OkHttp.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.client.OkHttp3ClientHttpRequestFactory"
      uuid: "okHttp3ClientHttpRequestFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.client.OkHttp3ClientHttpRequestFactory"
      uuid: "okHttp3ClientHttpRequestFactory"
    branches:
    - lineNumber: 137
      expression: "requestFactoryType == ClientHttpRequestFactory.class"
      range: "(137,7)-(137,58)"
      evaluatedAs: false
    - lineNumber: 140
      expression: "requestFactoryType == HttpComponentsClientHttpRequestFactory.class"
      range: "(140,7)-(140,72)"
      evaluatedAs: false
    - lineNumber: 143
      expression: "requestFactoryType == JettyClientHttpRequestFactory.class"
      range: "(143,7)-(143,63)"
      evaluatedAs: false
    - lineNumber: 146
      expression: "requestFactoryType == JdkClientHttpRequestFactory.class"
      range: "(146,7)-(146,61)"
      evaluatedAs: false
    - lineNumber: 149
      expression: "requestFactoryType == SimpleClientHttpRequestFactory.class"
      range: "(149,7)-(149,64)"
      evaluatedAs: false
    - lineNumber: 152
      expression: "requestFactoryType == OkHttp3ClientHttpRequestFactory.class"
      range: "(152,7)-(152,65)"
      evaluatedAs: true
  - pathId: "path7"
    testPathName: "get1WhenRequestFactoryTypeNotEqualsOkHttp3ClientHttpRequestFactory"
    modelFingerprint: "42A6C8FF79BC28CC8D6A277920074243"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "requestFactoryType"
      modelFingerprint: "D3BAFFBFA626285BCE70DCFB1E64737A"
      valueUuid: "requestFactoryType"
    - type: "INPUT"
      name: "settings"
      modelFingerprint: "A3A7497A608A21017C035BE57E37226A"
      valueUuid: "settings"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "C54F55404453E85FD479FF2EAC99C3CD"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:settings,message:uniqueUuid17):void"
        staticAccess: true
    - type: "STATIC"
      name: "ClientHttpRequestFactories.Reflective.class"
      modelFingerprint: "A89F787583DBEBBA2569B183F2E3848C"
      valueUuid: "ClientHttpRequestFactories.Reflective.class"
      methodExercised:
        expression: "get(requestFactorySupplier:uniqueUuid18,settings:settings):clientHttpRequestFactory"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CAD650C3BB18C261E98A19E69C3CC613"
      valueUuid: "clientHttpRequestFactory"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.http.client.ClientHttpRequestFactory"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.http.client.ClientHttpRequestFactory"
      uuid: "requestFactoryType"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Settings must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid17"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactories$Reflective"
      uuid: "ClientHttpRequestFactories.Reflective.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.client.ClientHttpRequestFactory"
      uuid: "clientHttpRequestFactory"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "org.springframework.http.client.ClientHttpRequestFactory"
      uuid: "uniqueUuid18"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.client.ClientHttpRequestFactory"
      uuid: "clientHttpRequestFactory"
    branches:
    - lineNumber: 137
      expression: "requestFactoryType == ClientHttpRequestFactory.class"
      range: "(137,7)-(137,58)"
      evaluatedAs: false
    - lineNumber: 140
      expression: "requestFactoryType == HttpComponentsClientHttpRequestFactory.class"
      range: "(140,7)-(140,72)"
      evaluatedAs: false
    - lineNumber: 143
      expression: "requestFactoryType == JettyClientHttpRequestFactory.class"
      range: "(143,7)-(143,63)"
      evaluatedAs: false
    - lineNumber: 146
      expression: "requestFactoryType == JdkClientHttpRequestFactory.class"
      range: "(146,7)-(146,61)"
      evaluatedAs: false
    - lineNumber: 149
      expression: "requestFactoryType == SimpleClientHttpRequestFactory.class"
      range: "(149,7)-(149,64)"
      evaluatedAs: false
    - lineNumber: 152
      expression: "requestFactoryType == OkHttp3ClientHttpRequestFactory.class"
      range: "(152,7)-(152,65)"
      evaluatedAs: false
    calledSomeStaticInternalMethod: true
- method:
    name: "get"
    sourceCodeSignature: "<T extends ClientHttpRequestFactory> T get(Supplier<T> requestFactorySupplier,\
      \ ClientHttpRequestFactorySettings settings)"
    returnType: "org.springframework.http.client.ClientHttpRequestFactory"
    parameters:
    - name: "requestFactorySupplier"
      type: "java.util.function.Supplier"
    - name: "settings"
      type: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
    instructionFingerprint: "85C4649890D36C85C9FE3722921A3550"
  paths:
  - pathId: "path1"
    testPathName: "get2Test"
    modelFingerprint: "82BA18ABD24450CB696F39E047893097"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "requestFactorySupplier"
      modelFingerprint: "799E9DE7C2F3B1E68FDDFDBB6D10EF68"
      valueUuid: "requestFactorySupplier"
    - type: "INPUT"
      name: "settings"
      modelFingerprint: "A3A7497A608A21017C035BE57E37226A"
      valueUuid: "settings"
    - type: "STATIC"
      name: "ClientHttpRequestFactories.Reflective.class"
      modelFingerprint: "5259AF2C8D20F582156A836AD7B03ACE"
      valueUuid: "ClientHttpRequestFactories.Reflective.class"
      methodExercised:
        expression: "get(requestFactorySupplier:requestFactorySupplier,settings:settings):clientHttpRequestFactory"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CAD650C3BB18C261E98A19E69C3CC613"
      valueUuid: "clientHttpRequestFactory"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "requestFactorySupplier"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactories$Reflective"
      uuid: "ClientHttpRequestFactories.Reflective.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.client.ClientHttpRequestFactory"
      uuid: "clientHttpRequestFactory"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "requestFactorySupplier"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "settings"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.client.ClientHttpRequestFactory"
      uuid: "clientHttpRequestFactory"
