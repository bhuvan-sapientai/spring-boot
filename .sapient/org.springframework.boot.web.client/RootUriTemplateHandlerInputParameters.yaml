---
modelFingerprint: "965F4D634FFF4A9E2DBDD1D95F299576"
targetClass:
  fullClassName: "org.springframework.boot.web.client.RootUriTemplateHandler"
methods:
- method:
    name: "expand"
    sourceCodeSignature: "URI expand(String uriTemplate, Map<String, ?> uriVariables)"
    returnType: "java.net.URI"
    parameters:
    - name: "uriTemplate"
      type: "java.lang.String"
    - name: "uriVariables"
      type: "java.util.Map"
    instructionFingerprint: "F3384AC5ADA51BCA6773E0785E02751F"
  paths:
  - pathId: "path1"
    testPathName: "expandWhenStringUtilsStartsWithIgnoreCaseUriTemplate_"
    constructorSignature: "<init>(java.lang.String,org.springframework.web.util.UriTemplateHandler)\
      \ : void"
    modelFingerprint: "B6374187EE03323462E8B7753D66FD38"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4D981D83821ED0F7EA1848EC446B31E2"
      valueUuid: "target"
    - type: "INPUT"
      name: "uriTemplate"
      modelFingerprint: "3F1BD6B3CA8D217122E7356CF31542AF"
      valueUuid: "uriTemplate"
    - type: "INPUT"
      name: "uriVariables"
      modelFingerprint: "672B4C9539EAF24B6D48B14BBD533B74"
      valueUuid: "uriVariables"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F2AC83B7AA7CAACB8AA58740A433C3A0"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:rootUri,message:uniqueUuid1):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "EAF6EE2B6E821DC10ABAC1E1070084B6"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:handler,message:uniqueUuid2):void2"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "698EC9176A1211A91D78FBFA183BBE3E"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "startsWithIgnoreCase(str:uriTemplate,prefix:uniqueUuid3):boolean1"
        staticAccess: true
    - type: "FIELD"
      name: "handler"
      modelFingerprint: "2E094C2B0AF65458C19425AD0876E3C7"
      valueUuid: "handler"
      methodExercised:
        expression: "expand(uriTemplate:string,uriVariables:uriVariables):uRI"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2CD6DD10ABC23574AE8BE634F7BF6B18"
      valueUuid: "uRI"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.client.RootUriTemplateHandler"
        parameters:
        - name: "rootUri"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "rootUri"
        - name: "handler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.web.util.UriTemplateHandler"
            uuid: "handler"
      valueType: "org.springframework.boot.web.client.RootUriTemplateHandler"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "uriTemplate"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,?"
      uuid: "uriVariables"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "rootUri"
    - sapientType: "BASIC"
      content: !<regular>
        value: "RootUri must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.web.util.UriTemplateHandler"
      uuid: "handler"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Handler must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "uriTemplate"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.web.util.UriTemplateHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.URI"
        method: "create"
        methodParameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "str1"
            valueType: "java.lang.String"
            uuid: "uRI-str"
      valueType: "java.net.URI"
      uuid: "uRI"
    - sapientType: "BASIC"
      content: !<regular>
        value: "AB"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,?"
      uuid: "uriVariables"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.URI"
        method: "create"
        methodParameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "str1"
            valueType: "java.lang.String"
            uuid: "uRI-str"
      valueType: "java.net.URI"
      uuid: "uRI"
    branches:
    - lineNumber: 78
      expression: "StringUtils.startsWithIgnoreCase(uriTemplate, \\\"/\\\")"
      range: "(78,7)-(78,56)"
      evaluatedAs: true
      internalMethodName: "apply"
  - pathId: "path2"
    testPathName: "expandWhenStringUtilsNotStartsWithIgnoreCaseUriTemplate_"
    constructorSignature: "<init>(java.lang.String,org.springframework.web.util.UriTemplateHandler)\
      \ : void"
    modelFingerprint: "8C454FB197087975149C296DC00A05D6"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4D981D83821ED0F7EA1848EC446B31E2"
      valueUuid: "target"
    - type: "INPUT"
      name: "uriTemplate"
      modelFingerprint: "3F1BD6B3CA8D217122E7356CF31542AF"
      valueUuid: "uriTemplate"
    - type: "INPUT"
      name: "uriVariables"
      modelFingerprint: "672B4C9539EAF24B6D48B14BBD533B74"
      valueUuid: "uriVariables"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F2AC83B7AA7CAACB8AA58740A433C3A0"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:rootUri,message:uniqueUuid4):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "EAF6EE2B6E821DC10ABAC1E1070084B6"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:handler,message:uniqueUuid5):void2"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "8C6FFF233670804D3B266A213B340C69"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "startsWithIgnoreCase(str:uriTemplate,prefix:uniqueUuid6):boolean1"
        staticAccess: true
    - type: "FIELD"
      name: "handler"
      modelFingerprint: "A848340B13DE88E0245C5B215C7350E2"
      valueUuid: "handler"
      methodExercised:
        expression: "expand(uriTemplate:uriTemplate,uriVariables:uriVariables):uRI"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2CD6DD10ABC23574AE8BE634F7BF6B18"
      valueUuid: "uRI"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.client.RootUriTemplateHandler"
        parameters:
        - name: "rootUri"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "rootUri"
        - name: "handler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.web.util.UriTemplateHandler"
            uuid: "handler"
      valueType: "org.springframework.boot.web.client.RootUriTemplateHandler"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "uriTemplate"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,?"
      uuid: "uriVariables"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "rootUri"
    - sapientType: "BASIC"
      content: !<regular>
        value: "RootUri must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.web.util.UriTemplateHandler"
      uuid: "handler"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Handler must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "uriTemplate"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.web.util.UriTemplateHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.URI"
        method: "create"
        methodParameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "str1"
            valueType: "java.lang.String"
            uuid: "uRI-str"
      valueType: "java.net.URI"
      uuid: "uRI"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "uriTemplate"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "java.lang.String,?"
      uuid: "uriVariables"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.URI"
        method: "create"
        methodParameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "str1"
            valueType: "java.lang.String"
            uuid: "uRI-str"
      valueType: "java.net.URI"
      uuid: "uRI"
    branches:
    - lineNumber: 78
      expression: "StringUtils.startsWithIgnoreCase(uriTemplate, \\\"/\\\")"
      range: "(78,7)-(78,56)"
      evaluatedAs: false
      internalMethodName: "apply"
- method:
    name: "expand"
    sourceCodeSignature: "URI expand(String uriTemplate, Object... uriVariables)"
    returnType: "java.net.URI"
    parameters:
    - name: "uriTemplate"
      type: "java.lang.String"
    - name: "uriVariables"
      type: "java.lang.Object[]"
    instructionFingerprint: "9DA13AD23EE91A8B9127AB91A54DED91"
  paths:
  - pathId: "path1"
    testPathName: "expand1WhenStringUtilsStartsWithIgnoreCaseUriTemplate_"
    constructorSignature: "<init>(java.lang.String,org.springframework.web.util.UriTemplateHandler)\
      \ : void"
    modelFingerprint: "33BF96D98EF620572D20088C102E90BF"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4D981D83821ED0F7EA1848EC446B31E2"
      valueUuid: "target"
    - type: "INPUT"
      name: "uriTemplate"
      modelFingerprint: "3F1BD6B3CA8D217122E7356CF31542AF"
      valueUuid: "uriTemplate"
    - type: "INPUT"
      name: "uriVariables"
      modelFingerprint: "E63B27B702E1AFFCFC01BE006B8C2582"
      valueUuid: "uriVariables"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F2AC83B7AA7CAACB8AA58740A433C3A0"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:rootUri,message:uniqueUuid7):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "EAF6EE2B6E821DC10ABAC1E1070084B6"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:handler,message:uniqueUuid8):void2"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "698EC9176A1211A91D78FBFA183BBE3E"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "startsWithIgnoreCase(str:uriTemplate,prefix:uniqueUuid9):boolean1"
        staticAccess: true
    - type: "FIELD"
      name: "handler"
      modelFingerprint: "340A33598A4A20053DCFE3838C03F05C"
      valueUuid: "handler"
      methodExercised:
        expression: "expand(uriTemplate:string,uriVariables:uriVariables):uRI"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2CD6DD10ABC23574AE8BE634F7BF6B18"
      valueUuid: "uRI"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.client.RootUriTemplateHandler"
        parameters:
        - name: "rootUri"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "rootUri"
        - name: "handler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.web.util.UriTemplateHandler"
            uuid: "handler"
      valueType: "org.springframework.boot.web.client.RootUriTemplateHandler"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "uriTemplate"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "uriVariables"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "rootUri"
    - sapientType: "BASIC"
      content: !<regular>
        value: "RootUri must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.web.util.UriTemplateHandler"
      uuid: "handler"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Handler must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "uriTemplate"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/"
      valueType: "java.lang.String"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.web.util.UriTemplateHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.URI"
        method: "create"
        methodParameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "str1"
            valueType: "java.lang.String"
            uuid: "uRI-str"
      valueType: "java.net.URI"
      uuid: "uRI"
    - sapientType: "BASIC"
      content: !<regular>
        value: "AB"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "uriVariables"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.URI"
        method: "create"
        methodParameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "str1"
            valueType: "java.lang.String"
            uuid: "uRI-str"
      valueType: "java.net.URI"
      uuid: "uRI"
    branches:
    - lineNumber: 78
      expression: "StringUtils.startsWithIgnoreCase(uriTemplate, \\\"/\\\")"
      range: "(78,7)-(78,56)"
      evaluatedAs: true
      internalMethodName: "apply"
  - pathId: "path2"
    testPathName: "expand1WhenStringUtilsNotStartsWithIgnoreCaseUriTemplate_"
    constructorSignature: "<init>(java.lang.String,org.springframework.web.util.UriTemplateHandler)\
      \ : void"
    modelFingerprint: "DD265179912B6A45F8E2C9F00B5047EB"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4D981D83821ED0F7EA1848EC446B31E2"
      valueUuid: "target"
    - type: "INPUT"
      name: "uriTemplate"
      modelFingerprint: "3F1BD6B3CA8D217122E7356CF31542AF"
      valueUuid: "uriTemplate"
    - type: "INPUT"
      name: "uriVariables"
      modelFingerprint: "E63B27B702E1AFFCFC01BE006B8C2582"
      valueUuid: "uriVariables"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F2AC83B7AA7CAACB8AA58740A433C3A0"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:rootUri,message:uniqueUuid10):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "EAF6EE2B6E821DC10ABAC1E1070084B6"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:handler,message:uniqueUuid11):void2"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "8C6FFF233670804D3B266A213B340C69"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "startsWithIgnoreCase(str:uriTemplate,prefix:uniqueUuid12):boolean1"
        staticAccess: true
    - type: "FIELD"
      name: "handler"
      modelFingerprint: "63123C374C89BA4F2D7B2F18102AA364"
      valueUuid: "handler"
      methodExercised:
        expression: "expand(uriTemplate:uriTemplate,uriVariables:uriVariables):uRI"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2CD6DD10ABC23574AE8BE634F7BF6B18"
      valueUuid: "uRI"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.client.RootUriTemplateHandler"
        parameters:
        - name: "rootUri"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "rootUri"
        - name: "handler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.web.util.UriTemplateHandler"
            uuid: "handler"
      valueType: "org.springframework.boot.web.client.RootUriTemplateHandler"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "uriTemplate"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "uriVariables"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "rootUri"
    - sapientType: "BASIC"
      content: !<regular>
        value: "RootUri must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.web.util.UriTemplateHandler"
      uuid: "handler"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Handler must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "uriTemplate"
    - sapientType: "BASIC"
      content: !<regular>
        value: "/"
      valueType: "java.lang.String"
      uuid: "uniqueUuid12"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.web.util.UriTemplateHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.URI"
        method: "create"
        methodParameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "str1"
            valueType: "java.lang.String"
            uuid: "uRI-str"
      valueType: "java.net.URI"
      uuid: "uRI"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "uriTemplate"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "uriVariables"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.URI"
        method: "create"
        methodParameters:
        - name: "str"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "str1"
            valueType: "java.lang.String"
            uuid: "uRI-str"
      valueType: "java.net.URI"
      uuid: "uRI"
    branches:
    - lineNumber: 78
      expression: "StringUtils.startsWithIgnoreCase(uriTemplate, \\\"/\\\")"
      range: "(78,7)-(78,56)"
      evaluatedAs: false
      internalMethodName: "apply"
- method:
    name: "getRootUri"
    sourceCodeSignature: "String getRootUri()"
    returnType: "java.lang.String"
    instructionFingerprint: "601A5F58F973C90CC1719D387F9E04A6"
  paths:
  - pathId: "path1"
    testPathName: "getRootUriTest"
    constructorSignature: "<init>(java.lang.String,org.springframework.web.util.UriTemplateHandler)\
      \ : void"
    modelFingerprint: "5994A9EC9D42B17CDB697E1D5FA37D1E"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "withHandlerWrapper"
    sourceCodeSignature: "RootUriTemplateHandler withHandlerWrapper(Function<UriTemplateHandler,\
      \ UriTemplateHandler> wrapper)"
    returnType: "org.springframework.boot.web.client.RootUriTemplateHandler"
    parameters:
    - name: "wrapper"
      type: "java.util.function.Function"
    instructionFingerprint: "090DA27FD5A09453A52245112761CA4D"
  paths:
  - pathId: "path1"
    testPathName: "withHandlerWrapperTest"
    constructorSignature: "<init>(java.lang.String,org.springframework.web.util.UriTemplateHandler)\
      \ : void"
    modelFingerprint: "169ADC4CDEB4545B6AC952E38B088334"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9588F12D6091C870A6E531A2CBE0BDA5"
      valueUuid: "target"
    - type: "INPUT"
      name: "wrapper"
      modelFingerprint: "1CF72627F3927C7631E73950B0CE7A59"
      valueUuid: "wrapper"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F2AC83B7AA7CAACB8AA58740A433C3A0"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:rootUri,message:uniqueUuid15):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "576502A6BB4783A077BCDD040BCC3E97"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:handler,message:uniqueUuid16):void2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F2AC83B7AA7CAACB8AA58740A433C3A0"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:rootUri,message:uniqueUuid17):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F70AC2C27AA7ADE5F8435E2E4EFF2E55"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid18):void4"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0C42A7CB7F2D06179E2900E09EC73648"
      valueUuid: "rootUriTemplateHandler2"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Function.apply(org.springframework.web.util.UriTemplateHandler)\
        \ : java.lang.Object"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.client.RootUriTemplateHandler"
        parameters:
        - name: "rootUri"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "rootUri"
        - name: "handler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.web.util.UriTemplateHandler"
            uuid: "handler"
      valueType: "org.springframework.boot.web.client.RootUriTemplateHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.util.function.Function"
      uuid: "wrapper"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "rootUri"
    - sapientType: "BASIC"
      content: !<regular>
        value: "RootUri must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid15"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.web.util.UriTemplateHandler"
      uuid: "handler"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Handler must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid16"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "rootUri"
    - sapientType: "BASIC"
      content: !<regular>
        value: "RootUri must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid17"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.web.util.UriTemplateHandler"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Handler must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid18"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.client.RootUriTemplateHandler"
        parameters:
        - name: "rootUri"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "rootUri"
        - name: "handler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.web.util.UriTemplateHandler"
            uuid: "object"
            explicitCastNeeded: true
      valueType: "org.springframework.boot.web.client.RootUriTemplateHandler"
      uuid: "rootUriTemplateHandler2"
      fixed: true
- method:
    name: "addTo"
    sourceCodeSignature: "RootUriTemplateHandler addTo(RestTemplate restTemplate,\
      \ String rootUri)"
    returnType: "org.springframework.boot.web.client.RootUriTemplateHandler"
    parameters:
    - name: "restTemplate"
      type: "org.springframework.web.client.RestTemplate"
    - name: "rootUri"
      type: "java.lang.String"
    instructionFingerprint: "4D7AA3B42B29EEDE48C73573DF76C74E"
  paths:
  - pathId: "path1"
    testPathName: "addToTest"
    modelFingerprint: "0F6F553B7E8D0EC0D73455D1444C2748"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "restTemplate"
      modelFingerprint: "16179A82D82CD5A7B4BE244B74266BB4"
      valueUuid: "restTemplate"
    - type: "INPUT"
      name: "rootUri"
      modelFingerprint: "419F44D570F4EBF57E2444C4E4B0E914"
      valueUuid: "rootUri"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "E3D864D5A7A4C46263BB16F99F0463B4"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:restTemplate,message:uniqueUuid19):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "restTemplate"
      modelFingerprint: "651E4A452AF6DD06F36E19E1667DF960"
      valueUuid: "restTemplate"
      methodExercised:
        expression: "getUriTemplateHandler():uriTemplateHandler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F2AC83B7AA7CAACB8AA58740A433C3A0"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:rootUri,message:uniqueUuid20):void2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F70AC2C27AA7ADE5F8435E2E4EFF2E55"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:uriTemplateHandler,message:uniqueUuid21):void3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "restTemplate"
      modelFingerprint: "29C4046CE4EA68E435BB842B35622E68"
      valueUuid: "restTemplate"
      methodExercised:
        expression: "setUriTemplateHandler(handler:rootUriTemplateHandler):void4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0C42A7CB7F2D06179E2900E09EC73648"
      valueUuid: "rootUriTemplateHandler"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.web.client.RestTemplate"
      uuid: "restTemplate"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "rootUri"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.web.client.RestTemplate"
      uuid: "restTemplate"
    - sapientType: "BASIC"
      content: !<regular>
        value: "RestTemplate must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid19"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.web.client.RestTemplate"
      uuid: "restTemplate"
    - sapientType: "MOCK"
      valueType: "org.springframework.web.util.UriTemplateHandler"
      uuid: "uriTemplateHandler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "rootUri"
    - sapientType: "BASIC"
      content: !<regular>
        value: "RootUri must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid20"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.web.util.UriTemplateHandler"
      uuid: "uriTemplateHandler"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Handler must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid21"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.web.client.RestTemplate"
      uuid: "restTemplate"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.client.RootUriTemplateHandler"
        parameters:
        - name: "rootUri"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "rootUri"
        - name: "handler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.web.util.UriTemplateHandler"
            uuid: "uriTemplateHandler"
      valueType: "org.springframework.boot.web.client.RootUriTemplateHandler"
      uuid: "rootUriTemplateHandler"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.client.RootUriTemplateHandler"
        parameters:
        - name: "rootUri"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "rootUri"
        - name: "handler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.web.util.UriTemplateHandler"
            uuid: "uriTemplateHandler"
      valueType: "org.springframework.boot.web.client.RootUriTemplateHandler"
      uuid: "rootUriTemplateHandler"
      fixed: true
