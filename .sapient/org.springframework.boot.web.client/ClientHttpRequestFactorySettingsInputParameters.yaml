---
modelFingerprint: "BA2BB088C8EFEB4E4A4112387D2F5C25"
targetClass:
  fullClassName: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
methods:
- method:
    name: "withConnectTimeout"
    sourceCodeSignature: "ClientHttpRequestFactorySettings withConnectTimeout(Duration\
      \ connectTimeout)"
    returnType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
    parameters:
    - name: "connectTimeout"
      type: "java.time.Duration"
    instructionFingerprint: "73534317F94275A56B8F75B676295D51"
  paths:
  - pathId: "path1"
    testPathName: "withConnectTimeoutTest"
    constructorSignature: "<init>(java.time.Duration,java.time.Duration,org.springframework.boot.ssl.SslBundle)\
      \ : void"
    modelFingerprint: "BB5FDF23135F950CA49F60AA20CB4F86"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "DB7F20F169815AECAABEFD15C1C36251"
      valueUuid: "target"
    - type: "INPUT"
      name: "connectTimeout"
      modelFingerprint: "82643A0E952D68E3A298A3509907B05F"
      valueUuid: "connectTimeout"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D06438E1950346B61B49C8086B0FFD0C"
      valueUuid: "clientHttpRequestFactorySettings5"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
        parameters:
        - name: "connectTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "connectTimeout2-days"
            valueType: "java.time.Duration"
            uuid: "connectTimeout2"
        - name: "readTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "readTimeout-days"
            valueType: "java.time.Duration"
            uuid: "readTimeout"
        - name: "sslBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "sslBundle"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "connectTimeout-days"
      valueType: "java.time.Duration"
      uuid: "connectTimeout"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
        parameters:
        - name: "connectTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "connectTimeout-days"
            valueType: "java.time.Duration"
            uuid: "connectTimeout"
        - name: "readTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "readTimeout-days"
            valueType: "java.time.Duration"
            uuid: "readTimeout"
        - name: "sslBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "sslBundle"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "clientHttpRequestFactorySettings5"
      fixed: true
- method:
    name: "withReadTimeout"
    sourceCodeSignature: "ClientHttpRequestFactorySettings withReadTimeout(Duration\
      \ readTimeout)"
    returnType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
    parameters:
    - name: "readTimeout"
      type: "java.time.Duration"
    instructionFingerprint: "3A09AB8C2DDE1CFBD6F5158EA0E82BFF"
  paths:
  - pathId: "path1"
    testPathName: "withReadTimeoutTest"
    constructorSignature: "<init>(java.time.Duration,java.time.Duration,org.springframework.boot.ssl.SslBundle)\
      \ : void"
    modelFingerprint: "A69731DD7B622C0BA7E96A42E2FA5EDD"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "DB7F20F169815AECAABEFD15C1C36251"
      valueUuid: "target"
    - type: "INPUT"
      name: "readTimeout"
      modelFingerprint: "7D35425266A37454729850071E0251DD"
      valueUuid: "readTimeout"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D06438E1950346B61B49C8086B0FFD0C"
      valueUuid: "clientHttpRequestFactorySettings5"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
        parameters:
        - name: "connectTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "connectTimeout-days"
            valueType: "java.time.Duration"
            uuid: "connectTimeout"
        - name: "readTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "readTimeout2-days"
            valueType: "java.time.Duration"
            uuid: "readTimeout2"
        - name: "sslBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "sslBundle"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofDays"
        methodParameters:
        - name: "days"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "readTimeout-days"
      valueType: "java.time.Duration"
      uuid: "readTimeout"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
        parameters:
        - name: "connectTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "connectTimeout-days"
            valueType: "java.time.Duration"
            uuid: "connectTimeout"
        - name: "readTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "readTimeout-days"
            valueType: "java.time.Duration"
            uuid: "readTimeout"
        - name: "sslBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "sslBundle"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "clientHttpRequestFactorySettings5"
      fixed: true
- method:
    name: "withBufferRequestBody"
    sourceCodeSignature: "ClientHttpRequestFactorySettings withBufferRequestBody(Boolean\
      \ bufferRequestBody)"
    returnType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
    parameters:
    - name: "bufferRequestBody"
      type: "java.lang.Boolean"
    instructionFingerprint: "5AD3D244167077450592EB50806CF030"
  paths:
  - pathId: "path1"
    testPathName: "withBufferRequestBodyTest"
    constructorSignature: "<init>(java.time.Duration,java.time.Duration,org.springframework.boot.ssl.SslBundle)\
      \ : void"
    modelFingerprint: "F726E3F8F39711B16436973E490000C1"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "DB7F20F169815AECAABEFD15C1C36251"
      valueUuid: "target"
    - type: "INPUT"
      name: "bufferRequestBody"
      modelFingerprint: "2D0EEF06CE7EC61FF669D59A5BBBAD37"
      valueUuid: "bufferRequestBody"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7E2D4121F2DED9E2947FA7C6296B25CB"
      valueUuid: "targetClassObject"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
        parameters:
        - name: "connectTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "connectTimeout-days"
            valueType: "java.time.Duration"
            uuid: "connectTimeout"
        - name: "readTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "readTimeout-days"
            valueType: "java.time.Duration"
            uuid: "readTimeout"
        - name: "sslBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "sslBundle"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "bufferRequestBody"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "targetClassObject"
      fixed: true
- method:
    name: "withSslBundle"
    sourceCodeSignature: "ClientHttpRequestFactorySettings withSslBundle(SslBundle\
      \ sslBundle)"
    returnType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
    parameters:
    - name: "sslBundle"
      type: "org.springframework.boot.ssl.SslBundle"
    instructionFingerprint: "28F3F8B7428C678E1E4453F61F3831B6"
  paths:
  - pathId: "path1"
    testPathName: "withSslBundleTest"
    constructorSignature: "<init>(java.time.Duration,java.time.Duration,org.springframework.boot.ssl.SslBundle)\
      \ : void"
    modelFingerprint: "913A5D31E9288C0E985AA7E7622B1896"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "DB7F20F169815AECAABEFD15C1C36251"
      valueUuid: "target"
    - type: "INPUT"
      name: "sslBundle"
      modelFingerprint: "342B5E5262471CA8C6BA381A510A52AA"
      valueUuid: "sslBundle"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D06438E1950346B61B49C8086B0FFD0C"
      valueUuid: "clientHttpRequestFactorySettings5"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
        parameters:
        - name: "connectTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "connectTimeout-days"
            valueType: "java.time.Duration"
            uuid: "connectTimeout"
        - name: "readTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "readTimeout-days"
            valueType: "java.time.Duration"
            uuid: "readTimeout"
        - name: "sslBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "sslBundle2"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
        parameters:
        - name: "connectTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "connectTimeout-days"
            valueType: "java.time.Duration"
            uuid: "connectTimeout"
        - name: "readTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "readTimeout-days"
            valueType: "java.time.Duration"
            uuid: "readTimeout"
        - name: "sslBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "sslBundle"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "clientHttpRequestFactorySettings5"
      fixed: true
- method:
    name: "bufferRequestBody"
    sourceCodeSignature: "Boolean bufferRequestBody()"
    returnType: "java.lang.Boolean"
    instructionFingerprint: "712056B9C80562CDAF99F296FC5A40E8"
  paths:
  - pathId: "path1"
    testPathName: "bufferRequestBodyTest"
    constructorSignature: "<init>(java.time.Duration,java.time.Duration,org.springframework.boot.ssl.SslBundle)\
      \ : void"
    modelFingerprint: "31BDEEA5D0A0A62667A6DD0B0964EFE5"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "DB7F20F169815AECAABEFD15C1C36251"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "22CAA21532BE1F7B8A04B416D8746CBE"
      valueUuid: "boolean"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
        parameters:
        - name: "connectTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "connectTimeout-days"
            valueType: "java.time.Duration"
            uuid: "connectTimeout"
        - name: "readTimeout"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.time.Duration"
              method: "ofDays"
              methodParameters:
              - name: "days"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 0
                  valueType: "long"
                  uuid: "readTimeout-days"
            valueType: "java.time.Duration"
            uuid: "readTimeout"
        - name: "sslBundle"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundle"
            uuid: "sslBundle"
      valueType: "org.springframework.boot.web.client.ClientHttpRequestFactorySettings"
      uuid: "target"
    - sapientType: "NULL"
      valueType: "java.lang.Boolean"
      uuid: "boolean"
      fixed: true
