---
modelFingerprint: "E359D74EBCF5DBDE42F256941B2F36CF"
methods:
- method:
    name: "applyTo"
    signature: "applyTo(org.springframework.http.HttpHeaders) : void"
    sourceCodeSignature: "void applyTo(HttpHeaders headers)"
    instructionFingerprint: "065BE6836CF94714972B1D2B50B427E2"
  paths:
  - pathId: "path1"
    testPathName: "applyToWhenHeadersNotContainsKeyHttpHeadersAUTHORIZATION"
    constructorSignature: "<init>(java.lang.String,java.lang.String,java.nio.charset.Charset)\
      \ : void"
    modelFingerprint: "79FF5239B0516A3F1DC4925C02D2C924"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9FEE6B38B0FA7543026B5F7C5E3443A0"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "headers"
      modelFingerprint: "22CAE10B849C99FB0F219194F0D8D032"
      index: 2
      valueUuid: "applyTo_httpHeaders1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "03AD36CC20D18DF6347B2EF4A1A448C3"
      index: 3
      valueUuid: "uuid2"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "<init>_string1"
        - name: "message"
          valueUuid: "uuid1"
        signature: "notNull(String,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "3817CA97BDD1AF717E57940F5D7D0C1F"
      index: 4
      valueUuid: "uuid4"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "<init>_string2"
        - name: "message"
          valueUuid: "uuid3"
        signature: "notNull(String,String): void"
        returnValueUuid: "<init>_void2"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "headers"
      modelFingerprint: "CF881EED086F06F0D680BB5BC5AA9ECD"
      index: 5
      valueUuid: "applyTo_httpHeaders1"
      methodExercised:
        target: "headers"
        name: "containsKey"
        parameters:
        - name: "key"
          valueUuid: "uuid5"
        signature: "containsKey(String): boolean"
        returnValueUuid: "applyTo_boolean1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "headers"
      modelFingerprint: "13808BD42F0F9EA005CB8BBC43E6EB2B"
      index: 6
      valueUuid: "applyTo_httpHeaders1"
      methodExercised:
        target: "headers"
        name: "setBasicAuth"
        parameters:
        - name: "username"
          valueUuid: "<init>_string1"
        - name: "password"
          valueUuid: "<init>_string2"
        - name: "charset"
          valueUuid: "<init>_charset1"
        signature: "setBasicAuth(String,String,Charset): void"
        returnValueUuid: "applyTo_void1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 7
      valueUuid: "uuid6"
    uuid: "698d39a7-d7cc-3b02-bb9a-83d72b2dc320"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.http.HttpHeaders.setBasicAuth(java.lang.String,java.lang.String,java.nio.charset.Charset)\
        \ : void"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.client.BasicAuthentication"
        parameters:
        - name: "username"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "exampleUsername"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "password"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "examplePassword"
            valueType: "java.lang.String"
            uuid: "<init>_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "charset"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.nio.charset.Charset"
              method: "defaultCharset"
              methodParameters: []
            valueType: "java.nio.charset.Charset"
            uuid: "<init>_charset1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.web.client.BasicAuthentication"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "org.springframework.http.HttpHeaders"
      uuid: "applyTo_httpHeaders1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "exampleUsername"
      valueType: "java.lang.String"
      uuid: "<init>_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Username must not be null"
      valueType: "java.lang.String"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "examplePassword"
      valueType: "java.lang.String"
      uuid: "<init>_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Password must not be null"
      valueType: "java.lang.String"
      uuid: "uuid3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "org.springframework.http.HttpHeaders"
      uuid: "applyTo_httpHeaders1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "applyTo_boolean1"
      fixed: false
      collectionUuid: "applyTo_httpHeaders1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Authorization"
      valueType: "java.lang.String"
      uuid: "uuid5"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "org.springframework.http.HttpHeaders"
      uuid: "applyTo_httpHeaders1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "applyTo_void1"
      fixed: true
      collectionUuid: "applyTo_httpHeaders1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "exampleUsername"
      valueType: "java.lang.String"
      uuid: "<init>_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "examplePassword"
      valueType: "java.lang.String"
      uuid: "<init>_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.nio.charset.Charset"
        method: "defaultCharset"
        methodParameters: []
      valueType: "java.nio.charset.Charset"
      uuid: "<init>_charset1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid6"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "applyToWhenHeadersContainsKeyHttpHeadersAUTHORIZATION"
    constructorSignature: "<init>(java.lang.String,java.lang.String,java.nio.charset.Charset)\
      \ : void"
    modelFingerprint: "F6F1C5784EC78A32786345E3282265F9"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "8819b4c9-04fc-37dc-9422-ef595a0f3fc3"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
