---
modelFingerprint: "B48810FBA40A5AEA3CB6EE7B4C481ECF"
targetClass:
  fullClassName: "org.springframework.boot.web.client.BasicAuthentication"
methods:
- method:
    name: "applyTo"
    sourceCodeSignature: "void applyTo(HttpHeaders headers)"
    returnType: "void"
    parameters:
    - name: "headers"
      type: "org.springframework.http.HttpHeaders"
    instructionFingerprint: "065BE6836CF94714972B1D2B50B427E2"
  paths:
  - pathId: "path1"
    testPathName: "applyToWhenHeadersNotContainsKeyHttpHeadersAUTHORIZATION"
    constructorSignature: "<init>(java.lang.String,java.lang.String,java.nio.charset.Charset)\
      \ : void"
    modelFingerprint: "0FB27C33AB4CF835A09340300D5E5C23"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6BB37A0307A2235617DC6C85B42922CF"
      valueUuid: "target"
    - type: "INPUT"
      name: "headers"
      modelFingerprint: "8CB57427062C6E454FE50703C25F0873"
      valueUuid: "headers"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "DEF3E937415D400377D2C2452CAE6B12"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:username,message:uniqueUuid1):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "738EB009F1E15F24C35AF2D17704B2F7"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:password,message:uniqueUuid2):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "headers"
      modelFingerprint: "2440AC11975382C137CA3138C8C1E972"
      valueUuid: "headers"
      methodExercised:
        expression: "containsKey(key:uniqueUuid3):boolean1"
    - type: "LOCAL_VARIABLE"
      name: "headers"
      modelFingerprint: "C73B5FA77DC0AC8E8347FFFF2D8089FF"
      valueUuid: "headers"
      methodExercised:
        expression: "setBasicAuth(username:username,password:password,charset:charset):void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.http.HttpHeaders.setBasicAuth(java.lang.String,java.lang.String,java.nio.charset.Charset)\
        \ : void"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.client.BasicAuthentication"
        parameters:
        - name: "username"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "username"
        - name: "password"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "password"
        - name: "charset"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.nio.charset.Charset"
              method: "defaultCharset"
              methodParameters: []
            valueType: "java.nio.charset.Charset"
            uuid: "charset"
      valueType: "org.springframework.boot.web.client.BasicAuthentication"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "org.springframework.http.HttpHeaders"
      uuid: "headers"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "username"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Username must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "password"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Password must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "org.springframework.http.HttpHeaders"
      uuid: "headers"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
      collectionUuid: "headers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Authorization"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "org.springframework.http.HttpHeaders"
      uuid: "headers"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
      collectionUuid: "headers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "username"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "password"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.nio.charset.Charset"
        method: "defaultCharset"
        methodParameters: []
      valueType: "java.nio.charset.Charset"
      uuid: "charset"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 47
      expression: "!headers.containsKey(HttpHeaders.AUTHORIZATION)"
      range: "(47,7)-(47,53)"
      evaluatedAs: true
