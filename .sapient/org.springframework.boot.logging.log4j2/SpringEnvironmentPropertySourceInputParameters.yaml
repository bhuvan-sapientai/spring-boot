---
modelFingerprint: "918F23CABEF7DA3909FA46DB7F267EFE"
targetClass:
  fullClassName: "org.springframework.boot.logging.log4j2.SpringEnvironmentPropertySource"
methods:
- method:
    name: "getPriority"
    sourceCodeSignature: "int getPriority()"
    returnType: "int"
    instructionFingerprint: "2FBDB3543CE71261301D6ADCCF1F7246"
  paths:
  - pathId: "path1"
    testPathName: "getPriorityTest"
    constructorSignature: "<init>(org.springframework.core.env.Environment) : void"
    modelFingerprint: "BC7F791060A9869282B77983D6ADA712"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getProperty"
    sourceCodeSignature: "String getProperty(String key)"
    returnType: "java.lang.String"
    parameters:
    - name: "key"
      type: "java.lang.String"
    instructionFingerprint: "6B67649ABEACBE03B97B35E99C0CEF91"
  paths:
  - pathId: "path1"
    testPathName: "getPropertyTest"
    constructorSignature: "<init>(org.springframework.core.env.Environment) : void"
    modelFingerprint: "A8DB275C054CF23C93C47391F3E0667F"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E8ED2DF3066072F3BA6F654F8B0A085A"
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "A4B031520ABEDE26EA7F395AC59F72CE"
      valueUuid: "key"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "59F7BDB38F63E4E284CC4030BEED64E2"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:environment,message:uniqueUuid2):void"
        staticAccess: true
    - type: "FIELD"
      name: "environment"
      modelFingerprint: "EFA36EBC3C5E43EB70B1E1CA5C4B366E"
      valueUuid: "environment"
      methodExercised:
        expression: "getProperty(key:key):string"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D446A609419428DDEAA49A58091F3986"
      valueUuid: "string"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.SpringEnvironmentPropertySource"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
      valueType: "org.springframework.boot.logging.log4j2.SpringEnvironmentPropertySource"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "key"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Environment must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "key"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string"
- method:
    name: "containsProperty"
    sourceCodeSignature: "boolean containsProperty(String key)"
    returnType: "boolean"
    parameters:
    - name: "key"
      type: "java.lang.String"
    instructionFingerprint: "91933F0186E7671C46ADEDB6337C0F5B"
  paths:
  - pathId: "path1"
    testPathName: "containsPropertyWhenThisEnvironmentContainsPropertyKey"
    constructorSignature: "<init>(org.springframework.core.env.Environment) : void"
    modelFingerprint: "931DC154294996EAC852AAD1E4E88D5C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E8ED2DF3066072F3BA6F654F8B0A085A"
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "A4B031520ABEDE26EA7F395AC59F72CE"
      valueUuid: "key"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "59F7BDB38F63E4E284CC4030BEED64E2"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:environment,message:uniqueUuid3):void"
        staticAccess: true
    - type: "FIELD"
      name: "environment"
      modelFingerprint: "F2CD80D9C427C6786B7D7AC26F0C03F0"
      valueUuid: "environment"
      methodExercised:
        expression: "containsProperty(key:key):boolean1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "boolean1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.SpringEnvironmentPropertySource"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
      valueType: "org.springframework.boot.logging.log4j2.SpringEnvironmentPropertySource"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "key"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Environment must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "key"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
      fixed: true
    branches:
    - lineNumber: 55
      expression: "this.environment.containsProperty(key)"
      range: "(55,10)-(55,47)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "containsPropertyWhenThisEnvironmentNotContainsPropertyKey"
    constructorSignature: "<init>(org.springframework.core.env.Environment) : void"
    modelFingerprint: "7A79FBE6C4F4FB0ECF2285ED7FAA0B17"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E8ED2DF3066072F3BA6F654F8B0A085A"
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "A4B031520ABEDE26EA7F395AC59F72CE"
      valueUuid: "key"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "59F7BDB38F63E4E284CC4030BEED64E2"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:environment,message:uniqueUuid4):void"
        staticAccess: true
    - type: "FIELD"
      name: "environment"
      modelFingerprint: "F81675451F7F85D305DBBA41A51E8714"
      valueUuid: "environment"
      methodExercised:
        expression: "containsProperty(key:key):boolean1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "boolean1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.SpringEnvironmentPropertySource"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
      valueType: "org.springframework.boot.logging.log4j2.SpringEnvironmentPropertySource"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "key"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Environment must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "key"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
      fixed: true
    branches:
    - lineNumber: 55
      expression: "this.environment.containsProperty(key)"
      range: "(55,10)-(55,47)"
      evaluatedAs: false
