---
modelFingerprint: "E200349CABDD4D9AE1EAB9B626063045"
methods:
- method:
    name: "getStandardConfigLocations"
    signature: "getStandardConfigLocations() : java.lang.String[]"
    sourceCodeSignature: "String[] getStandardConfigLocations()"
    instructionFingerprint: "98207F379D5789A6F92C866FE479EB90"
  paths:
  - pathId: "path1"
    testPathName: "getStandardConfigLocationsWhenPropertyDefinedLocationIsNull"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "AC7A746EEF3EB1F7F7ABE2CA24E09A50"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "33DBE822B0169F56403B38D4655C1973"
      index: 1
      valueUuid: "target"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "8DDA9F84857B782B516959A9F594DD7E"
      index: 2
      methodExercised:
        target: "target"
        name: "isClassAvailable"
        parameters:
        - name: "className"
          valueUuid: "uuid1"
        signature: "isClassAvailable(String): boolean"
        returnValueUuid: "getStandardConfigLocations_boolean2"
        access: 4
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "C03263D18DA6C8C6132E4BEA6B186E33"
      index: 3
      methodExercised:
        target: "target"
        name: "isClassAvailable"
        parameters:
        - name: "className"
          valueUuid: "uuid2"
        signature: "isClassAvailable(String): boolean"
        returnValueUuid: "getStandardConfigLocations_boolean4"
        access: 4
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "8DDA9F84857B782B516959A9F594DD7E"
      index: 4
      methodExercised:
        target: "target"
        name: "isClassAvailable"
        parameters:
        - name: "className"
          valueUuid: "uuid3"
        signature: "isClassAvailable(String): boolean"
        returnValueUuid: "getStandardConfigLocations_boolean8"
        access: 4
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "C03263D18DA6C8C6132E4BEA6B186E33"
      index: 5
      methodExercised:
        target: "target"
        name: "isClassAvailable"
        parameters:
        - name: "className"
          valueUuid: "uuid4"
        signature: "isClassAvailable(String): boolean"
        returnValueUuid: "getStandardConfigLocations_boolean10"
        access: 4
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "0FADE928A0C401A392CD7308107FB98A"
      index: 6
      valueUuid: "uuid5"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "toStringArray"
        parameters:
        - name: "collection"
          valueUuid: "getStandardConfigLocations_arrayList1"
        signature: "toStringArray(List): String[]"
        returnValueUuid: "getStandardConfigLocations_string[]5"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "4760E0B2395FB899E40A351D81A68E3B"
      index: 7
      valueUuid: "getStandardConfigLocations_string[]5"
    uuid: "6175c26e-d6bc-3151-8f34-74f59721a7a1"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Collections.addAll(java.util.List<java.lang.String>,java.lang.String[])\
        \ : boolean"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getStandardConfigLocations_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "com.fasterxml.jackson.dataformat.yaml.YAMLParser"
      valueType: "java.lang.String"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getStandardConfigLocations_boolean4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "com.fasterxml.jackson.databind.ObjectMapper"
      valueType: "java.lang.String"
      uuid: "uuid2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getStandardConfigLocations_boolean8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "com.fasterxml.jackson.dataformat.yaml.YAMLParser"
      valueType: "java.lang.String"
      uuid: "uuid3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getStandardConfigLocations_boolean10"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "com.fasterxml.jackson.databind.ObjectMapper"
      valueType: "java.lang.String"
      uuid: "uuid4"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "log4j2-test.properties"
            valueType: "java.lang.String"
            uuid: "getStandardConfigLocations_string[]5-item0"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "log4j2-test.xml"
            valueType: "java.lang.String"
            uuid: "getStandardConfigLocations_string[]5-item1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          2:
            sapientType: "BASIC"
            content: !<regular>
              value: "log4j2.properties"
            valueType: "java.lang.String"
            uuid: "getStandardConfigLocations_string[]5-item2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          3:
            sapientType: "BASIC"
            content: !<regular>
              value: "log4j2.xml"
            valueType: "java.lang.String"
            uuid: "getStandardConfigLocations_string[]5-item3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.lang.String[]"
      uuid: "getStandardConfigLocations_string[]5"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "log4j2-test.properties"
          valueType: "java.lang.String"
          uuid: "getStandardConfigLocations_arrayList1-item0"
          fixed: true
          collectionUuid: "getStandardConfigLocations_arrayList1"
          equalsMethodPresent: false
          explicitCastNeeded: false
        - sapientType: "BASIC"
          content: !<regular>
            value: "log4j2-test.xml"
          valueType: "java.lang.String"
          uuid: "getStandardConfigLocations_arrayList1-item1"
          fixed: true
          collectionUuid: "getStandardConfigLocations_arrayList1"
          equalsMethodPresent: false
          explicitCastNeeded: false
        - sapientType: "BASIC"
          content: !<regular>
            value: "log4j2.properties"
          valueType: "java.lang.String"
          uuid: "getStandardConfigLocations_arrayList1-item2"
          fixed: true
          collectionUuid: "getStandardConfigLocations_arrayList1"
          equalsMethodPresent: false
          explicitCastNeeded: false
        - sapientType: "BASIC"
          content: !<regular>
            value: "log4j2.xml"
          valueType: "java.lang.String"
          uuid: "getStandardConfigLocations_arrayList1-item3"
          fixed: true
          collectionUuid: "getStandardConfigLocations_arrayList1"
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "getStandardConfigLocations_arrayList1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "log4j2-test.properties"
            valueType: "java.lang.String"
            uuid: "getStandardConfigLocations_string[]5-item0"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "log4j2-test.xml"
            valueType: "java.lang.String"
            uuid: "getStandardConfigLocations_string[]5-item1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          2:
            sapientType: "BASIC"
            content: !<regular>
              value: "log4j2.properties"
            valueType: "java.lang.String"
            uuid: "getStandardConfigLocations_string[]5-item2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          3:
            sapientType: "BASIC"
            content: !<regular>
              value: "log4j2.xml"
            valueType: "java.lang.String"
            uuid: "getStandardConfigLocations_string[]5-item3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.lang.String[]"
      uuid: "getStandardConfigLocations_string[]5"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "getStandardConfigLocationsWhenIsClassAvailableNotCom_fasterxml_jackson_databind_ObjectMapperAndPropertyDefinedLocationI"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "483842647963736C08FA366BB52485BC"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "1648cb43-f32e-3c73-b465-35c504665e86"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Collections.addAll(java.util.List<java.lang.String>,java.lang.String[])\
        \ : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path3"
    testPathName: "getStandardConfigLocationsWhenIsClassAvailableCom_fasterxml_jackson_databind_ObjectMapperAndPropertyDefinedLocationIsNu"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "24345444A9029989575CC864362445F9"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "9547e73b-e358-3d52-a900-cb7600ae33d2"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Collections.addAll(java.util.List<java.lang.String>,java.lang.String[])\
        \ : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path4"
    testPathName: "getStandardConfigLocationsWhenIsClassAvailableNotCom_fasterxml_jackson_databind_ObjectMapperAndPropertyDefinedLocationI2"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "47AB945787490DC88C88B68E72CFF595"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "adfb0e2a-a8e7-3fda-b195-30894613d25a"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Collections.addAll(java.util.List<java.lang.String>,java.lang.String[])\
        \ : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path5"
    testPathName: "getStandardConfigLocationsWhenIsClassAvailableCom_fasterxml_jackson_databind_ObjectMapperAndPropertyDefinedLocationIsNu2"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "139D185A91B8E1738E8C2410A8D2AC38"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "b34e4a6e-aa1a-36a8-aa20-b53120d939d4"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Collections.addAll(java.util.List<java.lang.String>,java.lang.String[])\
        \ : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path6"
    testPathName: "getStandardConfigLocationsWhenIsClassAvailableNotCom_fasterxml_jackson_databind_ObjectMapperAndPropertyDefinedLocationI3"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "EED4B34C50D30024AB9BEFB459394346"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "7736bbbe-e536-3c91-94e7-093a50e47594"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Collections.addAll(java.util.List<java.lang.String>,java.lang.String[])\
        \ : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path7"
    testPathName: "getStandardConfigLocationsWhenIsClassAvailableCom_fasterxml_jackson_databind_ObjectMapperAndPropertyDefinedLocationIsNu3"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "75E1E1D4BAA2D14CF8D32751FCD97DED"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "b7e0011c-5d26-39ea-b11d-8b8c5a1706c2"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Collections.addAll(java.util.List<java.lang.String>,java.lang.String[])\
        \ : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path8"
    testPathName: "getStandardConfigLocationsWhenIsClassAvailableNotCom_fasterxml_jackson_databind_ObjectMapperAndPropertyDefinedLocationI4"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "655EF1CEC3B65F4BD977C41AB9502E90"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "98672f49-cbbd-314b-bf48-0a1dd38be088"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Collections.addAll(java.util.List<java.lang.String>,java.lang.String[])\
        \ : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path9"
    testPathName: "getStandardConfigLocationsWhenIsClassAvailableCom_fasterxml_jackson_databind_ObjectMapperAndPropertyDefinedLocationIsNu4"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "70F7ACCC04CF5A34FB2F8C5DEC97E9C6"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "f7b12d3a-ff70-33f0-b3f4-9ce73e218319"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Collections.addAll(java.util.List<java.lang.String>,java.lang.String[])\
        \ : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path10"
    testPathName: "getStandardConfigLocationsWhenIsClassAvailableNotCom_fasterxml_jackson_databind_ObjectMapperAndPropertyDefinedLocationI5"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "52774F58EDAC3D1FD3342B8CE795020F"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "96a9c262-5e20-3683-9f79-6b526ba57220"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Collections.addAll(java.util.List<java.lang.String>,java.lang.String[])\
        \ : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path11"
    testPathName: "getStandardConfigLocationsWhenIsClassAvailableCom_fasterxml_jackson_databind_ObjectMapperAndPropertyDefinedLocationIsNu5"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "9A47BA72461C10DD7639226421C8F8DA"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "e0983804-df84-3846-b5c4-a3c1fbd7fb50"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Collections.addAll(java.util.List<java.lang.String>,java.lang.String[])\
        \ : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path12"
    testPathName: "getStandardConfigLocationsWhenIsClassAvailableNotCom_fasterxml_jackson_databind_ObjectMapperAndPropertyDefinedLocationI6"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "3725E8E61FB7905534DF5A498AE08106"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "5cbf191c-5dac-39bc-ac46-246c89217f84"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Collections.addAll(java.util.List<java.lang.String>,java.lang.String[])\
        \ : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path13"
    testPathName: "getStandardConfigLocationsWhenIsClassAvailableCom_fasterxml_jackson_databind_ObjectMapperAndPropertyDefinedLocationIsNu6"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "0391CF63B21F415E8EB6BE1A2654EAE5"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "fd751cce-a320-3669-b377-6eaae8beb5a9"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Collections.addAll(java.util.List<java.lang.String>,java.lang.String[])\
        \ : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path14"
    testPathName: "getStandardConfigLocationsWhenIsClassAvailableNotCom_fasterxml_jackson_databind_ObjectMapperAndPropertyDefinedLocationI7"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "8084371ABB324BD46472CCF683A8BD35"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "03275062-fe3d-3d48-9065-7cc71a6ac607"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Collections.addAll(java.util.List<java.lang.String>,java.lang.String[])\
        \ : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path15"
    testPathName: "getStandardConfigLocationsWhenIsClassAvailableCom_fasterxml_jackson_databind_ObjectMapperAndPropertyDefinedLocationIsNu7"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "7F7B348F362D5775B213F3C40286EE0D"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "45998ed2-6c3f-3c69-b929-1bd3c66ae75a"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Collections.addAll(java.util.List<java.lang.String>,java.lang.String[])\
        \ : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path16"
    testPathName: "getStandardConfigLocationsWhenIsClassAvailableNotCom_fasterxml_jackson_databind_ObjectMapperAndPropertyDefinedLocationI8"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "6E4EF8420A10745F64FC6943B98B6CA4"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "e4c0bb80-59fa-3f68-881b-cc452220fb71"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "isClassAvailable"
    signature: "isClassAvailable(java.lang.String) : boolean"
    sourceCodeSignature: "boolean isClassAvailable(String className)"
    instructionFingerprint: "206563D4E80EC822085E5CDC9CEBCD77"
  paths:
  - pathId: "path1"
    testPathName: "isClassAvailableWhenClassUtilsIsPresentClassNameGetClassLoader"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "6684824806E01A073774A12F16A179B2"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "className"
      modelFingerprint: "8EAADE011E15386EB81558355AE108E9"
      index: 2
      valueUuid: "isClassAvailable_string1"
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "248DB49367F7ABBC0CB6F049672065D0"
      index: 3
      valueUuid: "uuid81"
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isPresent"
        parameters:
        - name: "className"
          valueUuid: "isClassAvailable_string1"
        - name: "classLoader"
          valueUuid: "<init>_classLoader1"
        signature: "isPresent(String,ClassLoader): boolean"
        returnValueUuid: "isClassAvailable_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "753659628F1B3F179A2EF0629F555437"
      index: 4
      valueUuid: "isClassAvailable_boolean1"
    uuid: "c75f67a2-3241-3278-9311-1eaffea70b22"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.String"
      uuid: "isClassAvailable_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "uuid81"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "isClassAvailable_boolean1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.String"
      uuid: "isClassAvailable_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "<init>_classLoader1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "isClassAvailable_boolean1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "isClassAvailableWhenClassUtilsNotIsPresentClassNameGetClassLoader"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "C64710E0A1D363E03350BB2E646CE6C6"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "className"
      modelFingerprint: "8EAADE011E15386EB81558355AE108E9"
      index: 2
      valueUuid: "isClassAvailable_string1"
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "1F1BF7CC3676A8B2B137DCEABC7C43A2"
      index: 3
      valueUuid: "uuid82"
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isPresent"
        parameters:
        - name: "className"
          valueUuid: "isClassAvailable_string1"
        - name: "classLoader"
          valueUuid: "<init>_classLoader1"
        signature: "isPresent(String,ClassLoader): boolean"
        returnValueUuid: "isClassAvailable_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3A21543F56248AC92654D6E439128AED"
      index: 4
      valueUuid: "isClassAvailable_boolean1"
    uuid: "99a0a152-01cd-3846-80eb-c82d8af6941f"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.String"
      uuid: "isClassAvailable_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "uuid82"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "isClassAvailable_boolean1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.String"
      uuid: "isClassAvailable_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "<init>_classLoader1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "isClassAvailable_boolean1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "beforeInitialize"
    signature: "beforeInitialize() : void"
    sourceCodeSignature: "void beforeInitialize()"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Throwable"
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.Throwable"
    instructionFingerprint: "09992560081B0FE34B1552ECB08E1772"
  paths:
  - pathId: "path2"
    testPathName: "beforeInitializeWhenIsAlreadyInitializedLoggerContext"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "043E4C76D30D483370466A0F174D67BF"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 2
      valueUuid: "uuid83"
    uuid: "bf8a02e7-0c7d-32bf-80c1-2e392ca1db0d"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid83"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path1"
    testPathName: "beforeInitializeWhenConfigureJdkLoggingBridgeHandler"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "DBAB44345068C7F2DA28BE2667143E00"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "387D02EFD2BC822942E765D47ACE01A3"
      index: 2
      idsTryCatchBlockSurrounding:
      - 180002
      valueUuid: "uuid85"
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isPresent"
        parameters:
        - name: "className"
          valueUuid: "uuid84"
        - name: "classLoader"
          valueUuid: "<init>_classLoader1"
        signature: "isPresent(String,ClassLoader): boolean"
        returnValueUuid: "isLog4jBridgeHandlerAvailable_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 3
      valueUuid: "uuid86"
    uuid: "c2c4e2e4-43e0-379c-bca9-ba37968ff5d3"
    deleted: false
    disabled: false
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "object of type Configuration"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.logging.log4j.jul.Log4jBridgeHandler.install(boolean,null,boolean)\
        \ : void"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "uuid85"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "isLog4jBridgeHandlerAvailable_boolean1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.logging.log4j.jul.Log4jBridgeHandler"
      valueType: "java.lang.String"
      uuid: "uuid84"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "<init>_classLoader1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid86"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "initialize"
    signature: "initialize(org.springframework.boot.logging.LoggingInitializationContext,java.lang.String,org.springframework.boot.logging.LogFile)\
      \ : void"
    sourceCodeSignature: "void initialize(LoggingInitializationContext initializationContext,\
      \ String configLocation, LogFile logFile)"
    instructionFingerprint: "E775BB3B1BCB88B8D4D8ACF66A784BF4"
  paths:
  - pathId: "path2"
    testPathName: "initializeWhenIsAlreadyInitializedLoggerContext"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "64E67FA4C2B69358050D6A329CF8E45A"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "initializationContext"
      modelFingerprint: "A9E95525DCEE373649A909B088272A89"
      index: 2
      valueUuid: "initialize_loggingInitializationContext1"
    - type: "INPUT"
      name: "configLocation"
      modelFingerprint: "68F27078F469009D7B73F0D7B9C8F92E"
      index: 3
      valueUuid: "initialize_string1"
    - type: "INPUT"
      name: "logFile"
      modelFingerprint: "0CDB155A10F4A5FC7276123FEFFDF7E8"
      index: 4
      valueUuid: "initialize_logFile1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 5
      valueUuid: "uuid87"
    uuid: "6074f47b-b019-30b8-9a05-39ab6783b874"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "UNKNOWN_REASON"
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggingInitializationContext"
      uuid: "initialize_loggingInitializationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "configLocation1"
      valueType: "java.lang.String"
      uuid: "initialize_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "initialize_logFile1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid87"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path1"
    testPathName: "initializeWhenStringUtilsHasLengthConfigLocation"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "51D10FEF53291A62047412ADA42DB053"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "initializationContext"
      modelFingerprint: "6B5E735AEB2BF4EE77E0CC7A52200F51"
      index: 2
      valueUuid: "initialize_loggingInitializationContext1"
    - type: "INPUT"
      name: "configLocation"
      modelFingerprint: "752B0031DD8F4D0C46C2B5B0CE94BCE5"
      index: 3
      valueUuid: "initialize_string1"
    - type: "INPUT"
      name: "logFile"
      modelFingerprint: "0CDB155A10F4A5FC7276123FEFFDF7E8"
      index: 4
      valueUuid: "initialize_logFile1"
    - type: "LOCAL_VARIABLE"
      name: "initializationContext"
      modelFingerprint: "A4EE79A0465B9933CC55990D9E2EDC3C"
      index: 5
      valueUuid: "initialize_loggingInitializationContext1"
      methodExercised:
        target: "initializationContext"
        name: "getEnvironment"
        parameters: []
        signature: "getEnvironment(): Environment"
        returnValueUuid: "initialize_environment1"
        access: 1
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "0ADC91B76C5E1D2A8701BB911882A91E"
      index: 6
      valueUuid: "uuid88"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "initialize_string1"
        signature: "hasLength(String): boolean"
        returnValueUuid: "initialize_boolean1"
        access: 9
    - type: "STATIC"
      name: "SystemPropertyUtils"
      modelFingerprint: "B2A51EB2B8E94978E562021DBCAB7982"
      index: 7
      valueUuid: "uuid89"
      methodExercised:
        target: "org.springframework.util.SystemPropertyUtils"
        name: "resolvePlaceholders"
        parameters:
        - name: "text"
          valueUuid: "initialize_string1"
        signature: "resolvePlaceholders(String): String"
        returnValueUuid: "initializeWithSpecificConfig_string1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 8
      valueUuid: "uuid90"
    uuid: "a215eade-fb63-31d7-bb20-82e8be51fb4c"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "object of type Configuration, object of type PropertiesUtil,\
      \ object of type LoggerContext"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "getLoggerContext().putObjectIfAbsent(ENVIRONMENT_KEY, environment);"
      lineNumber: 242
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type LoggerContext - Method: putObjectIfAbsent"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggingInitializationContext"
      uuid: "initialize_loggingInitializationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "initialize_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "initialize_logFile1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggingInitializationContext"
      uuid: "initialize_loggingInitializationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "initialize_environment1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid88"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "initialize_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "initialize_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.SystemPropertyUtils"
      uuid: "uuid89"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "initializeWithSpecificConfig_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "initialize_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid90"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "loadDefaults"
    signature: "loadDefaults(org.springframework.boot.logging.LoggingInitializationContext,org.springframework.boot.logging.LogFile)\
      \ : void"
    sourceCodeSignature: "void loadDefaults(LoggingInitializationContext initializationContext,\
      \ LogFile logFile)"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "8C4E68CAF987002D1C0D3949302C7200"
  paths:
  - pathId: "path1"
    testPathName: "loadDefaultsWhenInitializationContextIsNotNull"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "4D8C314EBE604316590ACA2D5FD123F0"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "initializationContext"
      modelFingerprint: "6B5E735AEB2BF4EE77E0CC7A52200F51"
      index: 2
      valueUuid: "loadDefaults_loggingInitializationContext1"
    - type: "INPUT"
      name: "logFile"
      modelFingerprint: "0CDB155A10F4A5FC7276123FEFFDF7E8"
      index: 3
      valueUuid: "loadDefaults_logFile1"
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "A112129674976EC7D4F63E32FE096B0F"
      index: 4
      valueUuid: "uuid92"
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "getPackageName"
        parameters:
        - name: "clazz"
          valueUuid: "uuid91"
        signature: "getPackageName(Class): String"
        returnValueUuid: "getPackagedConfigFile_string1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "initializationContext"
      modelFingerprint: "A4EE79A0465B9933CC55990D9E2EDC3C"
      index: 5
      valueUuid: "loadDefaults_loggingInitializationContext1"
      methodExercised:
        target: "initializationContext"
        name: "getEnvironment"
        parameters: []
        signature: "getEnvironment(): Environment"
        returnValueUuid: "getOverrides_environment1"
        access: 1
    - type: "STATIC"
      name: "Binder"
      modelFingerprint: "2C342FFB1725AF616E4CDB76A3B18287"
      index: 6
      valueUuid: "uuid93"
      methodExercised:
        target: "org.springframework.boot.context.properties.bind.Binder"
        name: "get"
        parameters:
        - name: "environment"
          valueUuid: "getOverrides_environment1"
        signature: "get(Environment): Binder"
        returnValueUuid: "getOverrides_binder1"
        access: 9
    - type: "STATIC"
      name: "Bindable"
      modelFingerprint: "62703D58B9ABCD45660E77174146D5B3"
      index: 7
      valueUuid: "uuid95"
      methodExercised:
        target: "org.springframework.boot.context.properties.bind.Bindable"
        name: "listOf"
        parameters:
        - name: "elementType"
          valueUuid: "uuid94"
        signature: "listOf(Class): Bindable"
        returnValueUuid: "getOverrides_bindable1"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "8FCD2F99F23F37A0675823497FB32E5D"
      index: 8
      valueUuid: "getOverrides_binder1"
      methodExercised:
        target: "org.springframework.boot.context.properties.bind.Binder"
        name: "bind"
        parameters:
        - name: "name"
          valueUuid: "uuid96"
        - name: "target"
          valueUuid: "getOverrides_bindable1"
        signature: "bind(String,Bindable): BindResult"
        returnValueUuid: "getOverrides_bindResult1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "overrides"
      modelFingerprint: "9C59276F2D8672888207360E4EEE2322"
      index: 9
      valueUuid: "getOverrides_bindResult1"
      methodExercised:
        target: "overrides"
        name: "orElse"
        parameters:
        - name: "other"
          valueUuid: "getOverrides_list1"
        signature: "orElse(List): Object"
        returnValueUuid: "getOverrides_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "initializationContext"
      modelFingerprint: "A4EE79A0465B9933CC55990D9E2EDC3C"
      index: 10
      valueUuid: "loadDefaults_loggingInitializationContext1"
      methodExercised:
        target: "initializationContext"
        name: "getEnvironment"
        parameters: []
        signature: "getEnvironment(): Environment"
        returnValueUuid: "load_environment1"
        access: 1
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "3D2EEE9DC4E19BB2DC92446A47F4F5C9"
      index: 11
      valueUuid: "applySystemProperties_loggingSystemProperties1"
      methodExercised:
        target: "org.springframework.boot.logging.LoggingSystemProperties"
        name: "apply"
        parameters:
        - name: "logFile"
          valueUuid: "loadDefaults_logFile1"
        signature: "apply(LogFile): void"
        returnValueUuid: "applySystemProperties_void1"
        access: 17
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "A658FFF2C3E8D01CCEB83DFFAA3EA3FA"
      index: 12
      methodExercised:
        target: "target"
        name: "loadConfiguration"
        parameters:
        - name: "location"
          valueUuid: "getPackagedConfigFile_string6"
        - name: "logFile"
          valueUuid: "loadDefaults_logFile1"
        - name: "overrides"
          valueUuid: "getOverrides_object1"
        signature: "loadConfiguration(String,LogFile,List): void"
        returnValueUuid: "load_void1"
        access: 4
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 13
      valueUuid: "uuid97"
    uuid: "cf57c3f8-0a5e-320a-a388-2e7f767085c8"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "}"
      lineNumber: 178
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type LoggingSystemProperties - Method: apply"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggingInitializationContext"
      uuid: "loadDefaults_loggingInitializationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "loadDefaults_logFile1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "uuid92"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.logging.log4j2"
      valueType: "java.lang.String"
      uuid: "getPackagedConfigFile_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "uuid91"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggingInitializationContext"
      uuid: "loadDefaults_loggingInitializationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "getOverrides_environment1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "uuid93"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "getOverrides_binder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "getOverrides_environment1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "uuid95"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "listOf"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "getOverrides_bindable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid94"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "getOverrides_binder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.util.List<java.lang.String>"
      uuid: "getOverrides_bindResult1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "logging.log4j2.config.override"
      valueType: "java.lang.String"
      uuid: "uuid96"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "listOf"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "getOverrides_bindable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.util.List<java.lang.String>"
      uuid: "getOverrides_bindResult1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "getOverrides_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "getOverrides_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggingInitializationContext"
      uuid: "loadDefaults_loggingInitializationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "load_environment1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LoggingSystemProperties"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "load_environment1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "defaultValueResolver"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Function"
            genericValueType: "java.lang.String,java.lang.String"
            uuid: "getDefaultValueResolver_function1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "setter"
          value:
            sapientType: "NULL"
            valueType: "java.util.function.BiConsumer"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.logging.LoggingSystemProperties"
      uuid: "applySystemProperties_loggingSystemProperties1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "applySystemProperties_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "loadDefaults_logFile1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "load_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "classpath:org/springframework/boot/logging/log4j2/log4j2-file.xml"
      valueType: "java.lang.String"
      uuid: "getPackagedConfigFile_string6"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "loadDefaults_logFile1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "getOverrides_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "VOID"
      uuid: "uuid97"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "loadDefaultsWhenLogFileIsNullAndInitializationContextIsNotNull"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "47952D6B78CCA7D28AD1E7B50BD5EC9F"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "initializationContext"
      modelFingerprint: "6B5E735AEB2BF4EE77E0CC7A52200F51"
      index: 2
      valueUuid: "loadDefaults_loggingInitializationContext1"
    - type: "INPUT"
      name: "logFile"
      modelFingerprint: "A3CB47FEDC92663A4B31E3B27D7C6A23"
      index: 3
      valueUuid: "loadDefaults_logFile1"
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "A112129674976EC7D4F63E32FE096B0F"
      index: 4
      valueUuid: "uuid99"
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "getPackageName"
        parameters:
        - name: "clazz"
          valueUuid: "uuid98"
        signature: "getPackageName(Class): String"
        returnValueUuid: "getPackagedConfigFile_string1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "initializationContext"
      modelFingerprint: "A4EE79A0465B9933CC55990D9E2EDC3C"
      index: 5
      valueUuid: "loadDefaults_loggingInitializationContext1"
      methodExercised:
        target: "initializationContext"
        name: "getEnvironment"
        parameters: []
        signature: "getEnvironment(): Environment"
        returnValueUuid: "getOverrides_environment1"
        access: 1
    - type: "STATIC"
      name: "Binder"
      modelFingerprint: "2C342FFB1725AF616E4CDB76A3B18287"
      index: 6
      valueUuid: "uuid100"
      methodExercised:
        target: "org.springframework.boot.context.properties.bind.Binder"
        name: "get"
        parameters:
        - name: "environment"
          valueUuid: "getOverrides_environment1"
        signature: "get(Environment): Binder"
        returnValueUuid: "getOverrides_binder1"
        access: 9
    - type: "STATIC"
      name: "Bindable"
      modelFingerprint: "62703D58B9ABCD45660E77174146D5B3"
      index: 7
      valueUuid: "uuid102"
      methodExercised:
        target: "org.springframework.boot.context.properties.bind.Bindable"
        name: "listOf"
        parameters:
        - name: "elementType"
          valueUuid: "uuid101"
        signature: "listOf(Class): Bindable"
        returnValueUuid: "getOverrides_bindable1"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "8FCD2F99F23F37A0675823497FB32E5D"
      index: 8
      valueUuid: "getOverrides_binder1"
      methodExercised:
        target: "org.springframework.boot.context.properties.bind.Binder"
        name: "bind"
        parameters:
        - name: "name"
          valueUuid: "uuid103"
        - name: "target"
          valueUuid: "getOverrides_bindable1"
        signature: "bind(String,Bindable): BindResult"
        returnValueUuid: "getOverrides_bindResult1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "overrides"
      modelFingerprint: "9C59276F2D8672888207360E4EEE2322"
      index: 9
      valueUuid: "getOverrides_bindResult1"
      methodExercised:
        target: "overrides"
        name: "orElse"
        parameters:
        - name: "other"
          valueUuid: "getOverrides_list1"
        signature: "orElse(List): Object"
        returnValueUuid: "getOverrides_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "initializationContext"
      modelFingerprint: "A4EE79A0465B9933CC55990D9E2EDC3C"
      index: 10
      valueUuid: "loadDefaults_loggingInitializationContext1"
      methodExercised:
        target: "initializationContext"
        name: "getEnvironment"
        parameters: []
        signature: "getEnvironment(): Environment"
        returnValueUuid: "load_environment1"
        access: 1
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "C1B5E88F91631B61EF10B981952263E0"
      index: 11
      valueUuid: "applySystemProperties_loggingSystemProperties1"
      methodExercised:
        target: "org.springframework.boot.logging.LoggingSystemProperties"
        name: "apply"
        parameters:
        - name: "logFile"
          valueUuid: "loadDefaults_logFile1"
        signature: "apply(LogFile): void"
        returnValueUuid: "applySystemProperties_void1"
        access: 17
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "AB63880710144037D0B849AE0AD400DF"
      index: 12
      methodExercised:
        target: "target"
        name: "loadConfiguration"
        parameters:
        - name: "location"
          valueUuid: "getPackagedConfigFile_string6"
        - name: "logFile"
          valueUuid: "loadDefaults_logFile1"
        - name: "overrides"
          valueUuid: "getOverrides_object1"
        signature: "loadConfiguration(String,LogFile,List): void"
        returnValueUuid: "load_void1"
        access: 4
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 13
      valueUuid: "uuid104"
    uuid: "dc8ecdf2-e3d2-377f-b82b-5dc3b28f77f2"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "}"
      lineNumber: 178
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type LoggingSystemProperties - Method: apply"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggingInitializationContext"
      uuid: "loadDefaults_loggingInitializationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "loadDefaults_logFile1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "uuid99"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.springframework.boot.logging.log4j2"
      valueType: "java.lang.String"
      uuid: "getPackagedConfigFile_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "uuid98"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggingInitializationContext"
      uuid: "loadDefaults_loggingInitializationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "getOverrides_environment1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "uuid100"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "getOverrides_binder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "getOverrides_environment1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "uuid102"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "listOf"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "getOverrides_bindable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid101"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "getOverrides_binder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.util.List<java.lang.String>"
      uuid: "getOverrides_bindResult1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "logging.log4j2.config.override"
      valueType: "java.lang.String"
      uuid: "uuid103"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "listOf"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "getOverrides_bindable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.util.List<java.lang.String>"
      uuid: "getOverrides_bindResult1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "getOverrides_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "getOverrides_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggingInitializationContext"
      uuid: "loadDefaults_loggingInitializationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "load_environment1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LoggingSystemProperties"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "load_environment1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "defaultValueResolver"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Function"
            genericValueType: "java.lang.String,java.lang.String"
            uuid: "getDefaultValueResolver_function1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "setter"
          value:
            sapientType: "NULL"
            valueType: "java.util.function.BiConsumer"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.logging.LoggingSystemProperties"
      uuid: "applySystemProperties_loggingSystemProperties1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "applySystemProperties_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "loadDefaults_logFile1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "load_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "classpath:org/springframework/boot/logging/log4j2/log4j2.xml"
      valueType: "java.lang.String"
      uuid: "getPackagedConfigFile_string6"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "loadDefaults_logFile1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "getOverrides_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "VOID"
      uuid: "uuid104"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "loadConfiguration"
    signature: "loadConfiguration(org.springframework.boot.logging.LoggingInitializationContext,java.lang.String,org.springframework.boot.logging.LogFile)\
      \ : void"
    sourceCodeSignature: "void loadConfiguration(LoggingInitializationContext initializationContext,\
      \ String location, LogFile logFile)"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "A4F2A3DF653F45742922E8375DF6ED65"
  paths:
  - pathId: "path1"
    testPathName: "loadConfigurationWhenInitializationContextIsNotNull"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "A005BF929B64E3E110B0517C7D715260"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "initializationContext"
      modelFingerprint: "6B5E735AEB2BF4EE77E0CC7A52200F51"
      index: 2
      valueUuid: "loadConfiguration_loggingInitializationContext1"
    - type: "INPUT"
      name: "location"
      modelFingerprint: "C192C3D47C9857E221AEFB8803CC0175"
      index: 3
      valueUuid: "loadConfiguration_string1"
    - type: "INPUT"
      name: "logFile"
      modelFingerprint: "0CDB155A10F4A5FC7276123FEFFDF7E8"
      index: 4
      valueUuid: "loadConfiguration_logFile1"
    - type: "LOCAL_VARIABLE"
      name: "initializationContext"
      modelFingerprint: "A4EE79A0465B9933CC55990D9E2EDC3C"
      index: 5
      valueUuid: "loadConfiguration_loggingInitializationContext1"
      methodExercised:
        target: "initializationContext"
        name: "getEnvironment"
        parameters: []
        signature: "getEnvironment(): Environment"
        returnValueUuid: "getOverrides_environment1"
        access: 1
    - type: "STATIC"
      name: "Binder"
      modelFingerprint: "2C342FFB1725AF616E4CDB76A3B18287"
      index: 6
      valueUuid: "uuid105"
      methodExercised:
        target: "org.springframework.boot.context.properties.bind.Binder"
        name: "get"
        parameters:
        - name: "environment"
          valueUuid: "getOverrides_environment1"
        signature: "get(Environment): Binder"
        returnValueUuid: "getOverrides_binder1"
        access: 9
    - type: "STATIC"
      name: "Bindable"
      modelFingerprint: "62703D58B9ABCD45660E77174146D5B3"
      index: 7
      valueUuid: "uuid107"
      methodExercised:
        target: "org.springframework.boot.context.properties.bind.Bindable"
        name: "listOf"
        parameters:
        - name: "elementType"
          valueUuid: "uuid106"
        signature: "listOf(Class): Bindable"
        returnValueUuid: "getOverrides_bindable1"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "8FCD2F99F23F37A0675823497FB32E5D"
      index: 8
      valueUuid: "getOverrides_binder1"
      methodExercised:
        target: "org.springframework.boot.context.properties.bind.Binder"
        name: "bind"
        parameters:
        - name: "name"
          valueUuid: "uuid108"
        - name: "target"
          valueUuid: "getOverrides_bindable1"
        signature: "bind(String,Bindable): BindResult"
        returnValueUuid: "getOverrides_bindResult1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "overrides"
      modelFingerprint: "9C59276F2D8672888207360E4EEE2322"
      index: 9
      valueUuid: "getOverrides_bindResult1"
      methodExercised:
        target: "overrides"
        name: "orElse"
        parameters:
        - name: "other"
          valueUuid: "getOverrides_list1"
        signature: "orElse(List): Object"
        returnValueUuid: "getOverrides_object1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "initializationContext"
      modelFingerprint: "A4EE79A0465B9933CC55990D9E2EDC3C"
      index: 10
      valueUuid: "loadConfiguration_loggingInitializationContext1"
      methodExercised:
        target: "initializationContext"
        name: "getEnvironment"
        parameters: []
        signature: "getEnvironment(): Environment"
        returnValueUuid: "load_environment1"
        access: 1
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "3D2EEE9DC4E19BB2DC92446A47F4F5C9"
      index: 11
      valueUuid: "applySystemProperties_loggingSystemProperties1"
      methodExercised:
        target: "org.springframework.boot.logging.LoggingSystemProperties"
        name: "apply"
        parameters:
        - name: "logFile"
          valueUuid: "loadConfiguration_logFile1"
        signature: "apply(LogFile): void"
        returnValueUuid: "applySystemProperties_void1"
        access: 17
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "3FC74186CF096814631B629424CFC886"
      index: 12
      methodExercised:
        target: "target"
        name: "loadConfiguration"
        parameters:
        - name: "location"
          valueUuid: "loadConfiguration_string1"
        - name: "logFile"
          valueUuid: "loadConfiguration_logFile1"
        - name: "overrides"
          valueUuid: "getOverrides_object1"
        signature: "loadConfiguration(String,LogFile,List): void"
        returnValueUuid: "load_void1"
        access: 4
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 13
      valueUuid: "uuid109"
    uuid: "205abf51-a568-3d90-b992-941ce8177fd3"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "}"
      lineNumber: 178
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type LoggingSystemProperties - Method: apply"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggingInitializationContext"
      uuid: "loadConfiguration_loggingInitializationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "location1"
      valueType: "java.lang.String"
      uuid: "loadConfiguration_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "loadConfiguration_logFile1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggingInitializationContext"
      uuid: "loadConfiguration_loggingInitializationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "getOverrides_environment1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "uuid105"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "getOverrides_binder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "getOverrides_environment1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "uuid107"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "listOf"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "getOverrides_bindable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid106"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "getOverrides_binder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.util.List<java.lang.String>"
      uuid: "getOverrides_bindResult1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "logging.log4j2.config.override"
      valueType: "java.lang.String"
      uuid: "uuid108"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "listOf"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "getOverrides_bindable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.util.List<java.lang.String>"
      uuid: "getOverrides_bindResult1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "getOverrides_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "getOverrides_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggingInitializationContext"
      uuid: "loadConfiguration_loggingInitializationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "load_environment1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LoggingSystemProperties"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "load_environment1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "defaultValueResolver"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Function"
            genericValueType: "java.lang.String,java.lang.String"
            uuid: "getDefaultValueResolver_function1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "setter"
          value:
            sapientType: "NULL"
            valueType: "java.util.function.BiConsumer"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.logging.LoggingSystemProperties"
      uuid: "applySystemProperties_loggingSystemProperties1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "applySystemProperties_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "loadConfiguration_logFile1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "load_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "location1"
      valueType: "java.lang.String"
      uuid: "loadConfiguration_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "loadConfiguration_logFile1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "getOverrides_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "VOID"
      uuid: "uuid109"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "loadConfiguration"
    signature: "loadConfiguration(java.lang.String,org.springframework.boot.logging.LogFile,java.util.List<java.lang.String>)\
      \ : void"
    sourceCodeSignature: "void loadConfiguration(String location, LogFile logFile,\
      \ List<String> overrides)"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "E7C50B0BB13F833EB8B395E6A5475749"
  paths:
  - pathId: "path1"
    testPathName: "loadConfiguration1WhenConfigurationsSizeGreaterThan1"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "3E12DA72C9EE99655C86C2831BD86980"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "location"
      modelFingerprint: "E49A552D9D84F1C52B9FB29DAADD83F9"
      index: 2
      valueUuid: "loadConfiguration_string1"
    - type: "INPUT"
      name: "logFile"
      modelFingerprint: "0CDB155A10F4A5FC7276123FEFFDF7E8"
      index: 3
      valueUuid: "loadConfiguration_logFile1"
    - type: "INPUT"
      name: "overrides"
      modelFingerprint: "EA44DD187EAE232B2C24FEB5B56EA7F5"
      index: 4
      valueUuid: "loadConfiguration_list1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "58473DD210E9F2AF4B51CDA51F7FBFDB"
      index: 5
      valueUuid: "uuid111"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "loadConfiguration_string1"
        - name: "message"
          valueUuid: "uuid110"
        signature: "notNull(String,String): void"
        returnValueUuid: "loadConfiguration_void1"
        access: 9
    - type: "STATIC"
      name: "ResourceUtils"
      modelFingerprint: "D3857EB22988B2CFA0F8685DAAD1EA05"
      index: 6
      idsTryCatchBlockSurrounding:
      - 4
      valueUuid: "uuid112"
      methodExercised:
        target: "org.springframework.util.ResourceUtils"
        name: "getURL"
        parameters:
        - name: "resourceLocation"
          valueUuid: "loadConfiguration_string1"
        throwsExceptions:
        - "java.io.FileNotFoundException"
        signature: "getURL(String): URL throws java.io.FileNotFoundException"
        returnValueUuid: "load_uRL1"
        access: 9
    - type: "STATIC"
      name: "ResourceUtils"
      modelFingerprint: "DD31B5B558433DF8091D592C9FAEEFEF"
      index: 7
      valueUuid: "uuid113"
      methodExercised:
        target: "org.springframework.util.ResourceUtils"
        name: "getFile"
        parameters:
        - name: "resourceUrl"
          valueUuid: "load_uRL1"
        throwsExceptions:
        - "java.io.FileNotFoundException"
        signature: "getFile(URL): File throws java.io.FileNotFoundException"
        returnValueUuid: "getConfigurationSource_file1"
        access: 9
    - type: "STATIC"
      name: "ResourceUtils"
      modelFingerprint: "C8AB987D504905AAA207361DCC9FE164"
      index: 8
      idsTryCatchBlockSurrounding:
      - 4
      valueUuid: "uuid114"
      methodExercised:
        target: "org.springframework.util.ResourceUtils"
        name: "getURL"
        parameters:
        - name: "resourceLocation"
          valueUuid: "loadConfiguration_object1"
        throwsExceptions:
        - "java.io.FileNotFoundException"
        signature: "getURL(String): URL throws java.io.FileNotFoundException"
        returnValueUuid: "load_uRL2"
        access: 9
    - type: "STATIC"
      name: "ResourceUtils"
      modelFingerprint: "0A533ACAEE0281DD1C18D72E170D79C0"
      index: 9
      valueUuid: "uuid115"
      methodExercised:
        target: "org.springframework.util.ResourceUtils"
        name: "getFile"
        parameters:
        - name: "resourceUrl"
          valueUuid: "load_uRL2"
        throwsExceptions:
        - "java.io.FileNotFoundException"
        signature: "getFile(URL): File throws java.io.FileNotFoundException"
        returnValueUuid: "getConfigurationSource_file2"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 10
      valueUuid: "uuid116"
    uuid: "e2a8011e-fd07-3513-ae56-cb08cec0d2d0"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "context"
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "return new ConfigurationSource(url.openStream(), ResourceUtils.getFile(url));"
      lineNumber: 310
      details: "No constructor found to create an object without any exception for\
        \ class org.apache.logging.log4j.core.config.ConfigurationSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "loadConfiguration_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "loadConfiguration_logFile1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "B"
          valueType: "java.lang.String"
          uuid: "loadConfiguration_object1"
          fixed: false
          collectionUuid: "loadConfiguration_list1"
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "loadConfiguration_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid111"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "loadConfiguration_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "loadConfiguration_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Location must not be null"
      valueType: "java.lang.String"
      uuid: "uuid110"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.ResourceUtils"
      uuid: "uuid112"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ResourceUtils"
        method: "getURL"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "loadConfiguration_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.net.URL"
      uuid: "load_uRL1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "loadConfiguration_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ResourceUtils"
      uuid: "uuid113"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "getConfigurationSource_file1-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.io.File"
      uuid: "getConfigurationSource_file1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ResourceUtils"
        method: "getURL"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "loadConfiguration_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.net.URL"
      uuid: "load_uRL1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.ResourceUtils"
      uuid: "uuid114"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ResourceUtils"
        method: "getURL"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "loadConfiguration_object1"
            fixed: false
            collectionUuid: "loadConfiguration_list1"
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.net.URL"
      uuid: "load_uRL2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "loadConfiguration_object1"
      fixed: false
      collectionUuid: "loadConfiguration_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ResourceUtils"
      uuid: "uuid115"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "getConfigurationSource_file2-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.io.File"
      uuid: "getConfigurationSource_file2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ResourceUtils"
        method: "getURL"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "loadConfiguration_object1"
            fixed: false
            collectionUuid: "loadConfiguration_list1"
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.net.URL"
      uuid: "load_uRL2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid116"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path4"
    testPathName: "loadConfiguration1WhenConfigurationsSizeNotGreaterThan1"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "45891D40CE8B1266A4AB676E9F8B0591"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "41358567-0059-3ab5-bc3c-13c52c835114"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "context"
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "return new ConfigurationSource(url.openStream(), ResourceUtils.getFile(url));"
      lineNumber: 310
      details: "No constructor found to create an object without any exception for\
        \ class org.apache.logging.log4j.core.config.ConfigurationSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path2"
    testPathName: "loadConfiguration1WhenUrlGetProtocolEqualsHttpsAndConfigurationsSizeGreaterThan1"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "7FCADA97C28A4B83E3834D4A0CDBD7F9"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "location"
      modelFingerprint: "C192C3D47C9857E221AEFB8803CC0175"
      index: 2
      valueUuid: "loadConfiguration_string1"
    - type: "INPUT"
      name: "logFile"
      modelFingerprint: "0CDB155A10F4A5FC7276123FEFFDF7E8"
      index: 3
      valueUuid: "loadConfiguration_logFile1"
    - type: "INPUT"
      name: "overrides"
      modelFingerprint: "DBD98099966FC18ED3F0E9FDEB2D9A70"
      index: 4
      valueUuid: "loadConfiguration_list1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "D3B677FB306D2DABF16686F1242D5C25"
      index: 5
      valueUuid: "uuid123"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "loadConfiguration_string1"
        - name: "message"
          valueUuid: "uuid122"
        signature: "notNull(String,String): void"
        returnValueUuid: "loadConfiguration_void1"
        access: 9
    - type: "STATIC"
      name: "ResourceUtils"
      modelFingerprint: "FCDE7BCB1BA59F275EAF703B9F95E203"
      index: 6
      idsTryCatchBlockSurrounding:
      - 4
      valueUuid: "uuid124"
      methodExercised:
        target: "org.springframework.util.ResourceUtils"
        name: "getURL"
        parameters:
        - name: "resourceLocation"
          valueUuid: "loadConfiguration_string1"
        throwsExceptions:
        - "java.io.FileNotFoundException"
        signature: "getURL(String): URL throws java.io.FileNotFoundException"
        returnValueUuid: "load_uRL1"
        access: 9
    - type: "STATIC"
      name: "ResourceUtils"
      modelFingerprint: "DD31B5B558433DF8091D592C9FAEEFEF"
      index: 7
      valueUuid: "uuid125"
      methodExercised:
        target: "org.springframework.util.ResourceUtils"
        name: "getFile"
        parameters:
        - name: "resourceUrl"
          valueUuid: "load_uRL1"
        throwsExceptions:
        - "java.io.FileNotFoundException"
        signature: "getFile(URL): File throws java.io.FileNotFoundException"
        returnValueUuid: "getConfigurationSource_file1"
        access: 9
    - type: "STATIC"
      name: "ResourceUtils"
      modelFingerprint: "0E2BD830B8EB153993E62F3E78023A3B"
      index: 8
      idsTryCatchBlockSurrounding:
      - 4
      valueUuid: "uuid126"
      methodExercised:
        target: "org.springframework.util.ResourceUtils"
        name: "getURL"
        parameters:
        - name: "resourceLocation"
          valueUuid: "loadConfiguration_object1"
        throwsExceptions:
        - "java.io.FileNotFoundException"
        signature: "getURL(String): URL throws java.io.FileNotFoundException"
        returnValueUuid: "load_uRL2"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 9
      valueUuid: "uuid127"
    uuid: "bae1fa0f-ea08-337b-a095-7aa7a840e672"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "context"
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "return new ConfigurationSource(url.openStream(), ResourceUtils.getFile(url));"
      lineNumber: 310
      details: "No constructor found to create an object without any exception for\
        \ class org.apache.logging.log4j.core.config.ConfigurationSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "location1"
      valueType: "java.lang.String"
      uuid: "loadConfiguration_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "loadConfiguration_logFile1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "loadConfiguration_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid123"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "loadConfiguration_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "location1"
      valueType: "java.lang.String"
      uuid: "loadConfiguration_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Location must not be null"
      valueType: "java.lang.String"
      uuid: "uuid122"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.ResourceUtils"
      uuid: "uuid124"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ResourceUtils"
        method: "getURL"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "loadConfiguration_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.net.URL"
      uuid: "load_uRL1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "location1"
      valueType: "java.lang.String"
      uuid: "loadConfiguration_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ResourceUtils"
      uuid: "uuid125"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "getConfigurationSource_file1-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.io.File"
      uuid: "getConfigurationSource_file1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ResourceUtils"
        method: "getURL"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "loadConfiguration_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.net.URL"
      uuid: "load_uRL1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.ResourceUtils"
      uuid: "uuid126"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ResourceUtils"
        method: "getURL"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "C"
            valueType: "java.lang.String"
            uuid: "loadConfiguration_object1"
            fixed: false
            collectionUuid: "loadConfiguration_list1"
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.net.URL"
      uuid: "load_uRL2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "resourceLocation1"
      valueType: "java.lang.String"
      uuid: "loadConfiguration_object1"
      fixed: false
      collectionUuid: "loadConfiguration_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid127"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "loadConfiguration1WhenUrlGetProtocolNotEqualsHttpsAndConfigurationsSizeGreaterThan1"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "A906CE438CB2E8FFA4EA095916BAB016"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "location"
      modelFingerprint: "C192C3D47C9857E221AEFB8803CC0175"
      index: 2
      valueUuid: "loadConfiguration_string1"
    - type: "INPUT"
      name: "logFile"
      modelFingerprint: "0CDB155A10F4A5FC7276123FEFFDF7E8"
      index: 3
      valueUuid: "loadConfiguration_logFile1"
    - type: "INPUT"
      name: "overrides"
      modelFingerprint: "DBD98099966FC18ED3F0E9FDEB2D9A70"
      index: 4
      valueUuid: "loadConfiguration_list1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "D3B677FB306D2DABF16686F1242D5C25"
      index: 5
      valueUuid: "uuid129"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "loadConfiguration_string1"
        - name: "message"
          valueUuid: "uuid128"
        signature: "notNull(String,String): void"
        returnValueUuid: "loadConfiguration_void1"
        access: 9
    - type: "STATIC"
      name: "ResourceUtils"
      modelFingerprint: "FCDE7BCB1BA59F275EAF703B9F95E203"
      index: 6
      idsTryCatchBlockSurrounding:
      - 4
      valueUuid: "uuid130"
      methodExercised:
        target: "org.springframework.util.ResourceUtils"
        name: "getURL"
        parameters:
        - name: "resourceLocation"
          valueUuid: "loadConfiguration_string1"
        throwsExceptions:
        - "java.io.FileNotFoundException"
        signature: "getURL(String): URL throws java.io.FileNotFoundException"
        returnValueUuid: "load_uRL1"
        access: 9
    - type: "STATIC"
      name: "ResourceUtils"
      modelFingerprint: "DD31B5B558433DF8091D592C9FAEEFEF"
      index: 7
      valueUuid: "uuid131"
      methodExercised:
        target: "org.springframework.util.ResourceUtils"
        name: "getFile"
        parameters:
        - name: "resourceUrl"
          valueUuid: "load_uRL1"
        throwsExceptions:
        - "java.io.FileNotFoundException"
        signature: "getFile(URL): File throws java.io.FileNotFoundException"
        returnValueUuid: "getConfigurationSource_file1"
        access: 9
    - type: "STATIC"
      name: "ResourceUtils"
      modelFingerprint: "CE41A6A723AB9094A536E47ACF539965"
      index: 8
      idsTryCatchBlockSurrounding:
      - 4
      valueUuid: "uuid132"
      methodExercised:
        target: "org.springframework.util.ResourceUtils"
        name: "getURL"
        parameters:
        - name: "resourceLocation"
          valueUuid: "loadConfiguration_object1"
        throwsExceptions:
        - "java.io.FileNotFoundException"
        signature: "getURL(String): URL throws java.io.FileNotFoundException"
        returnValueUuid: "load_uRL2"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 9
      valueUuid: "uuid133"
    uuid: "7221c614-d03c-3ec0-997e-77a33187d648"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "context"
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "return new ConfigurationSource(url.openStream(), ResourceUtils.getFile(url));"
      lineNumber: 310
      details: "No constructor found to create an object without any exception for\
        \ class org.apache.logging.log4j.core.config.ConfigurationSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "location1"
      valueType: "java.lang.String"
      uuid: "loadConfiguration_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "loadConfiguration_logFile1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "loadConfiguration_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid129"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "loadConfiguration_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "location1"
      valueType: "java.lang.String"
      uuid: "loadConfiguration_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Location must not be null"
      valueType: "java.lang.String"
      uuid: "uuid128"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.ResourceUtils"
      uuid: "uuid130"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ResourceUtils"
        method: "getURL"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "loadConfiguration_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.net.URL"
      uuid: "load_uRL1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "location1"
      valueType: "java.lang.String"
      uuid: "loadConfiguration_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ResourceUtils"
      uuid: "uuid131"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "getConfigurationSource_file1-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.io.File"
      uuid: "getConfigurationSource_file1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ResourceUtils"
        method: "getURL"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "loadConfiguration_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.net.URL"
      uuid: "load_uRL1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.ResourceUtils"
      uuid: "uuid132"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ResourceUtils"
        method: "getURL"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "D"
            valueType: "java.lang.String"
            uuid: "loadConfiguration_object1"
            fixed: false
            collectionUuid: "loadConfiguration_list1"
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.net.URL"
      uuid: "load_uRL2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "resourceLocation1"
      valueType: "java.lang.String"
      uuid: "loadConfiguration_object1"
      fixed: false
      collectionUuid: "loadConfiguration_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid133"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path5"
    testPathName: "loadConfiguration1WhenOverridesIsEmptyAndConfigurationsSizeNotGreaterThan1"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "36FD7B592721826DD439ABBA0904518C"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "location"
      modelFingerprint: "C192C3D47C9857E221AEFB8803CC0175"
      index: 2
      valueUuid: "loadConfiguration_string1"
    - type: "INPUT"
      name: "logFile"
      modelFingerprint: "0CDB155A10F4A5FC7276123FEFFDF7E8"
      index: 3
      valueUuid: "loadConfiguration_logFile1"
    - type: "INPUT"
      name: "overrides"
      modelFingerprint: "DBD98099966FC18ED3F0E9FDEB2D9A70"
      index: 4
      valueUuid: "loadConfiguration_list1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "D3B677FB306D2DABF16686F1242D5C25"
      index: 5
      valueUuid: "uuid135"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "loadConfiguration_string1"
        - name: "message"
          valueUuid: "uuid134"
        signature: "notNull(String,String): void"
        returnValueUuid: "loadConfiguration_void1"
        access: 9
    - type: "STATIC"
      name: "ResourceUtils"
      modelFingerprint: "FCDE7BCB1BA59F275EAF703B9F95E203"
      index: 6
      idsTryCatchBlockSurrounding:
      - 4
      valueUuid: "uuid136"
      methodExercised:
        target: "org.springframework.util.ResourceUtils"
        name: "getURL"
        parameters:
        - name: "resourceLocation"
          valueUuid: "loadConfiguration_string1"
        throwsExceptions:
        - "java.io.FileNotFoundException"
        signature: "getURL(String): URL throws java.io.FileNotFoundException"
        returnValueUuid: "load_uRL1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 7
      valueUuid: "uuid137"
    uuid: "f27a894e-67db-3e9f-aac4-c5d5e07cbf9a"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "context"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.logging.log4j.core.net.ssl.SslConfigurationFactory.getSslConfiguration()\
        \ : org.apache.logging.log4j.core.net.ssl.SslConfiguration"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "location1"
      valueType: "java.lang.String"
      uuid: "loadConfiguration_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "loadConfiguration_logFile1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "loadConfiguration_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid135"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "loadConfiguration_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "location1"
      valueType: "java.lang.String"
      uuid: "loadConfiguration_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Location must not be null"
      valueType: "java.lang.String"
      uuid: "uuid134"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.ResourceUtils"
      uuid: "uuid136"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ResourceUtils"
        method: "getURL"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "loadConfiguration_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.net.URL"
      uuid: "load_uRL1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "location1"
      valueType: "java.lang.String"
      uuid: "loadConfiguration_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid137"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path6"
    testPathName: "loadConfiguration1WhenCaughtExceptionThrowsIllegalStateException"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "0B7E1EDC86C2CFE8419B94DBF9776150"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "33DBE822B0169F56403B38D4655C1973"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "location"
      modelFingerprint: "1905C6E97AB52DB67431F7E866FA8673"
      index: 2
      valueUuid: "loadConfiguration_string1"
    - type: "INPUT"
      name: "logFile"
      modelFingerprint: "1DAA72EE7A3367FA9D97B78C6DCDEC7B"
      index: 3
      valueUuid: "loadConfiguration_logFile1"
    - type: "INPUT"
      name: "overrides"
      modelFingerprint: "15FF41186B6A78D58468841E2ACA09E2"
      index: 4
      valueUuid: "loadConfiguration_list1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "484FA4BAB6ED91361EC1D63C892ACF7A"
      index: 5
      valueUuid: "uuid2"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "loadConfiguration_string1"
        - name: "message"
          valueUuid: "uuid1"
        signature: "notNull(String,String): void"
        returnValueUuid: "loadConfiguration_void1"
        access: 9
    - type: "STATIC"
      name: "ResourceUtils"
      modelFingerprint: "D526785114ACAB4BE2EFCF6C87C2E9BE"
      index: 6
      idsTryCatchBlockSurrounding:
      - 4
      valueUuid: "uuid3"
      methodExercised:
        target: "org.springframework.util.ResourceUtils"
        name: "getURL"
        parameters:
        - name: "resourceLocation"
          valueUuid: "loadConfiguration_string1"
        throwsExceptions:
        - "java.io.FileNotFoundException"
        signature: "getURL(String): URL throws java.io.FileNotFoundException"
        returnValueUuid: "load_uRL1"
        access: 9
    - type: "STATIC"
      name: "ResourceUtils"
      modelFingerprint: "72642D5CEB94C7D1B7C59271C6302B02"
      index: 7
      valueUuid: "uuid4"
      methodExercised:
        target: "org.springframework.util.ResourceUtils"
        name: "getFile"
        parameters:
        - name: "resourceUrl"
          valueUuid: "load_uRL1"
        throwsExceptions:
        - "java.io.FileNotFoundException"
        signature: "getFile(URL): File throws java.io.FileNotFoundException"
        returnValueUuid: "getConfigurationSource_file1"
        access: 9
    - type: "STATIC"
      name: "ResourceUtils"
      modelFingerprint: "95049586839FBC98BCA146680557D139"
      index: 8
      idsTryCatchBlockSurrounding:
      - 4
      valueUuid: "uuid5"
      methodExercised:
        target: "org.springframework.util.ResourceUtils"
        name: "getURL"
        parameters:
        - name: "resourceLocation"
          valueUuid: "loadConfiguration_list1-item0"
        throwsExceptions:
        - "java.io.FileNotFoundException"
        signature: "getURL(String): URL throws java.io.FileNotFoundException"
        returnValueUuid: "load_uRL2"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "607F88D5F558C7A50B7DD0E07D6E13A5"
      index: 9
      valueUuid: "load_uRL2"
      methodExercised:
        target: "url"
        name: "getProtocol"
        parameters: []
        signature: "getProtocol(): String"
        returnValueUuid: "getConfigurationSource_string2"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "url"
      modelFingerprint: "6CEC4D2FD9527E063DF1FE76E1AC89F4"
      index: 10
      valueUuid: "load_uRL2"
      methodExercised:
        target: "url"
        name: "getProtocol"
        parameters: []
        signature: "getProtocol(): String"
        returnValueUuid: "getConfigurationSource_string3"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "30595987AFE8FB0A7E44726F4CF9E303"
      index: 11
      valueUuid: "loadConfiguration_illegalStateException1"
    uuid: "d8aa49fb-f8d7-35a5-8379-a9af06a492bc"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "context"
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "return new ConfigurationSource(url.openStream(), ResourceUtils.getFile(url));"
      lineNumber: 310
      details: "No constructor found to create an object without any exception for\
        \ class org.apache.logging.log4j.core.config.ConfigurationSource"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "<value>"
      valueType: "java.lang.String"
      uuid: "loadConfiguration_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.logging.LogFile"
        method: "get"
        methodParameters:
        - name: "propertyResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertyResolver"
            uuid: "loadConfiguration_logFile1-propertyResolver"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "loadConfiguration_logFile1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "<value>"
          valueType: "java.lang.String"
          uuid: "loadConfiguration_list1-0"
          fixed: false
          collectionUuid: "loadConfiguration_list1"
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "loadConfiguration_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "loadConfiguration_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "<value>"
      valueType: "java.lang.String"
      uuid: "loadConfiguration_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Location must not be null"
      valueType: "java.lang.String"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ResourceUtils"
      uuid: "uuid3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "load_uRL1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "<value>"
      valueType: "java.lang.String"
      uuid: "loadConfiguration_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ResourceUtils"
      uuid: "uuid4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "getConfigurationSource_file1-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.io.File"
      uuid: "getConfigurationSource_file1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "load_uRL1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ResourceUtils"
      uuid: "uuid5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "load_uRL2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "<value>"
      valueType: "java.lang.String"
      uuid: "loadConfiguration_list1-item0"
      fixed: false
      collectionUuid: "loadConfiguration_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "load_uRL2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "getConfigurationSource_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "load_uRL2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "getConfigurationSource_string3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Could not initialize Log4J2 logging from <value>"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Exception"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Exception"
            uuid: "loadConfiguration_exception1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.IllegalStateException"
      uuid: "loadConfiguration_illegalStateException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path7"
    testPathName: "loadConfiguration1WhenConfigurationsSizeNotGreaterThan1AndCaughtExceptionThrowsIllegalStateException"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "686B5E27AF13E6F3468FFA5D0222F2DE"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "33DBE822B0169F56403B38D4655C1973"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "location"
      modelFingerprint: "1905C6E97AB52DB67431F7E866FA8673"
      index: 2
      valueUuid: "loadConfiguration_string1"
    - type: "INPUT"
      name: "logFile"
      modelFingerprint: "1DAA72EE7A3367FA9D97B78C6DCDEC7B"
      index: 3
      valueUuid: "loadConfiguration_logFile1"
    - type: "INPUT"
      name: "overrides"
      modelFingerprint: "15FF41186B6A78D58468841E2ACA09E2"
      index: 4
      valueUuid: "loadConfiguration_list1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "484FA4BAB6ED91361EC1D63C892ACF7A"
      index: 5
      valueUuid: "uuid2"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "loadConfiguration_string1"
        - name: "message"
          valueUuid: "uuid1"
        signature: "notNull(String,String): void"
        returnValueUuid: "loadConfiguration_void1"
        access: 9
    - type: "STATIC"
      name: "ResourceUtils"
      modelFingerprint: "1110CD3E404774BCC2AC2913AE33580B"
      index: 6
      idsTryCatchBlockSurrounding:
      - 4
      valueUuid: "uuid3"
      methodExercised:
        target: "org.springframework.util.ResourceUtils"
        name: "getURL"
        parameters:
        - name: "resourceLocation"
          valueUuid: "loadConfiguration_string1"
        throwsExceptions:
        - "java.io.FileNotFoundException"
        signature: "getURL(String): URL throws java.io.FileNotFoundException"
        returnValueUuid: "load_uRL1"
        access: 9
    - type: "STATIC"
      name: "ResourceUtils"
      modelFingerprint: "83987E56ACA3E5B70C10CB12DFA76451"
      index: 7
      valueUuid: "uuid4"
      methodExercised:
        target: "org.springframework.util.ResourceUtils"
        name: "getFile"
        parameters:
        - name: "resourceUrl"
          valueUuid: "load_uRL1"
        throwsExceptions:
        - "java.io.FileNotFoundException"
        signature: "getFile(URL): File throws java.io.FileNotFoundException"
        returnValueUuid: "getConfigurationSource_file1"
        access: 9
    - type: "STATIC"
      name: "ResourceUtils"
      modelFingerprint: "978C28F23A279624A54B1FD97D005ED5"
      index: 8
      idsTryCatchBlockSurrounding:
      - 4
      valueUuid: "uuid5"
      methodExercised:
        target: "org.springframework.util.ResourceUtils"
        name: "getURL"
        parameters:
        - name: "resourceLocation"
          valueUuid: "loadConfiguration_list1-item0"
        throwsExceptions:
        - "java.io.FileNotFoundException"
        signature: "getURL(String): URL throws java.io.FileNotFoundException"
        returnValueUuid: "load_uRL2"
        access: 9
    - type: "STATIC"
      name: "ResourceUtils"
      modelFingerprint: "72642D5CEB94C7D1B7C59271C6302B02"
      index: 9
      valueUuid: "uuid6"
      methodExercised:
        target: "org.springframework.util.ResourceUtils"
        name: "getFile"
        parameters:
        - name: "resourceUrl"
          valueUuid: "load_uRL2"
        throwsExceptions:
        - "java.io.FileNotFoundException"
        signature: "getFile(URL): File throws java.io.FileNotFoundException"
        returnValueUuid: "getConfigurationSource_file2"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "30595987AFE8FB0A7E44726F4CF9E303"
      index: 10
      valueUuid: "loadConfiguration_illegalStateException1"
    uuid: "540dc9f4-a650-3155-94d8-58e5c5618ec8"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "context"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return new ConfigurationSource(url.openStream(), ResourceUtils.getFile(url));"
      lineNumber: 310
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: url - Method: openStream"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "<value>"
      valueType: "java.lang.String"
      uuid: "loadConfiguration_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.logging.LogFile"
        method: "get"
        methodParameters:
        - name: "propertyResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertyResolver"
            uuid: "loadConfiguration_logFile1-propertyResolver"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "loadConfiguration_logFile1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "<value>"
          valueType: "java.lang.String"
          uuid: "loadConfiguration_list1-0"
          fixed: false
          collectionUuid: "loadConfiguration_list1"
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "loadConfiguration_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "loadConfiguration_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "<value>"
      valueType: "java.lang.String"
      uuid: "loadConfiguration_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Location must not be null"
      valueType: "java.lang.String"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ResourceUtils"
      uuid: "uuid3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ResourceUtils"
        method: "getURL"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "loadConfiguration_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.net.URL"
      uuid: "load_uRL1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "<value>"
      valueType: "java.lang.String"
      uuid: "loadConfiguration_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ResourceUtils"
      uuid: "uuid4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ResourceUtils"
        method: "getFile"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.springframework.util.ResourceUtils"
              method: "getURL"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "A"
                  valueType: "java.lang.String"
                  uuid: "loadConfiguration_string1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "java.net.URL"
            uuid: "load_uRL1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.io.File"
      uuid: "getConfigurationSource_file1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ResourceUtils"
        method: "getURL"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "loadConfiguration_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "java.net.URL"
      uuid: "load_uRL1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ResourceUtils"
      uuid: "uuid5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "load_uRL2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "<value>"
      valueType: "java.lang.String"
      uuid: "loadConfiguration_list1-item0"
      fixed: false
      collectionUuid: "loadConfiguration_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ResourceUtils"
      uuid: "uuid6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "getConfigurationSource_file2-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.io.File"
      uuid: "getConfigurationSource_file2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.net.URL"
      uuid: "load_uRL2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Could not initialize Log4J2 logging from <value>"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Exception"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Exception"
            uuid: "loadConfiguration_exception1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.IllegalStateException"
      uuid: "loadConfiguration_illegalStateException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "reinitialize"
    signature: "reinitialize(org.springframework.boot.logging.LoggingInitializationContext)\
      \ : void"
    sourceCodeSignature: "void reinitialize(LoggingInitializationContext initializationContext)"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 5
      catchExceptions:
      - "java.io.IOException"
    instructionFingerprint: "D6BBB0AFEC026F3FBB4A914F3DABEB15"
  paths:
  - pathId: "path4"
    testPathName: "reinitializeWhenCollectionUtilsIsEmptyOverrides"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "E83EE8D34A94FC5F7E362758E02E1024"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "initializationContext"
      modelFingerprint: "6B5E735AEB2BF4EE77E0CC7A52200F51"
      index: 2
      valueUuid: "reinitialize_loggingInitializationContext1"
    - type: "LOCAL_VARIABLE"
      name: "initializationContext"
      modelFingerprint: "A4EE79A0465B9933CC55990D9E2EDC3C"
      index: 3
      valueUuid: "reinitialize_loggingInitializationContext1"
      methodExercised:
        target: "initializationContext"
        name: "getEnvironment"
        parameters: []
        signature: "getEnvironment(): Environment"
        returnValueUuid: "getOverrides_environment1"
        access: 1
    - type: "STATIC"
      name: "Binder"
      modelFingerprint: "2C342FFB1725AF616E4CDB76A3B18287"
      index: 4
      valueUuid: "uuid145"
      methodExercised:
        target: "org.springframework.boot.context.properties.bind.Binder"
        name: "get"
        parameters:
        - name: "environment"
          valueUuid: "getOverrides_environment1"
        signature: "get(Environment): Binder"
        returnValueUuid: "getOverrides_binder1"
        access: 9
    - type: "STATIC"
      name: "Bindable"
      modelFingerprint: "62703D58B9ABCD45660E77174146D5B3"
      index: 5
      valueUuid: "uuid147"
      methodExercised:
        target: "org.springframework.boot.context.properties.bind.Bindable"
        name: "listOf"
        parameters:
        - name: "elementType"
          valueUuid: "uuid146"
        signature: "listOf(Class): Bindable"
        returnValueUuid: "getOverrides_bindable1"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "8FCD2F99F23F37A0675823497FB32E5D"
      index: 6
      valueUuid: "getOverrides_binder1"
      methodExercised:
        target: "org.springframework.boot.context.properties.bind.Binder"
        name: "bind"
        parameters:
        - name: "name"
          valueUuid: "uuid148"
        - name: "target"
          valueUuid: "getOverrides_bindable1"
        signature: "bind(String,Bindable): BindResult"
        returnValueUuid: "getOverrides_bindResult1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "overrides"
      modelFingerprint: "9C59276F2D8672888207360E4EEE2322"
      index: 7
      valueUuid: "getOverrides_bindResult1"
      methodExercised:
        target: "overrides"
        name: "orElse"
        parameters:
        - name: "other"
          valueUuid: "getOverrides_list1"
        signature: "orElse(List): Object"
        returnValueUuid: "getOverrides_object1"
        access: 1
    - type: "STATIC"
      name: "CollectionUtils"
      modelFingerprint: "AFA109693C7F1DFEEA520F7C1E876DD8"
      index: 8
      valueUuid: "uuid149"
      methodExercised:
        target: "org.springframework.util.CollectionUtils"
        name: "isEmpty"
        parameters:
        - name: "collection"
          valueUuid: "getOverrides_object1"
        signature: "isEmpty(List): boolean"
        returnValueUuid: "reinitialize_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 9
      valueUuid: "uuid150"
    uuid: "a685ca94-334b-303f-891a-f67e886f9ebb"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggingInitializationContext"
      uuid: "reinitialize_loggingInitializationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggingInitializationContext"
      uuid: "reinitialize_loggingInitializationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "getOverrides_environment1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "uuid145"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "getOverrides_binder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "getOverrides_environment1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "uuid147"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "listOf"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "getOverrides_bindable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid146"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "getOverrides_binder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.util.List<java.lang.String>"
      uuid: "getOverrides_bindResult1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "logging.log4j2.config.override"
      valueType: "java.lang.String"
      uuid: "uuid148"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "listOf"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "getOverrides_bindable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.util.List<java.lang.String>"
      uuid: "getOverrides_bindResult1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "getOverrides_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "getOverrides_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "uuid149"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "reinitialize_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "getOverrides_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "VOID"
      uuid: "uuid150"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "reinitializeWhenOverridesIsEmpty"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "CA0B1F8FAA62AF03A0E97580136817A3"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "708e21a1-8c80-33ff-8430-712ffd4740d5"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path1"
    testPathName: "reinitializeWhenFILE_PROTOCOLEqualsUrlGetProtocol"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "E204A9C7776435A2442D858E1DBD9CBE"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "initializationContext"
      modelFingerprint: "6B5E735AEB2BF4EE77E0CC7A52200F51"
      index: 2
      valueUuid: "reinitialize_loggingInitializationContext1"
    - type: "LOCAL_VARIABLE"
      name: "initializationContext"
      modelFingerprint: "A4EE79A0465B9933CC55990D9E2EDC3C"
      index: 3
      valueUuid: "reinitialize_loggingInitializationContext1"
      methodExercised:
        target: "initializationContext"
        name: "getEnvironment"
        parameters: []
        signature: "getEnvironment(): Environment"
        returnValueUuid: "getOverrides_environment1"
        access: 1
    - type: "STATIC"
      name: "Binder"
      modelFingerprint: "2C342FFB1725AF616E4CDB76A3B18287"
      index: 4
      valueUuid: "uuid157"
      methodExercised:
        target: "org.springframework.boot.context.properties.bind.Binder"
        name: "get"
        parameters:
        - name: "environment"
          valueUuid: "getOverrides_environment1"
        signature: "get(Environment): Binder"
        returnValueUuid: "getOverrides_binder1"
        access: 9
    - type: "STATIC"
      name: "Bindable"
      modelFingerprint: "62703D58B9ABCD45660E77174146D5B3"
      index: 5
      valueUuid: "uuid159"
      methodExercised:
        target: "org.springframework.boot.context.properties.bind.Bindable"
        name: "listOf"
        parameters:
        - name: "elementType"
          valueUuid: "uuid158"
        signature: "listOf(Class): Bindable"
        returnValueUuid: "getOverrides_bindable1"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "8FCD2F99F23F37A0675823497FB32E5D"
      index: 6
      valueUuid: "getOverrides_binder1"
      methodExercised:
        target: "org.springframework.boot.context.properties.bind.Binder"
        name: "bind"
        parameters:
        - name: "name"
          valueUuid: "uuid160"
        - name: "target"
          valueUuid: "getOverrides_bindable1"
        signature: "bind(String,Bindable): BindResult"
        returnValueUuid: "getOverrides_bindResult1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "overrides"
      modelFingerprint: "FEF4812C4C5ECD7A45C0D5BD06581D73"
      index: 7
      valueUuid: "getOverrides_bindResult1"
      methodExercised:
        target: "overrides"
        name: "orElse"
        parameters:
        - name: "other"
          valueUuid: "getOverrides_list1"
        signature: "orElse(List): Object"
        returnValueUuid: "getOverrides_object1"
        access: 1
    - type: "STATIC"
      name: "CollectionUtils"
      modelFingerprint: "4F1E3F3885F57C01D8BC31037DE5C0A9"
      index: 8
      valueUuid: "uuid161"
      methodExercised:
        target: "org.springframework.util.CollectionUtils"
        name: "isEmpty"
        parameters:
        - name: "collection"
          valueUuid: "getOverrides_object1"
        signature: "isEmpty(List): boolean"
        returnValueUuid: "reinitialize_boolean1"
        access: 9
    - type: "STATIC"
      name: "ResourceUtils"
      modelFingerprint: "D3857EB22988B2CFA0F8685DAAD1EA05"
      index: 9
      idsTryCatchBlockSurrounding:
      - 150005
      valueUuid: "uuid162"
      methodExercised:
        target: "org.springframework.util.ResourceUtils"
        name: "getURL"
        parameters:
        - name: "resourceLocation"
          valueUuid: "reinitializeWithOverrides_object1"
        throwsExceptions:
        - "java.io.FileNotFoundException"
        signature: "getURL(String): URL throws java.io.FileNotFoundException"
        returnValueUuid: "load_uRL1"
        access: 9
    - type: "STATIC"
      name: "ResourceUtils"
      modelFingerprint: "DD31B5B558433DF8091D592C9FAEEFEF"
      index: 10
      valueUuid: "uuid163"
      methodExercised:
        target: "org.springframework.util.ResourceUtils"
        name: "getFile"
        parameters:
        - name: "resourceUrl"
          valueUuid: "load_uRL1"
        throwsExceptions:
        - "java.io.FileNotFoundException"
        signature: "getFile(URL): File throws java.io.FileNotFoundException"
        returnValueUuid: "getConfigurationSource_file1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 11
      valueUuid: "uuid164"
    uuid: "6766b2ea-8957-3e06-83cf-da5f484e3d99"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "return new ConfigurationSource(url.openStream(), ResourceUtils.getFile(url));"
      lineNumber: 310
      details: "No constructor found to create an object without any exception for\
        \ class org.apache.logging.log4j.core.config.ConfigurationSource"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggingInitializationContext"
      uuid: "reinitialize_loggingInitializationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggingInitializationContext"
      uuid: "reinitialize_loggingInitializationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "getOverrides_environment1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "uuid157"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "getOverrides_binder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "getOverrides_environment1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "uuid159"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "listOf"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "getOverrides_bindable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid158"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "getOverrides_binder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.util.List<java.lang.String>"
      uuid: "getOverrides_bindResult1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "logging.log4j2.config.override"
      valueType: "java.lang.String"
      uuid: "uuid160"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "listOf"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "getOverrides_bindable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.util.List<java.lang.String>"
      uuid: "getOverrides_bindResult1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "A"
          valueType: "java.lang.String"
          uuid: "reinitializeWithOverrides_object1"
          fixed: false
          collectionUuid: "getOverrides_object1"
          equalsMethodPresent: false
          explicitCastNeeded: true
      valueType: "java.util.List"
      uuid: "getOverrides_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "getOverrides_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "uuid161"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "reinitialize_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "A"
          valueType: "java.lang.String"
          uuid: "reinitializeWithOverrides_object1"
          fixed: false
          collectionUuid: "getOverrides_object1"
          equalsMethodPresent: false
          explicitCastNeeded: true
      valueType: "java.util.List"
      uuid: "getOverrides_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ResourceUtils"
      uuid: "uuid162"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ResourceUtils"
        method: "getURL"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "reinitializeWithOverrides_object1"
            fixed: false
            collectionUuid: "getOverrides_object1"
            equalsMethodPresent: false
            explicitCastNeeded: true
      valueType: "java.net.URL"
      uuid: "load_uRL1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "reinitializeWithOverrides_object1"
      fixed: false
      collectionUuid: "getOverrides_object1"
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ResourceUtils"
      uuid: "uuid163"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "getConfigurationSource_file1-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.io.File"
      uuid: "getConfigurationSource_file1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ResourceUtils"
        method: "getURL"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "reinitializeWithOverrides_object1"
            fixed: false
            collectionUuid: "getOverrides_object1"
            equalsMethodPresent: false
            explicitCastNeeded: true
      valueType: "java.net.URL"
      uuid: "load_uRL1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid164"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "reinitializeWhenUrlGetProtocolEqualsHttps"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "C8D2B7338CCAE00A9EBF54D0342CC198"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "initializationContext"
      modelFingerprint: "6B5E735AEB2BF4EE77E0CC7A52200F51"
      index: 2
      valueUuid: "reinitialize_loggingInitializationContext1"
    - type: "LOCAL_VARIABLE"
      name: "initializationContext"
      modelFingerprint: "A4EE79A0465B9933CC55990D9E2EDC3C"
      index: 3
      valueUuid: "reinitialize_loggingInitializationContext1"
      methodExercised:
        target: "initializationContext"
        name: "getEnvironment"
        parameters: []
        signature: "getEnvironment(): Environment"
        returnValueUuid: "getOverrides_environment1"
        access: 1
    - type: "STATIC"
      name: "Binder"
      modelFingerprint: "2C342FFB1725AF616E4CDB76A3B18287"
      index: 4
      valueUuid: "uuid165"
      methodExercised:
        target: "org.springframework.boot.context.properties.bind.Binder"
        name: "get"
        parameters:
        - name: "environment"
          valueUuid: "getOverrides_environment1"
        signature: "get(Environment): Binder"
        returnValueUuid: "getOverrides_binder1"
        access: 9
    - type: "STATIC"
      name: "Bindable"
      modelFingerprint: "62703D58B9ABCD45660E77174146D5B3"
      index: 5
      valueUuid: "uuid167"
      methodExercised:
        target: "org.springframework.boot.context.properties.bind.Bindable"
        name: "listOf"
        parameters:
        - name: "elementType"
          valueUuid: "uuid166"
        signature: "listOf(Class): Bindable"
        returnValueUuid: "getOverrides_bindable1"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "8FCD2F99F23F37A0675823497FB32E5D"
      index: 6
      valueUuid: "getOverrides_binder1"
      methodExercised:
        target: "org.springframework.boot.context.properties.bind.Binder"
        name: "bind"
        parameters:
        - name: "name"
          valueUuid: "uuid168"
        - name: "target"
          valueUuid: "getOverrides_bindable1"
        signature: "bind(String,Bindable): BindResult"
        returnValueUuid: "getOverrides_bindResult1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "overrides"
      modelFingerprint: "9C59276F2D8672888207360E4EEE2322"
      index: 7
      valueUuid: "getOverrides_bindResult1"
      methodExercised:
        target: "overrides"
        name: "orElse"
        parameters:
        - name: "other"
          valueUuid: "getOverrides_list1"
        signature: "orElse(List): Object"
        returnValueUuid: "getOverrides_object1"
        access: 1
    - type: "STATIC"
      name: "CollectionUtils"
      modelFingerprint: "AFC3D2F9E9EC1ABB469FA2BAA802F3EC"
      index: 8
      valueUuid: "uuid169"
      methodExercised:
        target: "org.springframework.util.CollectionUtils"
        name: "isEmpty"
        parameters:
        - name: "collection"
          valueUuid: "getOverrides_object1"
        signature: "isEmpty(List): boolean"
        returnValueUuid: "reinitialize_boolean1"
        access: 9
    - type: "STATIC"
      name: "ResourceUtils"
      modelFingerprint: "FCDE7BCB1BA59F275EAF703B9F95E203"
      index: 9
      idsTryCatchBlockSurrounding:
      - 150005
      valueUuid: "uuid170"
      methodExercised:
        target: "org.springframework.util.ResourceUtils"
        name: "getURL"
        parameters:
        - name: "resourceLocation"
          valueUuid: "reinitializeWithOverrides_object1"
        throwsExceptions:
        - "java.io.FileNotFoundException"
        signature: "getURL(String): URL throws java.io.FileNotFoundException"
        returnValueUuid: "load_uRL1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 10
      valueUuid: "uuid171"
    uuid: "73051d0c-d289-35df-91e8-d45e6e9b0ee1"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.logging.log4j.core.net.ssl.SslConfigurationFactory.getSslConfiguration()\
        \ : org.apache.logging.log4j.core.net.ssl.SslConfiguration"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggingInitializationContext"
      uuid: "reinitialize_loggingInitializationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggingInitializationContext"
      uuid: "reinitialize_loggingInitializationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "getOverrides_environment1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "uuid165"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "getOverrides_binder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "getOverrides_environment1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "uuid167"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "listOf"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "getOverrides_bindable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid166"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "getOverrides_binder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.util.List<java.lang.String>"
      uuid: "getOverrides_bindResult1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "logging.log4j2.config.override"
      valueType: "java.lang.String"
      uuid: "uuid168"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "listOf"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "getOverrides_bindable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.util.List<java.lang.String>"
      uuid: "getOverrides_bindResult1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "getOverrides_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "getOverrides_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "uuid169"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "reinitialize_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "getOverrides_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ResourceUtils"
      uuid: "uuid170"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ResourceUtils"
        method: "getURL"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "reinitializeWithOverrides_object1"
            fixed: false
            collectionUuid: "getOverrides_object1"
            equalsMethodPresent: false
            explicitCastNeeded: true
      valueType: "java.net.URL"
      uuid: "load_uRL1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "resourceLocation1"
      valueType: "java.lang.String"
      uuid: "reinitializeWithOverrides_object1"
      fixed: false
      collectionUuid: "getOverrides_object1"
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "VOID"
      uuid: "uuid171"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path5"
    testPathName: "reinitializeWhenCaughtIOExceptionThrowsRuntimeException"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "E7F4290BD0A96EAA411454E655E394BF"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 15
      id: 5
      catchExceptions:
      - "java.io.IOException"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "33DBE822B0169F56403B38D4655C1973"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "initializationContext"
      modelFingerprint: "5695612C32BA13ECDA331F4E7D216F53"
      index: 2
      valueUuid: "reinitialize_loggingInitializationContext1"
    - type: "LOCAL_VARIABLE"
      name: "initializationContext"
      modelFingerprint: "D281F582FE8D1D2F3A491B2AAE1C6191"
      index: 3
      valueUuid: "reinitialize_loggingInitializationContext1"
      methodExercised:
        target: "initializationContext"
        name: "getEnvironment"
        parameters: []
        signature: "getEnvironment(): Environment"
        returnValueUuid: "getOverrides_environment1"
        access: 1
    - type: "STATIC"
      name: "Binder"
      modelFingerprint: "97B24B72ABF2AD7AB5B818810B168773"
      index: 4
      valueUuid: "uuid1"
      methodExercised:
        target: "org.springframework.boot.context.properties.bind.Binder"
        name: "get"
        parameters:
        - name: "environment"
          valueUuid: "getOverrides_environment1"
        signature: "get(Environment): Binder"
        returnValueUuid: "getOverrides_binder1"
        access: 9
    - type: "STATIC"
      name: "Bindable"
      modelFingerprint: "D3FE30868CC85ABE4764AD0DF6412356"
      index: 5
      valueUuid: "uuid3"
      methodExercised:
        target: "org.springframework.boot.context.properties.bind.Bindable"
        name: "listOf"
        parameters:
        - name: "elementType"
          valueUuid: "uuid2"
        signature: "listOf(Class): Bindable"
        returnValueUuid: "getOverrides_bindable1"
        access: 9
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9A897890A1ADD3B327AE142DB1F2E43A"
      index: 6
      valueUuid: "getOverrides_binder1"
      methodExercised:
        target: "org.springframework.boot.context.properties.bind.Binder"
        name: "bind"
        parameters:
        - name: "name"
          valueUuid: "uuid4"
        - name: "target"
          valueUuid: "getOverrides_bindable1"
        signature: "bind(String,Bindable): BindResult"
        returnValueUuid: "getOverrides_bindResult1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "overrides"
      modelFingerprint: "C4B5E0105BF563CEF77425BCA4DFA128"
      index: 7
      valueUuid: "getOverrides_bindResult1"
      methodExercised:
        target: "overrides"
        name: "orElse"
        parameters:
        - name: "other"
          valueUuid: "getOverrides_list1"
        signature: "orElse(List): Object"
        returnValueUuid: "getOverrides_object1"
        access: 1
    - type: "STATIC"
      name: "CollectionUtils"
      modelFingerprint: "7B7CDDAD862F239F641636844002D8DC"
      index: 8
      valueUuid: "uuid5"
      methodExercised:
        target: "org.springframework.util.CollectionUtils"
        name: "isEmpty"
        parameters:
        - name: "collection"
          valueUuid: "getOverrides_object1"
        signature: "isEmpty(List): boolean"
        returnValueUuid: "reinitialize_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 9
      valueUuid: "uuid6"
    uuid: "61e61526-e4ed-3c74-bfd7-3062419e3331"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "DEPENDENCY_TO_THROW_EXCEPTION_NOT_FOUND"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LoggingInitializationContext"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "reinitialize_loggingInitializationContext1-environment"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.LoggingInitializationContext"
      uuid: "reinitialize_loggingInitializationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LoggingInitializationContext"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "reinitialize_loggingInitializationContext1-environment"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.LoggingInitializationContext"
      uuid: "reinitialize_loggingInitializationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "getOverrides_environment1"
      fixed: false
      nameForMock: "Environment"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "uuid1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "getOverrides_binder1"
      fixed: false
      nameForMock: "BindResult"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "getOverrides_environment1"
      fixed: false
      nameForMock: "Environment"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "uuid3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "listOf"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "getOverrides_bindable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.String"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.String"
      uuid: "uuid2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "getOverrides_binder1"
      fixed: false
      nameForMock: "BindResult"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.util.List<java.lang.String>"
      uuid: "getOverrides_bindResult1"
      fixed: false
      nameForMock: "Binder"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "logging.log4j2.config.override"
      valueType: "java.lang.String"
      uuid: "uuid4"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "listOf"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.String"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "getOverrides_bindable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.util.List<java.lang.String>"
      uuid: "getOverrides_bindResult1"
      fixed: false
      nameForMock: "Binder"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "getOverrides_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "getOverrides_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "uuid5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "reinitialize_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "getOverrides_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "VOID"
      uuid: "uuid6"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "getSupportedLogLevels"
    signature: "getSupportedLogLevels() : java.util.Set<org.springframework.boot.logging.LogLevel>"
    sourceCodeSignature: "Set<LogLevel> getSupportedLogLevels()"
    instructionFingerprint: "653C4270B007FB1CFE98607766E8C982"
  paths:
  - pathId: "path1"
    testPathName: "getSupportedLogLevelsTest"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "122C02275A101F73F99F40ABA889AFD0"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "4823A1F66F466BA8ECBC9C336AC784C4"
      index: 2
      valueUuid: "getSupportedLogLevels_set1"
    uuid: "82f1eac0-2fc3-39e9-ac77-65b21be0daa5"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "LEVELS"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return LEVELS.getSupported();"
      lineNumber: 356
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: LEVELS - Method: getSupported"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "org.springframework.boot.logging.LogLevel"
      uuid: "getSupportedLogLevels_set1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "setLogLevel"
    signature: "setLogLevel(java.lang.String,org.springframework.boot.logging.LogLevel)\
      \ : void"
    sourceCodeSignature: "void setLogLevel(String loggerName, LogLevel logLevel)"
    instructionFingerprint: "4DBF611D886E8B64DFA8CA786D002A53"
  paths:
  - pathId: "path6"
    testPathName: "setLogLevelWhenLoggerIsNotNull"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "EC0E92BFE41AEAB525332079E1ADFA3A"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "afa371c0-8f78-3bee-bcd5-b73f6570c925"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return configuration.getLoggers().get(name);"
      lineNumber: 477
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: configuration - Method: getLoggers"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path1"
    testPathName: "setLogLevelWhenLoggerInstanceOfLevelSetLoggerConfig"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "3B7DBD935CDD3F410852B2037C80830E"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "loggerName"
      modelFingerprint: "FBB072D801211A7403EFF6CBA1DAD229"
      index: 2
      valueUuid: "setLogLevel_string1"
    - type: "INPUT"
      name: "logLevel"
      modelFingerprint: "E3A96E58D9C4AF8FFBCDF494B39088C1"
      index: 3
      valueUuid: "setLogLevel_logLevel1"
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "DCEE237A5FD7797752D45C52348B82CB"
      index: 4
      valueUuid: "uuid180"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "setLogLevel_string1"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getLogger_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 5
      valueUuid: "uuid181"
    uuid: "4f71b61b-ff36-31d1-9931-6c03e10a642a"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return configuration.getLoggers().get(name);"
      lineNumber: 477
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: configuration - Method: getLoggers"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "ROOT"
      valueType: "java.lang.String"
      uuid: "setLogLevel_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "OFF"
      valueType: "org.springframework.boot.logging.LogLevel"
      uuid: "setLogLevel_logLevel1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid180"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getLogger_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "ROOT"
      valueType: "java.lang.String"
      uuid: "setLogLevel_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid181"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "setLogLevelWhenLoggerNotInstanceOfLevelSetLoggerConfig"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "41CC6D85C7B6186D46D6C3098E778929"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "loggerName"
      modelFingerprint: "FBB072D801211A7403EFF6CBA1DAD229"
      index: 2
      valueUuid: "setLogLevel_string1"
    - type: "INPUT"
      name: "logLevel"
      modelFingerprint: "E3A96E58D9C4AF8FFBCDF494B39088C1"
      index: 3
      valueUuid: "setLogLevel_logLevel1"
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "DCEE237A5FD7797752D45C52348B82CB"
      index: 4
      valueUuid: "uuid182"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "setLogLevel_string1"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getLogger_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 5
      valueUuid: "uuid183"
    uuid: "2f9c7e8f-1b65-3bd6-8974-1f213ca9d8f5"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return configuration.getLoggers().get(name);"
      lineNumber: 477
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: configuration - Method: getLoggers"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "ROOT"
      valueType: "java.lang.String"
      uuid: "setLogLevel_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "OFF"
      valueType: "org.springframework.boot.logging.LogLevel"
      uuid: "setLogLevel_logLevel1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid182"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getLogger_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "ROOT"
      valueType: "java.lang.String"
      uuid: "setLogLevel_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid183"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "setLogLevelWhenLoggerIsNull"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "82224647F7F7FD5A8F9A1CD80EF33B94"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "loggerName"
      modelFingerprint: "FBB072D801211A7403EFF6CBA1DAD229"
      index: 2
      valueUuid: "setLogLevel_string1"
    - type: "INPUT"
      name: "logLevel"
      modelFingerprint: "E3A96E58D9C4AF8FFBCDF494B39088C1"
      index: 3
      valueUuid: "setLogLevel_logLevel1"
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "DCEE237A5FD7797752D45C52348B82CB"
      index: 4
      valueUuid: "uuid184"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "setLogLevel_string1"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getLogger_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 5
      valueUuid: "uuid185"
    uuid: "2fbc11d0-1059-3424-9dc7-76227f1299b1"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return configuration.getLoggers().get(name);"
      lineNumber: 477
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: configuration - Method: getLoggers"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "ROOT"
      valueType: "java.lang.String"
      uuid: "setLogLevel_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "OFF"
      valueType: "org.springframework.boot.logging.LogLevel"
      uuid: "setLogLevel_logLevel1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid184"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getLogger_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "ROOT"
      valueType: "java.lang.String"
      uuid: "setLogLevel_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid185"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path4"
    testPathName: "setLogLevelWhenLevelIsNotNullAndLoggerIsNotNull"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "B03680FCCF61C635EE8CAAEE71AF58A2"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "e8117f8e-a0ff-3bb6-9173-f1c166a95c01"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return configuration.getLoggers().get(name);"
      lineNumber: 477
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: configuration - Method: getLoggers"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path5"
    testPathName: "setLogLevelWhenConfigurationNotInstanceOfAbstractConfigurationAndLevelIsNotNullAndLoggerIsNotNull"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "0FE56C6BCC86B2A00D5D7735260E603C"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "loggerName"
      modelFingerprint: "808AEBECE5F69CA0DBA92AD1FC8B131D"
      index: 2
      valueUuid: "setLogLevel_string1"
    - type: "INPUT"
      name: "logLevel"
      modelFingerprint: "E29E6268F3D0CB6AF65CEEC37233E6DB"
      index: 3
      valueUuid: "setLogLevel_logLevel1"
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "2766556252BD409162DF2BE5FBEF6C89"
      index: 4
      valueUuid: "uuid188"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "setLogLevel_string1"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getLogger_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 5
      valueUuid: "uuid189"
    uuid: "8a1dbccf-d2b4-351d-8466-d02e1f490a6f"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return configuration.getLoggers().get(name);"
      lineNumber: 477
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: configuration - Method: getLoggers"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "H"
      valueType: "java.lang.String"
      uuid: "setLogLevel_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "FATAL"
      valueType: "org.springframework.boot.logging.LogLevel"
      uuid: "setLogLevel_logLevel1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid188"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getLogger_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "H"
      valueType: "java.lang.String"
      uuid: "setLogLevel_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid189"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "getLoggerConfigurations"
    signature: "getLoggerConfigurations() : java.util.List<org.springframework.boot.logging.LoggerConfiguration>"
    sourceCodeSignature: "List<LoggerConfiguration> getLoggerConfigurations()"
    instructionFingerprint: "1114AFCC9A6BC9171BACAF2000B1F3DB"
  paths:
  - pathId: "path7"
    testPathName: "getLoggerConfigurationsWhenNameIsNull"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "A7059647C556C8F85CBEF7E7AF4CA594"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "cadbaafa-dd2b-3ab4-96de-8b7f054e2a99"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (Logger logger : getLoggerContext().getLoggers()) {"
      lineNumber: 410
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type LoggerContext - Method: getLoggers"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path8"
    testPathName: "getLoggerConfigurationsWhenGetLoggerContextGetLoggersIsEmptyAndNameIsNull"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "CE8B5B35B9B57E891A840A9798B0F4BD"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "f9d729e5-7c84-3aa9-a6a2-33dc6579b726"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (Logger logger : getLoggerContext().getLoggers()) {"
      lineNumber: 410
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type LoggerContext - Method: getLoggers"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path4"
    testPathName: "getLoggerConfigurationsWhenStringUtilsNotHasLengthName"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "01BE0C01C664BC9D60E2BF6C78CF36AE"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "5215f87a-b66a-388c-acdb-5d646df8cfb1"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (Logger logger : getLoggerContext().getLoggers()) {"
      lineNumber: 410
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type LoggerContext - Method: getLoggers"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path1"
    testPathName: "getLoggerConfigurationsWhenNameIsNotNullAndStringUtilsNotHasLengthName"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "936F3510C2ECE0B9A0D507C039260814"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "9EDA9A1C8D1A5B62C977015D2D0E2DB7"
      index: 2
      valueUuid: "uuid191"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "getAllLoggers_string1"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getSubName_boolean1"
        access: 9
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "86415DFCA2E8AC06342C9AF37ECC9C8C"
      index: 3
      valueUuid: "uuid192"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "getAllLoggers_string2"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getSubName_boolean2"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "49B6F45EB3640F088C0AB1E1AB74C330"
      index: 4
      valueUuid: "getLoggerConfigurations_arrayList1"
    uuid: "9c94009e-fe8c-3833-9f2d-9490db49a114"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (Logger logger : getLoggerContext().getLoggers()) {"
      lineNumber: 410
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type LoggerContext - Method: getLoggers"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid191"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getSubName_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "getAllLoggers_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid192"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getSubName_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "getAllLoggers_string2"
      fixed: false
      collectionUuid: "getAllLoggers_set1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.logging.LoggerConfiguration"
      uuid: "getLoggerConfigurations_arrayList1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "getLoggerConfigurationsWhenNestedNotEqualsMinus1"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "6EA899CD0E5CC5280C763673BA707DF2"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "CA277A78CB6F764EB5FE7B616A5644CF"
      index: 2
      valueUuid: "uuid193"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "getAllLoggers_string1"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getSubName_boolean1"
        access: 9
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "CA277A78CB6F764EB5FE7B616A5644CF"
      index: 3
      valueUuid: "uuid194"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "getAllLoggers_string2"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getSubName_boolean2"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "49B6F45EB3640F088C0AB1E1AB74C330"
      index: 4
      valueUuid: "getLoggerConfigurations_arrayList1"
    uuid: "75144fbe-7d4d-3d92-839c-6436163dba92"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (Logger logger : getLoggerContext().getLoggers()) {"
      lineNumber: 410
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type LoggerContext - Method: getLoggers"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid193"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getSubName_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "str1"
      valueType: "java.lang.String"
      uuid: "getAllLoggers_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid194"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getSubName_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "str1"
      valueType: "java.lang.String"
      uuid: "getAllLoggers_string2"
      fixed: false
      collectionUuid: "getAllLoggers_set1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.logging.LoggerConfiguration"
      uuid: "getLoggerConfigurations_arrayList1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "getLoggerConfigurationsWhenNestedEqualsMinus1"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "2521668EC79D81B2AA6E10F1D11AB18E"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "9EDA9A1C8D1A5B62C977015D2D0E2DB7"
      index: 2
      valueUuid: "uuid195"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "getAllLoggers_string1"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getSubName_boolean1"
        access: 9
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "304796640D18CA0948BF36FE7432D660"
      index: 3
      valueUuid: "uuid196"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "getAllLoggers_string2"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getSubName_boolean2"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "49B6F45EB3640F088C0AB1E1AB74C330"
      index: 4
      valueUuid: "getLoggerConfigurations_arrayList1"
    uuid: "f636a692-ea74-31f8-8049-b007999c238f"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (Logger logger : getLoggerContext().getLoggers()) {"
      lineNumber: 410
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type LoggerContext - Method: getLoggers"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid195"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getSubName_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "getAllLoggers_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid196"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getSubName_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "getAllLoggers_string2"
      fixed: false
      collectionUuid: "getAllLoggers_set1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.logging.LoggerConfiguration"
      uuid: "getLoggerConfigurations_arrayList1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path5"
    testPathName: "getLoggerConfigurationsWhenStringUtilsHasLengthNameAndNestedNotEqualsMinus1"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "AE2D31A20609CDD6F7B0E2820E7ECD48"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "CA277A78CB6F764EB5FE7B616A5644CF"
      index: 2
      valueUuid: "uuid197"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "getAllLoggers_string1"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getSubName_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "49B6F45EB3640F088C0AB1E1AB74C330"
      index: 3
      valueUuid: "getLoggerConfigurations_arrayList1"
    uuid: "85f45050-775f-31bd-9e14-ced307a7a2ea"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (Logger logger : getLoggerContext().getLoggers()) {"
      lineNumber: 410
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type LoggerContext - Method: getLoggers"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid197"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getSubName_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "str1"
      valueType: "java.lang.String"
      uuid: "getAllLoggers_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.logging.LoggerConfiguration"
      uuid: "getLoggerConfigurations_arrayList1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path6"
    testPathName: "getLoggerConfigurationsWhenStringUtilsHasLengthNameAndNestedEqualsMinus1"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "7E557E1633AC47426F7F5AB3D470E07F"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "0ADC91B76C5E1D2A8701BB911882A91E"
      index: 2
      valueUuid: "uuid198"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "getAllLoggers_string1"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getSubName_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "49B6F45EB3640F088C0AB1E1AB74C330"
      index: 3
      valueUuid: "getLoggerConfigurations_arrayList1"
    uuid: "59989881-4c0e-33d2-a920-9f1f6e543cee"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (Logger logger : getLoggerContext().getLoggers()) {"
      lineNumber: 410
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type LoggerContext - Method: getLoggers"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid198"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getSubName_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "getAllLoggers_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.logging.LoggerConfiguration"
      uuid: "getLoggerConfigurations_arrayList1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "getLoggerConfiguration"
    signature: "getLoggerConfiguration(java.lang.String) : org.springframework.boot.logging.LoggerConfiguration"
    sourceCodeSignature: "LoggerConfiguration getLoggerConfiguration(String loggerName)"
    instructionFingerprint: "4D4480EC1A71AA8561E0D2B7AC857455"
  paths:
  - pathId: "path7"
    testPathName: "getLoggerConfigurationWhenLoggerConfigIsNull"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "3A9BC339E5713819E239DAF4A05DECAC"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "2e219e58-90df-3d48-beab-c76f805fee61"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (Logger logger : getLoggerContext().getLoggers()) {"
      lineNumber: 410
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type LoggerContext - Method: getLoggers"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path8"
    testPathName: "getLoggerConfigurationWhenNameIsNullAndLoggerConfigIsNull"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "32EC4C0362A69CC5F2EE96031202759B"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "b0dfad8e-2b81-361c-9ec6-fad82ed63b59"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (Logger logger : getLoggerContext().getLoggers()) {"
      lineNumber: 410
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type LoggerContext - Method: getLoggers"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path4"
    testPathName: "getLoggerConfigurationWhenStringUtilsNotHasLengthNameAndLoggerConfigIsNull"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "EFEDE89FE73888B684394E3DECD80E81"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "343e8aed-a4b8-3c09-8219-e5b301c95760"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (Logger logger : getLoggerContext().getLoggers()) {"
      lineNumber: 410
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type LoggerContext - Method: getLoggers"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path1"
    testPathName: "getLoggerConfigurationWhenNameIsNotNullAndStringUtilsNotHasLengthNameAndLoggerConfigIsNull"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "813CCCFB17092E8DD378C87427B7E85D"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "loggerName"
      modelFingerprint: "BA79335EFF848F00AB285149B73761F5"
      index: 2
      valueUuid: "getLoggerConfiguration_string1"
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "9EDA9A1C8D1A5B62C977015D2D0E2DB7"
      index: 3
      valueUuid: "uuid200"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "getAllLoggers_string1"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getSubName_boolean1"
        access: 9
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "86415DFCA2E8AC06342C9AF37ECC9C8C"
      index: 4
      valueUuid: "uuid201"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "getAllLoggers_string2"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getSubName_boolean2"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3CF264C0FD69582F3E4F116469D4F550"
      index: 5
      valueUuid: "getLoggerConfiguration_loggerConfiguration1"
    uuid: "9d7e2a04-2bd5-3212-82fc-2d58ccc9f082"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (Logger logger : getLoggerContext().getLoggers()) {"
      lineNumber: 410
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type LoggerContext - Method: getLoggers"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "loggerName1"
      valueType: "java.lang.String"
      uuid: "getLoggerConfiguration_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid200"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getSubName_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "getAllLoggers_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid201"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getSubName_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "getAllLoggers_string2"
      fixed: false
      collectionUuid: "getAllLoggers_set1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.springframework.boot.logging.LoggerConfiguration"
      uuid: "getLoggerConfiguration_loggerConfiguration1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "getLoggerConfigurationWhenNestedNotEqualsMinus1AndLoggerConfigIsNull"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "EE6B7C3354B35A87F392DEDE545DBDC9"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "loggerName"
      modelFingerprint: "BA79335EFF848F00AB285149B73761F5"
      index: 2
      valueUuid: "getLoggerConfiguration_string1"
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "CA277A78CB6F764EB5FE7B616A5644CF"
      index: 3
      valueUuid: "uuid202"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "getAllLoggers_string1"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getSubName_boolean1"
        access: 9
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "CA277A78CB6F764EB5FE7B616A5644CF"
      index: 4
      valueUuid: "uuid203"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "getAllLoggers_string2"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getSubName_boolean2"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3CF264C0FD69582F3E4F116469D4F550"
      index: 5
      valueUuid: "getLoggerConfiguration_loggerConfiguration1"
    uuid: "fff33724-7d56-30ca-9607-4a7e526424f2"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (Logger logger : getLoggerContext().getLoggers()) {"
      lineNumber: 410
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type LoggerContext - Method: getLoggers"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "loggerName1"
      valueType: "java.lang.String"
      uuid: "getLoggerConfiguration_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid202"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getSubName_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "str1"
      valueType: "java.lang.String"
      uuid: "getAllLoggers_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid203"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getSubName_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "str1"
      valueType: "java.lang.String"
      uuid: "getAllLoggers_string2"
      fixed: false
      collectionUuid: "getAllLoggers_set1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.springframework.boot.logging.LoggerConfiguration"
      uuid: "getLoggerConfiguration_loggerConfiguration1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "getLoggerConfigurationWhenNestedEqualsMinus1AndLoggerConfigIsNull"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "4843173106ADF72073F7F75B1AD82130"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "loggerName"
      modelFingerprint: "BA79335EFF848F00AB285149B73761F5"
      index: 2
      valueUuid: "getLoggerConfiguration_string1"
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "9EDA9A1C8D1A5B62C977015D2D0E2DB7"
      index: 3
      valueUuid: "uuid204"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "getAllLoggers_string1"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getSubName_boolean1"
        access: 9
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "304796640D18CA0948BF36FE7432D660"
      index: 4
      valueUuid: "uuid205"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "getAllLoggers_string2"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getSubName_boolean2"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3CF264C0FD69582F3E4F116469D4F550"
      index: 5
      valueUuid: "getLoggerConfiguration_loggerConfiguration1"
    uuid: "8b84268a-d0ad-3efe-a940-094ccd57c5f3"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (Logger logger : getLoggerContext().getLoggers()) {"
      lineNumber: 410
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type LoggerContext - Method: getLoggers"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "loggerName1"
      valueType: "java.lang.String"
      uuid: "getLoggerConfiguration_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid204"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getSubName_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "getAllLoggers_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid205"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getSubName_boolean2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "getAllLoggers_string2"
      fixed: false
      collectionUuid: "getAllLoggers_set1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.springframework.boot.logging.LoggerConfiguration"
      uuid: "getLoggerConfiguration_loggerConfiguration1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path5"
    testPathName: "getLoggerConfigurationWhenStringUtilsHasLengthNameAndNestedNotEqualsMinus1AndLoggerConfigIsNull"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "92AFD53C41A8EFAC7AEFD1A30E90ACED"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "loggerName"
      modelFingerprint: "BA79335EFF848F00AB285149B73761F5"
      index: 2
      valueUuid: "getLoggerConfiguration_string1"
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "CA277A78CB6F764EB5FE7B616A5644CF"
      index: 3
      valueUuid: "uuid206"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "getAllLoggers_string1"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getSubName_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3CF264C0FD69582F3E4F116469D4F550"
      index: 4
      valueUuid: "getLoggerConfiguration_loggerConfiguration1"
    uuid: "1e34fca2-ba0d-3590-9e51-0e147f83fe12"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (Logger logger : getLoggerContext().getLoggers()) {"
      lineNumber: 410
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type LoggerContext - Method: getLoggers"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "loggerName1"
      valueType: "java.lang.String"
      uuid: "getLoggerConfiguration_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid206"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getSubName_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "str1"
      valueType: "java.lang.String"
      uuid: "getAllLoggers_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.springframework.boot.logging.LoggerConfiguration"
      uuid: "getLoggerConfiguration_loggerConfiguration1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path6"
    testPathName: "getLoggerConfigurationWhenStringUtilsHasLengthNameAndNestedEqualsMinus1AndLoggerConfigIsNull"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "32A1860CB5CEC8DF7ACB05A293961290"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "loggerName"
      modelFingerprint: "BA79335EFF848F00AB285149B73761F5"
      index: 2
      valueUuid: "getLoggerConfiguration_string1"
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "0ADC91B76C5E1D2A8701BB911882A91E"
      index: 3
      valueUuid: "uuid207"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "getAllLoggers_string1"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getSubName_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3CF264C0FD69582F3E4F116469D4F550"
      index: 4
      valueUuid: "getLoggerConfiguration_loggerConfiguration1"
    uuid: "2dad2123-9a79-3761-bd9f-85b4c4ac19ed"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (Logger logger : getLoggerContext().getLoggers()) {"
      lineNumber: 410
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: object of type LoggerContext - Method: getLoggers"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "loggerName1"
      valueType: "java.lang.String"
      uuid: "getLoggerConfiguration_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid207"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getSubName_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "getAllLoggers_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.springframework.boot.logging.LoggerConfiguration"
      uuid: "getLoggerConfiguration_loggerConfiguration1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "getShutdownHandler"
    signature: "getShutdownHandler() : java.lang.Runnable"
    sourceCodeSignature: "Runnable getShutdownHandler()"
    instructionFingerprint: "50B331B2816ACE10F50A59CAB1B1880F"
  paths:
  - pathId: "path1"
    testPathName: "getShutdownHandlerTest"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "9AF404133B6502E953B9B12A6CB425D3"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5396116BCC1FF3A56024EB6637798F5A"
      index: 2
      valueUuid: "getShutdownHandler_runnable1"
    uuid: "1fa3a2e1-a02e-3401-a913-93f2f865166f"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NOT_NULL"
      valueType: "java.lang.Runnable"
      uuid: "getShutdownHandler_runnable1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "cleanUp"
    signature: "cleanUp() : void"
    sourceCodeSignature: "void cleanUp()"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.Throwable"
    instructionFingerprint: "2E15C99DF510D21E8F6111F7544AFBAF"
  paths:
  - pathId: "path2"
    testPathName: "cleanUpWhenIsLog4jBridgeHandlerAvailableNot"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "8539803FF097E9B28B15B301A2C6F236"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "AAEAFB8BDAB0408761202E8706B08BB3"
      index: 2
      valueUuid: "uuid209"
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isPresent"
        parameters:
        - name: "className"
          valueUuid: "uuid208"
        - name: "classLoader"
          valueUuid: "<init>_classLoader1"
        signature: "isPresent(String,ClassLoader): boolean"
        returnValueUuid: "isLog4jBridgeHandlerAvailable_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 3
      valueUuid: "uuid210"
    uuid: "7f3312c7-a32c-37d3-9803-057f2be4304c"
    deleted: false
    disabled: false
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "object of type Configuration"
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_INTERNAL_METHOD_FAILURE"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "uuid209"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "isLog4jBridgeHandlerAvailable_boolean1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.logging.log4j.jul.Log4jBridgeHandler"
      valueType: "java.lang.String"
      uuid: "uuid208"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "<init>_classLoader1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid210"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path1"
    testPathName: "cleanUpWhenHandlerInstanceOfLog4jBridgeHandler"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "9889D492DBCCE9706FF24A2279B45566"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "387D02EFD2BC822942E765D47ACE01A3"
      index: 2
      valueUuid: "uuid212"
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isPresent"
        parameters:
        - name: "className"
          valueUuid: "uuid211"
        - name: "classLoader"
          valueUuid: "<init>_classLoader1"
        signature: "isPresent(String,ClassLoader): boolean"
        returnValueUuid: "isLog4jBridgeHandlerAvailable_boolean1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 3
      valueUuid: "uuid213"
    uuid: "000ea904-1c47-3ef8-8042-ab9c5bfaa521"
    deleted: false
    disabled: false
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "object of type Configuration"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.logging.Handler.close() : void"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "uuid212"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "isLog4jBridgeHandlerAvailable_boolean1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.logging.log4j.jul.Log4jBridgeHandler"
      valueType: "java.lang.String"
      uuid: "uuid211"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "<init>_classLoader1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid213"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "cleanUpWhenRootLoggerGetHandlersIsNotEmptyAndHandlerInstanceOfLog4jBridgeHandler"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "6A952551141F67A21FC03A6E13CDB1C5"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 3
      id: 3
      catchExceptions:
      - "java.lang.Throwable"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "ClassUtils"
      modelFingerprint: "387D02EFD2BC822942E765D47ACE01A3"
      index: 2
      valueUuid: "uuid215"
      methodExercised:
        target: "org.springframework.util.ClassUtils"
        name: "isPresent"
        parameters:
        - name: "className"
          valueUuid: "uuid214"
        - name: "classLoader"
          valueUuid: "<init>_classLoader1"
        signature: "isPresent(String,ClassLoader): boolean"
        returnValueUuid: "isLog4jBridgeHandlerAvailable_boolean1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "rootLogger"
      modelFingerprint: "E9754DAC1FD826484C3C4AC7A9166DDA"
      index: 3
      idsTryCatchBlockSurrounding:
      - 30003
      valueUuid: "removeDefaultRootHandler_logger1"
      methodExercised:
        target: "rootLogger"
        name: "removeHandler"
        parameters:
        - name: "handler"
          valueUuid: "removeDefaultRootHandler_handler1"
        throwsExceptions:
        - "java.lang.SecurityException"
        signature: "removeHandler(ConsoleHandler): void throws java.lang.SecurityException"
        returnValueUuid: "removeDefaultRootHandler_void1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 4
      valueUuid: "uuid216"
    uuid: "697a5de7-82b8-3b17-a55d-39c9cb933deb"
    deleted: false
    disabled: false
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "object of type Configuration"
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.logging.Handler.close() : void"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "uuid215"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "isLog4jBridgeHandlerAvailable_boolean1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "org.apache.logging.log4j.jul.Log4jBridgeHandler"
      valueType: "java.lang.String"
      uuid: "uuid214"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "<init>_classLoader1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.util.logging.Logger"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_method_return>
            target: "java.util.logging.LogManager"
            method: "getLogManager"
            methodParameters: []
          valueType: "java.util.logging.LogManager"
          uuid: "removeDefaultRootHandler_logManager1"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        methodName: "getLogger"
      valueType: "java.util.logging.Logger"
      uuid: "removeDefaultRootHandler_logger1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "removeDefaultRootHandler_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.logging.ConsoleHandler"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.util.logging.ConsoleHandler"
      uuid: "removeDefaultRootHandler_handler1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid216"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "getDefaultLogCorrelationPattern"
    signature: "getDefaultLogCorrelationPattern() : java.lang.String"
    sourceCodeSignature: "String getDefaultLogCorrelationPattern()"
    instructionFingerprint: "C0EF50AD88945131799CB6BA2E2AD04A"
  paths:
  - pathId: "path1"
    testPathName: "getDefaultLogCorrelationPatternTest"
    constructorSignature: "<init>(java.lang.ClassLoader) : void"
    modelFingerprint: "FE9C0FA1CF5C29B6E698454ED35596F0"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7409938CC84F55F20B9245A765C0FB91"
      index: 1
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A98BB0257F28AAA88A120265643FC006"
      index: 2
      valueUuid: "uuid217"
    uuid: "51ee05df-7512-3ac7-956d-21ddf98d974d"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "<init>_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "%correlationId"
      valueType: "java.lang.String"
      uuid: "uuid217"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "getEnvironment"
    signature: "getEnvironment(org.apache.logging.log4j.core.LoggerContext) : org.springframework.core.env.Environment"
    sourceCodeSignature: "Environment getEnvironment(LoggerContext loggerContext)"
    instructionFingerprint: "087E3D1218F68BBA5FF25E0F26A0A85F"
  paths:
  - pathId: "path1"
    testPathName: "getEnvironmentWhenLoggerContextIsNotNull"
    modelFingerprint: "16CFDF590601BABE7B96F99F31CADEED"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "loggerContext"
      modelFingerprint: "3279AFB120D062626D8C2AB9B42F7FD2"
      index: 1
      valueUuid: "getEnvironment_loggerContext1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "92B186400387FBEFE49A33315EDA6085"
      index: 2
      valueUuid: "getEnvironment_object1"
    uuid: "b53cb612-2ad2-39eb-97fb-f56347122c61"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.logging.log4j.core.LoggerContext"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "name1"
            valueType: "java.lang.String"
            uuid: "getEnvironment_loggerContext1-name"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.apache.logging.log4j.core.LoggerContext"
      uuid: "getEnvironment_loggerContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.springframework.core.env.Environment"
      uuid: "getEnvironment_object1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: true
  - pathId: "path2"
    testPathName: "getEnvironmentWhenLoggerContextIsNull"
    modelFingerprint: "5CF9F6E30463F55B010B21B00AB7BB67"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "loggerContext"
      modelFingerprint: "BB4C352446C037B298D209C021D4566E"
      index: 1
      valueUuid: "getEnvironment_loggerContext1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "024D713CFFA74A3E6CE3326742595E4E"
      index: 2
      valueUuid: "uuid218"
    uuid: "7521631d-9b03-3734-9c93-cd6228b93a5b"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "NULL"
      valueType: "org.apache.logging.log4j.core.LoggerContext"
      uuid: "getEnvironment_loggerContext1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.springframework.core.env.Environment"
      uuid: "uuid218"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: true
