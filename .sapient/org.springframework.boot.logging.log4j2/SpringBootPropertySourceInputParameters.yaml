---
modelFingerprint: "A664A7ABB96E6563A6036C6CFEEF6AF0"
targetClass:
  fullClassName: "org.springframework.boot.logging.log4j2.SpringBootPropertySource"
methods:
- method:
    name: "forEach"
    sourceCodeSignature: "void forEach(BiConsumer<String, String> action)"
    returnType: "void"
    parameters:
    - name: "action"
      type: "org.apache.logging.log4j.util.BiConsumer"
    instructionFingerprint: "2E0E0F2B8A2F9C2F86F4A6057A19E1EA"
  paths:
  - pathId: "path1"
    testPathName: "forEachTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "C5E703EA929986DDD54ACF937BED2775"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "action"
      modelFingerprint: "23EB804465501E15D586A08A2E01F414"
      valueUuid: "action"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.apache.logging.log4j.util.BiConsumer.accept(java.lang.String,java.lang.String)\
        \ : void"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.SpringBootPropertySource"
        parameters: []
      valueType: "org.springframework.boot.logging.log4j2.SpringBootPropertySource"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.apache.logging.log4j.util.BiConsumer"
      uuid: "action"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "getNormalForm"
    sourceCodeSignature: "CharSequence getNormalForm(Iterable<? extends CharSequence>\
      \ tokens)"
    returnType: "java.lang.CharSequence"
    parameters:
    - name: "tokens"
      type: "java.lang.Iterable"
    instructionFingerprint: "519A905844DA20CDCBF71FE919A9D3BD"
  paths:
  - pathId: "path1"
    testPathName: "getNormalFormTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "8082585A48B1B8E9FBB9A1AAF8B3FFAE"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "tokens"
      modelFingerprint: "7F61A16CF3C22D0B2EF9F0BF6A194129"
      valueUuid: "tokens"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "898453195DC182E9B90B79F63F063712"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.SpringBootPropertySource"
        parameters: []
      valueType: "org.springframework.boot.logging.log4j2.SpringBootPropertySource"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.lang.Iterable"
      genericValueType: "? extends java.lang.CharSequence"
      uuid: "tokens"
    - sapientType: "BASIC"
      content: !<regular>
        value: "log4j."
      valueType: "java.lang.String"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "getPriority"
    sourceCodeSignature: "int getPriority()"
    returnType: "int"
    instructionFingerprint: "C58FA2BEA3A3A1A9E4AE4DC9622622F0"
  paths:
  - pathId: "path1"
    testPathName: "getPriorityTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "A4472CED9C9C08883A04AA8E91C2B707"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5F2C802532F92CABD8B106AE109A7CF9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.SpringBootPropertySource"
        parameters: []
      valueType: "org.springframework.boot.logging.log4j2.SpringBootPropertySource"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: -200
      valueType: "int"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "getProperty"
    sourceCodeSignature: "String getProperty(String key)"
    returnType: "java.lang.String"
    parameters:
    - name: "key"
      type: "java.lang.String"
    instructionFingerprint: "BC98E47FEA0675DECF0679D6683FCB13"
  paths:
  - pathId: "path1"
    testPathName: "getPropertyTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "958123A91DED03E3D3492C0EDF8CABDF"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "800108E43E3B3483AE10EC98C9DB9D9A"
      valueUuid: "key"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "273ED3252793B4176B08907A8E8F44F1"
      valueUuid: "string"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.SpringBootPropertySource"
        parameters: []
      valueType: "org.springframework.boot.logging.log4j2.SpringBootPropertySource"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "log4j.shutdownHookEnabled"
      valueType: "java.lang.String"
      uuid: "key"
    - sapientType: "BASIC"
      content: !<regular>
        value: "false"
      valueType: "java.lang.String"
      uuid: "string"
      collectionUuid: "map"
- method:
    name: "containsProperty"
    sourceCodeSignature: "boolean containsProperty(String key)"
    returnType: "boolean"
    parameters:
    - name: "key"
      type: "java.lang.String"
    instructionFingerprint: "170957AEE97FB3A7309311C3CB50283F"
  paths:
  - pathId: "path1"
    testPathName: "containsPropertyWhenThisPropertiesContainsKeyKey"
    constructorSignature: "<init>() : void"
    modelFingerprint: "6081D4A0AB87AC0CD6C91F4DAB3ABA1C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "800108E43E3B3483AE10EC98C9DB9D9A"
      valueUuid: "key"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "008FA075564487DD49423319C7795C5E"
      valueUuid: "boolean1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.SpringBootPropertySource"
        parameters: []
      valueType: "org.springframework.boot.logging.log4j2.SpringBootPropertySource"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "log4j.shutdownHookEnabled"
      valueType: "java.lang.String"
      uuid: "key"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
      fixed: true
      collectionUuid: "map"
    branches:
    - lineNumber: 62
      expression: "this.properties.containsKey(key)"
      range: "(62,10)-(62,41)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "containsPropertyWhenThisPropertiesNotContainsKeyKey"
    constructorSignature: "<init>() : void"
    modelFingerprint: "25F96944C5FD7012C4B15318E5055DEA"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "key"
      modelFingerprint: "13F4CB70D89D1F2F2E4D96118CAF15B4"
      valueUuid: "key"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C532B70D233E59BD0B9DC9C634733651"
      valueUuid: "boolean1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.SpringBootPropertySource"
        parameters: []
      valueType: "org.springframework.boot.logging.log4j2.SpringBootPropertySource"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "key"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
      fixed: true
      collectionUuid: "map"
    branches:
    - lineNumber: 62
      expression: "this.properties.containsKey(key)"
      range: "(62,10)-(62,41)"
      evaluatedAs: false
- method:
    name: "getPropertyNames"
    sourceCodeSignature: "Collection<String> getPropertyNames()"
    returnType: "java.util.Collection"
    genericReturnType: "java.lang.String"
    instructionFingerprint: "91E1823C3DE4984448434BB8348FC77E"
  paths:
  - pathId: "path1"
    testPathName: "getPropertyNamesTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "147402DFCBCEEAF8E23F4EAF02206424"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A4B849D4E5E0FC3F4D0C67A030E114FE"
      valueUuid: "set"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.log4j2.SpringBootPropertySource"
        parameters: []
      valueType: "org.springframework.boot.logging.log4j2.SpringBootPropertySource"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "log4j.shutdownHookEnabled"
          valueType: "java.lang.String"
          uuid: "uniqueUuid1"
      valueType: "java.util.Set"
      genericValueType: "java.lang.String"
      uuid: "set"
      collectionUuid: "map"
