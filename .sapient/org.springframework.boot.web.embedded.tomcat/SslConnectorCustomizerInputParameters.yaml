---
modelFingerprint: "C3151740623EA534A2F902C71ADD49B6"
methods:
- method:
    name: "update"
    signature: "update(org.springframework.boot.ssl.SslBundle) : void"
    sourceCodeSignature: "void update(SslBundle updatedSslBundle)"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "A8075D40F7342EC529C7A6959ACBB589"
  paths:
  - pathId: "path1"
    testPathName: "updateTest"
    constructorSignature: "<init>(org.apache.commons.logging.Log,org.apache.catalina.connector.Connector,org.springframework.boot.web.server.Ssl$ClientAuth)\
      \ : void"
    modelFingerprint: "B3DF887B7274D2DAA0BBE792929C0546"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2ADD7F087B65012C003644FB02409DE4"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "updatedSslBundle"
      modelFingerprint: "338318B23D12EBAB395E902ADF6DD5EF"
      index: 2
      valueUuid: "update_sslBundle1"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "555309DA0F4883C3C8D4A12C9D92F48B"
      index: 3
      methodExercised:
        target: "target"
        name: "customize"
        parameters:
        - name: "sslBundle"
          valueUuid: "update_sslBundle1"
        signature: "customize(SslBundle): void"
        returnValueUuid: "update_void2"
        access: 0
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 4
      valueUuid: "uuid1"
    uuid: "7f14d933-09d2-3407-a4f9-54bea1b19822"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer"
        parameters:
        - name: "logger"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.apache.commons.logging.impl.NoOpLog"
            uuid: "<init>_log1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "connector"
          value:
            sapientType: "MOCK"
            valueType: "org.apache.catalina.connector.Connector"
            uuid: "<init>_connector1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "clientAuth"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "<init>_ssl.ClientAuth1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "update_sslBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "update_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "update_sslBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "customize"
    signature: "customize(org.springframework.boot.ssl.SslBundle) : void"
    sourceCodeSignature: "void customize(SslBundle sslBundle)"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "0158C8BFC7DB9FFC57BF87FFB8A82F36"
  paths:
  - pathId: "path1"
    testPathName: "customizeWhenOptionsGetEnabledProtocolsIsNotNull"
    constructorSignature: "<init>(org.apache.commons.logging.Log,org.apache.catalina.connector.Connector,org.springframework.boot.web.server.Ssl$ClientAuth)\
      \ : void"
    modelFingerprint: "C6BE906B3CE2FF52FA40EE9711233D1D"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B798723437746DB11FF50D6929895644"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "sslBundle"
      modelFingerprint: "97BB1F465DEDBE61208E26C801E10D7E"
      index: 2
      valueUuid: "customize_sslBundle1"
    - type: "FIELD"
      name: "connector"
      modelFingerprint: "7484BAF0EF6433B265D04E623A26E0C4"
      index: 3
      valueUuid: "<init>_connector1"
      methodExercised:
        target: "this.connector"
        name: "getProtocolHandler"
        parameters: []
        signature: "getProtocolHandler(): ProtocolHandler"
        returnValueUuid: "customize_protocolHandler1"
        access: 1
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "7D06BA60A316600E68B4726D4C13D1E8"
      index: 4
      valueUuid: "uuid3"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "customize_boolean1"
        - name: "message"
          valueUuid: "uuid2"
        signature: "state(boolean,String): void"
        returnValueUuid: "customize_void1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "protocol"
      modelFingerprint: "3D0EB84586D1E354CE0F05A52762B2F6"
      index: 5
      valueUuid: "customize_protocolHandler1"
      methodExercised:
        target: "protocol"
        name: "setSSLEnabled"
        parameters:
        - name: "SSLEnabled"
          valueUuid: "uuid4"
        signature: "setSSLEnabled(boolean): void"
        returnValueUuid: "configureSsl_void1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "protocol"
      modelFingerprint: "E9FBA6A8D17739CDE616C14BB8226CFF"
      index: 6
      valueUuid: "customize_protocolHandler1"
      methodExercised:
        target: "protocol"
        name: "getDefaultSSLHostConfigName"
        parameters: []
        signature: "getDefaultSSLHostConfigName(): String"
        returnValueUuid: "configureSsl_string1"
        access: 1
    - type: "STATIC"
      name: "Ssl.ClientAuth"
      modelFingerprint: "323DCFA6A09D284B125518C3CC36214A"
      index: 7
      valueUuid: "uuid8"
      methodExercised:
        target: "org.springframework.boot.web.server.Ssl$ClientAuth"
        name: "map"
        parameters:
        - name: "clientAuth"
          valueUuid: "<init>_ssl.ClientAuth1"
        - name: "none"
          valueUuid: "uuid5"
        - name: "want"
          valueUuid: "uuid6"
        - name: "need"
          valueUuid: "uuid7"
        signature: "map(Ssl$ClientAuth,String,String,String): String"
        returnValueUuid: "configureSslClientAuth_string1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "BDD53C9491205D743A3248DB733B1033"
      index: 8
      valueUuid: "configureSsl_sSLHostConfig1"
      methodExercised:
        target: "config"
        name: "setCertificateVerification"
        parameters:
        - name: "iae"
          valueUuid: "configureSslClientAuth_string1"
        signature: "setCertificateVerification(String): void"
        returnValueUuid: "configureSslClientAuth_void1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "12BA420E04EFB45CF02FC7DF9676B062"
      index: 9
      valueUuid: "customize_sslBundle1"
      methodExercised:
        target: "sslBundle"
        name: "getKey"
        parameters: []
        signature: "getKey(): SslBundleKey"
        returnValueUuid: "applySslBundle_sslBundleKey1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "BAE6504D957652D61DAD0DE627D81FF5"
      index: 10
      valueUuid: "customize_sslBundle1"
      methodExercised:
        target: "sslBundle"
        name: "getStores"
        parameters: []
        signature: "getStores(): SslStoreBundle"
        returnValueUuid: "applySslBundle_sslStoreBundle1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "BA0785C36510AA5EED4EEFABAE4D58F9"
      index: 11
      valueUuid: "customize_sslBundle1"
      methodExercised:
        target: "sslBundle"
        name: "getOptions"
        parameters: []
        signature: "getOptions(): SslOptions"
        returnValueUuid: "applySslBundle_sslOptions1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "AD827E85CC0C95CEF0FB5AF0C2503A3D"
      index: 12
      valueUuid: "customize_sslBundle1"
      methodExercised:
        target: "sslBundle"
        name: "getProtocol"
        parameters: []
        signature: "getProtocol(): String"
        returnValueUuid: "applySslBundle_string1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "stores"
      modelFingerprint: "DCA385712B309DD377FF852B6DD83A90"
      index: 13
      valueUuid: "applySslBundle_sslStoreBundle1"
      methodExercised:
        target: "stores"
        name: "getKeyStorePassword"
        parameters: []
        signature: "getKeyStorePassword(): String"
        returnValueUuid: "applySslBundle_string2"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "stores"
      modelFingerprint: "DCA385712B309DD377FF852B6DD83A90"
      index: 14
      valueUuid: "applySslBundle_sslStoreBundle1"
      methodExercised:
        target: "stores"
        name: "getKeyStorePassword"
        parameters: []
        signature: "getKeyStorePassword(): String"
        returnValueUuid: "applySslBundle_string3"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "A12B730151AB20407043D56452D09A1A"
      index: 15
      valueUuid: "applySslBundle_sslBundleKey1"
      methodExercised:
        target: "key"
        name: "getPassword"
        parameters: []
        signature: "getPassword(): String"
        returnValueUuid: "applySslBundle_string4"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "A12B730151AB20407043D56452D09A1A"
      index: 16
      valueUuid: "applySslBundle_sslBundleKey1"
      methodExercised:
        target: "key"
        name: "getPassword"
        parameters: []
        signature: "getPassword(): String"
        returnValueUuid: "applySslBundle_string5"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "C995A96532083037B00C0A1A22791DBC"
      index: 17
      valueUuid: "applySslBundle_sslBundleKey1"
      methodExercised:
        target: "key"
        name: "getAlias"
        parameters: []
        signature: "getAlias(): String"
        returnValueUuid: "applySslBundle_string6"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "C995A96532083037B00C0A1A22791DBC"
      index: 18
      valueUuid: "applySslBundle_sslBundleKey1"
      methodExercised:
        target: "key"
        name: "getAlias"
        parameters: []
        signature: "getAlias(): String"
        returnValueUuid: "applySslBundle_string7"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "sslHostConfig"
      modelFingerprint: "540C631AB1CF7D55496C9BA2AA7C8CF4"
      index: 19
      valueUuid: "configureSsl_sSLHostConfig1"
      methodExercised:
        target: "sslHostConfig"
        name: "addCertificate"
        parameters:
        - name: "certificate"
          valueUuid: "applySslBundle_sSLHostConfigCertificate1"
        signature: "addCertificate(SSLHostConfigCertificate): void"
        returnValueUuid: "applySslBundle_void5"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "C1BFDA593DF46AC83AB9F54B484C226E"
      index: 20
      valueUuid: "applySslBundle_sslOptions1"
      methodExercised:
        target: "options"
        name: "getCiphers"
        parameters: []
        signature: "getCiphers(): String[]"
        returnValueUuid: "applySslBundle_string[]1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "A1058AA999CE50FEFD0694B8CF0F7E56"
      index: 21
      valueUuid: "applySslBundle_sslOptions1"
      methodExercised:
        target: "options"
        name: "getCiphers"
        parameters: []
        signature: "getCiphers(): String[]"
        returnValueUuid: "applySslBundle_string[]2"
        access: 1025
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "66DD1A04D6EEBE45F22219DEE333B410"
      index: 22
      valueUuid: "uuid9"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "arrayToCommaDelimitedString"
        parameters:
        - name: "arr"
          valueUuid: "applySslBundle_string[]2"
        signature: "arrayToCommaDelimitedString(String[]): String"
        returnValueUuid: "applySslBundle_string8"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "3B1F3A8CE36B394400D06B3A551281F5"
      index: 23
      valueUuid: "uuid12"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "isInstanceOf"
        parameters:
        - name: "type"
          valueUuid: "uuid10"
        - name: "obj"
          valueUuid: "customize_protocolHandler1"
        - name: "message"
          valueUuid: "uuid11"
        signature: "isInstanceOf(Class,AbstractHttp11JsseProtocol,String): void"
        returnValueUuid: "configureSslStoreProvider_void1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "stores"
      modelFingerprint: "DDC9261FA8445080DB1D50338B44B2CD"
      index: 24
      idsTryCatchBlockSurrounding:
      - 1010001
      valueUuid: "applySslBundle_sslStoreBundle1"
      methodExercised:
        target: "stores"
        name: "getKeyStore"
        parameters: []
        signature: "getKeyStore(): KeyStore"
        returnValueUuid: "configureSslStoreProvider_keyStore1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "stores"
      modelFingerprint: "DDC9261FA8445080DB1D50338B44B2CD"
      index: 25
      idsTryCatchBlockSurrounding:
      - 1010001
      valueUuid: "applySslBundle_sslStoreBundle1"
      methodExercised:
        target: "stores"
        name: "getKeyStore"
        parameters: []
        signature: "getKeyStore(): KeyStore"
        returnValueUuid: "configureSslStoreProvider_keyStore2"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "stores"
      modelFingerprint: "A2A70A4E33FE26A8EE9A553DE634C734"
      index: 26
      idsTryCatchBlockSurrounding:
      - 1010001
      valueUuid: "applySslBundle_sslStoreBundle1"
      methodExercised:
        target: "stores"
        name: "getTrustStore"
        parameters: []
        signature: "getTrustStore(): KeyStore"
        returnValueUuid: "configureSslStoreProvider_keyStore3"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "stores"
      modelFingerprint: "A2A70A4E33FE26A8EE9A553DE634C734"
      index: 27
      idsTryCatchBlockSurrounding:
      - 1010001
      valueUuid: "applySslBundle_sslStoreBundle1"
      methodExercised:
        target: "stores"
        name: "getTrustStore"
        parameters: []
        signature: "getTrustStore(): KeyStore"
        returnValueUuid: "configureSslStoreProvider_keyStore4"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "sslHostConfig"
      modelFingerprint: "AB890996E26BA077F421761B55FFC4B8"
      index: 28
      idsTryCatchBlockSurrounding:
      - 1010001
      valueUuid: "configureSsl_sSLHostConfig1"
      methodExercised:
        target: "sslHostConfig"
        name: "setTrustStore"
        parameters:
        - name: "truststore"
          valueUuid: "configureSslStoreProvider_keyStore4"
        signature: "setTrustStore(KeyStore): void"
        returnValueUuid: "configureSslStoreProvider_void3"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "1A04EEDF77320CEB5466C3D40FABEDF2"
      index: 29
      valueUuid: "applySslBundle_sslOptions1"
      methodExercised:
        target: "options"
        name: "getEnabledProtocols"
        parameters: []
        signature: "getEnabledProtocols(): String[]"
        returnValueUuid: "configureEnabledProtocols_string[]1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "5689939000CC069C182810ADB3535B4E"
      index: 30
      valueUuid: "applySslBundle_sslOptions1"
      methodExercised:
        target: "options"
        name: "getEnabledProtocols"
        parameters: []
        signature: "getEnabledProtocols(): String[]"
        returnValueUuid: "configureEnabledProtocols_string[]2"
        access: 1025
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "7C91093EB07650EDCFA2875FF518CD80"
      index: 31
      valueUuid: "uuid14"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "arrayToDelimitedString"
        parameters:
        - name: "arr"
          valueUuid: "configureEnabledProtocols_string[]2"
        - name: "delim"
          valueUuid: "uuid13"
        signature: "arrayToDelimitedString(String[],String): String"
        returnValueUuid: "configureEnabledProtocols_string1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "sslHostConfig"
      modelFingerprint: "20A244ACE1C6F4E705F5C3AB44B8D8E9"
      index: 32
      valueUuid: "configureSsl_sSLHostConfig1"
      methodExercised:
        target: "sslHostConfig"
        name: "setProtocols"
        parameters:
        - name: "trimmed"
          valueUuid: "configureEnabledProtocols_string1"
        signature: "setProtocols(String): void"
        returnValueUuid: "configureEnabledProtocols_void1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "protocol"
      modelFingerprint: "A4A4F44C1E3660F1CEB3D3074DDFB942"
      index: 33
      valueUuid: "customize_protocolHandler1"
      methodExercised:
        target: "protocol"
        name: "addSslHostConfig"
        parameters:
        - name: "sslHostConfig"
          valueUuid: "configureSsl_sSLHostConfig1"
        - name: "replace"
          valueUuid: "uuid15"
        signature: "addSslHostConfig(SSLHostConfig,boolean): void"
        returnValueUuid: "configureSsl_void3"
        access: 1
    - type: "FIELD"
      name: "connector"
      modelFingerprint: "020E70686CC8C8B4298CE620E7F60725"
      index: 34
      valueUuid: "<init>_connector1"
      methodExercised:
        target: "this.connector"
        name: "setScheme"
        parameters:
        - name: "scheme"
          valueUuid: "uuid16"
        signature: "setScheme(String): void"
        returnValueUuid: "customize_void2"
        access: 1
    - type: "FIELD"
      name: "connector"
      modelFingerprint: "A230A8C5C0B94D0B85F192A87AE73AA0"
      index: 35
      valueUuid: "<init>_connector1"
      methodExercised:
        target: "this.connector"
        name: "setSecure"
        parameters:
        - name: "secure"
          valueUuid: "uuid17"
        signature: "setSecure(boolean): void"
        returnValueUuid: "customize_void3"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 36
      valueUuid: "uuid18"
    uuid: "ad461df0-c9de-384e-9f4d-54b6e2437911"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "sslHostConfig.addCertificate(certificate);"
      lineNumber: 102
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: sslHostConfig - Method: addCertificate"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer"
        parameters:
        - name: "logger"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.apache.commons.logging.impl.NoOpLog"
            uuid: "<init>_log1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "connector"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.apache.catalina.connector.Connector"
              parameters:
              - name: "protocolHandler"
                value:
                  sapientType: "MOCK"
                  valueType: "org.apache.coyote.http11.AbstractHttp11JsseProtocol"
                  uuid: "customize_protocolHandler1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: true
              privateConstructor: false
              createdByTargetCode: false
              propertiesMap:
                scheme:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "https"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                secure:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "org.apache.catalina.connector.Connector"
            uuid: "<init>_connector1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "clientAuth"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NEED"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "<init>_ssl.ClientAuth1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "customize_sslBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.catalina.connector.Connector"
        parameters:
        - name: "protocolHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.apache.coyote.http11.AbstractHttp11JsseProtocol"
            uuid: "customize_protocolHandler1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: true
        privateConstructor: false
        createdByTargetCode: false
        propertiesMap:
          scheme:
            sapientType: "BASIC"
            content: !<regular>
              value: "https"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
          secure:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.apache.catalina.connector.Connector"
      uuid: "<init>_connector1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.apache.coyote.http11.AbstractHttp11JsseProtocol"
      uuid: "customize_protocolHandler1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "customize_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "customize_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "To use SSL, the connector's protocol handler must be an AbstractHttp11JsseProtocol\
          \ subclass"
      valueType: "java.lang.String"
      uuid: "uuid2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.apache.coyote.http11.AbstractHttp11JsseProtocol"
      uuid: "customize_protocolHandler1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "configureSsl_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid4"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.apache.coyote.http11.AbstractHttp11JsseProtocol"
      uuid: "customize_protocolHandler1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getDefaultSSLHostConfigName1"
      valueType: "java.lang.String"
      uuid: "configureSsl_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
      uuid: "uuid8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "required"
      valueType: "java.lang.String"
      uuid: "configureSslClientAuth_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "NEED"
      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
      uuid: "<init>_ssl.ClientAuth1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "none"
      valueType: "java.lang.String"
      uuid: "uuid5"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "optional"
      valueType: "java.lang.String"
      uuid: "uuid6"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "required"
      valueType: "java.lang.String"
      uuid: "uuid7"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.tomcat.util.net.SSLHostConfig"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          hostName:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getDefaultSSLHostConfigName1"
            valueType: "java.lang.String"
            uuid: "configureSsl_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          ciphers:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "applySslBundle_string8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          sslProtocol:
            sapientType: "BASIC"
            content: !<regular>
              value: "sslProtocol1"
            valueType: "java.lang.String"
            uuid: "applySslBundle_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.apache.tomcat.util.net.SSLHostConfig"
      uuid: "configureSsl_sSLHostConfig1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "configureSslClientAuth_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "required"
      valueType: "java.lang.String"
      uuid: "configureSslClientAuth_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "customize_sslBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "applySslBundle_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "customize_sslBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "applySslBundle_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "customize_sslBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "applySslBundle_sslOptions1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "customize_sslBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "sslProtocol1"
      valueType: "java.lang.String"
      uuid: "applySslBundle_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "applySslBundle_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getKeyStorePassword1"
      valueType: "java.lang.String"
      uuid: "applySslBundle_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "applySslBundle_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getKeyStorePassword1"
      valueType: "java.lang.String"
      uuid: "applySslBundle_string3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "applySslBundle_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPassword1"
      valueType: "java.lang.String"
      uuid: "applySslBundle_string4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "applySslBundle_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPassword1"
      valueType: "java.lang.String"
      uuid: "applySslBundle_string5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "applySslBundle_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getAlias1"
      valueType: "java.lang.String"
      uuid: "applySslBundle_string6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "applySslBundle_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getAlias1"
      valueType: "java.lang.String"
      uuid: "applySslBundle_string7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.tomcat.util.net.SSLHostConfig"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          hostName:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getDefaultSSLHostConfigName1"
            valueType: "java.lang.String"
            uuid: "configureSsl_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          ciphers:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "applySslBundle_string8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          sslProtocol:
            sapientType: "BASIC"
            content: !<regular>
              value: "sslProtocol1"
            valueType: "java.lang.String"
            uuid: "applySslBundle_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.apache.tomcat.util.net.SSLHostConfig"
      uuid: "configureSsl_sSLHostConfig1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "applySslBundle_void5"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.tomcat.util.net.SSLHostConfigCertificate"
        parameters:
        - name: "sslHostConfig"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.apache.tomcat.util.net.SSLHostConfig"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                hostName:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "return_of_getDefaultSSLHostConfigName1"
                  valueType: "java.lang.String"
                  uuid: "configureSsl_string1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                ciphers:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: ""
                  valueType: "java.lang.String"
                  uuid: "applySslBundle_string8"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                sslProtocol:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "sslProtocol1"
                  valueType: "java.lang.String"
                  uuid: "applySslBundle_string1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "org.apache.tomcat.util.net.SSLHostConfig"
            uuid: "configureSsl_sSLHostConfig1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "type"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "UNDEFINED"
            valueType: "org.apache.tomcat.util.net.SSLHostConfigCertificate$Type"
            uuid: "Enum-org.apache.tomcat.util.net.SSLHostConfigCertificate$Type-UNDEFINED"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          certificateKeyAlias:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getAlias1"
            valueType: "java.lang.String"
            uuid: "applySslBundle_string7"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          certificateKeystore:
            sapientType: "MOCK"
            valueType: "java.security.KeyStore"
            uuid: "configureSslStoreProvider_keyStore2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          certificateKeystorePassword:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getKeyStorePassword1"
            valueType: "java.lang.String"
            uuid: "applySslBundle_string3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          certificateKeyPassword:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getPassword1"
            valueType: "java.lang.String"
            uuid: "applySslBundle_string5"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.apache.tomcat.util.net.SSLHostConfigCertificate"
      uuid: "applySslBundle_sSLHostConfigCertificate1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "applySslBundle_sslOptions1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "applySslBundle_string[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "applySslBundle_sslOptions1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "applySslBundle_string[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid9"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "applySslBundle_string8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "applySslBundle_string[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid12"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "configureSslStoreProvider_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.apache.coyote.http11.Http11NioProtocol"
      valueType: "java.lang.Class"
      genericValueType: "org.apache.coyote.http11.Http11NioProtocol"
      uuid: "uuid10"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.apache.coyote.http11.AbstractHttp11JsseProtocol"
      uuid: "customize_protocolHandler1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "SslStoreProvider can only be used with Http11NioProtocol"
      valueType: "java.lang.String"
      uuid: "uuid11"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "applySslBundle_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "configureSslStoreProvider_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "applySslBundle_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "configureSslStoreProvider_keyStore2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "applySslBundle_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "configureSslStoreProvider_keyStore3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "applySslBundle_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "configureSslStoreProvider_keyStore4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.tomcat.util.net.SSLHostConfig"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          hostName:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getDefaultSSLHostConfigName1"
            valueType: "java.lang.String"
            uuid: "configureSsl_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          ciphers:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "applySslBundle_string8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          sslProtocol:
            sapientType: "BASIC"
            content: !<regular>
              value: "sslProtocol1"
            valueType: "java.lang.String"
            uuid: "applySslBundle_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.apache.tomcat.util.net.SSLHostConfig"
      uuid: "configureSsl_sSLHostConfig1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "configureSslStoreProvider_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "configureSslStoreProvider_keyStore4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "applySslBundle_sslOptions1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "configureEnabledProtocols_string[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "applySslBundle_sslOptions1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "configureEnabledProtocols_string[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid14"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "configureEnabledProtocols_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "configureEnabledProtocols_string[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "+"
      valueType: "java.lang.String"
      uuid: "uuid13"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.tomcat.util.net.SSLHostConfig"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          hostName:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getDefaultSSLHostConfigName1"
            valueType: "java.lang.String"
            uuid: "configureSsl_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          ciphers:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "applySslBundle_string8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          sslProtocol:
            sapientType: "BASIC"
            content: !<regular>
              value: "sslProtocol1"
            valueType: "java.lang.String"
            uuid: "applySslBundle_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.apache.tomcat.util.net.SSLHostConfig"
      uuid: "configureSsl_sSLHostConfig1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "configureEnabledProtocols_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "configureEnabledProtocols_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.apache.coyote.http11.AbstractHttp11JsseProtocol"
      uuid: "customize_protocolHandler1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "configureSsl_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.tomcat.util.net.SSLHostConfig"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          hostName:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getDefaultSSLHostConfigName1"
            valueType: "java.lang.String"
            uuid: "configureSsl_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          ciphers:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "applySslBundle_string8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          sslProtocol:
            sapientType: "BASIC"
            content: !<regular>
              value: "sslProtocol1"
            valueType: "java.lang.String"
            uuid: "applySslBundle_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.apache.tomcat.util.net.SSLHostConfig"
      uuid: "configureSsl_sSLHostConfig1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid15"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.catalina.connector.Connector"
        parameters:
        - name: "protocolHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.apache.coyote.http11.AbstractHttp11JsseProtocol"
            uuid: "customize_protocolHandler1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: true
        privateConstructor: false
        createdByTargetCode: false
        propertiesMap:
          scheme:
            sapientType: "BASIC"
            content: !<regular>
              value: "https"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
          secure:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.apache.catalina.connector.Connector"
      uuid: "<init>_connector1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "customize_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "https"
      valueType: "java.lang.String"
      uuid: "uuid16"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.catalina.connector.Connector"
        parameters:
        - name: "protocolHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.apache.coyote.http11.AbstractHttp11JsseProtocol"
            uuid: "customize_protocolHandler1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: true
        privateConstructor: false
        createdByTargetCode: false
        propertiesMap:
          scheme:
            sapientType: "BASIC"
            content: !<regular>
              value: "https"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
          secure:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.apache.catalina.connector.Connector"
      uuid: "<init>_connector1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "customize_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid17"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid18"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "customizeWhenOptionsGetEnabledProtocolsIsNull"
    constructorSignature: "<init>(org.apache.commons.logging.Log,org.apache.catalina.connector.Connector,org.springframework.boot.web.server.Ssl$ClientAuth)\
      \ : void"
    modelFingerprint: "28648AC304961E6BEACC49A62D0EC3AE"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "6bc18397-e607-3f79-a592-6a3cc44f17ba"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "sslHostConfig.addCertificate(certificate);"
      lineNumber: 102
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: sslHostConfig - Method: addCertificate"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path21"
    testPathName: "customizeWhenCaughtExceptionThrowsIllegalStateException"
    constructorSignature: "<init>(org.apache.commons.logging.Log,org.apache.catalina.connector.Connector,org.springframework.boot.web.server.Ssl$ClientAuth)\
      \ : void"
    modelFingerprint: "62B5E3963552E753500B108015367796"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 101
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B798723437746DB11FF50D6929895644"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "sslBundle"
      modelFingerprint: "97BB1F465DEDBE61208E26C801E10D7E"
      index: 2
      valueUuid: "customize_sslBundle1"
    - type: "FIELD"
      name: "connector"
      modelFingerprint: "7484BAF0EF6433B265D04E623A26E0C4"
      index: 3
      valueUuid: "<init>_connector1"
      methodExercised:
        target: "this.connector"
        name: "getProtocolHandler"
        parameters: []
        signature: "getProtocolHandler(): ProtocolHandler"
        returnValueUuid: "customize_protocolHandler1"
        access: 1
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "7D06BA60A316600E68B4726D4C13D1E8"
      index: 4
      valueUuid: "uuid35"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "customize_boolean1"
        - name: "message"
          valueUuid: "uuid34"
        signature: "state(boolean,String): void"
        returnValueUuid: "customize_void1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "protocol"
      modelFingerprint: "3D0EB84586D1E354CE0F05A52762B2F6"
      index: 5
      valueUuid: "customize_protocolHandler1"
      methodExercised:
        target: "protocol"
        name: "setSSLEnabled"
        parameters:
        - name: "SSLEnabled"
          valueUuid: "uuid36"
        signature: "setSSLEnabled(boolean): void"
        returnValueUuid: "configureSsl_void1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "protocol"
      modelFingerprint: "E9FBA6A8D17739CDE616C14BB8226CFF"
      index: 6
      valueUuid: "customize_protocolHandler1"
      methodExercised:
        target: "protocol"
        name: "getDefaultSSLHostConfigName"
        parameters: []
        signature: "getDefaultSSLHostConfigName(): String"
        returnValueUuid: "configureSsl_string1"
        access: 1
    - type: "STATIC"
      name: "Ssl.ClientAuth"
      modelFingerprint: "323DCFA6A09D284B125518C3CC36214A"
      index: 7
      valueUuid: "uuid40"
      methodExercised:
        target: "org.springframework.boot.web.server.Ssl$ClientAuth"
        name: "map"
        parameters:
        - name: "clientAuth"
          valueUuid: "<init>_ssl.ClientAuth1"
        - name: "none"
          valueUuid: "uuid37"
        - name: "want"
          valueUuid: "uuid38"
        - name: "need"
          valueUuid: "uuid39"
        signature: "map(Ssl$ClientAuth,String,String,String): String"
        returnValueUuid: "configureSslClientAuth_string1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "BDD53C9491205D743A3248DB733B1033"
      index: 8
      valueUuid: "configureSsl_sSLHostConfig1"
      methodExercised:
        target: "config"
        name: "setCertificateVerification"
        parameters:
        - name: "iae"
          valueUuid: "configureSslClientAuth_string1"
        signature: "setCertificateVerification(String): void"
        returnValueUuid: "configureSslClientAuth_void1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "12BA420E04EFB45CF02FC7DF9676B062"
      index: 9
      valueUuid: "customize_sslBundle1"
      methodExercised:
        target: "sslBundle"
        name: "getKey"
        parameters: []
        signature: "getKey(): SslBundleKey"
        returnValueUuid: "applySslBundle_sslBundleKey1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "BAE6504D957652D61DAD0DE627D81FF5"
      index: 10
      valueUuid: "customize_sslBundle1"
      methodExercised:
        target: "sslBundle"
        name: "getStores"
        parameters: []
        signature: "getStores(): SslStoreBundle"
        returnValueUuid: "applySslBundle_sslStoreBundle1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "BA0785C36510AA5EED4EEFABAE4D58F9"
      index: 11
      valueUuid: "customize_sslBundle1"
      methodExercised:
        target: "sslBundle"
        name: "getOptions"
        parameters: []
        signature: "getOptions(): SslOptions"
        returnValueUuid: "applySslBundle_sslOptions1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "AD827E85CC0C95CEF0FB5AF0C2503A3D"
      index: 12
      valueUuid: "customize_sslBundle1"
      methodExercised:
        target: "sslBundle"
        name: "getProtocol"
        parameters: []
        signature: "getProtocol(): String"
        returnValueUuid: "applySslBundle_string1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "stores"
      modelFingerprint: "DCA385712B309DD377FF852B6DD83A90"
      index: 13
      valueUuid: "applySslBundle_sslStoreBundle1"
      methodExercised:
        target: "stores"
        name: "getKeyStorePassword"
        parameters: []
        signature: "getKeyStorePassword(): String"
        returnValueUuid: "applySslBundle_string2"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "stores"
      modelFingerprint: "DCA385712B309DD377FF852B6DD83A90"
      index: 14
      valueUuid: "applySslBundle_sslStoreBundle1"
      methodExercised:
        target: "stores"
        name: "getKeyStorePassword"
        parameters: []
        signature: "getKeyStorePassword(): String"
        returnValueUuid: "applySslBundle_string3"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "A12B730151AB20407043D56452D09A1A"
      index: 15
      valueUuid: "applySslBundle_sslBundleKey1"
      methodExercised:
        target: "key"
        name: "getPassword"
        parameters: []
        signature: "getPassword(): String"
        returnValueUuid: "applySslBundle_string4"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "A12B730151AB20407043D56452D09A1A"
      index: 16
      valueUuid: "applySslBundle_sslBundleKey1"
      methodExercised:
        target: "key"
        name: "getPassword"
        parameters: []
        signature: "getPassword(): String"
        returnValueUuid: "applySslBundle_string5"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "C995A96532083037B00C0A1A22791DBC"
      index: 17
      valueUuid: "applySslBundle_sslBundleKey1"
      methodExercised:
        target: "key"
        name: "getAlias"
        parameters: []
        signature: "getAlias(): String"
        returnValueUuid: "applySslBundle_string6"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "C995A96532083037B00C0A1A22791DBC"
      index: 18
      valueUuid: "applySslBundle_sslBundleKey1"
      methodExercised:
        target: "key"
        name: "getAlias"
        parameters: []
        signature: "getAlias(): String"
        returnValueUuid: "applySslBundle_string7"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "sslHostConfig"
      modelFingerprint: "540C631AB1CF7D55496C9BA2AA7C8CF4"
      index: 19
      valueUuid: "configureSsl_sSLHostConfig1"
      methodExercised:
        target: "sslHostConfig"
        name: "addCertificate"
        parameters:
        - name: "certificate"
          valueUuid: "applySslBundle_sSLHostConfigCertificate1"
        signature: "addCertificate(SSLHostConfigCertificate): void"
        returnValueUuid: "applySslBundle_void5"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "C1BFDA593DF46AC83AB9F54B484C226E"
      index: 20
      valueUuid: "applySslBundle_sslOptions1"
      methodExercised:
        target: "options"
        name: "getCiphers"
        parameters: []
        signature: "getCiphers(): String[]"
        returnValueUuid: "applySslBundle_string[]1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "A1058AA999CE50FEFD0694B8CF0F7E56"
      index: 21
      valueUuid: "applySslBundle_sslOptions1"
      methodExercised:
        target: "options"
        name: "getCiphers"
        parameters: []
        signature: "getCiphers(): String[]"
        returnValueUuid: "applySslBundle_string[]2"
        access: 1025
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "66DD1A04D6EEBE45F22219DEE333B410"
      index: 22
      valueUuid: "uuid41"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "arrayToCommaDelimitedString"
        parameters:
        - name: "arr"
          valueUuid: "applySslBundle_string[]2"
        signature: "arrayToCommaDelimitedString(String[]): String"
        returnValueUuid: "applySslBundle_string8"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "3B1F3A8CE36B394400D06B3A551281F5"
      index: 23
      valueUuid: "uuid44"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "isInstanceOf"
        parameters:
        - name: "type"
          valueUuid: "uuid42"
        - name: "obj"
          valueUuid: "customize_protocolHandler1"
        - name: "message"
          valueUuid: "uuid43"
        signature: "isInstanceOf(Class,AbstractHttp11JsseProtocol,String): void"
        returnValueUuid: "configureSslStoreProvider_void1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "stores"
      modelFingerprint: "DDC9261FA8445080DB1D50338B44B2CD"
      index: 24
      idsTryCatchBlockSurrounding:
      - 1010001
      valueUuid: "applySslBundle_sslStoreBundle1"
      methodExercised:
        target: "stores"
        name: "getKeyStore"
        parameters: []
        signature: "getKeyStore(): KeyStore"
        returnValueUuid: "configureSslStoreProvider_keyStore1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "stores"
      modelFingerprint: "DDC9261FA8445080DB1D50338B44B2CD"
      index: 25
      idsTryCatchBlockSurrounding:
      - 1010001
      valueUuid: "applySslBundle_sslStoreBundle1"
      methodExercised:
        target: "stores"
        name: "getKeyStore"
        parameters: []
        signature: "getKeyStore(): KeyStore"
        returnValueUuid: "configureSslStoreProvider_keyStore2"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "stores"
      modelFingerprint: "A2A70A4E33FE26A8EE9A553DE634C734"
      index: 26
      idsTryCatchBlockSurrounding:
      - 1010001
      valueUuid: "applySslBundle_sslStoreBundle1"
      methodExercised:
        target: "stores"
        name: "getTrustStore"
        parameters: []
        signature: "getTrustStore(): KeyStore"
        returnValueUuid: "configureSslStoreProvider_keyStore3"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "stores"
      modelFingerprint: "A2A70A4E33FE26A8EE9A553DE634C734"
      index: 27
      idsTryCatchBlockSurrounding:
      - 1010001
      valueUuid: "applySslBundle_sslStoreBundle1"
      methodExercised:
        target: "stores"
        name: "getTrustStore"
        parameters: []
        signature: "getTrustStore(): KeyStore"
        returnValueUuid: "configureSslStoreProvider_keyStore4"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "sslHostConfig"
      modelFingerprint: "AB890996E26BA077F421761B55FFC4B8"
      index: 28
      idsTryCatchBlockSurrounding:
      - 1010001
      valueUuid: "configureSsl_sSLHostConfig1"
      methodExercised:
        target: "sslHostConfig"
        name: "setTrustStore"
        parameters:
        - name: "truststore"
          valueUuid: "configureSslStoreProvider_keyStore4"
        signature: "setTrustStore(KeyStore): void"
        returnValueUuid: "configureSslStoreProvider_void3"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "33501764CAC6FC8336F013B4607438E6"
      index: 29
      valueUuid: "configureSslStoreProvider_illegalStateException1"
    uuid: "c3a43e40-27d6-3a17-be40-d4fa0eae3537"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "sslHostConfig.addCertificate(certificate);"
      lineNumber: 102
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: sslHostConfig - Method: addCertificate"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer"
        parameters:
        - name: "logger"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.apache.commons.logging.impl.NoOpLog"
            uuid: "<init>_log1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "connector"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.apache.catalina.connector.Connector"
              parameters:
              - name: "protocolHandler"
                value:
                  sapientType: "MOCK"
                  valueType: "org.apache.coyote.http11.AbstractHttp11JsseProtocol"
                  uuid: "customize_protocolHandler1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: true
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.apache.catalina.connector.Connector"
            uuid: "<init>_connector1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "clientAuth"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NEED"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "<init>_ssl.ClientAuth1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "customize_sslBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.catalina.connector.Connector"
        parameters:
        - name: "protocolHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.apache.coyote.http11.AbstractHttp11JsseProtocol"
            uuid: "customize_protocolHandler1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: true
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.apache.catalina.connector.Connector"
      uuid: "<init>_connector1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.apache.coyote.http11.AbstractHttp11JsseProtocol"
      uuid: "customize_protocolHandler1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid35"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "customize_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "customize_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "To use SSL, the connector's protocol handler must be an AbstractHttp11JsseProtocol\
          \ subclass"
      valueType: "java.lang.String"
      uuid: "uuid34"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.apache.coyote.http11.AbstractHttp11JsseProtocol"
      uuid: "customize_protocolHandler1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "configureSsl_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid36"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.apache.coyote.http11.AbstractHttp11JsseProtocol"
      uuid: "customize_protocolHandler1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getDefaultSSLHostConfigName1"
      valueType: "java.lang.String"
      uuid: "configureSsl_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
      uuid: "uuid40"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "required"
      valueType: "java.lang.String"
      uuid: "configureSslClientAuth_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "NEED"
      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
      uuid: "<init>_ssl.ClientAuth1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "none"
      valueType: "java.lang.String"
      uuid: "uuid37"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "optional"
      valueType: "java.lang.String"
      uuid: "uuid38"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "required"
      valueType: "java.lang.String"
      uuid: "uuid39"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.tomcat.util.net.SSLHostConfig"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          hostName:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getDefaultSSLHostConfigName1"
            valueType: "java.lang.String"
            uuid: "configureSsl_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          ciphers:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "applySslBundle_string8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          sslProtocol:
            sapientType: "BASIC"
            content: !<regular>
              value: "sslProtocol1"
            valueType: "java.lang.String"
            uuid: "applySslBundle_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.apache.tomcat.util.net.SSLHostConfig"
      uuid: "configureSsl_sSLHostConfig1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "configureSslClientAuth_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "required"
      valueType: "java.lang.String"
      uuid: "configureSslClientAuth_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "customize_sslBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "applySslBundle_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "customize_sslBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "applySslBundle_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "customize_sslBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "applySslBundle_sslOptions1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "customize_sslBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "sslProtocol1"
      valueType: "java.lang.String"
      uuid: "applySslBundle_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "applySslBundle_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getKeyStorePassword1"
      valueType: "java.lang.String"
      uuid: "applySslBundle_string2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "applySslBundle_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getKeyStorePassword1"
      valueType: "java.lang.String"
      uuid: "applySslBundle_string3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "applySslBundle_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPassword1"
      valueType: "java.lang.String"
      uuid: "applySslBundle_string4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "applySslBundle_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPassword1"
      valueType: "java.lang.String"
      uuid: "applySslBundle_string5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "applySslBundle_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getAlias1"
      valueType: "java.lang.String"
      uuid: "applySslBundle_string6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "applySslBundle_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getAlias1"
      valueType: "java.lang.String"
      uuid: "applySslBundle_string7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.tomcat.util.net.SSLHostConfig"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          hostName:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getDefaultSSLHostConfigName1"
            valueType: "java.lang.String"
            uuid: "configureSsl_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          ciphers:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "applySslBundle_string8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          sslProtocol:
            sapientType: "BASIC"
            content: !<regular>
              value: "sslProtocol1"
            valueType: "java.lang.String"
            uuid: "applySslBundle_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.apache.tomcat.util.net.SSLHostConfig"
      uuid: "configureSsl_sSLHostConfig1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "applySslBundle_void5"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.tomcat.util.net.SSLHostConfigCertificate"
        parameters:
        - name: "sslHostConfig"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.apache.tomcat.util.net.SSLHostConfig"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                hostName:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "return_of_getDefaultSSLHostConfigName1"
                  valueType: "java.lang.String"
                  uuid: "configureSsl_string1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                ciphers:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: ""
                  valueType: "java.lang.String"
                  uuid: "applySslBundle_string8"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                sslProtocol:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "sslProtocol1"
                  valueType: "java.lang.String"
                  uuid: "applySslBundle_string1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "org.apache.tomcat.util.net.SSLHostConfig"
            uuid: "configureSsl_sSLHostConfig1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "type"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "UNDEFINED"
            valueType: "org.apache.tomcat.util.net.SSLHostConfigCertificate$Type"
            uuid: "Enum-org.apache.tomcat.util.net.SSLHostConfigCertificate$Type-UNDEFINED"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          certificateKeyAlias:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getAlias1"
            valueType: "java.lang.String"
            uuid: "applySslBundle_string7"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          certificateKeystore:
            sapientType: "MOCK"
            valueType: "java.security.KeyStore"
            uuid: "configureSslStoreProvider_keyStore2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          certificateKeystorePassword:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getKeyStorePassword1"
            valueType: "java.lang.String"
            uuid: "applySslBundle_string3"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          certificateKeyPassword:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getPassword1"
            valueType: "java.lang.String"
            uuid: "applySslBundle_string5"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.apache.tomcat.util.net.SSLHostConfigCertificate"
      uuid: "applySslBundle_sSLHostConfigCertificate1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "applySslBundle_sslOptions1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "applySslBundle_string[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "applySslBundle_sslOptions1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "applySslBundle_string[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid41"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "applySslBundle_string8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "applySslBundle_string[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid44"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "configureSslStoreProvider_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.apache.coyote.http11.Http11NioProtocol"
      valueType: "java.lang.Class"
      genericValueType: "org.apache.coyote.http11.Http11NioProtocol"
      uuid: "uuid42"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.apache.coyote.http11.AbstractHttp11JsseProtocol"
      uuid: "customize_protocolHandler1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "SslStoreProvider can only be used with Http11NioProtocol"
      valueType: "java.lang.String"
      uuid: "uuid43"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "applySslBundle_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "configureSslStoreProvider_keyStore1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "applySslBundle_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "configureSslStoreProvider_keyStore2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "applySslBundle_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "configureSslStoreProvider_keyStore3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "applySslBundle_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "configureSslStoreProvider_keyStore4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.tomcat.util.net.SSLHostConfig"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          hostName:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getDefaultSSLHostConfigName1"
            valueType: "java.lang.String"
            uuid: "configureSsl_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          ciphers:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "applySslBundle_string8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          sslProtocol:
            sapientType: "BASIC"
            content: !<regular>
              value: "sslProtocol1"
            valueType: "java.lang.String"
            uuid: "applySslBundle_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.apache.tomcat.util.net.SSLHostConfig"
      uuid: "configureSsl_sSLHostConfig1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "configureSslStoreProvider_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.security.KeyStore"
      uuid: "configureSslStoreProvider_keyStore4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Could not load store: "
            valueType: "java.lang.String"
            uuid: "configureSslStoreProvider_string2"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Exception"
              parameters:
              - name: "message"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: ""
                  valueType: "java.lang.String"
                  uuid: "configureSslStoreProvider_string1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Exception"
            uuid: "configureSslStoreProvider_exception1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.IllegalStateException"
      uuid: "configureSslStoreProvider_illegalStateException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "customizeWhenStoresGetTrustStoreIsNullAndOptionsGetEnabledProtocolsIsNull"
    constructorSignature: "<init>(org.apache.commons.logging.Log,org.apache.catalina.connector.Connector,org.springframework.boot.web.server.Ssl$ClientAuth)\
      \ : void"
    modelFingerprint: "5DC76D4FBB5CF1EF1E6D7679209A45E8"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "22977422-1c10-3345-96bf-5ef4d6eb345b"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "sslHostConfig.addCertificate(certificate);"
      lineNumber: 102
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: sslHostConfig - Method: addCertificate"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path4"
    testPathName: "customizeWhenStoresGetTrustStoreIsNotNullAndOptionsGetEnabledProtocolsIsNull"
    constructorSignature: "<init>(org.apache.commons.logging.Log,org.apache.catalina.connector.Connector,org.springframework.boot.web.server.Ssl$ClientAuth)\
      \ : void"
    modelFingerprint: "67963C952E6C21E2AF77FB914E73B4AD"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "6ee1a9ca-6771-30dc-abf0-8a92f63ee68f"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "sslHostConfig.addCertificate(certificate);"
      lineNumber: 102
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: sslHostConfig - Method: addCertificate"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path5"
    testPathName: "customizeWhenStoresGetKeyStoreIsNullAndStoresGetTrustStoreIsNullAndOptionsGetEnabledProtocolsIsNull"
    constructorSignature: "<init>(org.apache.commons.logging.Log,org.apache.catalina.connector.Connector,org.springframework.boot.web.server.Ssl$ClientAuth)\
      \ : void"
    modelFingerprint: "16D9DFE71E2745506B143FE48E2EDC62"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "a1e89ab1-73a5-3b30-ad7c-a7e3bf0d7c48"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "sslHostConfig.addCertificate(certificate);"
      lineNumber: 102
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: sslHostConfig - Method: addCertificate"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path6"
    testPathName: "customizeWhenOptionsGetCiphersIsNullAndStoresGetKeyStoreIsNullAndStoresGetTrustStoreIsNullAndOptionsGetEnabledProtocols"
    constructorSignature: "<init>(org.apache.commons.logging.Log,org.apache.catalina.connector.Connector,org.springframework.boot.web.server.Ssl$ClientAuth)\
      \ : void"
    modelFingerprint: "4624448AF002DE2E34BFC61F5F745D80"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "5e0deaa0-c478-3280-8f32-b6a6b4860bb4"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "sslHostConfig.addCertificate(certificate);"
      lineNumber: 102
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: sslHostConfig - Method: addCertificate"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path7"
    testPathName: "customizeWhenOptionsGetCiphersIsNotNullAndStoresGetKeyStoreIsNullAndStoresGetTrustStoreIsNullAndOptionsGetEnabledProtoc"
    constructorSignature: "<init>(org.apache.commons.logging.Log,org.apache.catalina.connector.Connector,org.springframework.boot.web.server.Ssl$ClientAuth)\
      \ : void"
    modelFingerprint: "4592E92C263AD7D3A157583FFAA1A48C"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "1b03f46a-29b5-3fd3-a6ef-1074e5eedeb8"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "sslHostConfig.addCertificate(certificate);"
      lineNumber: 102
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: sslHostConfig - Method: addCertificate"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path8"
    testPathName: "customizeWhenStoresGetKeyStoreIsNullAndStoresGetTrustStoreIsNullAndOptionsGetEnabledProtocolsIsNull2"
    constructorSignature: "<init>(org.apache.commons.logging.Log,org.apache.catalina.connector.Connector,org.springframework.boot.web.server.Ssl$ClientAuth)\
      \ : void"
    modelFingerprint: "7DE18E619EEFCAC448113394DF91616F"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "55bce7ea-b3ac-3756-b5b8-719e12ec3349"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "sslHostConfig.addCertificate(certificate);"
      lineNumber: 102
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: sslHostConfig - Method: addCertificate"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path9"
    testPathName: "customizeWhenStoresGetKeyStoreIsNullAndStoresGetTrustStoreIsNullAndOptionsGetEnabledProtocolsIsNull3"
    constructorSignature: "<init>(org.apache.commons.logging.Log,org.apache.catalina.connector.Connector,org.springframework.boot.web.server.Ssl$ClientAuth)\
      \ : void"
    modelFingerprint: "B99404435A1CCC26CEEAABCBE01EF107"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "275e4b91-66b7-32d1-88f6-976881fc5359"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "sslHostConfig.addCertificate(certificate);"
      lineNumber: 102
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: sslHostConfig - Method: addCertificate"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path10"
    testPathName: "customizeWhenStoresGetKeyStoreIsNullAndStoresGetTrustStoreIsNullAndOptionsGetEnabledProtocolsIsNull4"
    constructorSignature: "<init>(org.apache.commons.logging.Log,org.apache.catalina.connector.Connector,org.springframework.boot.web.server.Ssl$ClientAuth)\
      \ : void"
    modelFingerprint: "C4AB7C3F2E71EAB6034B39AC96DAC9A2"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "c502ea9e-a6d9-3272-8e1a-b9ce23ebe477"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "sslHostConfig.addCertificate(certificate);"
      lineNumber: 102
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: sslHostConfig - Method: addCertificate"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path11"
    testPathName: "customizeWhenStoresGetKeyStoreIsNullAndStoresGetTrustStoreIsNullAndOptionsGetEnabledProtocolsIsNull5"
    constructorSignature: "<init>(org.apache.commons.logging.Log,org.apache.catalina.connector.Connector,org.springframework.boot.web.server.Ssl$ClientAuth)\
      \ : void"
    modelFingerprint: "EAD2FE4FB0D2F6838864B172ED76BBD0"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "e9dd441f-1c8f-3321-80b4-ef09493ac4e7"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "sslHostConfig.addCertificate(certificate);"
      lineNumber: 102
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: sslHostConfig - Method: addCertificate"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path12"
    testPathName: "customizeWhenStoresGetKeyStoreIsNullAndStoresGetTrustStoreIsNullAndOptionsGetEnabledProtocolsIsNull6"
    constructorSignature: "<init>(org.apache.commons.logging.Log,org.apache.catalina.connector.Connector,org.springframework.boot.web.server.Ssl$ClientAuth)\
      \ : void"
    modelFingerprint: "B60E5BB03782246D20F28DD15452DEBE"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "7ff83579-0803-3c11-a96d-43c61a31bda2"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "sslHostConfig.addCertificate(certificate);"
      lineNumber: 102
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: sslHostConfig - Method: addCertificate"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path13"
    testPathName: "customizeWhenStoresGetKeyStoreIsNullAndStoresGetTrustStoreIsNullAndOptionsGetEnabledProtocolsIsNull7"
    constructorSignature: "<init>(org.apache.commons.logging.Log,org.apache.catalina.connector.Connector,org.springframework.boot.web.server.Ssl$ClientAuth)\
      \ : void"
    modelFingerprint: "B616C0B2DE8BA9F205CC44C8C869723E"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E64BA70F173327AF62FFF9289F6A9376"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "sslBundle"
      modelFingerprint: "97BB1F465DEDBE61208E26C801E10D7E"
      index: 2
      valueUuid: "customize_sslBundle1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "1A05DFE6DD727A1A0055006A82ADCEBF"
      index: 3
      valueUuid: "uuid3"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "state"
        parameters:
        - name: "expression"
          valueUuid: "uuid1"
        - name: "message"
          valueUuid: "uuid2"
        signature: "state(boolean,String): void"
        returnValueUuid: "customize_void1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "protocol"
      modelFingerprint: "3D0EB84586D1E354CE0F05A52762B2F6"
      index: 4
      valueUuid: "customize_protocolHandler1"
      methodExercised:
        target: "protocol"
        name: "setSSLEnabled"
        parameters:
        - name: "SSLEnabled"
          valueUuid: "uuid4"
        signature: "setSSLEnabled(boolean): void"
        returnValueUuid: "configureSsl_void1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "protocol"
      modelFingerprint: "E9FBA6A8D17739CDE616C14BB8226CFF"
      index: 5
      valueUuid: "customize_protocolHandler1"
      methodExercised:
        target: "protocol"
        name: "getDefaultSSLHostConfigName"
        parameters: []
        signature: "getDefaultSSLHostConfigName(): String"
        returnValueUuid: "configureSsl_string1"
        access: 1
    - type: "STATIC"
      name: "Ssl.ClientAuth"
      modelFingerprint: "F49889AA17C9EF24EB1FA45C73E6FCA3"
      index: 6
      valueUuid: "uuid8"
      methodExercised:
        target: "org.springframework.boot.web.server.Ssl$ClientAuth"
        name: "map"
        parameters:
        - name: "clientAuth"
          valueUuid: "<init>_ssl.ClientAuth1"
        - name: "none"
          valueUuid: "uuid5"
        - name: "want"
          valueUuid: "uuid6"
        - name: "need"
          valueUuid: "uuid7"
        signature: "map(Ssl$ClientAuth,String,String,String): String"
        returnValueUuid: "configureSslClientAuth_string1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "config"
      modelFingerprint: "B8333C16B0694EE85EF7503B8D274FFA"
      index: 7
      valueUuid: "configureSsl_sSLHostConfig1"
      methodExercised:
        target: "config"
        name: "setCertificateVerification"
        parameters:
        - name: "iae"
          valueUuid: "configureSslClientAuth_string1"
        signature: "setCertificateVerification(String): void"
        returnValueUuid: "configureSslClientAuth_void1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "12BA420E04EFB45CF02FC7DF9676B062"
      index: 8
      valueUuid: "customize_sslBundle1"
      methodExercised:
        target: "sslBundle"
        name: "getKey"
        parameters: []
        signature: "getKey(): SslBundleKey"
        returnValueUuid: "applySslBundle_sslBundleKey1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "BAE6504D957652D61DAD0DE627D81FF5"
      index: 9
      valueUuid: "customize_sslBundle1"
      methodExercised:
        target: "sslBundle"
        name: "getStores"
        parameters: []
        signature: "getStores(): SslStoreBundle"
        returnValueUuid: "applySslBundle_sslStoreBundle1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "BA0785C36510AA5EED4EEFABAE4D58F9"
      index: 10
      valueUuid: "customize_sslBundle1"
      methodExercised:
        target: "sslBundle"
        name: "getOptions"
        parameters: []
        signature: "getOptions(): SslOptions"
        returnValueUuid: "applySslBundle_sslOptions1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "sslBundle"
      modelFingerprint: "AD827E85CC0C95CEF0FB5AF0C2503A3D"
      index: 11
      valueUuid: "customize_sslBundle1"
      methodExercised:
        target: "sslBundle"
        name: "getProtocol"
        parameters: []
        signature: "getProtocol(): String"
        returnValueUuid: "applySslBundle_string1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "stores"
      modelFingerprint: "69A4267A59178AA953B9B70CCDA9061C"
      index: 12
      valueUuid: "applySslBundle_sslStoreBundle1"
      methodExercised:
        target: "stores"
        name: "getKeyStorePassword"
        parameters: []
        signature: "getKeyStorePassword(): String"
        returnValueUuid: "applySslBundle_string2"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "A12B730151AB20407043D56452D09A1A"
      index: 13
      valueUuid: "applySslBundle_sslBundleKey1"
      methodExercised:
        target: "key"
        name: "getPassword"
        parameters: []
        signature: "getPassword(): String"
        returnValueUuid: "applySslBundle_string4"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "A12B730151AB20407043D56452D09A1A"
      index: 14
      valueUuid: "applySslBundle_sslBundleKey1"
      methodExercised:
        target: "key"
        name: "getPassword"
        parameters: []
        signature: "getPassword(): String"
        returnValueUuid: "applySslBundle_string5"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "C995A96532083037B00C0A1A22791DBC"
      index: 15
      valueUuid: "applySslBundle_sslBundleKey1"
      methodExercised:
        target: "key"
        name: "getAlias"
        parameters: []
        signature: "getAlias(): String"
        returnValueUuid: "applySslBundle_string6"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "key"
      modelFingerprint: "C995A96532083037B00C0A1A22791DBC"
      index: 16
      valueUuid: "applySslBundle_sslBundleKey1"
      methodExercised:
        target: "key"
        name: "getAlias"
        parameters: []
        signature: "getAlias(): String"
        returnValueUuid: "applySslBundle_string7"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "sslHostConfig"
      modelFingerprint: "540C631AB1CF7D55496C9BA2AA7C8CF4"
      index: 17
      valueUuid: "configureSsl_sSLHostConfig1"
      methodExercised:
        target: "sslHostConfig"
        name: "addCertificate"
        parameters:
        - name: "certificate"
          valueUuid: "applySslBundle_sSLHostConfigCertificate1"
        signature: "addCertificate(SSLHostConfigCertificate): void"
        returnValueUuid: "applySslBundle_void5"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "C1BFDA593DF46AC83AB9F54B484C226E"
      index: 18
      valueUuid: "applySslBundle_sslOptions1"
      methodExercised:
        target: "options"
        name: "getCiphers"
        parameters: []
        signature: "getCiphers(): String[]"
        returnValueUuid: "applySslBundle_string[]1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "A1058AA999CE50FEFD0694B8CF0F7E56"
      index: 19
      valueUuid: "applySslBundle_sslOptions1"
      methodExercised:
        target: "options"
        name: "getCiphers"
        parameters: []
        signature: "getCiphers(): String[]"
        returnValueUuid: "applySslBundle_string[]2"
        access: 1025
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "66DD1A04D6EEBE45F22219DEE333B410"
      index: 20
      valueUuid: "uuid9"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "arrayToCommaDelimitedString"
        parameters:
        - name: "arr"
          valueUuid: "applySslBundle_string[]2"
        signature: "arrayToCommaDelimitedString(String[]): String"
        returnValueUuid: "applySslBundle_string8"
        access: 9
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "3B1F3A8CE36B394400D06B3A551281F5"
      index: 21
      valueUuid: "uuid12"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "isInstanceOf"
        parameters:
        - name: "type"
          valueUuid: "uuid10"
        - name: "obj"
          valueUuid: "customize_protocolHandler1"
        - name: "message"
          valueUuid: "uuid11"
        signature: "isInstanceOf(Class,AbstractHttp11JsseProtocol,String): void"
        returnValueUuid: "configureSslStoreProvider_void1"
        access: 9
    - type: "LOCAL_VARIABLE"
      name: "stores"
      modelFingerprint: "B357148601A4ADA16524AE84F1137B46"
      index: 22
      idsTryCatchBlockSurrounding:
      - 1010001
      valueUuid: "applySslBundle_sslStoreBundle1"
      methodExercised:
        target: "stores"
        name: "getKeyStore"
        parameters: []
        signature: "getKeyStore(): KeyStore"
        returnValueUuid: "configureSslStoreProvider_keyStore1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "stores"
      modelFingerprint: "FF778F6EE25EF6B44FBC2EC39C0C04D0"
      index: 23
      idsTryCatchBlockSurrounding:
      - 1010001
      valueUuid: "applySslBundle_sslStoreBundle1"
      methodExercised:
        target: "stores"
        name: "getTrustStore"
        parameters: []
        signature: "getTrustStore(): KeyStore"
        returnValueUuid: "configureSslStoreProvider_keyStore2"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "options"
      modelFingerprint: "56B30302575E5BC0C11CB6B82CAB295C"
      index: 24
      valueUuid: "applySslBundle_sslOptions1"
      methodExercised:
        target: "options"
        name: "getEnabledProtocols"
        parameters: []
        signature: "getEnabledProtocols(): String[]"
        returnValueUuid: "configureEnabledProtocols_string[]1"
        access: 1025
    - type: "LOCAL_VARIABLE"
      name: "protocol"
      modelFingerprint: "A4A4F44C1E3660F1CEB3D3074DDFB942"
      index: 25
      valueUuid: "customize_protocolHandler1"
      methodExercised:
        target: "protocol"
        name: "addSslHostConfig"
        parameters:
        - name: "sslHostConfig"
          valueUuid: "configureSsl_sSLHostConfig1"
        - name: "replace"
          valueUuid: "uuid13"
        signature: "addSslHostConfig(SSLHostConfig,boolean): void"
        returnValueUuid: "configureSsl_void3"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 26
      valueUuid: "uuid14"
    uuid: "fa2f19fa-aa91-328e-a305-bd1ae03dc4a9"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer"
        parameters:
        - name: "logger"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.apache.commons.logging.impl.NoOpLog"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "org.apache.commons.logging.impl.NoOpLog"
            uuid: "<init>_log1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "connector"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.apache.catalina.connector.Connector"
              parameters:
              - name: "protocolHandler"
                value:
                  sapientType: "MOCK"
                  valueType: "org.apache.coyote.http11.AbstractHttp11JsseProtocol"
                  uuid: "customize_protocolHandler1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: true
              privateConstructor: false
              createdByTargetCode: false
              propertiesMap:
                scheme:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "https"
                  valueType: "java.lang.String"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                secure:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  fixed: true
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "org.apache.catalina.connector.Connector"
            uuid: "<init>_connector1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "clientAuth"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NEED"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "<init>_ssl.ClientAuth1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "customize_sslBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "customize_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "To use SSL, the connector's protocol handler must be an AbstractHttp11JsseProtocol\
          \ subclass"
      valueType: "java.lang.String"
      uuid: "uuid2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.apache.coyote.http11.AbstractHttp11JsseProtocol"
      uuid: "customize_protocolHandler1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "configureSsl_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid4"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.apache.coyote.http11.AbstractHttp11JsseProtocol"
      uuid: "customize_protocolHandler1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getDefaultSSLHostConfigName1"
      valueType: "java.lang.String"
      uuid: "configureSsl_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
      uuid: "uuid8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "required"
      valueType: "java.lang.String"
      uuid: "configureSslClientAuth_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ENUM"
      content: !<regular>
        value: "NEED"
      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
      uuid: "<init>_ssl.ClientAuth1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "none"
      valueType: "java.lang.String"
      uuid: "uuid5"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "optional"
      valueType: "java.lang.String"
      uuid: "uuid6"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "required"
      valueType: "java.lang.String"
      uuid: "uuid7"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.tomcat.util.net.SSLHostConfig"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          hostName:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getDefaultSSLHostConfigName1"
            valueType: "java.lang.String"
            uuid: "configureSsl_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          ciphers:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "applySslBundle_string8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          sslProtocol:
            sapientType: "BASIC"
            content: !<regular>
              value: "sslProtocol1"
            valueType: "java.lang.String"
            uuid: "applySslBundle_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.apache.tomcat.util.net.SSLHostConfig"
      uuid: "configureSsl_sSLHostConfig1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "configureSslClientAuth_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "required"
      valueType: "java.lang.String"
      uuid: "configureSslClientAuth_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "customize_sslBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "applySslBundle_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "customize_sslBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "applySslBundle_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "customize_sslBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "applySslBundle_sslOptions1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "customize_sslBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "sslProtocol1"
      valueType: "java.lang.String"
      uuid: "applySslBundle_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "applySslBundle_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "applySslBundle_string2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "applySslBundle_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPassword1"
      valueType: "java.lang.String"
      uuid: "applySslBundle_string4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "applySslBundle_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getPassword1"
      valueType: "java.lang.String"
      uuid: "applySslBundle_string5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "applySslBundle_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getAlias1"
      valueType: "java.lang.String"
      uuid: "applySslBundle_string6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundleKey"
      uuid: "applySslBundle_sslBundleKey1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getAlias1"
      valueType: "java.lang.String"
      uuid: "applySslBundle_string7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.tomcat.util.net.SSLHostConfig"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          hostName:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getDefaultSSLHostConfigName1"
            valueType: "java.lang.String"
            uuid: "configureSsl_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          ciphers:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "applySslBundle_string8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          sslProtocol:
            sapientType: "BASIC"
            content: !<regular>
              value: "sslProtocol1"
            valueType: "java.lang.String"
            uuid: "applySslBundle_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.apache.tomcat.util.net.SSLHostConfig"
      uuid: "configureSsl_sSLHostConfig1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "applySslBundle_void5"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.tomcat.util.net.SSLHostConfigCertificate"
        parameters:
        - name: "sslHostConfig"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.apache.tomcat.util.net.SSLHostConfig"
              parameters: []
              privateConstructor: false
              createdByTargetCode: true
              propertiesMap:
                hostName:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "return_of_getDefaultSSLHostConfigName1"
                  valueType: "java.lang.String"
                  uuid: "configureSsl_string1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                ciphers:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: ""
                  valueType: "java.lang.String"
                  uuid: "applySslBundle_string8"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
                sslProtocol:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "sslProtocol1"
                  valueType: "java.lang.String"
                  uuid: "applySslBundle_string1"
                  fixed: false
                  equalsMethodPresent: false
                  explicitCastNeeded: false
            valueType: "org.apache.tomcat.util.net.SSLHostConfig"
            uuid: "configureSsl_sSLHostConfig1"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "type"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "UNDEFINED"
            valueType: "org.apache.tomcat.util.net.SSLHostConfigCertificate$Type"
            uuid: "Enum-org.apache.tomcat.util.net.SSLHostConfigCertificate$Type-UNDEFINED"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          certificateKeyAlias:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getAlias1"
            valueType: "java.lang.String"
            uuid: "applySslBundle_string7"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          certificateKeystorePassword:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "applySslBundle_string3"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
          certificateKeyPassword:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getPassword1"
            valueType: "java.lang.String"
            uuid: "applySslBundle_string5"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.apache.tomcat.util.net.SSLHostConfigCertificate"
      uuid: "applySslBundle_sSLHostConfigCertificate1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "applySslBundle_sslOptions1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "applySslBundle_string[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "applySslBundle_sslOptions1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "applySslBundle_string[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid9"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "applySslBundle_string8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "applySslBundle_string[]2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid12"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "configureSslStoreProvider_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.apache.coyote.http11.Http11NioProtocol"
      valueType: "java.lang.Class"
      genericValueType: "org.apache.coyote.http11.Http11NioProtocol"
      uuid: "uuid10"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.apache.coyote.http11.AbstractHttp11JsseProtocol"
      uuid: "customize_protocolHandler1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "SslStoreProvider can only be used with Http11NioProtocol"
      valueType: "java.lang.String"
      uuid: "uuid11"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "applySslBundle_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.security.KeyStore"
      uuid: "configureSslStoreProvider_keyStore1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslStoreBundle"
      uuid: "applySslBundle_sslStoreBundle1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.security.KeyStore"
      uuid: "configureSslStoreProvider_keyStore2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslOptions"
      uuid: "applySslBundle_sslOptions1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.String[]"
      uuid: "configureEnabledProtocols_string[]1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.apache.coyote.http11.AbstractHttp11JsseProtocol"
      uuid: "customize_protocolHandler1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "configureSsl_void3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.tomcat.util.net.SSLHostConfig"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
        propertiesMap:
          hostName:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getDefaultSSLHostConfigName1"
            valueType: "java.lang.String"
            uuid: "configureSsl_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          ciphers:
            sapientType: "BASIC"
            content: !<regular>
              value: ""
            valueType: "java.lang.String"
            uuid: "applySslBundle_string8"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
          sslProtocol:
            sapientType: "BASIC"
            content: !<regular>
              value: "sslProtocol1"
            valueType: "java.lang.String"
            uuid: "applySslBundle_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.apache.tomcat.util.net.SSLHostConfig"
      uuid: "configureSsl_sSLHostConfig1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uuid13"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid14"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path14"
    testPathName: "customizeWhenStoresGetKeyStoreIsNullAndStoresGetTrustStoreIsNullAndOptionsGetEnabledProtocolsIsNull8"
    constructorSignature: "<init>(org.apache.commons.logging.Log,org.apache.catalina.connector.Connector,org.springframework.boot.web.server.Ssl$ClientAuth)\
      \ : void"
    modelFingerprint: "E00A7B3FE5FF4DFB9F655F29B71B987A"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "2c03adce-5b3f-35b5-a717-d88c5d71b6d6"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "sslHostConfig.addCertificate(certificate);"
      lineNumber: 102
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: sslHostConfig - Method: addCertificate"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path15"
    testPathName: "customizeWhenStoresGetKeyStoreIsNullAndStoresGetTrustStoreIsNullAndOptionsGetEnabledProtocolsIsNull9"
    constructorSignature: "<init>(org.apache.commons.logging.Log,org.apache.catalina.connector.Connector,org.springframework.boot.web.server.Ssl$ClientAuth)\
      \ : void"
    modelFingerprint: "F7932C3ED7FFB882B26582B5E08B543F"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "6df81063-25f1-3b55-b863-9947bd38dff4"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "sslHostConfig.addCertificate(certificate);"
      lineNumber: 102
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: sslHostConfig - Method: addCertificate"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path16"
    testPathName: "customizeWhenStoresGetKeyStoreIsNullAndStoresGetTrustStoreIsNullAndOptionsGetEnabledProtocolsIsNull10"
    constructorSignature: "<init>(org.apache.commons.logging.Log,org.apache.catalina.connector.Connector,org.springframework.boot.web.server.Ssl$ClientAuth)\
      \ : void"
    modelFingerprint: "8AE7D4FFA72619D5B838362648BE6D87"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "3163eb83-1e31-3979-b450-8d50a8ae3c67"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "sslHostConfig.addCertificate(certificate);"
      lineNumber: 102
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: sslHostConfig - Method: addCertificate"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path17"
    testPathName: "customizeWhenStoresGetKeyStoreIsNullAndStoresGetTrustStoreIsNullAndOptionsGetEnabledProtocolsIsNull11"
    constructorSignature: "<init>(org.apache.commons.logging.Log,org.apache.catalina.connector.Connector,org.springframework.boot.web.server.Ssl$ClientAuth)\
      \ : void"
    modelFingerprint: "D5DDA5C8640EFA0A9E4ED8D8D803E911"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "eef6a23f-d7db-3609-b15f-51196fe8a7ed"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "sslHostConfig.addCertificate(certificate);"
      lineNumber: 102
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: sslHostConfig - Method: addCertificate"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path18"
    testPathName: "customizeWhenStoresGetKeyStoreIsNullAndStoresGetTrustStoreIsNullAndOptionsGetEnabledProtocolsIsNull12"
    constructorSignature: "<init>(org.apache.commons.logging.Log,org.apache.catalina.connector.Connector,org.springframework.boot.web.server.Ssl$ClientAuth)\
      \ : void"
    modelFingerprint: "35B5EAB48AF7EBF13BF5ABE1A174A153"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "193600e7-8822-3fca-92d2-73559c9d3bb2"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "sslHostConfig.addCertificate(certificate);"
      lineNumber: 102
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: sslHostConfig - Method: addCertificate"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path19"
    testPathName: "customizeWhenStoresGetKeyStoreIsNullAndStoresGetTrustStoreIsNullAndOptionsGetEnabledProtocolsIsNull13"
    constructorSignature: "<init>(org.apache.commons.logging.Log,org.apache.catalina.connector.Connector,org.springframework.boot.web.server.Ssl$ClientAuth)\
      \ : void"
    modelFingerprint: "DF5695A0E177CE57E3C205A613A1232F"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "a3f408b5-2c13-3886-bcfb-714eb7b26835"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "sslHostConfig.addCertificate(certificate);"
      lineNumber: 102
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: sslHostConfig - Method: addCertificate"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path20"
    testPathName: "customizeWhenStoresGetKeyStoreIsNullAndStoresGetTrustStoreIsNullAndOptionsGetEnabledProtocolsIsNull14"
    constructorSignature: "<init>(org.apache.commons.logging.Log,org.apache.catalina.connector.Connector,org.springframework.boot.web.server.Ssl$ClientAuth)\
      \ : void"
    modelFingerprint: "CC9988469650ECC8DE9A8D69E6A9C4CE"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "fd253eea-5d38-3a39-b3dd-62994c9d6dc8"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "sslHostConfig.addCertificate(certificate);"
      lineNumber: 102
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: sslHostConfig - Method: addCertificate"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
