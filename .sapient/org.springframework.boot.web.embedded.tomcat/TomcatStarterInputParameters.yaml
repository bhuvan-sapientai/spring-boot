---
modelFingerprint: "527097BFD1E2EE73C9B9DC2AE710B533"
targetClass:
  fullClassName: "org.springframework.boot.web.embedded.tomcat.TomcatStarter"
methods:
- method:
    name: "onStartup"
    sourceCodeSignature: "void onStartup(Set<Class<?>> classes, ServletContext servletContext)"
    returnType: "void"
    throwsExceptions:
    - "jakarta.servlet.ServletException"
    parameters:
    - name: "classes"
      type: "java.util.Set"
    - name: "servletContext"
      type: "jakarta.servlet.ServletContext"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "F25DEA97481A9E5138140A943F0C9F79"
  paths:
  - pathId: "path1"
    testPathName: "onStartupWhenThisInitializersIsNotEmpty"
    constructorSignature: "<init>(org.springframework.boot.web.servlet.ServletContextInitializer[])\
      \ : void"
    modelFingerprint: "552124F83B8458319F3E377C57BA7AB4"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D4112C0FDC57FECCDCC781BD1CEF0E0F"
      valueUuid: "target"
    - type: "INPUT"
      name: "classes"
      modelFingerprint: "8C2AD977A2C600FCA1CBC7CEB847B7CC"
      valueUuid: "classes"
    - type: "INPUT"
      name: "servletContext"
      modelFingerprint: "2877956BB0F40DCE620349E94FF59BE7"
      valueUuid: "servletContext"
    - type: "LOCAL_VARIABLE"
      name: "initializer"
      modelFingerprint: "38973F73938801A6249E7520C0F36806"
      valueUuid: "servletContextInitializer"
      methodExercised:
        expression: "onStartup(servletContext:servletContext):void"
        throwsExceptions:
        - "jakarta.servlet.ServletException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatStarter"
        parameters:
        - name: "initializers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.web.servlet.ServletContextInitializer"
                  uuid: "servletContextInitializer"
            valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
            uuid: "initializers"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatStarter"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Class<?>"
      uuid: "classes"
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "servletContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer"
      uuid: "servletContextInitializer"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "servletContext"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 51
      expression: "for-each(this.initializers)"
      range: "(51,49)-(51,65)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "onStartupWhenLoggerIsErrorEnabled"
    constructorSignature: "<init>(org.springframework.boot.web.servlet.ServletContextInitializer[])\
      \ : void"
    modelFingerprint: "653BA40727B2DD131628B8C6828C7E7D"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D4112C0FDC57FECCDCC781BD1CEF0E0F"
      valueUuid: "target"
    - type: "INPUT"
      name: "classes"
      modelFingerprint: "8C2AD977A2C600FCA1CBC7CEB847B7CC"
      valueUuid: "classes"
    - type: "INPUT"
      name: "servletContext"
      modelFingerprint: "2877956BB0F40DCE620349E94FF59BE7"
      valueUuid: "servletContext"
    - type: "LOCAL_VARIABLE"
      name: "initializer"
      modelFingerprint: "E39851CB51659F3CA7D2D7E12BF48126"
      valueUuid: "servletContextInitializer"
      methodExercised:
        expression: "onStartup(servletContext:servletContext):void"
        throwsExceptions:
        - "jakarta.servlet.ServletException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    - type: "STATE_VERIFICATION_FIELD"
      name: "startUpException"
      modelFingerprint: "7F8A8A57F4BB9BC5B9720AB2269AD5FD"
      valueUuid: "void"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatStarter"
        parameters:
        - name: "initializers"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values:
                0:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.web.servlet.ServletContextInitializer"
                  uuid: "servletContextInitializer"
            valueType: "org.springframework.boot.web.servlet.ServletContextInitializer[]"
            uuid: "initializers"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatStarter"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "java.lang.Class<?>"
      uuid: "classes"
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "servletContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.servlet.ServletContextInitializer"
      uuid: "servletContextInitializer"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.RuntimeException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "message"
      valueType: "java.lang.RuntimeException"
      uuid: "void"
    - sapientType: "MOCK"
      valueType: "jakarta.servlet.ServletContext"
      uuid: "servletContext"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.RuntimeException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "message"
      valueType: "java.lang.RuntimeException"
      uuid: "void"
    branches:
    - lineNumber: 51
      expression: "for-each(this.initializers)"
      range: "(51,49)-(51,65)"
      evaluatedAs: true
    - lineNumber: 55
      expression: "catch-exception (Exception)"
      range: "(55,3)-(55,21)"
      evaluatedAs: true
    - lineNumber: 59
      expression: "logger.isErrorEnabled()"
      range: "(59,8)-(59,30)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
- method:
    name: "getStartUpException"
    sourceCodeSignature: "Exception getStartUpException()"
    returnType: "java.lang.Exception"
    instructionFingerprint: "B35C32825C417E0A9DE45B923D6EF863"
  paths:
  - pathId: "path1"
    testPathName: "getStartUpExceptionTest"
    constructorSignature: "<init>(org.springframework.boot.web.servlet.ServletContextInitializer[])\
      \ : void"
    modelFingerprint: "A49093C4639CEB23AF0E202237367CBF"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
