---
modelFingerprint: "4221C07F3507E8174FAC35D581D7E3D8"
targetClass:
  fullClassName: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
methods:
- method:
    name: "getWebServer"
    sourceCodeSignature: "WebServer getWebServer(HttpHandler httpHandler)"
    returnType: "org.springframework.boot.web.server.WebServer"
    parameters:
    - name: "httpHandler"
      type: "org.springframework.http.server.reactive.HttpHandler"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
    instructionFingerprint: "3CB273ECAEDB0392584B8509E1F34EA7"
  paths:
  - pathId: "path2"
    testPathName: "getWebServerWhenGetUriEncodingIsNotNullThrowsWebServerException"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "F38A123281F347650B141DA16E65ED5F"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4D14EFCEAB2E6E0528CF735957994902"
      valueUuid: "target"
    - type: "INPUT"
      name: "httpHandler"
      modelFingerprint: "54ADB25CEDDDFBF94C6420F7A69C5FBC"
      valueUuid: "httpHandler"
    - type: "STATIC"
      name: "AprLifecycleListener.class.real"
      modelFingerprint: "CC9A8F89EABB0037F7F11A3BACBB4F84"
      valueUuid: "AprLifecycleListener.class.real"
      methodExercised:
        expression: "isAprAvailable():boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "Registry.class.real"
      modelFingerprint: "7D63F09B42CC634A6FC722BBE1C3FE4C"
      valueUuid: "Registry.class.real"
      methodExercised:
        expression: "disableRegistry():void"
        staticAccess: true
    - type: "STATIC"
      name: "Files.class"
      modelFingerprint: "39B8B8D894B18C0F29BE17097AA650A0"
      valueUuid: "Files.class"
      methodExercised:
        expression: "createTempDirectory(prefix:string2,attrs:fileAttributeArray):path"
        throwsExceptions:
        - "java.io.IOException"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C241AD6C949C59D53E70FC9B7DB63585"
      valueUuid: "webServerException"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.nio.file.Path.toFile() : java.io.File"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.server.reactive.HttpHandler"
      uuid: "httpHandler"
    - sapientType: "REAL"
      valueType: "org.apache.catalina.core.AprLifecycleListener"
      uuid: "AprLifecycleListener.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "REAL"
      valueType: "org.apache.tomcat.util.modeler.Registry"
      uuid: "Registry.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "java.nio.file.Files"
      uuid: "Files.class"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Path"
      uuid: "path"
    - sapientType: "BASIC"
      content: !<regular>
        value: "tomcat.2."
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.nio.file.attribute.FileAttribute[]"
      uuid: "fileAttributeArray"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.web.server.WebServerException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable to create tempDir. java.io.tmpdir is set to A"
            valueType: "java.lang.String"
            uuid: "string4"
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.IOException"
              parameters: []
            valueType: "java.io.IOException"
            uuid: "iOException"
      valueType: "org.springframework.boot.web.server.WebServerException"
      uuid: "webServerException"
      fixed: true
    branches:
    - lineNumber: 125
      expression: "this.disableMBeanRegistry"
      range: "(125,7)-(125,31)"
      evaluatedAs: true
    - lineNumber: 129
      expression: "this.baseDirectory != null"
      range: "(129,19)-(129,44)"
      evaluatedAs: false
    - lineNumber: 209
      expression: "getUriEncoding() != null"
      range: "(209,7)-(209,30)"
      evaluatedAs: true
      internalMethodName: "createTempDir"
    calledSomeStaticInternalMethod: true
    catchBlockExercised:
      idExternalInstruction: 27
      id: 1
      catchExceptions:
      - "java.io.IOException"
  - pathId: "path1"
    testPathName: "getWebServerWhenThisAdditionalTomcatConnectorsIsEmpty"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "90996F07C95B64FC6ACF8A87E04E1F43"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4D14EFCEAB2E6E0528CF735957994902"
      valueUuid: "target"
    - type: "INPUT"
      name: "httpHandler"
      modelFingerprint: "54ADB25CEDDDFBF94C6420F7A69C5FBC"
      valueUuid: "httpHandler"
    - type: "STATIC"
      name: "AprLifecycleListener.class.real"
      modelFingerprint: "CC9A8F89EABB0037F7F11A3BACBB4F84"
      valueUuid: "AprLifecycleListener.class.real"
      methodExercised:
        expression: "isAprAvailable():boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "Registry.class.real"
      modelFingerprint: "7D63F09B42CC634A6FC722BBE1C3FE4C"
      valueUuid: "Registry.class.real"
      methodExercised:
        expression: "disableRegistry():void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "tomcat"
      modelFingerprint: "5C1D488F34662862A5DB9D6EF94F632C"
      valueUuid: "tomcat"
      methodExercised:
        expression: "setBaseDir(basedir:string3):void3"
    - type: "LOCAL_VARIABLE"
      name: "tomcat"
      modelFingerprint: "C254C6FB0C9AA6120E597D5F491723A1"
      valueUuid: "tomcat"
      methodExercised:
        expression: "getService():service"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "1C2922CAB341883FAC9269CF4F4A97B7"
      valueUuid: "service"
      methodExercised:
        expression: "addConnector(arg0:connector):void5"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "AB7EC33823AFEEFD7EB59595755C88D5"
      methodExercised:
        expression: "customizeConnector(connector:connector):void6"
    - type: "LOCAL_VARIABLE"
      name: "tomcat"
      modelFingerprint: "649A3A0A6A7CEF8C88E536FABAB1E93A"
      valueUuid: "tomcat"
      methodExercised:
        expression: "setConnector(connector:connector):void7"
    - type: "LOCAL_VARIABLE"
      name: "connector"
      modelFingerprint: "37901781025DB640842EA1F95FE5A14F"
      valueUuid: "connector"
      methodExercised:
        expression: "getProtocolHandler():protocolHandler"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "C118E29F875AADA651F8190EDA032319"
      valueUuid: "protocolHandler"
      methodExercised:
        expression: "getExecutor():executor"
    - type: "LOCAL_VARIABLE"
      name: "tomcat"
      modelFingerprint: "B82E25E633D0A288ABDECD0206266B5F"
      valueUuid: "tomcat"
      methodExercised:
        expression: "getHost():host"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E177535B483E3BAAE2F95A4D55FBAC90"
      valueUuid: "host"
      methodExercised:
        expression: "setAutoDeploy(arg0:uniqueUuid5):void8"
    - type: "LOCAL_VARIABLE"
      name: "tomcat"
      modelFingerprint: "1D48DD979860E674E028FBE2D9444749"
      valueUuid: "tomcat"
      methodExercised:
        expression: "getEngine():engine"
    - type: "LOCAL_VARIABLE"
      name: "engine"
      modelFingerprint: "B5D5C014589317B44D32272DE1D0143A"
      valueUuid: "engine"
      methodExercised:
        expression: "setBackgroundProcessorDelay(arg0:fieldint1):void9"
    - type: "LOCAL_VARIABLE"
      name: "tomcat"
      modelFingerprint: "B82E25E633D0A288ABDECD0206266B5F"
      valueUuid: "tomcat"
      methodExercised:
        expression: "getHost():host2"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "019A77949615AFC01E5A2669E77EFA21"
      methodExercised:
        expression: "prepareContext(host:host2,servlet:tomcatHttpHandlerAdapter):void10"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "D325C992988821AD9F7E3860D48B9D0A"
      methodExercised:
        expression: "getTomcatWebServer(tomcat:tomcat):tomcatWebServer"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "EB06479C81B9B1A7D6740490D269D535"
      valueUuid: "tomcatWebServer"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.nio.file.Path.toFile() : java.io.File"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.server.reactive.HttpHandler"
      uuid: "httpHandler"
    - sapientType: "REAL"
      valueType: "org.apache.catalina.core.AprLifecycleListener"
      uuid: "AprLifecycleListener.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "REAL"
      valueType: "org.apache.tomcat.util.modeler.Registry"
      uuid: "Registry.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.apache.catalina.startup.Tomcat"
      uuid: "tomcat"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "ANY"
      valueType: "org.apache.catalina.startup.Tomcat"
      uuid: "tomcat"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.apache.catalina.Service"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.apache.catalina.startup.Tomcat"
            parameters: []
          valueType: "org.apache.catalina.startup.Tomcat"
          uuid: "tomcat"
          fixed: true
        methodParameters: []
        methodName: "getService"
      valueType: "org.apache.catalina.Service"
      uuid: "service"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.apache.catalina.Service"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.apache.catalina.startup.Tomcat"
            parameters: []
          valueType: "org.apache.catalina.startup.Tomcat"
          uuid: "tomcat"
          fixed: true
        methodParameters: []
        methodName: "getService"
      valueType: "org.apache.catalina.Service"
      uuid: "service"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.catalina.connector.Connector"
        parameters:
        - name: "protocol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "org.apache.coyote.http11.Http11NioProtocol"
            valueType: "java.lang.String"
            uuid: "string"
            fixed: true
        propertiesMap:
          throwOnFailure:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "uniqueUuid4"
            fixed: true
      valueType: "org.apache.catalina.connector.Connector"
      uuid: "connector"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.catalina.connector.Connector"
        parameters:
        - name: "protocol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "org.apache.coyote.http11.Http11NioProtocol"
            valueType: "java.lang.String"
            uuid: "string"
            fixed: true
        propertiesMap:
          throwOnFailure:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "uniqueUuid4"
            fixed: true
      valueType: "org.apache.catalina.connector.Connector"
      uuid: "connector"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.apache.catalina.startup.Tomcat"
      uuid: "tomcat"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.catalina.connector.Connector"
        parameters:
        - name: "protocol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "org.apache.coyote.http11.Http11NioProtocol"
            valueType: "java.lang.String"
            uuid: "string"
            fixed: true
        propertiesMap:
          throwOnFailure:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "uniqueUuid4"
            fixed: true
      valueType: "org.apache.catalina.connector.Connector"
      uuid: "connector"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.catalina.connector.Connector"
        parameters:
        - name: "protocol"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "org.apache.coyote.http11.Http11NioProtocol"
            valueType: "java.lang.String"
            uuid: "string"
            fixed: true
        propertiesMap:
          throwOnFailure:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "uniqueUuid4"
            fixed: true
      valueType: "org.apache.catalina.connector.Connector"
      uuid: "connector"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.apache.coyote.ProtocolHandler"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.apache.catalina.connector.Connector"
            parameters:
            - name: "protocol"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "org.apache.coyote.http11.Http11NioProtocol"
                valueType: "java.lang.String"
                uuid: "string"
                fixed: true
            propertiesMap:
              throwOnFailure:
                sapientType: "BASIC"
                content: !<regular>
                  value: true
                valueType: "boolean"
                fixed: true
          valueType: "org.apache.catalina.connector.Connector"
          uuid: "connector"
          fixed: true
        methodParameters: []
        methodName: "getProtocolHandler"
      valueType: "org.apache.coyote.ProtocolHandler"
      uuid: "protocolHandler"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.apache.coyote.ProtocolHandler"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.apache.catalina.connector.Connector"
            parameters:
            - name: "protocol"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "org.apache.coyote.http11.Http11NioProtocol"
                valueType: "java.lang.String"
                uuid: "string"
                fixed: true
            propertiesMap:
              throwOnFailure:
                sapientType: "BASIC"
                content: !<regular>
                  value: true
                valueType: "boolean"
                fixed: true
          valueType: "org.apache.catalina.connector.Connector"
          uuid: "connector"
          fixed: true
        methodParameters: []
        methodName: "getProtocolHandler"
      valueType: "org.apache.coyote.ProtocolHandler"
      uuid: "protocolHandler"
    - sapientType: "NULL"
      valueType: "java.util.concurrent.Executor"
      uuid: "executor"
    - sapientType: "ANY"
      valueType: "org.apache.catalina.startup.Tomcat"
      uuid: "tomcat"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.apache.catalina.Host"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.apache.catalina.startup.Tomcat"
            parameters: []
          valueType: "org.apache.catalina.startup.Tomcat"
          uuid: "tomcat"
          fixed: true
        methodParameters: []
        methodName: "getHost"
      valueType: "org.apache.catalina.Host"
      uuid: "host"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.apache.catalina.Host"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.apache.catalina.startup.Tomcat"
            parameters: []
          valueType: "org.apache.catalina.startup.Tomcat"
          uuid: "tomcat"
          fixed: true
        methodParameters: []
        methodName: "getHost"
      valueType: "org.apache.catalina.Host"
      uuid: "host"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.apache.catalina.startup.Tomcat"
      uuid: "tomcat"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.apache.catalina.Engine"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.apache.catalina.startup.Tomcat"
            parameters: []
          valueType: "org.apache.catalina.startup.Tomcat"
          uuid: "tomcat"
          fixed: true
        methodParameters: []
        methodName: "getEngine"
      valueType: "org.apache.catalina.Engine"
      uuid: "engine"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.apache.catalina.Engine"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.apache.catalina.startup.Tomcat"
            parameters: []
          valueType: "org.apache.catalina.startup.Tomcat"
          uuid: "tomcat"
          fixed: true
        methodParameters: []
        methodName: "getEngine"
      valueType: "org.apache.catalina.Engine"
      uuid: "engine"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "fieldint1"
    - sapientType: "ANY"
      valueType: "org.apache.catalina.startup.Tomcat"
      uuid: "tomcat"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.apache.catalina.Host"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.apache.catalina.startup.Tomcat"
            parameters: []
          valueType: "org.apache.catalina.startup.Tomcat"
          uuid: "tomcat"
          fixed: true
        methodParameters: []
        methodName: "getHost"
      valueType: "org.apache.catalina.Host"
      uuid: "host2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.apache.catalina.Host"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.apache.catalina.startup.Tomcat"
            parameters: []
          valueType: "org.apache.catalina.startup.Tomcat"
          uuid: "tomcat"
          fixed: true
        methodParameters: []
        methodName: "getHost"
      valueType: "org.apache.catalina.Host"
      uuid: "host2"
    - sapientType: "ANY"
      valueType: "org.springframework.http.server.reactive.TomcatHttpHandlerAdapter"
      uuid: "tomcatHttpHandlerAdapter"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatWebServer"
      uuid: "tomcatWebServer"
    - sapientType: "ANY"
      valueType: "org.apache.catalina.startup.Tomcat"
      uuid: "tomcat"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatWebServer"
      uuid: "tomcatWebServer"
    branches:
    - lineNumber: 125
      expression: "this.disableMBeanRegistry"
      range: "(125,7)-(125,31)"
      evaluatedAs: true
    - lineNumber: 129
      expression: "this.baseDirectory != null"
      range: "(129,19)-(129,44)"
      evaluatedAs: false
    - lineNumber: 131
      expression: "for-each(this.serverLifecycleListeners)"
      range: "(131,37)-(131,65)"
      evaluatedAs: false
    - lineNumber: 152
      expression: "connector.getProtocolHandler().getExecutor() instanceof Executor\
        \ executor"
      range: "(152,7)-(152,79)"
      evaluatedAs: false
      internalMethodName: "registerConnectorExecutor"
    - lineNumber: 159
      expression: "for-each(this.engineValves)"
      range: "(159,22)-(159,38)"
      evaluatedAs: false
      internalMethodName: "configureEngine"
    - lineNumber: 142
      expression: "for-each(this.additionalTomcatConnectors)"
      range: "(142,40)-(142,70)"
      evaluatedAs: false
    calledSomeStaticInternalMethod: true
- method:
    name: "prepareContext"
    sourceCodeSignature: "void prepareContext(Host host, TomcatHttpHandlerAdapter\
      \ servlet)"
    returnType: "void"
    parameters:
    - name: "host"
      type: "org.apache.catalina.Host"
    - name: "servlet"
      type: "org.springframework.http.server.reactive.TomcatHttpHandlerAdapter"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
    instructionFingerprint: "DAD57B9774084F1D1132DA2664DA143F"
  paths:
  - pathId: "path1"
    testPathName: "prepareContextTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "9EE378F522A0742201B5FF70D4650757"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4D14EFCEAB2E6E0528CF735957994902"
      valueUuid: "target"
    - type: "INPUT"
      name: "host"
      modelFingerprint: "F54E5E1A33786B5D58AB8683EC6C9A4E"
      valueUuid: "host"
    - type: "INPUT"
      name: "servlet"
      modelFingerprint: "3501391AAB78B8954B482D96C8CF7573"
      valueUuid: "servlet"
    - type: "STATIC"
      name: "AprLifecycleListener.class.real"
      modelFingerprint: "CC9A8F89EABB0037F7F11A3BACBB4F84"
      valueUuid: "AprLifecycleListener.class.real"
      methodExercised:
        expression: "isAprAvailable():boolean1"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "23FD39C3411C8DADB966E8847D788C15"
      valueUuid: "tomcatEmbeddedContext"
      methodExercised:
        expression: "addLifecycleListener(arg0:tomcat.FixContextListener):void4"
    - type: "STATIC"
      name: "ClassUtils.class.real"
      modelFingerprint: "70484AD192BDA84A12E8618883BD7800"
      valueUuid: "ClassUtils.class.real"
      methodExercised:
        expression: "getDefaultClassLoader():classLoader"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "1D6515901AAA8D50EC6BA54DA5CD5C55"
      valueUuid: "tomcatEmbeddedContext"
      methodExercised:
        expression: "getJarScanner():jarScanner"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "85C6B726E8E0CEB878DFAFE7036DE0F4"
      valueUuid: "jarScanner"
      methodExercised:
        expression: "setJarScanFilter(arg0:standardJarScanFilter):void7"
    - type: "LOCAL_VARIABLE"
      name: "loader"
      modelFingerprint: "52D1D47B84E8CC51C7DE8611532FB40F"
      valueUuid: "webappLoader"
      methodExercised:
        expression: "setLoaderInstance(loaderInstance:tomcatEmbeddedWebappClassLoader):void8"
    - type: "STATIC"
      name: "Tomcat.class"
      modelFingerprint: "CA85F369C7EC65FC0E6F9E747D316370"
      valueUuid: "Tomcat.class"
      methodExercised:
        expression: "addServlet(ctx:tomcatEmbeddedContext,servletName:uniqueUuid11,servlet:servlet):wrapper"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F42FC7BC2EF65E3810ABAF0846417B6C"
      valueUuid: "wrapper"
      methodExercised:
        expression: "setAsyncSupported(arg0:uniqueUuid12):void11"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "38256F767B64FF0DE0CF7ADB36B2FB82"
      valueUuid: "tomcatEmbeddedContext"
      methodExercised:
        expression: "addServletMappingDecoded(pattern:uniqueUuid13,name:uniqueUuid14):void12"
    - type: "LOCAL_VARIABLE"
      name: "host"
      modelFingerprint: "397ED4D39A9E208DB4A56A25C33C1927"
      valueUuid: "host"
      methodExercised:
        expression: "addChild(arg0:tomcatEmbeddedContext):void13"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "1F08D99E213CF1CA568AB5311680FEBC"
      methodExercised:
        expression: "configureContext(context:tomcatEmbeddedContext):void14"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.nio.file.Path.toFile() : java.io.File"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.apache.catalina.Host"
      uuid: "host"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.server.reactive.TomcatHttpHandlerAdapter"
      uuid: "servlet"
    - sapientType: "REAL"
      valueType: "org.apache.catalina.core.AprLifecycleListener"
      uuid: "AprLifecycleListener.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext"
      uuid: "tomcatEmbeddedContext"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.apache.catalina.startup.Tomcat$FixContextListener"
      uuid: "tomcat.FixContextListener"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ClassUtils"
        method: "getDefaultClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext"
      uuid: "tomcatEmbeddedContext"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.apache.tomcat.JarScanner"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext"
            parameters: []
            propertiesMap:
              path:
                sapientType: "BASIC"
                content: !<regular>
                  value: ""
                valueType: "java.lang.String"
                fixed: true
              docBase:
                sapientType: "BASIC"
                content: !<regular>
                  value: "docBase1"
                valueType: "java.lang.String"
                uuid: "string3"
              loader:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.apache.catalina.loader.WebappLoader"
                  parameters: []
                  propertiesMap:
                    delegate:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: true
                      valueType: "boolean"
                      fixed: true
                valueType: "org.apache.catalina.loader.WebappLoader"
                uuid: "webappLoader"
                fixed: true
              parentClassLoader:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "org.springframework.util.ClassUtils"
                  method: "getDefaultClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader"
          valueType: "org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext"
          uuid: "tomcatEmbeddedContext"
          fixed: true
        methodParameters: []
        methodName: "getJarScanner"
      valueType: "org.apache.tomcat.JarScanner"
      uuid: "jarScanner"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.apache.tomcat.JarScanner"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext"
            parameters: []
            propertiesMap:
              path:
                sapientType: "BASIC"
                content: !<regular>
                  value: ""
                valueType: "java.lang.String"
                fixed: true
              docBase:
                sapientType: "BASIC"
                content: !<regular>
                  value: "docBase1"
                valueType: "java.lang.String"
                uuid: "string3"
              loader:
                sapientType: "OBJECT"
                content: !<new>
                  target: "org.apache.catalina.loader.WebappLoader"
                  parameters: []
                  propertiesMap:
                    delegate:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: true
                      valueType: "boolean"
                      fixed: true
                valueType: "org.apache.catalina.loader.WebappLoader"
                uuid: "webappLoader"
                fixed: true
              parentClassLoader:
                sapientType: "OBJECT"
                content: !<static_method_return>
                  target: "org.springframework.util.ClassUtils"
                  method: "getDefaultClassLoader"
                  methodParameters: []
                valueType: "java.lang.ClassLoader"
                uuid: "classLoader"
          valueType: "org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext"
          uuid: "tomcatEmbeddedContext"
          fixed: true
        methodParameters: []
        methodName: "getJarScanner"
      valueType: "org.apache.tomcat.JarScanner"
      uuid: "jarScanner"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.apache.tomcat.util.scan.StandardJarScanFilter"
      uuid: "standardJarScanFilter"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.catalina.loader.WebappLoader"
        parameters: []
        propertiesMap:
          delegate:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "uniqueUuid9"
            fixed: true
      valueType: "org.apache.catalina.loader.WebappLoader"
      uuid: "webappLoader"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedWebappClassLoader"
      uuid: "tomcatEmbeddedWebappClassLoader"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.apache.catalina.startup.Tomcat"
      uuid: "Tomcat.class"
    - sapientType: "MOCK"
      valueType: "org.apache.catalina.Wrapper"
      uuid: "wrapper"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext"
      uuid: "tomcatEmbeddedContext"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "httpHandlerServlet"
      valueType: "java.lang.String"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.http.server.reactive.TomcatHttpHandlerAdapter"
      uuid: "servlet"
    - sapientType: "MOCK"
      valueType: "org.apache.catalina.Wrapper"
      uuid: "wrapper"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid12"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext"
      uuid: "tomcatEmbeddedContext"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void12"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "/"
      valueType: "java.lang.String"
      uuid: "uniqueUuid13"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "httpHandlerServlet"
      valueType: "java.lang.String"
      uuid: "uniqueUuid14"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.apache.catalina.Host"
      uuid: "host"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void13"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext"
      uuid: "tomcatEmbeddedContext"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext"
      uuid: "tomcatEmbeddedContext"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    calledSomeStaticInternalMethod: true
  - pathId: "path2"
    testPathName: "prepareContextWhenGetUriEncodingIsNotNullThrowsWebServerException"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "E1DA256BFA4ACCDED0712A65777DE455"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4D14EFCEAB2E6E0528CF735957994902"
      valueUuid: "target"
    - type: "INPUT"
      name: "host"
      modelFingerprint: "0FF1031F96357DAB77657F608400E146"
      valueUuid: "host"
    - type: "INPUT"
      name: "servlet"
      modelFingerprint: "3501391AAB78B8954B482D96C8CF7573"
      valueUuid: "servlet"
    - type: "STATIC"
      name: "AprLifecycleListener.class.real"
      modelFingerprint: "CC9A8F89EABB0037F7F11A3BACBB4F84"
      valueUuid: "AprLifecycleListener.class.real"
      methodExercised:
        expression: "isAprAvailable():boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "Files.class"
      modelFingerprint: "608BABA90A3A4EAECA92E1225C8A4AE4"
      valueUuid: "Files.class"
      methodExercised:
        expression: "createTempDirectory(prefix:string2,attrs:fileAttributeArray):path"
        throwsExceptions:
        - "java.io.IOException"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C241AD6C949C59D53E70FC9B7DB63585"
      valueUuid: "webServerException"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.nio.file.Path.toFile() : java.io.File"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.apache.catalina.Host"
      uuid: "host"
    - sapientType: "MOCK"
      valueType: "org.springframework.http.server.reactive.TomcatHttpHandlerAdapter"
      uuid: "servlet"
    - sapientType: "REAL"
      valueType: "org.apache.catalina.core.AprLifecycleListener"
      uuid: "AprLifecycleListener.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Files"
      uuid: "Files.class"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Path"
      uuid: "path"
    - sapientType: "BASIC"
      content: !<regular>
        value: "tomcat-docbase.2."
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.nio.file.attribute.FileAttribute[]"
      uuid: "fileAttributeArray"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.web.server.WebServerException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable to create tempDir. java.io.tmpdir is set to A"
            valueType: "java.lang.String"
            uuid: "string4"
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.IOException"
              parameters: []
            valueType: "java.io.IOException"
            uuid: "iOException"
      valueType: "org.springframework.boot.web.server.WebServerException"
      uuid: "webServerException"
      fixed: true
    branches:
    - lineNumber: 209
      expression: "getUriEncoding() != null"
      range: "(209,7)-(209,30)"
      evaluatedAs: true
      internalMethodName: "createTempDir"
    calledSomeStaticInternalMethod: true
    catchBlockExercised:
      idExternalInstruction: 4
      id: 1
      catchExceptions:
      - "java.io.IOException"
- method:
    name: "configureContext"
    sourceCodeSignature: "void configureContext(Context context)"
    returnType: "void"
    parameters:
    - name: "context"
      type: "org.apache.catalina.Context"
    instructionFingerprint: "96F39AF799972E93B064B4D696982093"
  paths:
  - pathId: "path1"
    testPathName: "configureContextTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "5BD96195876584C8C1F382FBA0557B91"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F628D9E516457E803EFA927AEBE4E276"
      valueUuid: "target"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "4536E11BB850F01564E486CBC9E88249"
      valueUuid: "context"
    - type: "STATIC"
      name: "AprLifecycleListener.class.real"
      modelFingerprint: "CC9A8F89EABB0037F7F11A3BACBB4F84"
      valueUuid: "AprLifecycleListener.class.real"
      methodExercised:
        expression: "isAprAvailable():boolean1"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "61CF7EB130F1A0381CFB6E1465EA4998"
      valueUuid: "disableReferenceClearingContextCustomizer"
      methodExercised:
        expression: "customize(context:context):void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "new DisableReferenceClearingContextCustomizer().customize(context);"
      lineNumber: 195
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type DisableReferenceClearingContextCustomizer - Method:\
        \ customize"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.apache.catalina.Context"
      uuid: "context"
    - sapientType: "REAL"
      valueType: "org.apache.catalina.core.AprLifecycleListener"
      uuid: "AprLifecycleListener.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.DisableReferenceClearingContextCustomizer"
        parameters: []
      valueType: "org.springframework.boot.web.embedded.tomcat.DisableReferenceClearingContextCustomizer"
      uuid: "disableReferenceClearingContextCustomizer"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.apache.catalina.Context"
      uuid: "context"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    calledSomeStaticInternalMethod: true
- method:
    name: "customizeConnector"
    sourceCodeSignature: "void customizeConnector(Connector connector)"
    returnType: "void"
    parameters:
    - name: "connector"
      type: "org.apache.catalina.connector.Connector"
    instructionFingerprint: "F0D43DD4BB4EEE698DBE7C8D3122BE5C"
  paths:
  - pathId: "path1"
    testPathName: "customizeConnectorWhenStringUtilsHasTextSslBundleNameAndThisTomcatConnectorCustomizersIsEmpty"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "78B5B084E1F49744FEC28EE8211B855C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "88B380C5867B50637C1450B4AE682EE1"
      valueUuid: "target"
    - type: "INPUT"
      name: "connector"
      modelFingerprint: "06CDDF2FDA542FC968161A44BC957692"
      valueUuid: "connector"
    - type: "STATIC"
      name: "AprLifecycleListener.class.real"
      modelFingerprint: "CC9A8F89EABB0037F7F11A3BACBB4F84"
      valueUuid: "AprLifecycleListener.class.real"
      methodExercised:
        expression: "isAprAvailable():boolean1"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "connector"
      modelFingerprint: "9AD46A6C4BACEE7F7A501ADA26945FBC"
      valueUuid: "connector"
      methodExercised:
        expression: "setPort(port:int3):void"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "A91647CB447119BB97CB86EA51675C61"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:string2):boolean2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "connector"
      modelFingerprint: "DF40CC7014F93BC03B266BCA15504F5D"
      valueUuid: "connector"
      methodExercised:
        expression: "setProperty(name:uniqueUuid18,value:string2):boolean3"
    - type: "LOCAL_VARIABLE"
      name: "connector"
      modelFingerprint: "A49F02F57B502ACD43D9AF55D49D9AE5"
      valueUuid: "connector"
      methodExercised:
        expression: "getProtocolHandler():protocolHandler"
    - type: "LOCAL_VARIABLE"
      name: "connector"
      modelFingerprint: "D3B76B8923620F2F91CF1C53F829B7AC"
      valueUuid: "connector"
      methodExercised:
        expression: "getProtocolHandler():protocolHandler2"
    - type: "LOCAL_VARIABLE"
      name: "protocol"
      modelFingerprint: "B770C057A4EAD7EC453E6A7049ECC92C"
      valueUuid: "protocolHandler2"
      methodExercised:
        expression: "setAddress(ia:inetAddress):void2"
    - type: "LOCAL_VARIABLE"
      name: "connector"
      modelFingerprint: "3B997E7D0E3B8B7DF92BB99FF02E2FEE"
      valueUuid: "connector"
      methodExercised:
        expression: "getProtocolHandler():protocolHandler3"
    - type: "STATIC"
      name: "LambdaSafe.class"
      modelFingerprint: "19ABE233E09CED26E158A585FDCFA7D3"
      valueUuid: "LambdaSafe.class"
      methodExercised:
        expression: "callbacks(callbackType:uniqueUuid19,callbackInstances:linkedHashSet4,argument:protocolHandler3,additionalArguments:objectArray):lambdaSafe.Callbacks"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "customizer"
      modelFingerprint: "BFA124A735860AEEC35F8DC9A697D56C"
      valueUuid: "tomcatProtocolHandlerCustomizer"
      methodExercised:
        expression: "customize(protocolHandler:protocolHandler3):void4"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "2A91A70DB731F35C14F1E8654020F8AC"
      valueUuid: "lambdaSafe.Callbacks"
      methodExercised:
        expression: "invoke(invoker:uniqueUuid20):void3"
    - type: "LOCAL_VARIABLE"
      name: "connector"
      modelFingerprint: "77AA0C027FBB8FA2BAFEB74BB62AE5AD"
      valueUuid: "connector"
      methodExercised:
        expression: "setURIEncoding(URIEncoding:string3):void5"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "465C4DC2AB9F4684891C4D36EA819FC3"
      valueUuid: "http2"
      methodExercised:
        expression: "isEnabled():enabled"
    - type: "LOCAL_VARIABLE"
      name: "connector"
      modelFingerprint: "CD19E03E768AE58A9020A08056B0C57B"
      valueUuid: "connector"
      methodExercised:
        expression: "addUpgradeProtocol(upgradeProtocol:http2Protocol):void6"
    - type: "STATIC"
      name: "Ssl.class"
      modelFingerprint: "BB955C7AD5A7C21C536977E57745A4D0"
      valueUuid: "Ssl.class"
      methodExercised:
        expression: "isEnabled(ssl:ssl):boolean6"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "3709689234DD9DFE8A794E13877C6889"
      valueUuid: "ssl"
      methodExercised:
        expression: "getClientAuth():clientAuth"
    - type: "STATIC"
      name: "WebServerSslBundle.class"
      modelFingerprint: "D1767D56D737768EC2D5BFA9A32FEAD6"
      valueUuid: "WebServerSslBundle.class"
      methodExercised:
        expression: "get(ssl:fieldSsl,sslBundles:fieldSslBundles):sslBundle"
        throwsExceptions:
        - "org.springframework.boot.ssl.NoSuchSslBundleException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "customizer"
      modelFingerprint: "89A0E0406A09A10840D207B92D72B75D"
      valueUuid: "sslConnectorCustomizer"
      methodExercised:
        expression: "customize(sslBundle:sslBundle):void7"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D95A6D419E5EA6DFDD6CDE85480319D3"
      valueUuid: "ssl"
      methodExercised:
        expression: "getBundle():bundle"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "30B952EF9F46152D72639415F659BC3D"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:bundle):boolean7"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "customizer"
      modelFingerprint: "773CD70DF697ADB483AA0EFD7B6C7A27"
      valueUuid: "sslConnectorCustomizer"
      methodExercised:
        expression: "update(null:sslBundle2):void9"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "49AAD0FC4B9C7221D0E0C822FE5EBB13"
      valueUuid: "sslBundles"
      methodExercised:
        expression: "addBundleUpdateHandler(name:bundle,updateHandler:uniqueUuid21):void8"
        throwsExceptions:
        - "org.springframework.boot.ssl.NoSuchSslBundleException"
    - type: "LOCAL_VARIABLE"
      name: "compression"
      modelFingerprint: "30CC5372EDD1DE9C39264A45CEF0C2DF"
      valueUuid: "compressionConnectorCustomizer"
      methodExercised:
        expression: "customize(connector:connector):void10"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "customizer.customize(getSslBundle());"
      lineNumber: 240
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: customizer - Method: customize"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "port"
        propertiesMap:
          address:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.net.InetAddress"
              method: "getLoopbackAddress"
              methodParameters: []
            valueType: "java.net.InetAddress"
            uuid: "inetAddress"
          http2:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Http2"
              parameters: []
              propertiesMap:
                enabled:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: true
                  valueType: "boolean"
                  uuid: "enabled"
            valueType: "org.springframework.boot.web.server.Http2"
            uuid: "http2"
          compression:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.server.Compression"
            uuid: "compression"
          ssl:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.web.server.Ssl"
              parameters: []
              propertiesMap:
                bundle:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "B"
                  valueType: "java.lang.String"
                  uuid: "bundle"
                clientAuth:
                  sapientType: "ENUM"
                  content: !<regular>
                    value: "NONE"
                  valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
                  uuid: "clientAuth"
            valueType: "org.springframework.boot.web.server.Ssl"
            uuid: "ssl"
          serverHeader:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "string2"
          sslBundles:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ssl.SslBundles"
            uuid: "sslBundles"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.apache.catalina.connector.Connector"
      uuid: "connector"
    - sapientType: "REAL"
      valueType: "org.apache.catalina.core.AprLifecycleListener"
      uuid: "AprLifecycleListener.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.apache.catalina.connector.Connector"
      uuid: "connector"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "int"
      uuid: "int3"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.apache.catalina.connector.Connector"
      uuid: "connector"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "server"
      valueType: "java.lang.String"
      uuid: "uniqueUuid18"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.apache.catalina.connector.Connector"
      uuid: "connector"
    - sapientType: "MOCK"
      valueType: "org.apache.coyote.AbstractProtocol"
      uuid: "protocolHandler"
    - sapientType: "MOCK"
      valueType: "org.apache.catalina.connector.Connector"
      uuid: "connector"
    - sapientType: "MOCK"
      valueType: "org.apache.coyote.AbstractProtocol"
      uuid: "protocolHandler2"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.apache.coyote.AbstractProtocol"
      uuid: "protocolHandler2"
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.net.InetAddress"
        method: "getLoopbackAddress"
        methodParameters: []
      valueType: "java.net.InetAddress"
      uuid: "inetAddress"
    - sapientType: "MOCK"
      valueType: "org.apache.catalina.connector.Connector"
      uuid: "connector"
    - sapientType: "MOCK"
      valueType: "org.apache.coyote.ProtocolHandler"
      uuid: "protocolHandler3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.util.LambdaSafe"
      uuid: "LambdaSafe.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.util.LambdaSafe$Callbacks"
      uuid: "lambdaSafe.Callbacks"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer"
      uuid: "uniqueUuid19"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashSet"
        parameters: []
        values: []
      valueType: "java.util.Set"
      genericValueType: "org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer<?>"
      uuid: "linkedHashSet4"
    - sapientType: "MOCK"
      valueType: "org.apache.coyote.ProtocolHandler"
      uuid: "protocolHandler3"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "objectArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer"
      uuid: "tomcatProtocolHandlerCustomizer"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.apache.coyote.ProtocolHandler"
      uuid: "protocolHandler3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.util.LambdaSafe$Callbacks"
      uuid: "lambdaSafe.Callbacks"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid20"
    - sapientType: "MOCK"
      valueType: "org.apache.catalina.connector.Connector"
      uuid: "connector"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "UTF-8"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Http2"
        parameters: []
        propertiesMap:
          enabled:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            valueType: "boolean"
            uuid: "enabled"
      valueType: "org.springframework.boot.web.server.Http2"
      uuid: "http2"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "enabled"
    - sapientType: "MOCK"
      valueType: "org.apache.catalina.connector.Connector"
      uuid: "connector"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.apache.coyote.http2.Http2Protocol"
      uuid: "http2Protocol"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "Ssl.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Ssl"
        parameters: []
        propertiesMap:
          bundle:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "bundle"
          clientAuth:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "ssl"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Ssl"
        parameters: []
        propertiesMap:
          bundle:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "bundle"
          clientAuth:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "ssl"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NONE"
      valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
      uuid: "clientAuth"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.WebServerSslBundle"
      uuid: "WebServerSslBundle.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "fieldSsl"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.ssl.SslBundles"
      uuid: "fieldSslBundles"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer"
        parameters:
        - name: "logger"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "connector"
          value:
            sapientType: "MOCK"
            valueType: "org.apache.catalina.connector.Connector"
            uuid: "connector"
        - name: "clientAuth"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
      valueType: "org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer"
      uuid: "sslConnectorCustomizer"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.server.Ssl"
        parameters: []
        propertiesMap:
          bundle:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "bundle"
          clientAuth:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
      valueType: "org.springframework.boot.web.server.Ssl"
      uuid: "ssl"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "bundle"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean7"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "bundle"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer"
        parameters:
        - name: "logger"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
        - name: "connector"
          value:
            sapientType: "MOCK"
            valueType: "org.apache.catalina.connector.Connector"
            uuid: "connector"
        - name: "clientAuth"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NONE"
            valueType: "org.springframework.boot.web.server.Ssl$ClientAuth"
            uuid: "clientAuth"
      valueType: "org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer"
      uuid: "sslConnectorCustomizer"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "sslBundle2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ssl.SslBundles"
      uuid: "sslBundles"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void8"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "bundle"
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      genericValueType: "org.springframework.boot.ssl.SslBundle"
      uuid: "uniqueUuid21"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.CompressionConnectorCustomizer"
        parameters:
        - name: "compression"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.web.server.Compression"
            uuid: "compression"
      valueType: "org.springframework.boot.web.embedded.tomcat.CompressionConnectorCustomizer"
      uuid: "compressionConnectorCustomizer"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.apache.catalina.connector.Connector"
      uuid: "connector"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 202
      expression: "StringUtils.hasText(getServerHeader())"
      range: "(202,7)-(202,44)"
      evaluatedAs: true
    - lineNumber: 205
      expression: "connector.getProtocolHandler() instanceof AbstractProtocol"
      range: "(205,7)-(205,64)"
      evaluatedAs: true
    - lineNumber: 233
      expression: "getAddress() != null"
      range: "(233,7)-(233,26)"
      evaluatedAs: true
      internalMethodName: "customizeProtocol"
    - lineNumber: 209
      expression: "getUriEncoding() != null"
      range: "(209,7)-(209,30)"
      evaluatedAs: true
    - lineNumber: 212
      expression: "getHttp2() != null"
      range: "(212,7)-(212,24)"
      evaluatedAs: true
    - lineNumber: 212
      expression: "getHttp2().isEnabled()"
      range: "(212,29)-(212,50)"
      evaluatedAs: true
    - lineNumber: 215
      expression: "Ssl.isEnabled(getSsl())"
      range: "(215,7)-(215,29)"
      evaluatedAs: true
    - lineNumber: 242
      expression: "StringUtils.hasText(sslBundleName)"
      range: "(242,7)-(242,40)"
      evaluatedAs: true
      internalMethodName: "customizeSsl"
    - lineNumber: 220
      expression: "for-each(this.tomcatConnectorCustomizers)"
      range: "(220,47)-(220,77)"
      evaluatedAs: false
    calledSomeStaticInternalMethod: true
- method:
    name: "setBaseDirectory"
    sourceCodeSignature: "void setBaseDirectory(File baseDirectory)"
    returnType: "void"
    parameters:
    - name: "baseDirectory"
      type: "java.io.File"
    instructionFingerprint: "B2382CFC926935D9112EEABD6795BAA5"
  paths:
  - pathId: "path1"
    testPathName: "setBaseDirectoryTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "3B7BEA0EAF57ED5286DBF6F9846F9644"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    calledSomeStaticInternalMethod: true
- method:
    name: "setBackgroundProcessorDelay"
    sourceCodeSignature: "void setBackgroundProcessorDelay(int delay)"
    returnType: "void"
    parameters:
    - name: "delay"
      type: "int"
    instructionFingerprint: "5D35006416A635DE401F7417A0FA48E5"
  paths:
  - pathId: "path1"
    testPathName: "setBackgroundProcessorDelayTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "011D697B8B314CE20EDE7AF77AB20138"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    calledSomeStaticInternalMethod: true
- method:
    name: "setTomcatContextCustomizers"
    sourceCodeSignature: "void setTomcatContextCustomizers(Collection<? extends TomcatContextCustomizer>\
      \ tomcatContextCustomizers)"
    returnType: "void"
    parameters:
    - name: "tomcatContextCustomizers"
      type: "java.util.Collection"
    instructionFingerprint: "8437179F0B39D8169001094378072AD6"
  paths:
  - pathId: "path1"
    testPathName: "setTomcatContextCustomizersTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "75340994A59600D9CC5C0EFE578CE5C5"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F628D9E516457E803EFA927AEBE4E276"
      valueUuid: "target"
    - type: "INPUT"
      name: "tomcatContextCustomizers"
      modelFingerprint: "0610A5F57D44A5DAC7C80BC6609778C0"
      valueUuid: "tomcatContextCustomizers"
    - type: "STATIC"
      name: "AprLifecycleListener.class.real"
      modelFingerprint: "CC9A8F89EABB0037F7F11A3BACBB4F84"
      valueUuid: "AprLifecycleListener.class.real"
      methodExercised:
        expression: "isAprAvailable():boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "C665F13AF858D37969D4A9C34D645F7E"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:tomcatContextCustomizers,message:uniqueUuid22):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    - type: "STATE_VERIFICATION_FIELD"
      name: "tomcatContextCustomizers"
      modelFingerprint: "663E3461BDD08D4C0154FE25AAB004AB"
      valueUuid: "linkedHashSet5"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer"
      uuid: "tomcatContextCustomizers"
    - sapientType: "REAL"
      valueType: "org.apache.catalina.core.AprLifecycleListener"
      uuid: "AprLifecycleListener.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer"
      uuid: "tomcatContextCustomizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "TomcatContextCustomizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid22"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashSet"
        parameters:
        - name: "c"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Collection"
            genericValueType: "? extends org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer"
            uuid: "tomcatContextCustomizers"
        values: []
      valueType: "java.util.Set"
      genericValueType: "org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer"
      uuid: "linkedHashSet5"
    calledSomeStaticInternalMethod: true
- method:
    name: "getTomcatContextCustomizers"
    sourceCodeSignature: "Collection<TomcatContextCustomizer> getTomcatContextCustomizers()"
    returnType: "java.util.Collection"
    genericReturnType: "org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer"
    instructionFingerprint: "A5913E2F472E69824C574B73B8E50872"
  paths:
  - pathId: "path1"
    testPathName: "getTomcatContextCustomizersTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "3A8FFB1D1CB064AE8ABF68616C4930F7"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F628D9E516457E803EFA927AEBE4E276"
      valueUuid: "target"
    - type: "STATIC"
      name: "AprLifecycleListener.class.real"
      modelFingerprint: "CC9A8F89EABB0037F7F11A3BACBB4F84"
      valueUuid: "AprLifecycleListener.class.real"
      methodExercised:
        expression: "isAprAvailable():boolean1"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "DDBC8E7E9C2DA04F065BBA4D8B42831C"
      valueUuid: "linkedHashSet2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.apache.catalina.core.AprLifecycleListener"
      uuid: "AprLifecycleListener.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashSet"
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer"
      uuid: "linkedHashSet2"
    calledSomeStaticInternalMethod: true
- method:
    name: "addContextCustomizers"
    sourceCodeSignature: "void addContextCustomizers(TomcatContextCustomizer... tomcatContextCustomizers)"
    returnType: "void"
    parameters:
    - name: "tomcatContextCustomizers"
      type: "org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer[]"
    instructionFingerprint: "CE16DB172172E0EFA725DE901553049D"
  paths:
  - pathId: "path1"
    testPathName: "addContextCustomizersTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "787547FC0D3CB5173579FD9B14AC3CB2"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F628D9E516457E803EFA927AEBE4E276"
      valueUuid: "target"
    - type: "INPUT"
      name: "tomcatContextCustomizers"
      modelFingerprint: "543C0E0CB74524E6EC93442381C1D264"
      valueUuid: "tomcatContextCustomizers"
    - type: "STATIC"
      name: "AprLifecycleListener.class.real"
      modelFingerprint: "CC9A8F89EABB0037F7F11A3BACBB4F84"
      valueUuid: "AprLifecycleListener.class.real"
      methodExercised:
        expression: "isAprAvailable():boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "668BF0A9D0DB2AF6E3A907D4950AD3AE"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:tomcatContextCustomizers,message:uniqueUuid23):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer[]"
      uuid: "tomcatContextCustomizers"
    - sapientType: "REAL"
      valueType: "org.apache.catalina.core.AprLifecycleListener"
      uuid: "AprLifecycleListener.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer[]"
      uuid: "tomcatContextCustomizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "TomcatContextCustomizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid23"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    calledSomeStaticInternalMethod: true
- method:
    name: "setTomcatConnectorCustomizers"
    sourceCodeSignature: "void setTomcatConnectorCustomizers(Collection<? extends\
      \ TomcatConnectorCustomizer> tomcatConnectorCustomizers)"
    returnType: "void"
    parameters:
    - name: "tomcatConnectorCustomizers"
      type: "java.util.Collection"
    instructionFingerprint: "A8896A914688F6946BB99B32F94B560C"
  paths:
  - pathId: "path1"
    testPathName: "setTomcatConnectorCustomizersTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "74EEE270FBBD7F21F08652549D978EE2"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F628D9E516457E803EFA927AEBE4E276"
      valueUuid: "target"
    - type: "INPUT"
      name: "tomcatConnectorCustomizers"
      modelFingerprint: "B8324B475575DF398C7397677242C2F4"
      valueUuid: "tomcatConnectorCustomizers"
    - type: "STATIC"
      name: "AprLifecycleListener.class.real"
      modelFingerprint: "CC9A8F89EABB0037F7F11A3BACBB4F84"
      valueUuid: "AprLifecycleListener.class.real"
      methodExercised:
        expression: "isAprAvailable():boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "0EAD011A2AB25D77DC6F7C79D90A6288"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:tomcatConnectorCustomizers,message:uniqueUuid24):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    - type: "STATE_VERIFICATION_FIELD"
      name: "tomcatConnectorCustomizers"
      modelFingerprint: "4325FF0CC59330344DEADD04DBB10E45"
      valueUuid: "linkedHashSet5"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer"
      uuid: "tomcatConnectorCustomizers"
    - sapientType: "REAL"
      valueType: "org.apache.catalina.core.AprLifecycleListener"
      uuid: "AprLifecycleListener.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer"
      uuid: "tomcatConnectorCustomizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "TomcatConnectorCustomizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid24"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashSet"
        parameters:
        - name: "c"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Collection"
            genericValueType: "? extends org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer"
            uuid: "tomcatConnectorCustomizers"
        values: []
      valueType: "java.util.Set"
      genericValueType: "org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer"
      uuid: "linkedHashSet5"
    calledSomeStaticInternalMethod: true
- method:
    name: "addConnectorCustomizers"
    sourceCodeSignature: "void addConnectorCustomizers(TomcatConnectorCustomizer...\
      \ tomcatConnectorCustomizers)"
    returnType: "void"
    parameters:
    - name: "tomcatConnectorCustomizers"
      type: "org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer[]"
    instructionFingerprint: "7131B7E87350A7F799BFA995EA089FC7"
  paths:
  - pathId: "path1"
    testPathName: "addConnectorCustomizersTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "2329E5002B0A6F9994867A255C733BB8"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F628D9E516457E803EFA927AEBE4E276"
      valueUuid: "target"
    - type: "INPUT"
      name: "tomcatConnectorCustomizers"
      modelFingerprint: "A24D33C8699F871ADB5447379123415D"
      valueUuid: "tomcatConnectorCustomizers"
    - type: "STATIC"
      name: "AprLifecycleListener.class.real"
      modelFingerprint: "CC9A8F89EABB0037F7F11A3BACBB4F84"
      valueUuid: "AprLifecycleListener.class.real"
      methodExercised:
        expression: "isAprAvailable():boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "AF4DA7EF8151EEF8854F15ED8596EBF8"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:tomcatConnectorCustomizers,message:uniqueUuid25):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer[]"
      uuid: "tomcatConnectorCustomizers"
    - sapientType: "REAL"
      valueType: "org.apache.catalina.core.AprLifecycleListener"
      uuid: "AprLifecycleListener.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer[]"
      uuid: "tomcatConnectorCustomizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "TomcatConnectorCustomizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid25"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    calledSomeStaticInternalMethod: true
- method:
    name: "getTomcatConnectorCustomizers"
    sourceCodeSignature: "Collection<TomcatConnectorCustomizer> getTomcatConnectorCustomizers()"
    returnType: "java.util.Collection"
    genericReturnType: "org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer"
    instructionFingerprint: "5447ACCA365A0FBB76DD0BD6D8E59776"
  paths:
  - pathId: "path1"
    testPathName: "getTomcatConnectorCustomizersTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "73B0504664774E49F4CA61B8FF167856"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F628D9E516457E803EFA927AEBE4E276"
      valueUuid: "target"
    - type: "STATIC"
      name: "AprLifecycleListener.class.real"
      modelFingerprint: "CC9A8F89EABB0037F7F11A3BACBB4F84"
      valueUuid: "AprLifecycleListener.class.real"
      methodExercised:
        expression: "isAprAvailable():boolean1"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3F0F96C1A4D32260FAB0AF570388C12D"
      valueUuid: "linkedHashSet3"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.apache.catalina.core.AprLifecycleListener"
      uuid: "AprLifecycleListener.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashSet"
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer"
      uuid: "linkedHashSet3"
    calledSomeStaticInternalMethod: true
- method:
    name: "setTomcatProtocolHandlerCustomizers"
    sourceCodeSignature: "void setTomcatProtocolHandlerCustomizers(Collection<? extends\
      \ TomcatProtocolHandlerCustomizer<?>> tomcatProtocolHandlerCustomizers)"
    returnType: "void"
    parameters:
    - name: "tomcatProtocolHandlerCustomizers"
      type: "java.util.Collection"
    instructionFingerprint: "4AB88A264FA48A1E112875DA155DB9D1"
  paths:
  - pathId: "path1"
    testPathName: "setTomcatProtocolHandlerCustomizersTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "8E5336EF3C734AB65A22ED28362A331B"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F628D9E516457E803EFA927AEBE4E276"
      valueUuid: "target"
    - type: "INPUT"
      name: "tomcatProtocolHandlerCustomizers"
      modelFingerprint: "7BE479F3C726257DC6C0F5D2D0F72688"
      valueUuid: "tomcatProtocolHandlerCustomizers"
    - type: "STATIC"
      name: "AprLifecycleListener.class.real"
      modelFingerprint: "CC9A8F89EABB0037F7F11A3BACBB4F84"
      valueUuid: "AprLifecycleListener.class.real"
      methodExercised:
        expression: "isAprAvailable():boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "C7C00126C8BC02A73C7676EFB7560AC2"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:tomcatProtocolHandlerCustomizers,message:uniqueUuid26):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    - type: "STATE_VERIFICATION_FIELD"
      name: "tomcatProtocolHandlerCustomizers"
      modelFingerprint: "D46EC4594AD15D2C242B765ED44B0253"
      valueUuid: "linkedHashSet5"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer<?>"
      uuid: "tomcatProtocolHandlerCustomizers"
    - sapientType: "REAL"
      valueType: "org.apache.catalina.core.AprLifecycleListener"
      uuid: "AprLifecycleListener.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer<?>"
      uuid: "tomcatProtocolHandlerCustomizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "TomcatProtocolHandlerCustomizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid26"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashSet"
        parameters:
        - name: "c"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Collection"
            genericValueType: "? extends org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer<?>"
            uuid: "tomcatProtocolHandlerCustomizers"
        values: []
      valueType: "java.util.Set"
      genericValueType: "org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer<?>"
      uuid: "linkedHashSet5"
    calledSomeStaticInternalMethod: true
- method:
    name: "addProtocolHandlerCustomizers"
    sourceCodeSignature: "void addProtocolHandlerCustomizers(TomcatProtocolHandlerCustomizer<?>...\
      \ tomcatProtocolHandlerCustomizers)"
    returnType: "void"
    parameters:
    - name: "tomcatProtocolHandlerCustomizers"
      type: "org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer[]"
    instructionFingerprint: "40EEE86F12B44A7E9E61E5528C72232B"
  paths:
  - pathId: "path1"
    testPathName: "addProtocolHandlerCustomizersTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "4AA19196758498C1CF1239763043B3B9"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F628D9E516457E803EFA927AEBE4E276"
      valueUuid: "target"
    - type: "INPUT"
      name: "tomcatProtocolHandlerCustomizers"
      modelFingerprint: "8D22AE772FFA393B162808317A0E464C"
      valueUuid: "tomcatProtocolHandlerCustomizers"
    - type: "STATIC"
      name: "AprLifecycleListener.class.real"
      modelFingerprint: "CC9A8F89EABB0037F7F11A3BACBB4F84"
      valueUuid: "AprLifecycleListener.class.real"
      methodExercised:
        expression: "isAprAvailable():boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D86B35982F865FD31EBA1F356675C08D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:tomcatProtocolHandlerCustomizers,message:uniqueUuid27):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer[]"
      genericValueType: "?"
      uuid: "tomcatProtocolHandlerCustomizers"
    - sapientType: "REAL"
      valueType: "org.apache.catalina.core.AprLifecycleListener"
      uuid: "AprLifecycleListener.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer[]"
      genericValueType: "?"
      uuid: "tomcatProtocolHandlerCustomizers"
    - sapientType: "BASIC"
      content: !<regular>
        value: "TomcatProtocolHandlerCustomizers must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid27"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    calledSomeStaticInternalMethod: true
- method:
    name: "getTomcatProtocolHandlerCustomizers"
    sourceCodeSignature: "Collection<TomcatProtocolHandlerCustomizer<?>> getTomcatProtocolHandlerCustomizers()"
    returnType: "java.util.Collection"
    genericReturnType: "org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer<?>"
    instructionFingerprint: "2AD90B4F9CD93375ED45BDB9B27E53B9"
  paths:
  - pathId: "path1"
    testPathName: "getTomcatProtocolHandlerCustomizersTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "FEEDF9CA2BACD591A4B0113A6E22690F"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F628D9E516457E803EFA927AEBE4E276"
      valueUuid: "target"
    - type: "STATIC"
      name: "AprLifecycleListener.class.real"
      modelFingerprint: "CC9A8F89EABB0037F7F11A3BACBB4F84"
      valueUuid: "AprLifecycleListener.class.real"
      methodExercised:
        expression: "isAprAvailable():boolean1"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3BFB8819677317DF191017452FB75320"
      valueUuid: "linkedHashSet4"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.apache.catalina.core.AprLifecycleListener"
      uuid: "AprLifecycleListener.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashSet"
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer<?>"
      uuid: "linkedHashSet4"
    calledSomeStaticInternalMethod: true
- method:
    name: "addAdditionalTomcatConnectors"
    sourceCodeSignature: "void addAdditionalTomcatConnectors(Connector... connectors)"
    returnType: "void"
    parameters:
    - name: "connectors"
      type: "org.apache.catalina.connector.Connector[]"
    instructionFingerprint: "8586CBD12BE8A14561F3F53B5C542514"
  paths:
  - pathId: "path1"
    testPathName: "addAdditionalTomcatConnectorsTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "795F5E4F866BA430D055ED21C1DE01F8"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F628D9E516457E803EFA927AEBE4E276"
      valueUuid: "target"
    - type: "INPUT"
      name: "connectors"
      modelFingerprint: "CB6551964BEB19A6F5A28F8D3C7E7303"
      valueUuid: "connectors"
    - type: "STATIC"
      name: "AprLifecycleListener.class.real"
      modelFingerprint: "CC9A8F89EABB0037F7F11A3BACBB4F84"
      valueUuid: "AprLifecycleListener.class.real"
      methodExercised:
        expression: "isAprAvailable():boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "357CE752EF34DBCCB9DF31FBA96901A6"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:connectors,message:uniqueUuid28):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.apache.catalina.connector.Connector[]"
      uuid: "connectors"
    - sapientType: "REAL"
      valueType: "org.apache.catalina.core.AprLifecycleListener"
      uuid: "AprLifecycleListener.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.apache.catalina.connector.Connector[]"
      uuid: "connectors"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Connectors must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid28"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    calledSomeStaticInternalMethod: true
- method:
    name: "getAdditionalTomcatConnectors"
    sourceCodeSignature: "List<Connector> getAdditionalTomcatConnectors()"
    returnType: "java.util.List"
    genericReturnType: "org.apache.catalina.connector.Connector"
    instructionFingerprint: "D2CB7D5BCCDB2CACACD04A4980A18F23"
  paths:
  - pathId: "path1"
    testPathName: "getAdditionalTomcatConnectorsTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "367762EBD5E6C3E2EC6127F6C955D555"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    calledSomeStaticInternalMethod: true
- method:
    name: "addEngineValves"
    sourceCodeSignature: "void addEngineValves(Valve... engineValves)"
    returnType: "void"
    parameters:
    - name: "engineValves"
      type: "org.apache.catalina.Valve[]"
    instructionFingerprint: "B17BB231BEFCCA1EC89847ED1229B0EE"
  paths:
  - pathId: "path1"
    testPathName: "addEngineValvesTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "44FE0FFEB6664D83C3DE03ABA30B645B"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F628D9E516457E803EFA927AEBE4E276"
      valueUuid: "target"
    - type: "INPUT"
      name: "engineValves"
      modelFingerprint: "E1094ECEF909814BC29AE1E658162873"
      valueUuid: "engineValves"
    - type: "STATIC"
      name: "AprLifecycleListener.class.real"
      modelFingerprint: "CC9A8F89EABB0037F7F11A3BACBB4F84"
      valueUuid: "AprLifecycleListener.class.real"
      methodExercised:
        expression: "isAprAvailable():boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5C0DEA6F1854799CC43E43A8C900E9D7"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:engineValves,message:uniqueUuid29):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.apache.catalina.Valve[]"
      uuid: "engineValves"
    - sapientType: "REAL"
      valueType: "org.apache.catalina.core.AprLifecycleListener"
      uuid: "AprLifecycleListener.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.apache.catalina.Valve[]"
      uuid: "engineValves"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Valves must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid29"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    calledSomeStaticInternalMethod: true
- method:
    name: "getEngineValves"
    sourceCodeSignature: "List<Valve> getEngineValves()"
    returnType: "java.util.List"
    genericReturnType: "org.apache.catalina.Valve"
    instructionFingerprint: "357A504FDB0955437B6A3F04A8159898"
  paths:
  - pathId: "path1"
    testPathName: "getEngineValvesTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "2C450C8B995B034387822CD05D7882D9"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    calledSomeStaticInternalMethod: true
- method:
    name: "setUriEncoding"
    sourceCodeSignature: "void setUriEncoding(Charset uriEncoding)"
    returnType: "void"
    parameters:
    - name: "uriEncoding"
      type: "java.nio.charset.Charset"
    instructionFingerprint: "9E5EEAEA90A1AF9B7A396B55C231B76F"
  paths:
  - pathId: "path1"
    testPathName: "setUriEncodingTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "3420F36340BCFA550FF77D23DCB4CA4B"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    calledSomeStaticInternalMethod: true
- method:
    name: "getUriEncoding"
    sourceCodeSignature: "Charset getUriEncoding()"
    returnType: "java.nio.charset.Charset"
    instructionFingerprint: "39041E2D9DF72FE51B460DA1BA6E7F27"
  paths:
  - pathId: "path1"
    testPathName: "getUriEncodingTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "F28E3593D4F1869A9EC72E6AF6A53025"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    calledSomeStaticInternalMethod: true
- method:
    name: "setContextLifecycleListeners"
    sourceCodeSignature: "void setContextLifecycleListeners(Collection<? extends LifecycleListener>\
      \ contextLifecycleListeners)"
    returnType: "void"
    parameters:
    - name: "contextLifecycleListeners"
      type: "java.util.Collection"
    instructionFingerprint: "E08C82DD82B58E434CEFED8B18CEA4E3"
  paths:
  - pathId: "path1"
    testPathName: "setContextLifecycleListenersTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "672E1463C9C592850A85179C4A394863"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F628D9E516457E803EFA927AEBE4E276"
      valueUuid: "target"
    - type: "INPUT"
      name: "contextLifecycleListeners"
      modelFingerprint: "18599A00BBD004DB62FBFC3169F06A85"
      valueUuid: "contextLifecycleListeners"
    - type: "STATIC"
      name: "AprLifecycleListener.class.real"
      modelFingerprint: "CC9A8F89EABB0037F7F11A3BACBB4F84"
      valueUuid: "AprLifecycleListener.class.real"
      methodExercised:
        expression: "isAprAvailable():boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "0EE51DA19C3DF72D7E2F510EF702EC6B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextLifecycleListeners,message:uniqueUuid30):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    - type: "STATE_VERIFICATION_FIELD"
      name: "contextLifecycleListeners"
      modelFingerprint: "CB3875FB9D59060EAECD7698F384F2B2"
      valueUuid: "arrayList5"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.apache.catalina.LifecycleListener"
      uuid: "contextLifecycleListeners"
    - sapientType: "REAL"
      valueType: "org.apache.catalina.core.AprLifecycleListener"
      uuid: "AprLifecycleListener.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "? extends org.apache.catalina.LifecycleListener"
      uuid: "contextLifecycleListeners"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextLifecycleListeners must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid30"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters:
        - name: "c"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Collection"
            genericValueType: "? extends org.apache.catalina.LifecycleListener"
            uuid: "contextLifecycleListeners"
        values: []
      valueType: "java.util.List"
      genericValueType: "org.apache.catalina.LifecycleListener"
      uuid: "arrayList5"
    calledSomeStaticInternalMethod: true
- method:
    name: "getContextLifecycleListeners"
    sourceCodeSignature: "Collection<LifecycleListener> getContextLifecycleListeners()"
    returnType: "java.util.Collection"
    genericReturnType: "org.apache.catalina.LifecycleListener"
    instructionFingerprint: "450A8DF7CEEF43DC175CDE3B7CD6DD19"
  paths:
  - pathId: "path1"
    testPathName: "getContextLifecycleListenersTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "FB8E4132EDA881D3E29277700C1D9AF3"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F628D9E516457E803EFA927AEBE4E276"
      valueUuid: "target"
    - type: "STATIC"
      name: "AprLifecycleListener.class.real"
      modelFingerprint: "CC9A8F89EABB0037F7F11A3BACBB4F84"
      valueUuid: "AprLifecycleListener.class.real"
      methodExercised:
        expression: "isAprAvailable():boolean1"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "56CA37CB07691A6599B5C7D674349A41"
      valueUuid: "arrayList2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.apache.catalina.core.AprLifecycleListener"
      uuid: "AprLifecycleListener.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "org.apache.catalina.LifecycleListener"
      uuid: "arrayList2"
    calledSomeStaticInternalMethod: true
- method:
    name: "addContextLifecycleListeners"
    sourceCodeSignature: "void addContextLifecycleListeners(LifecycleListener... contextLifecycleListeners)"
    returnType: "void"
    parameters:
    - name: "contextLifecycleListeners"
      type: "org.apache.catalina.LifecycleListener[]"
    instructionFingerprint: "5D640CC2BC04C5067387F98B0E770271"
  paths:
  - pathId: "path1"
    testPathName: "addContextLifecycleListenersTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "63F8A60424B23359814BFD369C3BAF43"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F628D9E516457E803EFA927AEBE4E276"
      valueUuid: "target"
    - type: "INPUT"
      name: "contextLifecycleListeners"
      modelFingerprint: "F37A566F721BBC2BDA115914DAEE7707"
      valueUuid: "contextLifecycleListeners"
    - type: "STATIC"
      name: "AprLifecycleListener.class.real"
      modelFingerprint: "CC9A8F89EABB0037F7F11A3BACBB4F84"
      valueUuid: "AprLifecycleListener.class.real"
      methodExercised:
        expression: "isAprAvailable():boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "0F4B6228FBE49E7361E003634130290D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:contextLifecycleListeners,message:uniqueUuid31):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.apache.catalina.LifecycleListener[]"
      uuid: "contextLifecycleListeners"
    - sapientType: "REAL"
      valueType: "org.apache.catalina.core.AprLifecycleListener"
      uuid: "AprLifecycleListener.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.apache.catalina.LifecycleListener[]"
      uuid: "contextLifecycleListeners"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ContextLifecycleListeners must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid31"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    calledSomeStaticInternalMethod: true
- method:
    name: "getTomcatWebServer"
    sourceCodeSignature: "TomcatWebServer getTomcatWebServer(Tomcat tomcat)"
    returnType: "org.springframework.boot.web.embedded.tomcat.TomcatWebServer"
    parameters:
    - name: "tomcat"
      type: "org.apache.catalina.startup.Tomcat"
    instructionFingerprint: "D3104538E4BE06B214110DDD8728D388"
  paths:
  - pathId: "path1"
    testPathName: "getTomcatWebServerWhenGetPortGreaterThanOrEqualsTo0"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "CB547CAC14717A7F19BADD89FCBAABD0"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "88B380C5867B50637C1450B4AE682EE1"
      valueUuid: "target"
    - type: "INPUT"
      name: "tomcat"
      modelFingerprint: "28E98D1C4E76DE37474B950F75E7B262"
      valueUuid: "tomcat"
    - type: "STATIC"
      name: "AprLifecycleListener.class.real"
      modelFingerprint: "CC9A8F89EABB0037F7F11A3BACBB4F84"
      valueUuid: "AprLifecycleListener.class.real"
      methodExercised:
        expression: "isAprAvailable():boolean1"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "64BF48E0334A93001469F3DA0B31E9EC"
      valueUuid: "tomcatWebServer"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "return new TomcatWebServer(tomcat, getPort() >= 0, getShutdown());"
      lineNumber: 444
      details: "No constructor found to create an object without any exception for\
        \ class org.springframework.boot.web.embedded.tomcat.TomcatWebServer"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 1
            valueType: "int"
            uuid: "port"
        propertiesMap:
          shutdown:
            sapientType: "ENUM"
            content: !<regular>
              value: "GRACEFUL"
            valueType: "org.springframework.boot.web.server.Shutdown"
            uuid: "shutdown"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.apache.catalina.startup.Tomcat"
      uuid: "tomcat"
    - sapientType: "REAL"
      valueType: "org.apache.catalina.core.AprLifecycleListener"
      uuid: "AprLifecycleListener.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatWebServer"
        parameters:
        - name: "tomcat"
          value:
            sapientType: "MOCK"
            valueType: "org.apache.catalina.startup.Tomcat"
            uuid: "tomcat"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid32"
            fixed: true
        - name: "shutdown"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "GRACEFUL"
            valueType: "org.springframework.boot.web.server.Shutdown"
            uuid: "shutdown"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatWebServer"
      uuid: "tomcatWebServer"
      fixed: true
    branches:
    - lineNumber: 444
      expression: "getPort() >= 0"
      range: "(444,38)-(444,51)"
      evaluatedAs: true
    calledSomeStaticInternalMethod: true
  - pathId: "path2"
    testPathName: "getTomcatWebServerWhenGetPortLessThan0"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "830ECE55E30F670B7A8F8167EAAA4E70"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "DB8CB8B99A4588D7C06ADA05EC894D82"
      valueUuid: "target"
    - type: "INPUT"
      name: "tomcat"
      modelFingerprint: "28E98D1C4E76DE37474B950F75E7B262"
      valueUuid: "tomcat"
    - type: "STATIC"
      name: "AprLifecycleListener.class.real"
      modelFingerprint: "CC9A8F89EABB0037F7F11A3BACBB4F84"
      valueUuid: "AprLifecycleListener.class.real"
      methodExercised:
        expression: "isAprAvailable():boolean1"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "64BF48E0334A93001469F3DA0B31E9EC"
      valueUuid: "tomcatWebServer"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "return new TomcatWebServer(tomcat, getPort() >= 0, getShutdown());"
      lineNumber: 444
      details: "No constructor found to create an object without any exception for\
        \ class org.springframework.boot.web.embedded.tomcat.TomcatWebServer"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: -1
            valueType: "int"
            uuid: "port"
        propertiesMap:
          shutdown:
            sapientType: "ENUM"
            content: !<regular>
              value: "GRACEFUL"
            valueType: "org.springframework.boot.web.server.Shutdown"
            uuid: "shutdown"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.apache.catalina.startup.Tomcat"
      uuid: "tomcat"
    - sapientType: "REAL"
      valueType: "org.apache.catalina.core.AprLifecycleListener"
      uuid: "AprLifecycleListener.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatWebServer"
        parameters:
        - name: "tomcat"
          value:
            sapientType: "MOCK"
            valueType: "org.apache.catalina.startup.Tomcat"
            uuid: "tomcat"
        - name: "autoStart"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid33"
            fixed: true
        - name: "shutdown"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "GRACEFUL"
            valueType: "org.springframework.boot.web.server.Shutdown"
            uuid: "shutdown"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatWebServer"
      uuid: "tomcatWebServer"
      fixed: true
    branches:
    - lineNumber: 444
      expression: "getPort() >= 0"
      range: "(444,38)-(444,51)"
      evaluatedAs: false
    calledSomeStaticInternalMethod: true
- method:
    name: "setProtocol"
    sourceCodeSignature: "void setProtocol(String protocol)"
    returnType: "void"
    parameters:
    - name: "protocol"
      type: "java.lang.String"
    instructionFingerprint: "29FC3F1E791B761218258D416FF31E80"
  paths:
  - pathId: "path1"
    testPathName: "setProtocolTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "39C4714A670B1933B174EB1E12E7CBC6"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F628D9E516457E803EFA927AEBE4E276"
      valueUuid: "target"
    - type: "INPUT"
      name: "protocol"
      modelFingerprint: "383355E893B069E0A7B77A209D39E2ED"
      valueUuid: "protocol"
    - type: "STATIC"
      name: "AprLifecycleListener.class.real"
      modelFingerprint: "CC9A8F89EABB0037F7F11A3BACBB4F84"
      valueUuid: "AprLifecycleListener.class.real"
      methodExercised:
        expression: "isAprAvailable():boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "92288CD85069546FBB9FEF14F173EC7B"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "hasLength(text:protocol,message:uniqueUuid34):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "port"
      valueType: "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "protocol"
    - sapientType: "REAL"
      valueType: "org.apache.catalina.core.AprLifecycleListener"
      uuid: "AprLifecycleListener.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "protocol"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Protocol must not be empty"
      valueType: "java.lang.String"
      uuid: "uniqueUuid34"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    calledSomeStaticInternalMethod: true
- method:
    name: "setDisableMBeanRegistry"
    sourceCodeSignature: "void setDisableMBeanRegistry(boolean disableMBeanRegistry)"
    returnType: "void"
    parameters:
    - name: "disableMBeanRegistry"
      type: "boolean"
    instructionFingerprint: "80BB88E52BAECC7350DC4341DE3D15DA"
  paths:
  - pathId: "path1"
    testPathName: "setDisableMBeanRegistryTest"
    constructorSignature: "<init>(int) : void"
    modelFingerprint: "5DCCB85182DC082B04CE7D0AB2437F16"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    calledSomeStaticInternalMethod: true
