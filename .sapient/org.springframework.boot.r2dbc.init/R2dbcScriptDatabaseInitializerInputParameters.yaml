---
modelFingerprint: "8D074BCFB9DDC1E5A0C53231E38F0C33"
targetClass:
  fullClassName: "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializer"
methods:
- method:
    name: "isEmbeddedDatabase"
    sourceCodeSignature: "boolean isEmbeddedDatabase()"
    returnType: "boolean"
    instructionFingerprint: "956B6A3BC563FF99ABE4156177A5C487"
  paths:
  - pathId: "path1"
    testPathName: "isEmbeddedDatabaseWhenEmbeddedDatabaseConnectionIsEmbeddedThisConnectionFactory"
    constructorSignature: "<init>(io.r2dbc.spi.ConnectionFactory,org.springframework.boot.sql.init.DatabaseInitializationSettings)\
      \ : void"
    modelFingerprint: "D3075BC956DBECD5C55A2C8D7563D00E"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "8718BE0A74FABA2A8E064A82F35466C8"
      valueUuid: "target"
    - type: "STATIC"
      name: "EmbeddedDatabaseConnection.class"
      modelFingerprint: "C6B04899F084ECCE38247E7372F9A4BD"
      valueUuid: "EmbeddedDatabaseConnection.class"
      methodExercised:
        expression: "isEmbedded(connectionFactory:connectionFactory):boolean1"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "boolean1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializer"
        parameters:
        - name: "connectionFactory"
          value:
            sapientType: "MOCK"
            valueType: "io.r2dbc.spi.ConnectionFactory"
            uuid: "connectionFactory"
        - name: "settings"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.sql.init.DatabaseInitializationSettings"
            uuid: "settings"
      valueType: "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.EmbeddedDatabaseConnection"
      uuid: "EmbeddedDatabaseConnection.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactory"
      uuid: "connectionFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
      fixed: true
    branches:
    - lineNumber: 54
      expression: "EmbeddedDatabaseConnection.isEmbedded(this.connectionFactory)"
      range: "(54,10)-(54,70)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "isEmbeddedDatabaseWhenEmbeddedDatabaseConnectionNotIsEmbeddedThisConnectionFactory"
    constructorSignature: "<init>(io.r2dbc.spi.ConnectionFactory,org.springframework.boot.sql.init.DatabaseInitializationSettings)\
      \ : void"
    modelFingerprint: "C127AB66C9D4C687FC41DA6A07C70BBF"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "8718BE0A74FABA2A8E064A82F35466C8"
      valueUuid: "target"
    - type: "STATIC"
      name: "EmbeddedDatabaseConnection.class"
      modelFingerprint: "D09462D4FB2401844CB5A7B61A32DBEF"
      valueUuid: "EmbeddedDatabaseConnection.class"
      methodExercised:
        expression: "isEmbedded(connectionFactory:connectionFactory):boolean1"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "boolean1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializer"
        parameters:
        - name: "connectionFactory"
          value:
            sapientType: "MOCK"
            valueType: "io.r2dbc.spi.ConnectionFactory"
            uuid: "connectionFactory"
        - name: "settings"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.sql.init.DatabaseInitializationSettings"
            uuid: "settings"
      valueType: "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.r2dbc.EmbeddedDatabaseConnection"
      uuid: "EmbeddedDatabaseConnection.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactory"
      uuid: "connectionFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
      fixed: true
    branches:
    - lineNumber: 54
      expression: "EmbeddedDatabaseConnection.isEmbedded(this.connectionFactory)"
      range: "(54,10)-(54,70)"
      evaluatedAs: false
- method:
    name: "runScripts"
    sourceCodeSignature: "void runScripts(Scripts scripts)"
    returnType: "void"
    parameters:
    - name: "scripts"
      type: "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$Scripts"
    instructionFingerprint: "44F6B440B4D1583B5DA55E2767581093"
  paths:
  - pathId: "path1"
    testPathName: "runScripts1WhenScriptsIsNotEmpty"
    constructorSignature: "<init>(io.r2dbc.spi.ConnectionFactory,org.springframework.boot.sql.init.DatabaseInitializationSettings)\
      \ : void"
    modelFingerprint: "2C60FE659452B3454B68EE4B51CFB652"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "8718BE0A74FABA2A8E064A82F35466C8"
      valueUuid: "target"
    - type: "INPUT"
      name: "scripts"
      modelFingerprint: "2B2749BC5848734BDE864F51EA19606A"
      valueUuid: "scripts"
    - type: "LOCAL_VARIABLE"
      name: "scripts"
      modelFingerprint: "AAC3D9C992D38BA0D21B4735FBE4E4AE"
      valueUuid: "scripts"
      methodExercised:
        expression: "isContinueOnError():continueOnError"
    - type: "LOCAL_VARIABLE"
      name: "scripts"
      modelFingerprint: "5A464711B4888E7A1BA1E2AB99239E7F"
      valueUuid: "scripts"
      methodExercised:
        expression: "getSeparator():separator"
    - type: "LOCAL_VARIABLE"
      name: "scripts"
      modelFingerprint: "296972D47957D54B31B3928206758071"
      valueUuid: "scripts"
      methodExercised:
        expression: "getEncoding():encoding"
    - type: "LOCAL_VARIABLE"
      name: "scripts"
      modelFingerprint: "296972D47957D54B31B3928206758071"
      valueUuid: "scripts"
      methodExercised:
        expression: "getEncoding():encoding"
    - type: "LOCAL_VARIABLE"
      name: "populator"
      modelFingerprint: "52741C04FFF77931D13C98CF1BC4A73A"
      valueUuid: "resourceDatabasePopulator"
      methodExercised:
        expression: "setSqlScriptEncoding(sqlScriptEncoding:string2):void3"
    - type: "LOCAL_VARIABLE"
      name: "scripts"
      modelFingerprint: "D2673E92EDBCDCF22FF89B3B8383FDFF"
      valueUuid: "scripts"
      methodExercised:
        expression: "iterator():iterator"
    - type: "LOCAL_VARIABLE"
      name: "populator"
      modelFingerprint: "8072AEC6E39442373163A3ADC7989425"
      valueUuid: "resourceDatabasePopulator"
      methodExercised:
        expression: "addScript(script:object):void4"
    - type: "LOCAL_VARIABLE"
      name: "populator"
      modelFingerprint: "2DE2D9EE096F0D9AC5537257B4A76CA6"
      valueUuid: "resourceDatabasePopulator"
      methodExercised:
        expression: "populate(connectionFactory:connectionFactory):mono"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "41780322C11BF950B1D53D44FEE07736"
      valueUuid: "mono"
      methodExercised:
        expression: "block():object2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.nio.charset.Charset.name() : java.lang.String"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializer"
        parameters:
        - name: "connectionFactory"
          value:
            sapientType: "MOCK"
            valueType: "io.r2dbc.spi.ConnectionFactory"
            uuid: "connectionFactory"
        - name: "settings"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.sql.init.DatabaseInitializationSettings"
            uuid: "settings"
      valueType: "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$Scripts"
      uuid: "scripts"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$Scripts"
      uuid: "scripts"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "continueOnError"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$Scripts"
      uuid: "scripts"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getSeparator1"
      valueType: "java.lang.String"
      uuid: "separator"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$Scripts"
      uuid: "scripts"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.nio.charset.Charset"
        method: "defaultCharset"
        methodParameters: []
      valueType: "java.nio.charset.Charset"
      uuid: "encoding"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$Scripts"
      uuid: "scripts"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.nio.charset.Charset"
        method: "defaultCharset"
        methodParameters: []
      valueType: "java.nio.charset.Charset"
      uuid: "encoding"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator"
        parameters: []
        propertiesMap:
          separator:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getSeparator1"
            valueType: "java.lang.String"
            uuid: "separator"
          continueOnError:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "continueOnError"
      valueType: "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator"
      uuid: "resourceDatabasePopulator"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$Scripts"
      uuid: "scripts"
    - sapientType: "ITERATOR"
      content: !<iterator>
        collectionValue:
          sapientType: "COLLECTION"
          content: !<collection>
            collectionClass: "java.util.ArrayList"
            parameters: []
            values:
            - sapientType: "MOCK"
              valueType: "org.springframework.core.io.Resource"
              uuid: "object"
              collectionUuid: "iterator-CollectionContent"
          valueType: "java.util.List"
          genericValueType: "org.springframework.core.io.Resource"
          uuid: "iterator-CollectionContent"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.core.io.Resource"
      uuid: "iterator"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator"
        parameters: []
        propertiesMap:
          separator:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getSeparator1"
            valueType: "java.lang.String"
            uuid: "separator"
          continueOnError:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "continueOnError"
      valueType: "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator"
      uuid: "resourceDatabasePopulator"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "object"
      collectionUuid: "iterator-CollectionContent"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator"
        parameters: []
        propertiesMap:
          separator:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_getSeparator1"
            valueType: "java.lang.String"
            uuid: "separator"
          continueOnError:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "continueOnError"
      valueType: "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator"
      uuid: "resourceDatabasePopulator"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "reactor.core.publisher.Mono"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator"
            parameters: []
            propertiesMap:
              separator:
                sapientType: "BASIC"
                content: !<regular>
                  value: "return_of_getSeparator1"
                valueType: "java.lang.String"
                uuid: "separator"
              continueOnError:
                sapientType: "BASIC"
                content: !<regular>
                  value: false
                valueType: "boolean"
                uuid: "continueOnError"
          valueType: "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator"
          uuid: "resourceDatabasePopulator"
          fixed: true
        methodParameters:
        - name: "connectionFactory"
          value:
            sapientType: "MOCK"
            valueType: "io.r2dbc.spi.ConnectionFactory"
            uuid: "connectionFactory"
        methodName: "populate"
      valueType: "reactor.core.publisher.Mono"
      genericValueType: "java.lang.Void"
      uuid: "mono"
    - sapientType: "MOCK"
      valueType: "io.r2dbc.spi.ConnectionFactory"
      uuid: "connectionFactory"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "reactor.core.publisher.Mono"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator"
            parameters: []
            propertiesMap:
              separator:
                sapientType: "BASIC"
                content: !<regular>
                  value: "return_of_getSeparator1"
                valueType: "java.lang.String"
                uuid: "separator"
              continueOnError:
                sapientType: "BASIC"
                content: !<regular>
                  value: false
                valueType: "boolean"
                uuid: "continueOnError"
          valueType: "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator"
          uuid: "resourceDatabasePopulator"
          fixed: true
        methodParameters:
        - name: "connectionFactory"
          value:
            sapientType: "MOCK"
            valueType: "io.r2dbc.spi.ConnectionFactory"
            uuid: "connectionFactory"
        methodName: "populate"
      valueType: "reactor.core.publisher.Mono"
      genericValueType: "java.lang.Void"
      uuid: "mono"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "reactor.core.publisher.Mono"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator"
                parameters: []
                propertiesMap:
                  separator:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: "return_of_getSeparator1"
                    valueType: "java.lang.String"
                    uuid: "separator"
                  continueOnError:
                    sapientType: "BASIC"
                    content: !<regular>
                      value: false
                    valueType: "boolean"
                    uuid: "continueOnError"
              valueType: "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator"
              uuid: "resourceDatabasePopulator"
              fixed: true
            methodParameters:
            - name: "connectionFactory"
              value:
                sapientType: "MOCK"
                valueType: "io.r2dbc.spi.ConnectionFactory"
                uuid: "connectionFactory"
            methodName: "populate"
          valueType: "reactor.core.publisher.Mono"
          genericValueType: "java.lang.Void"
          uuid: "mono"
        methodParameters: []
        methodName: "block"
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 62
      expression: "scripts.getEncoding() != null"
      range: "(62,7)-(62,35)"
      evaluatedAs: true
    - lineNumber: 65
      expression: "for-each(scripts)"
      range: "(65,26)-(65,32)"
      evaluatedAs: true
