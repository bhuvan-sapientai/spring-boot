---
modelFingerprint: "7AAB5245CC28EDFDBC61B4C7C22B77CC"
targetClass:
  fullClassName: "org.springframework.boot.diagnostics.FailureAnalyzers"
methods:
- method:
    name: "reportException"
    sourceCodeSignature: "boolean reportException(Throwable failure)"
    returnType: "boolean"
    parameters:
    - name: "failure"
      type: "java.lang.Throwable"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Throwable"
    instructionFingerprint: "E9079006EA373CBBFA4E77756818D289"
  paths:
  - pathId: "path4"
    testPathName: "reportExceptionWhenAnalysisIsNullAndAnalysisIsNull"
    constructorSignature: "<init>(org.springframework.context.ConfigurableApplicationContext,org.springframework.core.io.support.SpringFactoriesLoader)\
      \ : void"
    modelFingerprint: "644227A3AE296F7FF5DD884FC9C925C2"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "53D4830AA67B85B721875370DD740D01"
      valueUuid: "target"
    - type: "INPUT"
      name: "failure"
      modelFingerprint: "D3A99AE8420D57A4E6FF9607CE46C63F"
      valueUuid: "failure"
    - type: "STATIC"
      name: "SpringFactoriesLoader.FailureHandler.class.real"
      modelFingerprint: "1AECD2317B5475B3E3C87BAB2FEDB857"
      valueUuid: "SpringFactoriesLoader.FailureHandler.class.real"
      methodExercised:
        expression: "logging(logger:log):springFactoriesLoader.FailureHandler"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "springFactoriesLoader"
      modelFingerprint: "A7C5B4A9507B808398182A089842D879"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid2,argumentResolver:springFactoriesLoader.ArgumentResolver,failureHandler:springFactoriesLoader.FailureHandler):list"
    - type: "LOCAL_VARIABLE"
      name: "analyzer"
      modelFingerprint: "B1C91E65AE7F1429B43A1C6A1A447B7E"
      valueUuid: "object"
      methodExercised:
        expression: "analyze(failure:failure):failureAnalysis"
    - type: "FIELD"
      name: "springFactoriesLoader"
      modelFingerprint: "B2C1D883DA292F50F6F1C2F438C5EB8E"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid3):list2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.FailureAnalyzers"
        parameters:
        - name: "context"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.context.ConfigurableApplicationContext"
            uuid: "context"
            fixed: true
        - name: "springFactoriesLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
            uuid: "springFactoriesLoader"
      valueType: "org.springframework.boot.diagnostics.FailureAnalyzers"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "failure"
    - sapientType: "REAL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler"
      uuid: "SpringFactoriesLoader.FailureHandler.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler"
        method: "logging"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.diagnostics.FailureAnalyzers"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.diagnostics.FailureAnalyzers"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler"
      uuid: "springFactoriesLoader.FailureHandler"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.apache.commons.logging.LogFactory"
        method: "getLog"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.diagnostics.FailureAnalyzers"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.boot.diagnostics.FailureAnalyzers"
            uuid: "uniqueUuid1"
            fixed: true
      valueType: "org.apache.commons.logging.Log"
      uuid: "log"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.diagnostics.FailureAnalyzer"
          uuid: "object"
          collectionUuid: "list"
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.diagnostics.FailureAnalyzer"
      uuid: "list"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.diagnostics.FailureAnalyzer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.diagnostics.FailureAnalyzer"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler"
        method: "logging"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.diagnostics.FailureAnalyzers"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.diagnostics.FailureAnalyzers"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler"
      uuid: "springFactoriesLoader.FailureHandler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.diagnostics.FailureAnalyzer"
      uuid: "object"
      collectionUuid: "list"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "failure"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.diagnostics.FailureAnalysisReporter"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.diagnostics.FailureAnalysisReporter"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.diagnostics.FailureAnalysisReporter"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 86
      expression: "for-each(analyzers)"
      range: "(86,35)-(86,43)"
      evaluatedAs: true
      internalMethodName: "analyze"
    - lineNumber: 89
      expression: "analysis != null"
      range: "(89,9)-(89,24)"
      evaluatedAs: false
      internalMethodName: "analyze"
    - lineNumber: 102
      expression: "analysis == null"
      range: "(102,7)-(102,22)"
      evaluatedAs: true
      internalMethodName: "report"
    calledSomeStaticInternalMethod: true
  - pathId: "path6"
    testPathName: "reportExceptionWhenCaughtThrowableAndAnalysisIsNull"
    constructorSignature: "<init>(org.springframework.context.ConfigurableApplicationContext,org.springframework.core.io.support.SpringFactoriesLoader)\
      \ : void"
    modelFingerprint: "4DE31AF6B3D5D0B81E41050C5497927F"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "A8BBCA24C9D7BC1EC4C950988F78DF54"
      valueUuid: "target"
    - type: "INPUT"
      name: "failure"
      modelFingerprint: "AFF4BBFAF9C79CD0A0457F4EE6D5F2A0"
      valueUuid: "failure"
    - type: "STATIC"
      name: "SpringFactoriesLoader.FailureHandler.class.real"
      modelFingerprint: "1AECD2317B5475B3E3C87BAB2FEDB857"
      valueUuid: "SpringFactoriesLoader.FailureHandler.class.real"
      methodExercised:
        expression: "logging(logger:log):springFactoriesLoader.FailureHandler"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "springFactoriesLoader"
      modelFingerprint: "7AD00C860678C131BACA24A30A403A69"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid5,argumentResolver:springFactoriesLoader.ArgumentResolver,failureHandler:springFactoriesLoader.FailureHandler):list"
    - type: "LOCAL_VARIABLE"
      name: "analyzer"
      modelFingerprint: "718F9DA2F1DD7FCACE8926E815FA8D83"
      valueUuid: "object"
      methodExercised:
        expression: "analyze(failure:failure):failureAnalysis"
    - type: "STATIC"
      name: "LogMessage.class"
      modelFingerprint: "7FDC7D3C912A95AF8EB03BF71DD19CDD"
      valueUuid: "LogMessage.class"
      methodExercised:
        expression: "format(format:uniqueUuid6,arg1:object):logMessage"
        staticAccess: true
    - type: "FIELD"
      name: "springFactoriesLoader"
      modelFingerprint: "A0B917B5CE25CEAA0C8317FDCFFBEA88"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid7):list2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "DEPENDENCY_TO_THROW_EXCEPTION_NOT_FOUND"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.FailureAnalyzers"
        parameters:
        - name: "context"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.context.ConfigurableApplicationContext"
            uuid: "context"
            fixed: true
        - name: "springFactoriesLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
            uuid: "springFactoriesLoader"
      valueType: "org.springframework.boot.diagnostics.FailureAnalyzers"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "failure"
    - sapientType: "REAL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler"
      uuid: "SpringFactoriesLoader.FailureHandler.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler"
        method: "logging"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.diagnostics.FailureAnalyzers"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.diagnostics.FailureAnalyzers"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler"
      uuid: "springFactoriesLoader.FailureHandler"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.apache.commons.logging.LogFactory"
        method: "getLog"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.diagnostics.FailureAnalyzers"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.boot.diagnostics.FailureAnalyzers"
            uuid: "uniqueUuid4"
            fixed: true
      valueType: "org.apache.commons.logging.Log"
      uuid: "log"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.diagnostics.FailureAnalyzer"
          uuid: "object"
          collectionUuid: "list"
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.diagnostics.FailureAnalyzer"
      uuid: "list"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.diagnostics.FailureAnalyzer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.diagnostics.FailureAnalyzer"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler"
        method: "logging"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.diagnostics.FailureAnalyzers"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.diagnostics.FailureAnalyzers"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler"
      uuid: "springFactoriesLoader.FailureHandler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.diagnostics.FailureAnalyzer"
      uuid: "object"
      collectionUuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "failure"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.log.LogMessage"
      uuid: "LogMessage.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.log.LogMessage"
      uuid: "logMessage"
    - sapientType: "BASIC"
      content: !<regular>
        value: "FailureAnalyzer %s failed"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.diagnostics.FailureAnalyzer"
      uuid: "object"
      collectionUuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.diagnostics.FailureAnalysisReporter"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.diagnostics.FailureAnalysisReporter"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.diagnostics.FailureAnalysisReporter"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 86
      expression: "for-each(analyzers)"
      range: "(86,35)-(86,43)"
      evaluatedAs: true
      internalMethodName: "analyze"
    - lineNumber: 89
      expression: "analysis != null"
      range: "(89,9)-(89,24)"
      evaluatedAs: true
      internalMethodName: "analyze"
    - lineNumber: 93
      expression: "catch-exception (Throwable)"
      range: "(93,4)-(93,22)"
      evaluatedAs: true
      internalMethodName: "analyze"
    - lineNumber: 102
      expression: "analysis == null"
      range: "(102,7)-(102,22)"
      evaluatedAs: true
      internalMethodName: "report"
    calledSomeStaticInternalMethod: true
    catchBlockExercised:
      idExternalInstruction: 6
      id: 1
      catchExceptions:
      - "java.lang.Throwable"
  - pathId: "path2"
    testPathName: "reportExceptionWhenReportersIsNotEmpty"
    constructorSignature: "<init>(org.springframework.context.ConfigurableApplicationContext,org.springframework.core.io.support.SpringFactoriesLoader)\
      \ : void"
    modelFingerprint: "0910B2F5646D81D46BEE431AA9517CBE"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "53D4830AA67B85B721875370DD740D01"
      valueUuid: "target"
    - type: "INPUT"
      name: "failure"
      modelFingerprint: "D3A99AE8420D57A4E6FF9607CE46C63F"
      valueUuid: "failure"
    - type: "STATIC"
      name: "SpringFactoriesLoader.FailureHandler.class.real"
      modelFingerprint: "1AECD2317B5475B3E3C87BAB2FEDB857"
      valueUuid: "SpringFactoriesLoader.FailureHandler.class.real"
      methodExercised:
        expression: "logging(logger:log):springFactoriesLoader.FailureHandler"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "springFactoriesLoader"
      modelFingerprint: "A7C5B4A9507B808398182A089842D879"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid2,argumentResolver:springFactoriesLoader.ArgumentResolver,failureHandler:springFactoriesLoader.FailureHandler):list"
    - type: "LOCAL_VARIABLE"
      name: "analyzer"
      modelFingerprint: "B1E68A6E64F4F30F0991ED2F430ACB9E"
      valueUuid: "object"
      methodExercised:
        expression: "analyze(failure:failure):failureAnalysis"
    - type: "FIELD"
      name: "springFactoriesLoader"
      modelFingerprint: "76E46C852FB98266D5C84680AAF299B7"
      valueUuid: "springFactoriesLoader"
      methodExercised:
        expression: "load(factoryType:uniqueUuid3):list2"
    - type: "LOCAL_VARIABLE"
      name: "reporter"
      modelFingerprint: "9352CB89D80C4019CA5E64BE96A59EA5"
      valueUuid: "object2"
      methodExercised:
        expression: "report(analysis:failureAnalysis):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.diagnostics.FailureAnalyzers"
        parameters:
        - name: "context"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.context.ConfigurableApplicationContext"
            uuid: "context"
            fixed: true
        - name: "springFactoriesLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
            uuid: "springFactoriesLoader"
      valueType: "org.springframework.boot.diagnostics.FailureAnalyzers"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "failure"
    - sapientType: "REAL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler"
      uuid: "SpringFactoriesLoader.FailureHandler.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler"
        method: "logging"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.diagnostics.FailureAnalyzers"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.diagnostics.FailureAnalyzers"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler"
      uuid: "springFactoriesLoader.FailureHandler"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.apache.commons.logging.LogFactory"
        method: "getLog"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.diagnostics.FailureAnalyzers"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.boot.diagnostics.FailureAnalyzers"
            uuid: "uniqueUuid1"
            fixed: true
      valueType: "org.apache.commons.logging.Log"
      uuid: "log"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.diagnostics.FailureAnalyzer"
          uuid: "object"
          collectionUuid: "list"
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.diagnostics.FailureAnalyzer"
      uuid: "list"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.diagnostics.FailureAnalyzer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.diagnostics.FailureAnalyzer"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler"
        method: "logging"
        methodParameters:
        - value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.apache.commons.logging.LogFactory"
              method: "getLog"
              methodParameters:
              - value:
                  sapientType: "CLASS"
                  content: !<regular>
                    value: "org.springframework.boot.diagnostics.FailureAnalyzers"
                  valueType: "java.lang.Class"
                  genericValueType: "org.springframework.boot.diagnostics.FailureAnalyzers"
                  fixed: true
            valueType: "org.apache.commons.logging.Log"
            uuid: "log"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$FailureHandler"
      uuid: "springFactoriesLoader.FailureHandler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.diagnostics.FailureAnalyzer"
      uuid: "object"
      collectionUuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "failure"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
      uuid: "springFactoriesLoader"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.diagnostics.FailureAnalysisReporter"
          uuid: "object2"
          collectionUuid: "list2"
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.diagnostics.FailureAnalysisReporter"
      uuid: "list2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.diagnostics.FailureAnalysisReporter"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.diagnostics.FailureAnalysisReporter"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysisReporter"
      uuid: "object2"
      collectionUuid: "list2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.diagnostics.FailureAnalysis"
      uuid: "failureAnalysis"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 86
      expression: "for-each(analyzers)"
      range: "(86,35)-(86,43)"
      evaluatedAs: true
      internalMethodName: "analyze"
    - lineNumber: 89
      expression: "analysis != null"
      range: "(89,9)-(89,24)"
      evaluatedAs: true
      internalMethodName: "analyze"
    - lineNumber: 102
      expression: "analysis == null"
      range: "(102,7)-(102,22)"
      evaluatedAs: false
      internalMethodName: "report"
    - lineNumber: 102
      expression: "reporters.isEmpty()"
      range: "(102,27)-(102,45)"
      evaluatedAs: false
      internalMethodName: "report"
    - lineNumber: 105
      expression: "for-each(reporters)"
      range: "(105,43)-(105,51)"
      evaluatedAs: true
      internalMethodName: "report"
    calledSomeStaticInternalMethod: true
