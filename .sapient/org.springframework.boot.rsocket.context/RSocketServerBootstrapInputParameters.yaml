---
modelFingerprint: "B20A6E80F9930D7BB5ED3E7FCDCEC962"
targetClass:
  fullClassName: "org.springframework.boot.rsocket.context.RSocketServerBootstrap"
methods:
- method:
    name: "setApplicationEventPublisher"
    sourceCodeSignature: "void setApplicationEventPublisher(ApplicationEventPublisher\
      \ applicationEventPublisher)"
    returnType: "void"
    parameters:
    - name: "applicationEventPublisher"
      type: "org.springframework.context.ApplicationEventPublisher"
    instructionFingerprint: "AAECFF58DB0EA261A58E97103A643400"
  paths:
  - pathId: "path1"
    testPathName: "setApplicationEventPublisherTest"
    constructorSignature: "<init>(org.springframework.boot.rsocket.server.RSocketServerFactory,io.rsocket.SocketAcceptor)\
      \ : void"
    modelFingerprint: "A35FAB4813680BED678F90C31738E000"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "start"
    sourceCodeSignature: "void start()"
    returnType: "void"
    instructionFingerprint: "877F962A88ECE5B1AB29DBBF1343D468"
  paths:
  - pathId: "path1"
    testPathName: "startTest"
    constructorSignature: "<init>(org.springframework.boot.rsocket.server.RSocketServerFactory,io.rsocket.SocketAcceptor)\
      \ : void"
    modelFingerprint: "43A829C8CCC114E3A7824A1535390CBE"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "108A668327C9EC5F1EAB5A0B5114964B"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "7DC1B1D55E120485C0426A0DB0303B46"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:serverFactory,message:uniqueUuid2):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "serverFactory"
      modelFingerprint: "8007604A1163C7633A16826F5422AA41"
      valueUuid: "serverFactory"
      methodExercised:
        expression: "create(socketAcceptor:socketAcceptor):rSocketServer"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "02DD1342141CB4DCFDC51EA0EF0CA0CF"
      valueUuid: "rSocketServer"
      methodExercised:
        expression: "start():void2"
        throwsExceptions:
        - "org.springframework.boot.rsocket.server.RSocketServerException"
    - type: "FIELD"
      name: "eventPublisher"
      modelFingerprint: "EA017AC287A7696A00DDA814C741946A"
      valueUuid: "fieldApplicationEventPublisher"
      methodExercised:
        expression: "publishEvent(event:rSocketServerInitializedEvent):void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.rsocket.context.RSocketServerBootstrap"
        parameters:
        - name: "serverFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.rsocket.server.RSocketServerFactory"
            uuid: "serverFactory"
        - name: "socketAcceptor"
          value:
            sapientType: "MOCK"
            valueType: "io.rsocket.SocketAcceptor"
            uuid: "socketAcceptor"
        propertiesMap:
          eventPublisher:
            sapientType: "MOCK"
            valueType: "org.springframework.context.ApplicationEventPublisher"
            uuid: "fieldApplicationEventPublisher"
      valueType: "org.springframework.boot.rsocket.context.RSocketServerBootstrap"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.rsocket.server.RSocketServerFactory"
      uuid: "serverFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ServerFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.rsocket.server.RSocketServerFactory"
      uuid: "serverFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.rsocket.server.RSocketServer"
      uuid: "rSocketServer"
    - sapientType: "MOCK"
      valueType: "io.rsocket.SocketAcceptor"
      uuid: "socketAcceptor"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.rsocket.server.RSocketServer"
      uuid: "rSocketServer"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationEventPublisher"
      uuid: "fieldApplicationEventPublisher"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.rsocket.context.RSocketServerInitializedEvent"
      uuid: "rSocketServerInitializedEvent"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "stop"
    sourceCodeSignature: "void stop()"
    returnType: "void"
    instructionFingerprint: "46673DF73B284BC6E6DAE9944E5D7D8F"
  paths:
  - pathId: "path1"
    testPathName: "stopTest"
    constructorSignature: "<init>(org.springframework.boot.rsocket.server.RSocketServerFactory,io.rsocket.SocketAcceptor)\
      \ : void"
    modelFingerprint: "E8AE05D80991B17CD9BCA25C223F31E2"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "108A668327C9EC5F1EAB5A0B5114964B"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "7DC1B1D55E120485C0426A0DB0303B46"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:serverFactory,message:uniqueUuid3):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "serverFactory"
      modelFingerprint: "8007604A1163C7633A16826F5422AA41"
      valueUuid: "serverFactory"
      methodExercised:
        expression: "create(socketAcceptor:socketAcceptor):rSocketServer"
    - type: "FIELD"
      name: "server"
      modelFingerprint: "4599D58E991742CE37E8E7CD6002B765"
      valueUuid: "rSocketServer"
      methodExercised:
        expression: "stop():void2"
        throwsExceptions:
        - "org.springframework.boot.rsocket.server.RSocketServerException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.rsocket.context.RSocketServerBootstrap"
        parameters:
        - name: "serverFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.rsocket.server.RSocketServerFactory"
            uuid: "serverFactory"
        - name: "socketAcceptor"
          value:
            sapientType: "MOCK"
            valueType: "io.rsocket.SocketAcceptor"
            uuid: "socketAcceptor"
      valueType: "org.springframework.boot.rsocket.context.RSocketServerBootstrap"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.rsocket.server.RSocketServerFactory"
      uuid: "serverFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ServerFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.rsocket.server.RSocketServerFactory"
      uuid: "serverFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.rsocket.server.RSocketServer"
      uuid: "rSocketServer"
    - sapientType: "MOCK"
      valueType: "io.rsocket.SocketAcceptor"
      uuid: "socketAcceptor"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.rsocket.server.RSocketServer"
      uuid: "rSocketServer"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "isRunning"
    sourceCodeSignature: "boolean isRunning()"
    returnType: "boolean"
    instructionFingerprint: "8F735402D8AC2B18B220544354FDC34D"
  paths:
  - pathId: "path3"
    testPathName: "isRunningWhenServerIsNull"
    constructorSignature: "<init>(org.springframework.boot.rsocket.server.RSocketServerFactory,io.rsocket.SocketAcceptor)\
      \ : void"
    modelFingerprint: "F8BD25F5CB08F0C11ACDAB9FCDD7346B"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "108A668327C9EC5F1EAB5A0B5114964B"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "7DC1B1D55E120485C0426A0DB0303B46"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:serverFactory,message:uniqueUuid4):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "serverFactory"
      modelFingerprint: "E9D40B98D203D369FDD0EE0FE516DE49"
      valueUuid: "serverFactory"
      methodExercised:
        expression: "create(socketAcceptor:socketAcceptor):rSocketServer"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.rsocket.context.RSocketServerBootstrap"
        parameters:
        - name: "serverFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.rsocket.server.RSocketServerFactory"
            uuid: "serverFactory"
        - name: "socketAcceptor"
          value:
            sapientType: "MOCK"
            valueType: "io.rsocket.SocketAcceptor"
            uuid: "socketAcceptor"
      valueType: "org.springframework.boot.rsocket.context.RSocketServerBootstrap"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.rsocket.server.RSocketServerFactory"
      uuid: "serverFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ServerFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.rsocket.server.RSocketServerFactory"
      uuid: "serverFactory"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.rsocket.server.RSocketServer"
      uuid: "rSocketServer"
      fixed: true
    - sapientType: "MOCK"
      valueType: "io.rsocket.SocketAcceptor"
      uuid: "socketAcceptor"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 64
      expression: "server != null"
      range: "(64,7)-(64,20)"
      evaluatedAs: false
  - pathId: "path1"
    testPathName: "isRunningWhenServerAddressIsNotNull"
    constructorSignature: "<init>(org.springframework.boot.rsocket.server.RSocketServerFactory,io.rsocket.SocketAcceptor)\
      \ : void"
    modelFingerprint: "AEA637C49A90D890A91D675A216B3170"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "108A668327C9EC5F1EAB5A0B5114964B"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "7DC1B1D55E120485C0426A0DB0303B46"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:serverFactory,message:uniqueUuid5):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "serverFactory"
      modelFingerprint: "8007604A1163C7633A16826F5422AA41"
      valueUuid: "serverFactory"
      methodExercised:
        expression: "create(socketAcceptor:socketAcceptor):rSocketServer"
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "864E7A286ED91163F53FF784A022F824"
      valueUuid: "rSocketServer"
      methodExercised:
        expression: "address():inetSocketAddress"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.rsocket.context.RSocketServerBootstrap"
        parameters:
        - name: "serverFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.rsocket.server.RSocketServerFactory"
            uuid: "serverFactory"
        - name: "socketAcceptor"
          value:
            sapientType: "MOCK"
            valueType: "io.rsocket.SocketAcceptor"
            uuid: "socketAcceptor"
      valueType: "org.springframework.boot.rsocket.context.RSocketServerBootstrap"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.rsocket.server.RSocketServerFactory"
      uuid: "serverFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ServerFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.rsocket.server.RSocketServerFactory"
      uuid: "serverFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.rsocket.server.RSocketServer"
      uuid: "rSocketServer"
    - sapientType: "MOCK"
      valueType: "io.rsocket.SocketAcceptor"
      uuid: "socketAcceptor"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.rsocket.server.RSocketServer"
      uuid: "rSocketServer"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.net.InetSocketAddress"
        parameters:
        - name: "port"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "inetSocketAddress-port"
      valueType: "java.net.InetSocketAddress"
      uuid: "inetSocketAddress"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 64
      expression: "server != null"
      range: "(64,7)-(64,20)"
      evaluatedAs: true
    - lineNumber: 65
      expression: "server.address() != null"
      range: "(65,11)-(65,34)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "isRunningWhenServerAddressIsNull"
    constructorSignature: "<init>(org.springframework.boot.rsocket.server.RSocketServerFactory,io.rsocket.SocketAcceptor)\
      \ : void"
    modelFingerprint: "EC3816D22FA2B52C5D963A6520A0242E"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "108A668327C9EC5F1EAB5A0B5114964B"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "7DC1B1D55E120485C0426A0DB0303B46"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:serverFactory,message:uniqueUuid6):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "serverFactory"
      modelFingerprint: "8007604A1163C7633A16826F5422AA41"
      valueUuid: "serverFactory"
      methodExercised:
        expression: "create(socketAcceptor:socketAcceptor):rSocketServer"
    - type: "LOCAL_VARIABLE"
      name: "server"
      modelFingerprint: "ABD21C49183D2031314277BF60BAD869"
      valueUuid: "rSocketServer"
      methodExercised:
        expression: "address():inetSocketAddress"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.rsocket.context.RSocketServerBootstrap"
        parameters:
        - name: "serverFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.rsocket.server.RSocketServerFactory"
            uuid: "serverFactory"
        - name: "socketAcceptor"
          value:
            sapientType: "MOCK"
            valueType: "io.rsocket.SocketAcceptor"
            uuid: "socketAcceptor"
      valueType: "org.springframework.boot.rsocket.context.RSocketServerBootstrap"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.rsocket.server.RSocketServerFactory"
      uuid: "serverFactory"
    - sapientType: "BASIC"
      content: !<regular>
        value: "ServerFactory must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.rsocket.server.RSocketServerFactory"
      uuid: "serverFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.rsocket.server.RSocketServer"
      uuid: "rSocketServer"
    - sapientType: "MOCK"
      valueType: "io.rsocket.SocketAcceptor"
      uuid: "socketAcceptor"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.rsocket.server.RSocketServer"
      uuid: "rSocketServer"
    - sapientType: "NULL"
      valueType: "java.net.InetSocketAddress"
      uuid: "inetSocketAddress"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 64
      expression: "server != null"
      range: "(64,7)-(64,20)"
      evaluatedAs: true
    - lineNumber: 65
      expression: "server.address() != null"
      range: "(65,11)-(65,34)"
      evaluatedAs: false
