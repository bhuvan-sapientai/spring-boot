---
modelFingerprint: "E827D0CB59EB5E7E08C55F4BCDA4FC26"
methods:
- method:
    name: "getProperty"
    signature: "getProperty(java.lang.String) : java.lang.Object"
    instructionFingerprint: "D4FF80AD2A76FEE678CC883E3E55F9FF"
  paths:
  - pathId: "path20"
    testPathName: "getPropertyWhenStringUtilsNotHasLengthName"
    constructorSignature: "<init>(java.lang.String,boolean) : void"
    filledByUser: false
    modelFingerprint: "D6BEFCBF9DB2A610563DCF854628A8E6"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "d9740d23-1a9b-39ab-9d6a-1610ecf199a8"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path19"
    testPathName: "getPropertyWhenNameNotStartsWithPrefix"
    constructorSignature: "<init>(java.lang.String,boolean) : void"
    filledByUser: false
    modelFingerprint: "B0EC976E204AD3E45B2215DDAEA3642B"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "b3218234-5087-39da-b8bd-8dac064b607f"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "mapping"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "String prefix = mapping.getPrefix();"
      lineNumber: 79
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: mapping - Method: getPrefix"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path13"
    testPathName: "getPropertyWhenElementIsNull"
    constructorSignature: "<init>(java.lang.String,boolean) : void"
    filledByUser: false
    modelFingerprint: "F0B90654BAF07B13528F050DF28700B6"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7576D09E116F241F54CA4BD3E34514CC"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "name"
      modelFingerprint: "3ADD8F096C225C44ADAD8FA63965A8CB"
      index: 2
      ignored: false
      valueUuid: "getProperty_string1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "CFB1D714E0438F1A4E48A4C3136075FB"
      index: 3
      ignored: false
      valueUuid: "uuid12"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "hasText"
        parameters:
        - name: "text"
          valueUuid: "<init>_string1"
        - name: "message"
          valueUuid: "uuid11"
        signature: "hasText(String,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "95285AAA31782B98215583C4DDD6B70B"
      index: 4
      ignored: false
      valueUuid: "uuid14"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "<init>_object1"
        - name: "message"
          valueUuid: "uuid13"
        signature: "notNull(Object,String): void"
        returnValueUuid: "<init>_void2"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "BEBEC69BC43850BE7E3936E06CBDCE80"
      index: 5
      ignored: false
      valueUuid: "uuid15"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "getProperty_string1"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getProperty_boolean1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7FF3E62C4C26664215CB4A88EF6B4C11"
      index: 6
      ignored: false
      valueUuid: "getProperty_object7"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "1ac1a73e-6162-34b2-8c16-c0c45f501f65"
    deleted: false
    disabled: false
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "mapping"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "String prefix = mapping.getPrefix();"
      lineNumber: 79
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: mapping - Method: getPrefix"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ansi.AnsiPropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "C"
            suggestedContent: !<regular>
              value: "C"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "encode"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.ansi.AnsiPropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            suggestedContent: !<regular>
              value: "C"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "encode"
          value:
            sapientType: "BASIC"
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.ansi.AnsiPropertySource"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "AB"
      suggestedContent: !<regular>
        value: "AB"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid12"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      suggestedContent: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "<init>_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source name must contain at least one character"
      valueType: "java.lang.String"
      uuid: "uuid11"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid14"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.Object"
      uuid: "<init>_object1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source must not be null"
      valueType: "java.lang.String"
      uuid: "uuid13"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid15"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      suggestedContent: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getProperty_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "AB"
      suggestedContent: !<regular>
        value: "AB"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "getProperty_object7"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path14"
    testPathName: "getPropertyWhenNameStartsWithPrefixAndElementIsNull"
    constructorSignature: "<init>(java.lang.String,boolean) : void"
    filledByUser: false
    modelFingerprint: "4B0A1E419F527F88DCA950C460547D51"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "24b6d97d-fe1c-3f29-be14-b4c6d577f30b"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "mapping"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "String prefix = mapping.getPrefix();"
      lineNumber: 79
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: mapping - Method: getPrefix"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path15"
    testPathName: "getPropertyWhenMAPPINGSIsNotEmptyAndNameStartsWithPrefixAndElementIsNull"
    constructorSignature: "<init>(java.lang.String,boolean) : void"
    filledByUser: false
    modelFingerprint: "DBCB0049C50E1F5E93E366215CAF4D57"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "31407354-f513-3f9a-96cb-1d2349151981"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "mapping"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "String prefix = mapping.getPrefix();"
      lineNumber: 79
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: mapping - Method: getPrefix"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path16"
    testPathName: "getPropertyWhenStringUtilsHasLengthNameAndMAPPINGSIsNotEmptyAndNameStartsWithPrefixAndElementIsNull"
    constructorSignature: "<init>(java.lang.String,boolean) : void"
    filledByUser: false
    modelFingerprint: "AF2CA5A81682C4D1CDCFC6437EA6961E"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "96fe0380-f43e-3712-9f2f-f44e747da7e7"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "mapping"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "String prefix = mapping.getPrefix();"
      lineNumber: 79
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: mapping - Method: getPrefix"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path17"
    testPathName: "getPropertyWhenStringUtilsHasLengthNameAndMAPPINGSIsNotEmptyAndNameStartsWithPrefixAndElementIsNull2"
    constructorSignature: "<init>(java.lang.String,boolean) : void"
    filledByUser: false
    modelFingerprint: "A691F22FD913CDFEA7686E3E997FC165"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "51dda9b6-9286-37bb-b7f8-21f91927e78d"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "mapping"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "String prefix = mapping.getPrefix();"
      lineNumber: 79
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: mapping - Method: getPrefix"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path18"
    testPathName: "getPropertyWhenStringUtilsHasLengthNameAndMAPPINGSIsNotEmptyAndNameStartsWithPrefixAndElementIsNull3"
    constructorSignature: "<init>(java.lang.String,boolean) : void"
    filledByUser: false
    modelFingerprint: "3394DECD73B0E72F2D3D9BB76FA6E81F"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "71d0c5d7-1ed8-3bb5-9848-2a29da5f1f53"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "mapping"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "String prefix = mapping.getPrefix();"
      lineNumber: 79
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: mapping - Method: getPrefix"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path1"
    testPathName: "getPropertyWhenThisEncode"
    constructorSignature: "<init>(java.lang.String,boolean) : void"
    filledByUser: false
    modelFingerprint: "196D1D3704E77F1A0C096CC4B9FED5EA"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "4dd830c2-4a67-3051-a2d1-8313eaad7bd6"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "mapping"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "String prefix = mapping.getPrefix();"
      lineNumber: 79
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: mapping - Method: getPrefix"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path2"
    testPathName: "getPropertyWhenThisNotEncode"
    constructorSignature: "<init>(java.lang.String,boolean) : void"
    filledByUser: false
    modelFingerprint: "5575E61939CC75D5B33A9618AE774D26"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "92F583EC52B2BB584D80B5289C891DDE"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "name"
      modelFingerprint: "9CD40B9E4F7F39D280C895863E1AC30F"
      index: 2
      ignored: false
      valueUuid: "getProperty_string1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "6BA8A35490040B37C4386C4E6C6864E2"
      index: 3
      ignored: false
      valueUuid: "uuid48"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "hasText"
        parameters:
        - name: "text"
          valueUuid: "<init>_string1"
        - name: "message"
          valueUuid: "uuid47"
        signature: "hasText(String,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "95285AAA31782B98215583C4DDD6B70B"
      index: 4
      ignored: false
      valueUuid: "uuid50"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "<init>_object1"
        - name: "message"
          valueUuid: "uuid49"
        signature: "notNull(Object,String): void"
        returnValueUuid: "<init>_void2"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "2559F103426862FEE935411CA6104C43"
      index: 5
      ignored: false
      valueUuid: "uuid51"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "getProperty_string1"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getProperty_boolean1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "4BE2DA53ED168DABFCB69CDCF28741A8"
      index: 6
      ignored: false
      valueUuid: "getProperty_ansiElement1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "2b90e31a-1c0a-3089-a020-8067f14d7f48"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "mapping"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "String prefix = mapping.getPrefix();"
      lineNumber: 79
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: mapping - Method: getPrefix"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ansi.AnsiPropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "CE"
            suggestedContent: !<regular>
              value: "CE"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "encode"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            suggestedContent: !<regular>
              value: false
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.ansi.AnsiPropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            suggestedContent: !<regular>
              value: "CE"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "encode"
          value:
            sapientType: "BASIC"
            suggestedContent: !<regular>
              value: false
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.ansi.AnsiPropertySource"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "BA"
      suggestedContent: !<regular>
        value: "BA"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid48"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "CE"
      suggestedContent: !<regular>
        value: "CE"
      valueType: "java.lang.String"
      uuid: "<init>_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source name must contain at least one character"
      valueType: "java.lang.String"
      uuid: "uuid47"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid50"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.Object"
      uuid: "<init>_object1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source must not be null"
      valueType: "java.lang.String"
      uuid: "uuid49"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid51"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      suggestedContent: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getProperty_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "BA"
      suggestedContent: !<regular>
        value: "BA"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ansi.AnsiElement"
      uuid: "getProperty_ansiElement1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "getPropertyWhenElementIsNullAndThisEncode"
    constructorSignature: "<init>(java.lang.String,boolean) : void"
    filledByUser: false
    modelFingerprint: "AA42C1E072576742166245758205BB2B"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "45D1D7C90098571A5C3327BE9273D0F0"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "name"
      modelFingerprint: "BF7126AD4B985C444C0F346185646A34"
      index: 2
      ignored: false
      valueUuid: "getProperty_string1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "CFB1D714E0438F1A4E48A4C3136075FB"
      index: 3
      ignored: false
      valueUuid: "uuid53"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "hasText"
        parameters:
        - name: "text"
          valueUuid: "<init>_string1"
        - name: "message"
          valueUuid: "uuid52"
        signature: "hasText(String,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "95285AAA31782B98215583C4DDD6B70B"
      index: 4
      ignored: false
      valueUuid: "uuid55"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "<init>_object1"
        - name: "message"
          valueUuid: "uuid54"
        signature: "notNull(Object,String): void"
        returnValueUuid: "<init>_void2"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "StringUtils"
      modelFingerprint: "52D2AB5918159DDB63FBB0500C6CF857"
      index: 5
      ignored: false
      valueUuid: "uuid56"
      methodExercised:
        target: "org.springframework.util.StringUtils"
        name: "hasLength"
        parameters:
        - name: "str"
          valueUuid: "getProperty_string1"
        signature: "hasLength(String): boolean"
        returnValueUuid: "getProperty_boolean1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "AnsiOutput"
      modelFingerprint: "F84489FDF0E3A98C88D33005D9CE5D24"
      index: 6
      ignored: false
      valueUuid: "uuid57"
      methodExercised:
        target: "org.springframework.boot.ansi.AnsiOutput"
        name: "encode"
        parameters:
        - name: "element"
          valueUuid: "getProperty_ansiElement2"
        signature: "encode(AnsiElement): String"
        returnValueUuid: "getProperty_string6"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D1F433D4EB9F8805FF391E82DAB508AB"
      index: 7
      ignored: false
      valueUuid: "getProperty_string6"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "91059a93-ccfc-390d-9dd2-1ce1edf9e371"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "mapping"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "String prefix = mapping.getPrefix();"
      lineNumber: 79
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: mapping - Method: getPrefix"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ansi.AnsiPropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "C"
            suggestedContent: !<regular>
              value: "C"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "encode"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: true
            suggestedContent: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.ansi.AnsiPropertySource"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            suggestedContent: !<regular>
              value: "C"
            valueType: "java.lang.String"
            uuid: "<init>_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "encode"
          value:
            sapientType: "BASIC"
            suggestedContent: !<regular>
              value: true
            valueType: "boolean"
            uuid: "<init>_boolean1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.ansi.AnsiPropertySource"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "DB"
      suggestedContent: !<regular>
        value: "DB"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid53"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      suggestedContent: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "<init>_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source name must contain at least one character"
      valueType: "java.lang.String"
      uuid: "uuid52"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid55"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "java.lang.Object"
        parameters: []
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.Object"
      uuid: "<init>_object1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property source must not be null"
      valueType: "java.lang.String"
      uuid: "uuid54"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "uuid56"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      suggestedContent: !<regular>
        value: true
      valueType: "boolean"
      uuid: "getProperty_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "DB"
      suggestedContent: !<regular>
        value: "DB"
      valueType: "java.lang.String"
      uuid: "getProperty_string1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ansi.AnsiOutput"
      uuid: "uuid57"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_encode1"
      valueType: "java.lang.String"
      uuid: "getProperty_string6"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ansi.AnsiElement"
      uuid: "getProperty_ansiElement2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_encode1"
      valueType: "java.lang.String"
      uuid: "getProperty_string6"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path5"
    testPathName: "getPropertyWhenNameStartsWithPrefixAndElementIsNullAndThisEncode"
    constructorSignature: "<init>(java.lang.String,boolean) : void"
    filledByUser: false
    modelFingerprint: "F95B57747037400A013F66A6D054986F"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "b943315e-c3ec-33da-91e1-99885af02dba"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "mapping"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "String prefix = mapping.getPrefix();"
      lineNumber: 79
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: mapping - Method: getPrefix"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path7"
    testPathName: "getPropertyWhenMAPPINGSIsNotEmptyAndNameStartsWithPrefixAndElementIsNullAndThisEncode"
    constructorSignature: "<init>(java.lang.String,boolean) : void"
    filledByUser: false
    modelFingerprint: "315F610AF97555072CB57ED8CAE0F3F2"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "200eb8d2-a335-3807-ab8f-666fe6a5a531"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "mapping"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "String prefix = mapping.getPrefix();"
      lineNumber: 79
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: mapping - Method: getPrefix"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path9"
    testPathName: "getPropertyWhenStringUtilsHasLengthNameAndMAPPINGSIsNotEmptyAndNameStartsWithPrefixAndElementIsNullAndThisEncode"
    constructorSignature: "<init>(java.lang.String,boolean) : void"
    filledByUser: false
    modelFingerprint: "1F0F12B71F855247373F5424019F63F6"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "c187a586-bc28-358c-8da3-1c68339d0601"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "mapping"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "String prefix = mapping.getPrefix();"
      lineNumber: 79
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: mapping - Method: getPrefix"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path11"
    testPathName: "getPropertyWhenStringUtilsHasLengthNameAndMAPPINGSIsNotEmptyAndNameStartsWithPrefixAndElementIsNullAndThisEncode2"
    constructorSignature: "<init>(java.lang.String,boolean) : void"
    filledByUser: false
    modelFingerprint: "F8807DF7E6189053A4EB31CFBE720BE3"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "e119752e-8dbf-385d-9172-707574f44330"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "mapping"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "String prefix = mapping.getPrefix();"
      lineNumber: 79
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: mapping - Method: getPrefix"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path4"
    testPathName: "getPropertyWhenElementIsNullAndThisNotEncode"
    constructorSignature: "<init>(java.lang.String,boolean) : void"
    filledByUser: false
    modelFingerprint: "9B72144186FC42A15BEB8988853423D9"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "fe0b3587-13e4-31b0-a0ca-b614a9efc124"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "mapping"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "String prefix = mapping.getPrefix();"
      lineNumber: 79
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: mapping - Method: getPrefix"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path6"
    testPathName: "getPropertyWhenNameStartsWithPrefixAndElementIsNullAndThisNotEncode"
    constructorSignature: "<init>(java.lang.String,boolean) : void"
    filledByUser: false
    modelFingerprint: "674AA7EE014ABAD0E14FBE188D17BB18"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "9e1dcb57-7229-333e-b477-f362670e2ea0"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "mapping"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "String prefix = mapping.getPrefix();"
      lineNumber: 79
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: mapping - Method: getPrefix"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path8"
    testPathName: "getPropertyWhenMAPPINGSIsNotEmptyAndNameStartsWithPrefixAndElementIsNullAndThisNotEncode"
    constructorSignature: "<init>(java.lang.String,boolean) : void"
    filledByUser: false
    modelFingerprint: "D4ABFF5289724EDF988F160B8385C977"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "293ff01c-a372-3c6c-9974-81df7cdc0358"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "mapping"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "String prefix = mapping.getPrefix();"
      lineNumber: 79
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: mapping - Method: getPrefix"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path10"
    testPathName: "getPropertyWhenStringUtilsHasLengthNameAndMAPPINGSIsNotEmptyAndNameStartsWithPrefixAndElementIsNullAndThisNotEncode"
    constructorSignature: "<init>(java.lang.String,boolean) : void"
    filledByUser: false
    modelFingerprint: "94579B5FE139C16A9261B5999246D1D5"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "4faacfa1-8ebe-30d8-b369-9581255356f7"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "mapping"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "String prefix = mapping.getPrefix();"
      lineNumber: 79
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: mapping - Method: getPrefix"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path12"
    testPathName: "getPropertyWhenStringUtilsHasLengthNameAndMAPPINGSIsNotEmptyAndNameStartsWithPrefixAndElementIsNullAndThisNotEncode2"
    constructorSignature: "<init>(java.lang.String,boolean) : void"
    filledByUser: false
    modelFingerprint: "FF16035F7AC7DA4C8C053A5B5CD34F6F"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "349dbf60-4fc2-3b76-8236-67da603f61c7"
    deleted: true
    disabled: false
    ignoredBySystem: true
    variablesCouldNotBeIsolated: "mapping"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "String prefix = mapping.getPrefix();"
      lineNumber: 79
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: mapping - Method: getPrefix"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
