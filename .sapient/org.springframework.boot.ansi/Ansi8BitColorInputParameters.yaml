---
modelFingerprint: "931FE33817A4FC1814BD1484BFCB33BF"
targetClass:
  fullClassName: "org.springframework.boot.ansi.Ansi8BitColor"
methods:
- method:
    name: "equals"
    sourceCodeSignature: "boolean equals(Object obj)"
    returnType: "boolean"
    parameters:
    - name: "obj"
      type: "java.lang.Object"
    instructionFingerprint: "24F5B329E7AD86C13C490D1BB9A8ADFF"
  paths:
  - pathId: "path1"
    testPathName: "equalsWhenThisEqualsObj"
    constructorSignature: "foreground(int) : org.springframework.boot.ansi.Ansi8BitColor"
    modelFingerprint: "0AA156C2D76EE1DFE3FDB98B8665B7AC"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 50
      expression: "this == obj"
      range: "(50,7)-(50,17)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "equalsWhenGetClassNotEqualsObjGetClass"
    constructorSignature: "foreground(int) : org.springframework.boot.ansi.Ansi8BitColor"
    modelFingerprint: "D755C23CD801B23EAABEDE21F97D81AD"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 50
      expression: "this == obj"
      range: "(50,7)-(50,17)"
      evaluatedAs: false
    - lineNumber: 53
      expression: "obj == null"
      range: "(53,7)-(53,17)"
      evaluatedAs: false
    - lineNumber: 53
      expression: "getClass() != obj.getClass()"
      range: "(53,22)-(53,49)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "equalsWhenThisPrefixNotEqualsOtherPrefix"
    constructorSignature: "foreground(int) : org.springframework.boot.ansi.Ansi8BitColor"
    modelFingerprint: "D9E429ABC9FEB9F28DA4FC04DA445142"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 50
      expression: "this == obj"
      range: "(50,7)-(50,17)"
      evaluatedAs: false
    - lineNumber: 53
      expression: "obj == null"
      range: "(53,7)-(53,17)"
      evaluatedAs: false
    - lineNumber: 53
      expression: "getClass() != obj.getClass()"
      range: "(53,22)-(53,49)"
      evaluatedAs: false
    - lineNumber: 57
      expression: "this.prefix.equals(other.prefix)"
      range: "(57,10)-(57,41)"
      evaluatedAs: false
- method:
    name: "toString"
    sourceCodeSignature: "String toString()"
    returnType: "java.lang.String"
    instructionFingerprint: "E409AE30D257A28633A341E9785CC022"
  paths:
  - pathId: "path1"
    testPathName: "toStringTest"
    constructorSignature: "foreground(int) : org.springframework.boot.ansi.Ansi8BitColor"
    modelFingerprint: "341EA7D33049DE5140E8BA4D6EFE8F0E"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "B0DDA5071A184BB81252A92A84DA7482"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "A64CD57D05B9C6036C7F35BF319D9E02"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid7,message:uniqueUuid8):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7F9BD5E78F3C8D36F53E40B399CD8868"
      valueUuid: "string2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.ansi.Ansi8BitColor"
        method: "foreground"
        methodParameters:
        - name: "code"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 2
            valueType: "int"
            uuid: "code"
      valueType: "org.springframework.boot.ansi.Ansi8BitColor"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Code must be between 0 and 255"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "38;5;2"
      valueType: "java.lang.String"
      uuid: "string2"
- method:
    name: "foreground"
    sourceCodeSignature: "Ansi8BitColor foreground(int code)"
    returnType: "org.springframework.boot.ansi.Ansi8BitColor"
    parameters:
    - name: "code"
      type: "int"
    instructionFingerprint: "45795CF3A0879617EF75FAC4B030F78D"
  paths:
  - pathId: "path1"
    testPathName: "foregroundWhenDefaultBranch"
    modelFingerprint: "0AC8ED26633999AE782DF23929ED188C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "code"
      modelFingerprint: "C2809718DCF9E9F26DCEC012BCF77AB6"
      valueUuid: "code"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "A64CD57D05B9C6036C7F35BF319D9E02"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid9,message:uniqueUuid10):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "72ACD83A8395C2BB1E507F9081F8F3EC"
      valueUuid: "ansi8BitColor"
    disabled: false
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "code"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Code must be between 0 and 255"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ansi.Ansi8BitColor"
        parameters:
        - name: "prefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "38;5;"
            valueType: "java.lang.String"
            uuid: "uniqueUuid11"
            fixed: true
        - name: "code"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "code"
      valueType: "org.springframework.boot.ansi.Ansi8BitColor"
      uuid: "ansi8BitColor"
      fixed: true
    branches:
    - lineNumber: 43
      expression: "branch expression (line 43)"
      range: "(43,1)-(43,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
  - pathId: "path2"
    testPathName: "foregroundWhenDefaultBranch2"
    modelFingerprint: "2317FDC6D6F37BC352435EFB862FB6DE"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "code"
      modelFingerprint: "F4EEF813855429322E8E04FE3039F162"
      valueUuid: "code"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "DBE88D7740FFE2BEC7A565B85303433F"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid12,message:uniqueUuid13):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "1FB166866FA54FE6B754186B1CE5E9AE"
      valueUuid: "ansi8BitColor"
    disabled: false
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: 256
      valueType: "int"
      uuid: "code"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid12"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Code must be between 0 and 255"
      valueType: "java.lang.String"
      uuid: "uniqueUuid13"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ansi.Ansi8BitColor"
        parameters:
        - name: "prefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "38;5;"
            valueType: "java.lang.String"
            uuid: "uniqueUuid14"
            fixed: true
        - name: "code"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 256
            valueType: "int"
            uuid: "code"
      valueType: "org.springframework.boot.ansi.Ansi8BitColor"
      uuid: "ansi8BitColor"
      fixed: true
    branches:
    - lineNumber: 43
      expression: "branch expression (line 43)"
      range: "(43,1)-(43,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
- method:
    name: "background"
    sourceCodeSignature: "Ansi8BitColor background(int code)"
    returnType: "org.springframework.boot.ansi.Ansi8BitColor"
    parameters:
    - name: "code"
      type: "int"
    instructionFingerprint: "21A19B2CC2229520010DC06D1027CD4E"
  paths:
  - pathId: "path1"
    testPathName: "backgroundWhenDefaultBranch"
    modelFingerprint: "3831F8DAB5DA76D0295A00F01E45EBCC"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "code"
      modelFingerprint: "C2809718DCF9E9F26DCEC012BCF77AB6"
      valueUuid: "code"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "A64CD57D05B9C6036C7F35BF319D9E02"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid15,message:uniqueUuid16):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "44D884F828AFD78BFAB6C4A9C752793F"
      valueUuid: "ansi8BitColor"
    disabled: false
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "code"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid15"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Code must be between 0 and 255"
      valueType: "java.lang.String"
      uuid: "uniqueUuid16"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ansi.Ansi8BitColor"
        parameters:
        - name: "prefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "48;5;"
            valueType: "java.lang.String"
            uuid: "uniqueUuid17"
            fixed: true
        - name: "code"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "code"
      valueType: "org.springframework.boot.ansi.Ansi8BitColor"
      uuid: "ansi8BitColor"
      fixed: true
    branches:
    - lineNumber: 43
      expression: "branch expression (line 43)"
      range: "(43,1)-(43,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
  - pathId: "path2"
    testPathName: "backgroundWhenDefaultBranch2"
    modelFingerprint: "6D6B1B0A6F6F16F950324D49ABE3C54C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "code"
      modelFingerprint: "F4EEF813855429322E8E04FE3039F162"
      valueUuid: "code"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "DBE88D7740FFE2BEC7A565B85303433F"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid18,message:uniqueUuid19):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C1E00ADB837002930464ADEA554E7113"
      valueUuid: "ansi8BitColor"
    disabled: false
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: 256
      valueType: "int"
      uuid: "code"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid18"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "Code must be between 0 and 255"
      valueType: "java.lang.String"
      uuid: "uniqueUuid19"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.ansi.Ansi8BitColor"
        parameters:
        - name: "prefix"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "48;5;"
            valueType: "java.lang.String"
            uuid: "uniqueUuid20"
            fixed: true
        - name: "code"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 256
            valueType: "int"
            uuid: "code"
      valueType: "org.springframework.boot.ansi.Ansi8BitColor"
      uuid: "ansi8BitColor"
      fixed: true
    branches:
    - lineNumber: 43
      expression: "branch expression (line 43)"
      range: "(43,1)-(43,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
