---
modelFingerprint: "E0B936FF2F3110C815F3AF88B0612B64"
targetClass:
  fullClassName: "org.springframework.boot.web.context.WebServerPortFileWriter"
methods:
- method:
    name: "onApplicationEvent"
    sourceCodeSignature: "void onApplicationEvent(WebServerInitializedEvent event)"
    returnType: "void"
    parameters:
    - name: "event"
      type: "org.springframework.boot.web.context.WebServerInitializedEvent"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "9ECF762CFACBF9F87102FF62EF15ED92"
  paths:
  - pathId: "path1"
    testPathName: "onApplicationEventWhenParentIsNotNull"
    constructorSignature: "<init>(java.io.File) : void"
    modelFingerprint: "500B61C60C15457C99E87C41879190CD"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "12BDAFC405A6E9492E5642332E0F41E4"
      valueUuid: "target"
    - type: "INPUT"
      name: "event"
      modelFingerprint: "DBE276975429758C808C2C597F9C4E06"
      valueUuid: "event"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A721CBBC55B5E240365659C79CA82EE5"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:file,message:uniqueUuid1):void"
        staticAccess: true
    - type: "STATIC"
      name: "SystemProperties.class"
      modelFingerprint: "FED5E12BF97EF9C3C0969CDAE1903808"
      valueUuid: "SystemProperties.class"
      methodExercised:
        expression: "get(properties:stringArray):string"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "event"
      modelFingerprint: "597DA555F03605B94E9895B006B9C904"
      valueUuid: "event"
      methodExercised:
        expression: "getApplicationContext():webServerApplicationContext"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "511F04899AD224797AC7826AE5F1B125"
      methodExercised:
        expression: "getPortFile(applicationContext:webServerApplicationContext):file3"
    - type: "LOCAL_VARIABLE"
      name: "event"
      modelFingerprint: "CEC4B9692D383BDEDED11B7ACA90C121"
      valueUuid: "event"
      methodExercised:
        expression: "getWebServer():webServer"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A1703748CCB1AE60F1BA8BFDA45590D0"
      valueUuid: "webServer"
      methodExercised:
        expression: "getPort():int1"
    - type: "STATIC"
      name: "FileCopyUtils.class"
      modelFingerprint: "F55EE535522066923D031E0AF8868F0B"
      valueUuid: "FileCopyUtils.class"
      methodExercised:
        expression: "copy(in:byteArray,out:file3):void2"
        throwsExceptions:
        - "java.io.IOException"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.getParentFile() : java.io.File"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.context.WebServerPortFileWriter"
        parameters:
        - name: "file"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "file-pathname"
            valueType: "java.io.File"
            uuid: "file"
      valueType: "org.springframework.boot.web.context.WebServerPortFileWriter"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.context.WebServerInitializedEvent"
      uuid: "event"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "BASIC"
      content: !<regular>
        value: "File must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.system.SystemProperties"
      uuid: "SystemProperties.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_get1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "PORTFILE"
            valueType: "java.lang.String"
            uuid: "uniqueUuid2"
            fixed: true
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "portfile"
            valueType: "java.lang.String"
            uuid: "uniqueUuid3"
            fixed: true
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.context.WebServerInitializedEvent"
      uuid: "event"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.context.WebServerApplicationContext"
      uuid: "webServerApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file3-pathname"
      valueType: "java.io.File"
      uuid: "file3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.context.WebServerApplicationContext"
      uuid: "webServerApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.context.WebServerInitializedEvent"
      uuid: "event"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.WebServer"
      uuid: "webServer"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.WebServer"
      uuid: "webServer"
    - sapientType: "BASIC"
      content: !<regular>
        value: 2
      valueType: "int"
      uuid: "int1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.FileCopyUtils"
      uuid: "FileCopyUtils.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 50
            valueType: "byte"
            uuid: "byteArray-item0"
      valueType: "byte[]"
      uuid: "byteArray"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file3-pathname"
      valueType: "java.io.File"
      uuid: "file3"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 144
      expression: "parent != null"
      range: "(144,7)-(144,20)"
      evaluatedAs: true
      internalMethodName: "createParentDirectory"
  - pathId: "path2"
    testPathName: "onApplicationEventWhenCaughtException"
    constructorSignature: "<init>(java.io.File) : void"
    modelFingerprint: "DE3883A2FA3D1701169A106756388010"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "12BDAFC405A6E9492E5642332E0F41E4"
      valueUuid: "target"
    - type: "INPUT"
      name: "event"
      modelFingerprint: "DBE276975429758C808C2C597F9C4E06"
      valueUuid: "event"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A721CBBC55B5E240365659C79CA82EE5"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:file,message:uniqueUuid4):void"
        staticAccess: true
    - type: "STATIC"
      name: "SystemProperties.class"
      modelFingerprint: "FED5E12BF97EF9C3C0969CDAE1903808"
      valueUuid: "SystemProperties.class"
      methodExercised:
        expression: "get(properties:stringArray):string"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "event"
      modelFingerprint: "597DA555F03605B94E9895B006B9C904"
      valueUuid: "event"
      methodExercised:
        expression: "getApplicationContext():webServerApplicationContext"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "511F04899AD224797AC7826AE5F1B125"
      methodExercised:
        expression: "getPortFile(applicationContext:webServerApplicationContext):file3"
    - type: "LOCAL_VARIABLE"
      name: "event"
      modelFingerprint: "CEC4B9692D383BDEDED11B7ACA90C121"
      valueUuid: "event"
      methodExercised:
        expression: "getWebServer():webServer"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A1703748CCB1AE60F1BA8BFDA45590D0"
      valueUuid: "webServer"
      methodExercised:
        expression: "getPort():int1"
    - type: "STATIC"
      name: "FileCopyUtils.class"
      modelFingerprint: "F55EE535522066923D031E0AF8868F0B"
      valueUuid: "FileCopyUtils.class"
      methodExercised:
        expression: "copy(in:byteArray,out:file3):void2"
        throwsExceptions:
        - "java.io.IOException"
        staticAccess: true
    - type: "STATIC"
      name: "LogMessage.class"
      modelFingerprint: "2A26660DCE51A47E8FB40243DCC57617"
      valueUuid: "LogMessage.class"
      methodExercised:
        expression: "format(format:uniqueUuid7,arg1:file2):logMessage"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.getParentFile() : java.io.File"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.context.WebServerPortFileWriter"
        parameters:
        - name: "file"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "file-pathname"
            valueType: "java.io.File"
            uuid: "file"
      valueType: "org.springframework.boot.web.context.WebServerPortFileWriter"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.context.WebServerInitializedEvent"
      uuid: "event"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "BASIC"
      content: !<regular>
        value: "File must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.system.SystemProperties"
      uuid: "SystemProperties.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_get1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "PORTFILE"
            valueType: "java.lang.String"
            uuid: "uniqueUuid5"
            fixed: true
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "portfile"
            valueType: "java.lang.String"
            uuid: "uniqueUuid6"
            fixed: true
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.context.WebServerInitializedEvent"
      uuid: "event"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.context.WebServerApplicationContext"
      uuid: "webServerApplicationContext"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file3-pathname"
      valueType: "java.io.File"
      uuid: "file3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.context.WebServerApplicationContext"
      uuid: "webServerApplicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.context.WebServerInitializedEvent"
      uuid: "event"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.WebServer"
      uuid: "webServer"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.server.WebServer"
      uuid: "webServer"
    - sapientType: "BASIC"
      content: !<regular>
        value: 2
      valueType: "int"
      uuid: "int1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.FileCopyUtils"
      uuid: "FileCopyUtils.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: 50
            valueType: "byte"
            uuid: "byteArray-item0"
      valueType: "byte[]"
      uuid: "byteArray"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file3-pathname"
      valueType: "java.io.File"
      uuid: "file3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.log.LogMessage"
      uuid: "LogMessage.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.log.LogMessage"
      uuid: "logMessage"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Cannot create port file %s"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.io.File"
      uuid: "file2"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 144
      expression: "parent != null"
      range: "(144,7)-(144,20)"
      evaluatedAs: true
      internalMethodName: "createParentDirectory"
    - lineNumber: 94
      expression: "catch-exception (Exception)"
      range: "(94,3)-(94,21)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
- method:
    name: "getPortFile"
    sourceCodeSignature: "File getPortFile(ApplicationContext applicationContext)"
    returnType: "java.io.File"
    parameters:
    - name: "applicationContext"
      type: "org.springframework.context.ApplicationContext"
    instructionFingerprint: "B86C93AFA36E78EF22DBEDE3A928801E"
  paths:
  - pathId: "path7"
    testPathName: "getPortFileWhenApplicationContextNotInstanceOfWebServerApplicationContextAndStringUtilsNotHasLengthNamespace"
    constructorSignature: "<init>(java.io.File) : void"
    modelFingerprint: "4A78FBB9C4E54E7384E255CE93A901D5"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "12BDAFC405A6E9492E5642332E0F41E4"
      valueUuid: "target"
    - type: "INPUT"
      name: "applicationContext"
      modelFingerprint: "E138912CC50600D576F7DC9B4181FE20"
      valueUuid: "applicationContext"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A721CBBC55B5E240365659C79CA82EE5"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:file,message:uniqueUuid8):void"
        staticAccess: true
    - type: "STATIC"
      name: "SystemProperties.class"
      modelFingerprint: "FED5E12BF97EF9C3C0969CDAE1903808"
      valueUuid: "SystemProperties.class"
      methodExercised:
        expression: "get(properties:stringArray):string"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "FE85E8B5B59B45D0FFC77BF9613638CD"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasLength(str:string2):boolean2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B4A22E2C260E42146E8A785F16123150"
      valueUuid: "file2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.context.WebServerPortFileWriter"
        parameters:
        - name: "file"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "file-pathname"
            valueType: "java.io.File"
            uuid: "file"
      valueType: "org.springframework.boot.web.context.WebServerPortFileWriter"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "BASIC"
      content: !<regular>
        value: "File must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.system.SystemProperties"
      uuid: "SystemProperties.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_get1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "PORTFILE"
            valueType: "java.lang.String"
            uuid: "uniqueUuid9"
            fixed: true
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "portfile"
            valueType: "java.lang.String"
            uuid: "uniqueUuid10"
            fixed: true
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "string2"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_get1"
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.io.File"
      uuid: "file2"
      fixed: true
    branches:
    - lineNumber: 127
      expression: "applicationContext instanceof WebServerApplicationContext webServerApplicationContext"
      range: "(127,7)-(127,91)"
      evaluatedAs: false
      internalMethodName: "getServerNamespace"
    - lineNumber: 108
      expression: "!StringUtils.hasLength(namespace)"
      range: "(108,7)-(108,39)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getPortFileWhenStringUtilsHasLengthExtension"
    constructorSignature: "<init>(java.io.File) : void"
    modelFingerprint: "F767573FE81B638A652B82062856F8E1"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "12BDAFC405A6E9492E5642332E0F41E4"
      valueUuid: "target"
    - type: "INPUT"
      name: "applicationContext"
      modelFingerprint: "7C6FC114849141172DF9294F9CF71FBA"
      valueUuid: "applicationContext"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A721CBBC55B5E240365659C79CA82EE5"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:file,message:uniqueUuid11):void"
        staticAccess: true
    - type: "STATIC"
      name: "SystemProperties.class"
      modelFingerprint: "FED5E12BF97EF9C3C0969CDAE1903808"
      valueUuid: "SystemProperties.class"
      methodExercised:
        expression: "get(properties:stringArray):string"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "webServerApplicationContext"
      modelFingerprint: "84454BC20AA8D4B7BCD54AFAC085CA01"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getServerNamespace():string2"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "7D3C6260718FE67E066C612175EB9EFF"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:string2):boolean2"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "712CEDAF881CC242CE176E56D3314CA2"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "getFilenameExtension(path:string4):string5"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "7D3C6260718FE67E066C612175EB9EFF"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:string5):boolean5"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "DB45BF50E9A4ED9B6A8FB1924FC80AE1"
      valueUuid: "file4"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "String name = this.file.getName();"
      lineNumber: 111
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: file - Method: getName"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.context.WebServerPortFileWriter"
        parameters:
        - name: "file"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "file-pathname"
            valueType: "java.io.File"
            uuid: "file"
      valueType: "org.springframework.boot.web.context.WebServerPortFileWriter"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.context.WebServerApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "BASIC"
      content: !<regular>
        value: "File must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.system.SystemProperties"
      uuid: "SystemProperties.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_get1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "PORTFILE"
            valueType: "java.lang.String"
            uuid: "uniqueUuid12"
            fixed: true
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "portfile"
            valueType: "java.lang.String"
            uuid: "uniqueUuid13"
            fixed: true
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.context.WebServerApplicationContext"
      uuid: "applicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getServerNamespace1"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getServerNamespace1"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getFilenameExtension1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "path1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getFilenameExtension1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "parent"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "file3-pathname"
            valueType: "java.io.File"
            uuid: "file3"
        - name: "child"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "child1"
            valueType: "java.lang.String"
            uuid: "string9"
      valueType: "java.io.File"
      uuid: "file4"
      fixed: true
    branches:
    - lineNumber: 127
      expression: "applicationContext instanceof WebServerApplicationContext webServerApplicationContext"
      range: "(127,7)-(127,91)"
      evaluatedAs: true
      internalMethodName: "getServerNamespace"
    - lineNumber: 108
      expression: "!StringUtils.hasLength(namespace)"
      range: "(108,7)-(108,39)"
      evaluatedAs: false
    - lineNumber: 134
      expression: "i < name.length()"
      range: "(134,19)-(134,35)"
      evaluatedAs: true
      internalMethodName: "isUpperCase"
    - lineNumber: 135
      expression: "Character.isLetter(name.charAt(i))"
      range: "(135,8)-(135,41)"
      evaluatedAs: true
      internalMethodName: "isUpperCase"
    - lineNumber: 135
      expression: "!Character.isUpperCase(name.charAt(i))"
      range: "(135,46)-(135,83)"
      evaluatedAs: true
      internalMethodName: "isUpperCase"
    - lineNumber: 114
      expression: "isUpperCase(name)"
      range: "(114,7)-(114,23)"
      evaluatedAs: false
    - lineNumber: 120
      expression: "StringUtils.hasLength(extension)"
      range: "(120,7)-(120,38)"
      evaluatedAs: true
  - pathId: "path4"
    testPathName: "getPortFileWhenCharacterIsUpperCaseNameCharAtIAndIsUpperCaseNameAndStringUtilsNotHasLengthExtension"
    constructorSignature: "<init>(java.io.File) : void"
    modelFingerprint: "B079D21E0687D50F9D263989871D144F"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "12BDAFC405A6E9492E5642332E0F41E4"
      valueUuid: "target"
    - type: "INPUT"
      name: "applicationContext"
      modelFingerprint: "7C6FC114849141172DF9294F9CF71FBA"
      valueUuid: "applicationContext"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A721CBBC55B5E240365659C79CA82EE5"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:file,message:uniqueUuid14):void"
        staticAccess: true
    - type: "STATIC"
      name: "SystemProperties.class"
      modelFingerprint: "FED5E12BF97EF9C3C0969CDAE1903808"
      valueUuid: "SystemProperties.class"
      methodExercised:
        expression: "get(properties:stringArray):string"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "webServerApplicationContext"
      modelFingerprint: "43ACC75620F3DA53946AAB34EB1478CF"
      valueUuid: "applicationContext"
      methodExercised:
        expression: "getServerNamespace():string2"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "0B8874D97A3E709039C90A94FC118E22"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasLength(str:string2):boolean2"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "877352EC5ED7CB421D465A6523E63053"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "getFilenameExtension(path:string4):string5"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "D246E7716687CDA656330B7EF1470B21"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasLength(str:string5):boolean5"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "1A95A98C60FCD8CA130C5AD8706E1E59"
      valueUuid: "file4"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "String name = this.file.getName();"
      lineNumber: 111
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: file - Method: getName"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.web.context.WebServerPortFileWriter"
        parameters:
        - name: "file"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "file-pathname"
            valueType: "java.io.File"
            uuid: "file"
      valueType: "org.springframework.boot.web.context.WebServerPortFileWriter"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.context.WebServerApplicationContext"
      uuid: "applicationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "file-pathname"
      valueType: "java.io.File"
      uuid: "file"
    - sapientType: "BASIC"
      content: !<regular>
        value: "File must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid14"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.system.SystemProperties"
      uuid: "SystemProperties.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_get1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "PORTFILE"
            valueType: "java.lang.String"
            uuid: "uniqueUuid15"
            fixed: true
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "portfile"
            valueType: "java.lang.String"
            uuid: "uniqueUuid16"
            fixed: true
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.web.context.WebServerApplicationContext"
      uuid: "applicationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: "CH"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "CH"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "EG"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean5"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "parent"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.File"
              parameters:
              - name: "pathname"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "pathname1"
                  valueType: "java.lang.String"
                  uuid: "file3-pathname"
            valueType: "java.io.File"
            uuid: "file3"
        - name: "child"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A-CH"
            valueType: "java.lang.String"
            uuid: "string8"
      valueType: "java.io.File"
      uuid: "file4"
      fixed: true
    branches:
    - lineNumber: 127
      expression: "applicationContext instanceof WebServerApplicationContext webServerApplicationContext"
      range: "(127,7)-(127,91)"
      evaluatedAs: true
      internalMethodName: "getServerNamespace"
    - lineNumber: 108
      expression: "!StringUtils.hasLength(namespace)"
      range: "(108,7)-(108,39)"
      evaluatedAs: false
    - lineNumber: 134
      expression: "i < name.length()"
      range: "(134,19)-(134,35)"
      evaluatedAs: true
      internalMethodName: "isUpperCase"
    - lineNumber: 135
      expression: "Character.isLetter(name.charAt(i))"
      range: "(135,8)-(135,41)"
      evaluatedAs: true
      internalMethodName: "isUpperCase"
    - lineNumber: 135
      expression: "!Character.isUpperCase(name.charAt(i))"
      range: "(135,46)-(135,83)"
      evaluatedAs: false
      internalMethodName: "isUpperCase"
    - lineNumber: 114
      expression: "isUpperCase(name)"
      range: "(114,7)-(114,23)"
      evaluatedAs: true
    - lineNumber: 120
      expression: "StringUtils.hasLength(extension)"
      range: "(120,7)-(120,38)"
      evaluatedAs: false
