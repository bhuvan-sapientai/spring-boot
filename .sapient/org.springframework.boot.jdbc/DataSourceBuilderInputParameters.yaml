---
modelFingerprint: "2BFDC5413615A508BD86EB59C139A18D"
methods:
- method:
    name: "create"
    signature: "create() : org.springframework.boot.jdbc.DataSourceBuilder<?>"
    instructionFingerprint: "9D3D45834246339711A17C07FEDFEB66"
  paths:
  - pathId: "path1"
    testPathName: "createTest"
    filledByUser: false
    modelFingerprint: "1403CA7A8749D4A2F543621F5F39409F"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "STATIC"
      name: "DataSourceBuilder"
      modelFingerprint: "8A2427BA776D025E768C849D12BB6A99"
      index: 1
      ignored: false
      valueUuid: "uuid2"
      methodExercised:
        target: "org.springframework.boot.jdbc.DataSourceBuilder"
        name: "create"
        parameters:
        - name: "classLoader"
          valueUuid: "uuid1"
        signature: "create(ClassLoader): DataSourceBuilder"
        returnValueUuid: "create_dataSourceBuilder1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F1AD1C37907DA2A4F8EFDAABA432B71F"
      index: 2
      ignored: false
      valueUuid: "create_dataSourceBuilder1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "2284fc3d-473b-3992-886d-8fe431bd702d"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.jdbc.DataSourceBuilder"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.jdbc.DataSourceBuilder"
      uuid: "create_dataSourceBuilder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.ClassLoader"
      uuid: "uuid1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.jdbc.DataSourceBuilder"
      uuid: "create_dataSourceBuilder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "create"
    signature: "create(java.lang.ClassLoader) : org.springframework.boot.jdbc.DataSourceBuilder<?>"
    instructionFingerprint: "FB21B9B3291E66B49106137EDA8C2EF6"
  paths:
  - pathId: "path1"
    testPathName: "create1Test"
    filledByUser: false
    modelFingerprint: "539BC47C10DA3BE1115E5441A7DFCDB6"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "classLoader"
      modelFingerprint: "EE299BDC26205B7BAC15A9BAB1622CBF"
      index: 1
      ignored: false
      valueUuid: "create_classLoader1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5D00C99969DB3A4A2A97DDBE5E46ED9B"
      index: 2
      ignored: false
      valueUuid: "create_dataSourceBuilder1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "b0d142e8-0743-37b5-ba4a-5c4957c16e12"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      suggestedContent: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "create_classLoader1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.DataSourceBuilder"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            suggestedContent: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "create_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: true
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "org.springframework.boot.jdbc.DataSourceBuilder"
        parameters:
        - name: "classLoader"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<static_method_return>
              target: "java.lang.ClassLoader"
              method: "getPlatformClassLoader"
              methodParameters: []
            valueType: "java.lang.ClassLoader"
            uuid: "create_classLoader1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: true
        createdByTargetCode: true
      valueType: "org.springframework.boot.jdbc.DataSourceBuilder"
      uuid: "create_dataSourceBuilder1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "derivedFrom"
    signature: "derivedFrom(javax.sql.DataSource) : org.springframework.boot.jdbc.DataSourceBuilder<?>"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.sql.SQLException"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.sql.SQLException"
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.sql.SQLException"
    instructionFingerprint: "EF3FB55CCD9861F0B8E7B579A0D844A5"
  paths:
  - pathId: "path4"
    testPathName: "derivedFromWhenCaughtSQLExceptionThrowsIllegalStateException"
    filledByUser: false
    modelFingerprint: "EFAC4AC47DD26D65A02E381467DC081B"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.sql.SQLException"
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "dataSource"
      modelFingerprint: "1F1730B75DB149C7A341285FE8529BD2"
      index: 1
      ignored: false
      valueUuid: "derivedFrom_dataSource1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "dataSource"
      modelFingerprint: "421636102CD5DB8CA308BA72B311ED28"
      index: 2
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "derivedFrom_dataSource1"
      methodExercised:
        target: "dataSource"
        name: "unwrap"
        parameters:
        - name: "arg0"
          valueUuid: "uuid3"
        throwsExceptions:
        - "java.sql.SQLException"
        signature: "unwrap(Class): Object throws java.sql.SQLException"
        returnValueUuid: "derivedFrom_object1"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0A39347928E374F63BCD613FBCD3E8CD"
      index: 3
      ignored: false
      valueUuid: "derivedFrom_illegalStateException1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "43d4f836-fd88-3399-b746-18828d875e24"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: javax.sql.DataSource.unwrap(java.lang.Class<javax.sql.DataSource>)\
        \ : java.lang.Object"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.jdbc.datasource.embedded.EmbeddedDatabase"
      uuid: "derivedFrom_dataSource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.jdbc.datasource.embedded.EmbeddedDatabase"
      uuid: "derivedFrom_dataSource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "javax.sql.DataSource"
      uuid: "derivedFrom_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "javax.sql.DataSource"
      valueType: "java.lang.Class"
      genericValueType: "javax.sql.DataSource"
      uuid: "uuid3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable to unwrap embedded database"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.sql.SQLException"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.sql.SQLException"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.sql.SQLException"
            uuid: "derivedFrom_sQLException1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable to unwrap embedded database"
            valueType: "java.lang.String"
            fixed: true
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<new>
              target: "java.sql.SQLException"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.sql.SQLException"
            uuid: "derivedFrom_sQLException1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.IllegalStateException"
      uuid: "derivedFrom_illegalStateException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "derivedFromWhenDataSourceNotIsWrapperForDataSource"
    filledByUser: false
    modelFingerprint: "E15F30CEAEA1B7C59A6DA8B73C8F7D77"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "dataSource"
      modelFingerprint: "1F1730B75DB149C7A341285FE8529BD2"
      index: 1
      ignored: false
      valueUuid: "derivedFrom_dataSource1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "E17642B5B19E46B2ECAFE0794ECA5BA9"
      index: 2
      ignored: false
      valueUuid: "uuid5"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "derivedFrom_object1"
        - name: "message"
          valueUuid: "uuid4"
        signature: "notNull(DataSource,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "31C0F5CCE5A93E7EEE5D25F95D2E9CEC"
      index: 3
      ignored: false
      valueUuid: "derivedFrom_dataSourceBuilder1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "c55415b9-768f-3d10-8c8b-1a540bfb7251"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: javax.sql.DataSource.unwrap(java.lang.Class<javax.sql.DataSource>)\
        \ : java.lang.Object"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.jdbc.datasource.embedded.EmbeddedDatabase"
      uuid: "derivedFrom_dataSource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "javax.sql.DataSource"
      uuid: "derivedFrom_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "DataSource must not be null"
      valueType: "java.lang.String"
      uuid: "uuid4"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.DataSourceBuilder"
        parameters:
        - name: "deriveFrom"
          value:
            sapientType: "MOCK"
            valueType: "javax.sql.DataSource"
            uuid: "derivedFrom_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: true
        privateConstructor: true
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "org.springframework.boot.jdbc.DataSourceBuilder"
        parameters:
        - name: "deriveFrom"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "javax.sql.DataSource"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "javax.sql.DataSource"
            uuid: "derivedFrom_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: true
        privateConstructor: true
        createdByTargetCode: true
      valueType: "org.springframework.boot.jdbc.DataSourceBuilder"
      uuid: "derivedFrom_dataSourceBuilder1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "derivedFromWhenDataSourceNotInstanceOfEmbeddedDatabaseAndDataSourceNotIsWrapperForDataSource"
    filledByUser: false
    modelFingerprint: "11ACD5FE37E021FF1C171E4332268DA8"
    problemWasSolvedByProver: false
    truncated: true
    inputParameters: []
    uuid: "802495a6-c514-306b-9de1-d20538c5ed86"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: javax.sql.DataSource.isWrapperFor(java.lang.Class<javax.sql.DataSource>)\
        \ : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path1"
    testPathName: "derivedFromWhenUnwrappedEqualsDataSource"
    filledByUser: false
    modelFingerprint: "004CCC09727E8DACABB669DCD1594C51"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "dataSource"
      modelFingerprint: "1F1730B75DB149C7A341285FE8529BD2"
      index: 1
      ignored: false
      valueUuid: "derivedFrom_dataSource1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "E17642B5B19E46B2ECAFE0794ECA5BA9"
      index: 2
      ignored: false
      valueUuid: "uuid9"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "unwrap_object1"
        - name: "message"
          valueUuid: "uuid8"
        signature: "notNull(DataSource,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "31C0F5CCE5A93E7EEE5D25F95D2E9CEC"
      index: 3
      ignored: false
      valueUuid: "derivedFrom_dataSourceBuilder1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "9fab5e92-e6e0-3aae-b596-abe031f9ace9"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: javax.sql.DataSource.unwrap(java.lang.Class<javax.sql.DataSource>)\
        \ : java.lang.Object"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.jdbc.datasource.embedded.EmbeddedDatabase"
      uuid: "derivedFrom_dataSource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid9"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "javax.sql.DataSource"
      uuid: "unwrap_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "DataSource must not be null"
      valueType: "java.lang.String"
      uuid: "uuid8"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.DataSourceBuilder"
        parameters:
        - name: "deriveFrom"
          value:
            sapientType: "MOCK"
            valueType: "javax.sql.DataSource"
            uuid: "unwrap_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: true
        privateConstructor: true
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "org.springframework.boot.jdbc.DataSourceBuilder"
        parameters:
        - name: "deriveFrom"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "javax.sql.DataSource"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "javax.sql.DataSource"
            uuid: "unwrap_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: true
        privateConstructor: true
        createdByTargetCode: true
      valueType: "org.springframework.boot.jdbc.DataSourceBuilder"
      uuid: "derivedFrom_dataSourceBuilder1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path9"
    testPathName: "derivedFromWhenCaughtSQLException"
    filledByUser: false
    modelFingerprint: "50F401113238531F11593AB498A5ABB2"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 33
      id: 3
      catchExceptions:
      - "java.sql.SQLException"
    truncated: true
    inputParameters: []
    uuid: "2abab359-4ee7-3f99-a3d5-228067762be2"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: javax.sql.DataSource.isWrapperFor(java.lang.Class<javax.sql.DataSource>)\
        \ : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path7"
    testPathName: "derivedFromWhenUnwrappedEqualsDataSourceAndCaughtSQLException"
    filledByUser: false
    modelFingerprint: "BAD18985CF008C6B1EA75B23D6B6C6B1"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 33
      id: 2
      catchExceptions:
      - "java.sql.SQLException"
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "dataSource"
      modelFingerprint: "1F1730B75DB149C7A341285FE8529BD2"
      index: 1
      ignored: false
      valueUuid: "derivedFrom_dataSource1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "dataSource"
      modelFingerprint: "DFF13AEFA55A9004188FCD72F08F162E"
      index: 2
      ignored: false
      idsTryCatchBlockSurrounding:
      - 330002
      valueUuid: "unwrap_object1"
      methodExercised:
        target: "dataSource"
        name: "isWrapperFor"
        parameters:
        - name: "arg0"
          valueUuid: "uuid13"
        throwsExceptions:
        - "java.sql.SQLException"
        signature: "isWrapperFor(Class): boolean throws java.sql.SQLException"
        returnValueUuid: "unwrap_boolean1"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "dataSource"
      modelFingerprint: "0A51B2E63EEF17FB36833D9CC506C59E"
      index: 3
      ignored: false
      idsTryCatchBlockSurrounding:
      - 330002
      valueUuid: "unwrap_object1"
      methodExercised:
        target: "dataSource"
        name: "unwrap"
        parameters:
        - name: "arg0"
          valueUuid: "uuid14"
        throwsExceptions:
        - "java.sql.SQLException"
        signature: "unwrap(Class): Object throws java.sql.SQLException"
        returnValueUuid: "unwrap_object1"
        access: 1025
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "E17642B5B19E46B2ECAFE0794ECA5BA9"
      index: 4
      ignored: false
      valueUuid: "uuid16"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "unwrap_object1"
        - name: "message"
          valueUuid: "uuid15"
        signature: "notNull(DataSource,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "31C0F5CCE5A93E7EEE5D25F95D2E9CEC"
      index: 5
      ignored: false
      valueUuid: "derivedFrom_dataSourceBuilder1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "77121d83-f399-3956-916f-2a07056fafdd"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: javax.sql.DataSource.unwrap(java.lang.Class<javax.sql.DataSource>)\
        \ : java.lang.Object"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.jdbc.datasource.embedded.EmbeddedDatabase"
      uuid: "derivedFrom_dataSource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "javax.sql.DataSource"
      uuid: "unwrap_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      suggestedContent: !<regular>
        value: true
      valueType: "boolean"
      uuid: "unwrap_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "javax.sql.DataSource"
      valueType: "java.lang.Class"
      genericValueType: "javax.sql.DataSource"
      uuid: "uuid13"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "javax.sql.DataSource"
      uuid: "unwrap_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "javax.sql.DataSource"
      uuid: "unwrap_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "javax.sql.DataSource"
      valueType: "java.lang.Class"
      genericValueType: "javax.sql.DataSource"
      uuid: "uuid14"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid16"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "javax.sql.DataSource"
      uuid: "unwrap_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "DataSource must not be null"
      valueType: "java.lang.String"
      uuid: "uuid15"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.DataSourceBuilder"
        parameters:
        - name: "deriveFrom"
          value:
            sapientType: "MOCK"
            valueType: "javax.sql.DataSource"
            uuid: "unwrap_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: true
        privateConstructor: true
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "org.springframework.boot.jdbc.DataSourceBuilder"
        parameters:
        - name: "deriveFrom"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "javax.sql.DataSource"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "javax.sql.DataSource"
            uuid: "unwrap_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: true
        privateConstructor: true
        createdByTargetCode: true
      valueType: "org.springframework.boot.jdbc.DataSourceBuilder"
      uuid: "derivedFrom_dataSourceBuilder1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path8"
    testPathName: "derivedFromWhenUnwrappedNotEqualsDataSourceAndCaughtSQLException"
    filledByUser: false
    modelFingerprint: "4E2E633CBF64AF1FC5CF3CEDC88E20E1"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 33
      id: 2
      catchExceptions:
      - "java.sql.SQLException"
    truncated: true
    inputParameters: []
    uuid: "04146aa3-b714-39dd-97eb-a0575fb7e035"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: javax.sql.DataSource.unwrap(java.lang.Class<javax.sql.DataSource>)\
        \ : java.lang.Object"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path5"
    testPathName: "derivedFromWhenDataSourceIsWrapperForDataSourceAndUnwrappedEqualsDataSource"
    filledByUser: false
    modelFingerprint: "04D8E68301670C8E3204FEEDEB7E3809"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.sql.SQLException"
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "dataSource"
      modelFingerprint: "B317868670ADC181669B93DF902E34A2"
      index: 1
      ignored: false
      valueUuid: "unwrap_object1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "E17642B5B19E46B2ECAFE0794ECA5BA9"
      index: 2
      ignored: false
      valueUuid: "uuid22"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "unwrap_object1"
        - name: "message"
          valueUuid: "uuid21"
        signature: "notNull(DataSource,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "31C0F5CCE5A93E7EEE5D25F95D2E9CEC"
      index: 3
      ignored: false
      valueUuid: "derivedFrom_dataSourceBuilder1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "96559438-8315-3d6d-b72c-dc6036187933"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: javax.sql.DataSource.isWrapperFor(java.lang.Class<javax.sql.DataSource>)\
        \ : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "MOCK"
      valueType: "javax.sql.DataSource"
      uuid: "unwrap_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid22"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "javax.sql.DataSource"
      uuid: "unwrap_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "DataSource must not be null"
      valueType: "java.lang.String"
      uuid: "uuid21"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.DataSourceBuilder"
        parameters:
        - name: "deriveFrom"
          value:
            sapientType: "MOCK"
            valueType: "javax.sql.DataSource"
            uuid: "unwrap_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: true
        privateConstructor: true
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "org.springframework.boot.jdbc.DataSourceBuilder"
        parameters:
        - name: "deriveFrom"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "javax.sql.DataSource"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "javax.sql.DataSource"
            uuid: "unwrap_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: true
        privateConstructor: true
        createdByTargetCode: true
      valueType: "org.springframework.boot.jdbc.DataSourceBuilder"
      uuid: "derivedFrom_dataSourceBuilder1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path6"
    testPathName: "derivedFromWhenUnwrappedNotEqualsDataSource"
    filledByUser: false
    modelFingerprint: "3EAAF5A9FF3B674AD898EE798692CC5A"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.sql.SQLException"
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "dataSource"
      modelFingerprint: "B317868670ADC181669B93DF902E34A2"
      index: 1
      ignored: false
      valueUuid: "derivedFrom_dataSource1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "E17642B5B19E46B2ECAFE0794ECA5BA9"
      index: 2
      ignored: false
      valueUuid: "uuid24"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "unwrap_object1"
        - name: "message"
          valueUuid: "uuid23"
        signature: "notNull(DataSource,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "31C0F5CCE5A93E7EEE5D25F95D2E9CEC"
      index: 3
      ignored: false
      valueUuid: "derivedFrom_dataSourceBuilder1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "6968da25-861f-3801-a9fb-74c71fdb7da9"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: javax.sql.DataSource.isWrapperFor(java.lang.Class<javax.sql.DataSource>)\
        \ : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "MOCK"
      valueType: "javax.sql.DataSource"
      uuid: "derivedFrom_dataSource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid24"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "javax.sql.DataSource"
      uuid: "unwrap_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "DataSource must not be null"
      valueType: "java.lang.String"
      uuid: "uuid23"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.DataSourceBuilder"
        parameters:
        - name: "deriveFrom"
          value:
            sapientType: "MOCK"
            valueType: "javax.sql.DataSource"
            uuid: "unwrap_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: true
        privateConstructor: true
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "org.springframework.boot.jdbc.DataSourceBuilder"
        parameters:
        - name: "deriveFrom"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "javax.sql.DataSource"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "javax.sql.DataSource"
            uuid: "unwrap_object1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: true
        privateConstructor: true
        createdByTargetCode: true
      valueType: "org.springframework.boot.jdbc.DataSourceBuilder"
      uuid: "derivedFrom_dataSourceBuilder1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "findType"
    signature: "findType(java.lang.ClassLoader) : java.lang.Class<? extends javax.sql.DataSource>"
    instructionFingerprint: "EADF9B91A78BACAFB72FC8E29032D69B"
  paths:
  - pathId: "path1"
    testPathName: "findTypeWhenMappingsIsNotNull"
    filledByUser: false
    modelFingerprint: "C1C47DA3A798D82346BF24D8FB817BA7"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "classLoader"
      modelFingerprint: "EE299BDC26205B7BAC15A9BAB1622CBF"
      index: 1
      ignored: false
      valueUuid: "findType_classLoader1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "4A4228F32CFFF8C4F853408461E287DF"
      index: 2
      ignored: false
      valueUuid: "findType_class1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "f61e772c-1471-3447-9c48-ab49aa5967b0"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.jdbc.DataSourceBuilder$MappedDataSourceProperties.forType(java.lang.ClassLoader,null)\
        \ : org.springframework.boot.jdbc.DataSourceBuilder$MappedDataSourceProperties"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      suggestedContent: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "findType_classLoader1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "? extends javax.sql.DataSource"
      valueType: "java.lang.Class"
      genericValueType: "? extends javax.sql.DataSource"
      uuid: "findType_class1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "findTypeWhenMappingsIsNull"
    filledByUser: false
    modelFingerprint: "483E1B9990B81D933A5DE34EA06C1EA1"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "classLoader"
      modelFingerprint: "27E496872E683B3897FEB169C742F504"
      index: 1
      ignored: false
      valueUuid: "findType_classLoader1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FED9A4E08F3D428CFA7FD4F8930A3127"
      index: 2
      ignored: false
      valueUuid: "findType_class1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "93b5dce4-3dba-3930-8a22-d9bb8c1a41b4"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.jdbc.DataSourceBuilder$MappedDataSourceProperties.forType(java.lang.ClassLoader,null)\
        \ : org.springframework.boot.jdbc.DataSourceBuilder$MappedDataSourceProperties"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      suggestedContent: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "findType_classLoader1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      uuid: "findType_class1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
