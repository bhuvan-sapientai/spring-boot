---
modelFingerprint: "A60F4C3C59670A488308246500A9EE78"
targetClass:
  fullClassName: "org.springframework.boot.jdbc.HikariCheckpointRestoreLifecycle"
methods:
- method:
    name: "start"
    sourceCodeSignature: "void start()"
    returnType: "void"
    instructionFingerprint: "25EE19DC5CF7B4CDB7D8C62E8DFFDDA7"
  paths:
  - pathId: "path1"
    testPathName: "startWhenThisDataSourceIsRunning"
    constructorSignature: "<init>(javax.sql.DataSource) : void"
    modelFingerprint: "712FC767236B4E85F37903758EF4558C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6946068172F9F53FFDFC68372B1FA3CD"
      valueUuid: "target"
    - type: "STATIC"
      name: "DataSourceUnwrapper.class"
      modelFingerprint: "7552078EE48BE53CC024FEAD295882DC"
      valueUuid: "DataSourceUnwrapper.class"
      methodExercised:
        expression: "unwrap(dataSource:dataSource,unwrapInterface:uniqueUuid1,target:uniqueUuid2):object"
        staticAccess: true
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "082F0AB4A1DD73477535BBD6BA539EC6"
      valueUuid: "object"
      methodExercised:
        expression: "isRunning():boolean1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.HikariCheckpointRestoreLifecycle"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "javax.sql.DataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.HikariCheckpointRestoreLifecycle"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.jdbc.DataSourceUnwrapper"
      uuid: "DataSourceUnwrapper.class"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "javax.sql.DataSource"
      uuid: "dataSource"
    - sapientType: "CLASS"
      content: !<regular>
        value: "com.zaxxer.hikari.HikariConfigMXBean"
      valueType: "java.lang.Class"
      genericValueType: "com.zaxxer.hikari.HikariConfigMXBean"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "com.zaxxer.hikari.HikariDataSource"
      valueType: "java.lang.Class"
      genericValueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 93
      expression: "this.dataSource == null"
      range: "(93,7)-(93,29)"
      evaluatedAs: false
    - lineNumber: 93
      expression: "this.dataSource.isRunning()"
      range: "(93,34)-(93,60)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "startWhenThisDataSourceIsAllowPoolSuspension"
    constructorSignature: "<init>(javax.sql.DataSource) : void"
    modelFingerprint: "BC4245C23F19C6BAE78156B2488C0DC4"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6946068172F9F53FFDFC68372B1FA3CD"
      valueUuid: "target"
    - type: "STATIC"
      name: "DataSourceUnwrapper.class"
      modelFingerprint: "7552078EE48BE53CC024FEAD295882DC"
      valueUuid: "DataSourceUnwrapper.class"
      methodExercised:
        expression: "unwrap(dataSource:dataSource,unwrapInterface:uniqueUuid3,target:uniqueUuid4):object"
        staticAccess: true
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "9C180A0CBDE39D9D8F6BF17341E1A012"
      valueUuid: "object"
      methodExercised:
        expression: "isRunning():boolean1"
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "14EF991EB696EC9EE9A0F95430F363A3"
      valueUuid: "object"
      methodExercised:
        expression: "isClosed():boolean2"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "A598EC5D8060AEB75BD6E486084571EC"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "state(expression:uniqueUuid5,message:uniqueUuid6):void4"
        staticAccess: true
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "4727471B675E082ECA2C202A2CCF217E"
      valueUuid: "object"
      methodExercised:
        expression: "isAllowPoolSuspension():boolean3"
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "0FF48200C7D04D677F75F71F9B2A2833"
      valueUuid: "object"
      methodExercised:
        expression: "getHikariPoolMXBean():hikariPoolMXBean"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "97F17CBED60BC89B0BCA145D21352C73"
      valueUuid: "hikariPoolMXBean"
      methodExercised:
        expression: "resumePool():void6"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.HikariCheckpointRestoreLifecycle"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "javax.sql.DataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.HikariCheckpointRestoreLifecycle"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.jdbc.DataSourceUnwrapper"
      uuid: "DataSourceUnwrapper.class"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "javax.sql.DataSource"
      uuid: "dataSource"
    - sapientType: "CLASS"
      content: !<regular>
        value: "com.zaxxer.hikari.HikariConfigMXBean"
      valueType: "java.lang.Class"
      genericValueType: "com.zaxxer.hikari.HikariConfigMXBean"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "com.zaxxer.hikari.HikariDataSource"
      valueType: "java.lang.Class"
      genericValueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "DataSource has been closed and cannot be restarted"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariPoolMXBean"
      uuid: "hikariPoolMXBean"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariPoolMXBean"
      uuid: "hikariPoolMXBean"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 93
      expression: "this.dataSource == null"
      range: "(93,7)-(93,29)"
      evaluatedAs: false
    - lineNumber: 93
      expression: "this.dataSource.isRunning()"
      range: "(93,34)-(93,60)"
      evaluatedAs: false
    - lineNumber: 96
      expression: "!this.dataSource.isClosed()"
      range: "(96,16)-(96,42)"
      evaluatedAs: true
    - lineNumber: 97
      expression: "this.dataSource.isAllowPoolSuspension()"
      range: "(97,7)-(97,45)"
      evaluatedAs: true
  - pathId: "path4"
    testPathName: "startWhenThisDataSourceIsClosedAndThisDataSourceIsAllowPoolSuspension"
    constructorSignature: "<init>(javax.sql.DataSource) : void"
    modelFingerprint: "BBDD9EEB76E9EA381727B815EE539855"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6946068172F9F53FFDFC68372B1FA3CD"
      valueUuid: "target"
    - type: "STATIC"
      name: "DataSourceUnwrapper.class"
      modelFingerprint: "7552078EE48BE53CC024FEAD295882DC"
      valueUuid: "DataSourceUnwrapper.class"
      methodExercised:
        expression: "unwrap(dataSource:dataSource,unwrapInterface:uniqueUuid7,target:uniqueUuid8):object"
        staticAccess: true
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "9C180A0CBDE39D9D8F6BF17341E1A012"
      valueUuid: "object"
      methodExercised:
        expression: "isRunning():boolean1"
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "8E8A5598F2B4B32D9296DF421B7E0388"
      valueUuid: "object"
      methodExercised:
        expression: "isClosed():boolean2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "34C10D6487DAE0423D76C6799C5CDA8C"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:uniqueUuid9,message:uniqueUuid10):void4"
        staticAccess: true
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "4727471B675E082ECA2C202A2CCF217E"
      valueUuid: "object"
      methodExercised:
        expression: "isAllowPoolSuspension():boolean3"
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "0FF48200C7D04D677F75F71F9B2A2833"
      valueUuid: "object"
      methodExercised:
        expression: "getHikariPoolMXBean():hikariPoolMXBean"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "97F17CBED60BC89B0BCA145D21352C73"
      valueUuid: "hikariPoolMXBean"
      methodExercised:
        expression: "resumePool():void6"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.HikariCheckpointRestoreLifecycle"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "javax.sql.DataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.HikariCheckpointRestoreLifecycle"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.jdbc.DataSourceUnwrapper"
      uuid: "DataSourceUnwrapper.class"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "javax.sql.DataSource"
      uuid: "dataSource"
    - sapientType: "CLASS"
      content: !<regular>
        value: "com.zaxxer.hikari.HikariConfigMXBean"
      valueType: "java.lang.Class"
      genericValueType: "com.zaxxer.hikari.HikariConfigMXBean"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "com.zaxxer.hikari.HikariDataSource"
      valueType: "java.lang.Class"
      genericValueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "DataSource has been closed and cannot be restarted"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariPoolMXBean"
      uuid: "hikariPoolMXBean"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariPoolMXBean"
      uuid: "hikariPoolMXBean"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 93
      expression: "this.dataSource == null"
      range: "(93,7)-(93,29)"
      evaluatedAs: false
    - lineNumber: 93
      expression: "this.dataSource.isRunning()"
      range: "(93,34)-(93,60)"
      evaluatedAs: false
    - lineNumber: 96
      expression: "!this.dataSource.isClosed()"
      range: "(96,16)-(96,42)"
      evaluatedAs: false
    - lineNumber: 97
      expression: "this.dataSource.isAllowPoolSuspension()"
      range: "(97,7)-(97,45)"
      evaluatedAs: true
- method:
    name: "stop"
    sourceCodeSignature: "void stop()"
    returnType: "void"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.InterruptedException"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.util.concurrent.TimeoutException"
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.util.concurrent.ExecutionException"
    instructionFingerprint: "D63BD3E7ABD17C040CA1A52F81CFC0FC"
  paths:
  - pathId: "path1"
    testPathName: "stopWhenThisDataSourceNotIsRunning"
    constructorSignature: "<init>(javax.sql.DataSource) : void"
    modelFingerprint: "530B0AE5B8A635221B18890F9834BCF7"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6946068172F9F53FFDFC68372B1FA3CD"
      valueUuid: "target"
    - type: "STATIC"
      name: "DataSourceUnwrapper.class"
      modelFingerprint: "7552078EE48BE53CC024FEAD295882DC"
      valueUuid: "DataSourceUnwrapper.class"
      methodExercised:
        expression: "unwrap(dataSource:dataSource,unwrapInterface:uniqueUuid11,target:uniqueUuid12):object"
        staticAccess: true
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "9C180A0CBDE39D9D8F6BF17341E1A012"
      valueUuid: "object"
      methodExercised:
        expression: "isRunning():boolean1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.HikariCheckpointRestoreLifecycle"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "javax.sql.DataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.HikariCheckpointRestoreLifecycle"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.jdbc.DataSourceUnwrapper"
      uuid: "DataSourceUnwrapper.class"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "javax.sql.DataSource"
      uuid: "dataSource"
    - sapientType: "CLASS"
      content: !<regular>
        value: "com.zaxxer.hikari.HikariConfigMXBean"
      valueType: "java.lang.Class"
      genericValueType: "com.zaxxer.hikari.HikariConfigMXBean"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "com.zaxxer.hikari.HikariDataSource"
      valueType: "java.lang.Class"
      genericValueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "uniqueUuid12"
      fixed: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 105
      expression: "this.dataSource == null"
      range: "(105,7)-(105,29)"
      evaluatedAs: false
    - lineNumber: 105
      expression: "!this.dataSource.isRunning()"
      range: "(105,34)-(105,61)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "stopWhenDefaultBranch"
    constructorSignature: "<init>(javax.sql.DataSource) : void"
    modelFingerprint: "D4F4331A19E786C70D2A7636FC764CC1"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6946068172F9F53FFDFC68372B1FA3CD"
      valueUuid: "target"
    - type: "STATIC"
      name: "DataSourceUnwrapper.class"
      modelFingerprint: "7552078EE48BE53CC024FEAD295882DC"
      valueUuid: "DataSourceUnwrapper.class"
      methodExercised:
        expression: "unwrap(dataSource:dataSource,unwrapInterface:uniqueUuid13,target:uniqueUuid14):object"
        staticAccess: true
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "082F0AB4A1DD73477535BBD6BA539EC6"
      valueUuid: "object"
      methodExercised:
        expression: "isRunning():boolean1"
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "4727471B675E082ECA2C202A2CCF217E"
      valueUuid: "object"
      methodExercised:
        expression: "isAllowPoolSuspension():boolean2"
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "0FF48200C7D04D677F75F71F9B2A2833"
      valueUuid: "object"
      methodExercised:
        expression: "getHikariPoolMXBean():hikariPoolMXBean"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "DBAF0ABD03C8731E0A36219207694CC6"
      valueUuid: "hikariPoolMXBean"
      methodExercised:
        expression: "suspendPool():void5"
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "D090DBE1DD287635343DAB87DF70DC56"
      valueUuid: "object"
      methodExercised:
        expression: "getConnectionTimeout():long1"
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "0FF48200C7D04D677F75F71F9B2A2833"
      valueUuid: "object"
      methodExercised:
        expression: "getHikariPoolMXBean():hikariPoolMXBean2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "C8154B3A525988C61CE88733DF486440"
      valueUuid: "hikariPoolMXBean2"
      methodExercised:
        expression: "softEvictConnections():void7"
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "CCA354C8970D353C4C5BF825E79AAF0A"
      valueUuid: "object"
      methodExercised:
        expression: "getHikariPoolMXBean():hikariPoolMXBean3"
    - type: "STATIC"
      name: "ReflectionUtils.class"
      modelFingerprint: "7EB28BA5371CF8EA75EC50BD1D84E691"
      valueUuid: "ReflectionUtils.class"
      methodExercised:
        expression: "getField(field:field,target:hikariPoolMXBean3):object2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5F5D4829BF2B4015307D6DEE8FD7C22A"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object2,message:uniqueUuid17):void9"
        staticAccess: true
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "CCA354C8970D353C4C5BF825E79AAF0A"
      valueUuid: "object"
      methodExercised:
        expression: "getHikariPoolMXBean():hikariPoolMXBean4"
    - type: "STATIC"
      name: "ReflectionUtils.class"
      modelFingerprint: "7EB28BA5371CF8EA75EC50BD1D84E691"
      valueUuid: "ReflectionUtils.class"
      methodExercised:
        expression: "getField(field:field,target:hikariPoolMXBean4):object3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5F5D4829BF2B4015307D6DEE8FD7C22A"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object3,message:uniqueUuid20):void11"
        staticAccess: true
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "CCA354C8970D353C4C5BF825E79AAF0A"
      valueUuid: "object"
      methodExercised:
        expression: "getHikariPoolMXBean():hikariPoolMXBean5"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_POTENTIAL_HARM_FULL_SYSTEM_CALL"
      source: "allConnectionsClosed.get(shutdownTimeout.toMillis(), TimeUnit.MILLISECONDS);"
      lineNumber: 121
      details: "Potential harmful system call (CompletableFuture.get) detected; Learn\
        \ more: https://github.com/Sapient-AI/docs#disabled-generated-tests"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.HikariCheckpointRestoreLifecycle"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "javax.sql.DataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.HikariCheckpointRestoreLifecycle"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.jdbc.DataSourceUnwrapper"
      uuid: "DataSourceUnwrapper.class"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "javax.sql.DataSource"
      uuid: "dataSource"
    - sapientType: "CLASS"
      content: !<regular>
        value: "com.zaxxer.hikari.HikariConfigMXBean"
      valueType: "java.lang.Class"
      genericValueType: "com.zaxxer.hikari.HikariConfigMXBean"
      uuid: "uniqueUuid13"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "com.zaxxer.hikari.HikariDataSource"
      valueType: "java.lang.Class"
      genericValueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "uniqueUuid14"
      fixed: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariPoolMXBean"
      uuid: "hikariPoolMXBean"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariPoolMXBean"
      uuid: "hikariPoolMXBean"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: -1
      valueType: "long"
      uuid: "long1"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariPoolMXBean"
      uuid: "hikariPoolMXBean2"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariPoolMXBean"
      uuid: "hikariPoolMXBean2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.pool.HikariPool"
      uuid: "hikariPoolMXBean3"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.concurrent.ThreadPoolExecutor"
        parameters:
        - name: "corePoolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "object2-corePoolSize"
        - name: "maximumPoolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "object2-maximumPoolSize"
        - name: "keepAliveTime"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "object2-keepAliveTime"
        - name: "unit"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NANOSECONDS"
            valueType: "java.util.concurrent.TimeUnit"
            uuid: "object2-unit"
        - name: "workQueue"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.concurrent.BlockingQueue"
            uuid: "object2-workQueue"
      valueType: "java.util.concurrent.ThreadPoolExecutor"
      uuid: "object2"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ReflectionUtils"
        method: "findField"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "com.zaxxer.hikari.pool.HikariPool"
            valueType: "java.lang.Class"
            genericValueType: "com.zaxxer.hikari.pool.HikariPool"
            uuid: "uniqueUuid15"
            fixed: true
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "closeConnectionExecutor"
            valueType: "java.lang.String"
            uuid: "uniqueUuid16"
            fixed: true
      valueType: "java.lang.reflect.Field"
      uuid: "field"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.pool.HikariPool"
      uuid: "hikariPoolMXBean3"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void9"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.concurrent.ThreadPoolExecutor"
        parameters:
        - name: "corePoolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "object2-corePoolSize"
        - name: "maximumPoolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "object2-maximumPoolSize"
        - name: "keepAliveTime"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "object2-keepAliveTime"
        - name: "unit"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NANOSECONDS"
            valueType: "java.util.concurrent.TimeUnit"
            uuid: "object2-unit"
        - name: "workQueue"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.concurrent.BlockingQueue"
            uuid: "object2-workQueue"
      valueType: "java.util.concurrent.ThreadPoolExecutor"
      uuid: "object2"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "CloseConnectionExecutor was null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid17"
      fixed: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.pool.HikariPool"
      uuid: "hikariPoolMXBean4"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ReflectionUtils"
      uuid: "ReflectionUtils.class"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.concurrent.ThreadPoolExecutor"
        parameters:
        - name: "corePoolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "object3-corePoolSize"
        - name: "maximumPoolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "object3-maximumPoolSize"
        - name: "keepAliveTime"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "object3-keepAliveTime"
        - name: "unit"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NANOSECONDS"
            valueType: "java.util.concurrent.TimeUnit"
            uuid: "object3-unit"
        - name: "workQueue"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.concurrent.BlockingQueue"
            uuid: "object3-workQueue"
      valueType: "java.util.concurrent.ThreadPoolExecutor"
      uuid: "object3"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ReflectionUtils"
        method: "findField"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "com.zaxxer.hikari.pool.HikariPool"
            valueType: "java.lang.Class"
            genericValueType: "com.zaxxer.hikari.pool.HikariPool"
            uuid: "uniqueUuid18"
            fixed: true
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "closeConnectionExecutor"
            valueType: "java.lang.String"
            uuid: "uniqueUuid19"
            fixed: true
      valueType: "java.lang.reflect.Field"
      uuid: "field"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.pool.HikariPool"
      uuid: "hikariPoolMXBean4"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void11"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.concurrent.ThreadPoolExecutor"
        parameters:
        - name: "corePoolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "object3-corePoolSize"
        - name: "maximumPoolSize"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "int"
            uuid: "object3-maximumPoolSize"
        - name: "keepAliveTime"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: 0
            valueType: "long"
            uuid: "object3-keepAliveTime"
        - name: "unit"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "NANOSECONDS"
            valueType: "java.util.concurrent.TimeUnit"
            uuid: "object3-unit"
        - name: "workQueue"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.concurrent.BlockingQueue"
            uuid: "object3-workQueue"
      valueType: "java.util.concurrent.ThreadPoolExecutor"
      uuid: "object3"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "CloseConnectionExecutor was null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid20"
      fixed: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.pool.HikariPool"
      uuid: "hikariPoolMXBean5"
      explicitCastNeeded: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 105
      expression: "this.dataSource == null"
      range: "(105,7)-(105,29)"
      evaluatedAs: false
    - lineNumber: 105
      expression: "!this.dataSource.isRunning()"
      range: "(105,34)-(105,61)"
      evaluatedAs: false
    - lineNumber: 108
      expression: "this.dataSource.isAllowPoolSuspension()"
      range: "(108,7)-(108,45)"
      evaluatedAs: true
    - lineNumber: 137
      expression: "this.hasOpenConnections.apply((HikariPool) this.dataSource.getHikariPoolMXBean())"
      range: "(137,10)-(137,90)"
      evaluatedAs: true
      internalMethodName: "waitForConnectionsToClose"
    - lineNumber: 87
      expression: "branch expression (line 87)"
      range: "(87,1)-(87,200)"
      evaluatedAs: false
      internalMethodName: "lambda$new$0"
  - pathId: "path6"
    testPathName: "stopWhenCaughtInterruptedException"
    constructorSignature: "<init>(javax.sql.DataSource) : void"
    modelFingerprint: "9B2E37A467C2EC66616847E4D7C8E501"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6946068172F9F53FFDFC68372B1FA3CD"
      valueUuid: "target"
    - type: "STATIC"
      name: "DataSourceUnwrapper.class"
      modelFingerprint: "7552078EE48BE53CC024FEAD295882DC"
      valueUuid: "DataSourceUnwrapper.class"
      methodExercised:
        expression: "unwrap(dataSource:dataSource,unwrapInterface:uniqueUuid21,target:uniqueUuid22):object"
        staticAccess: true
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "082F0AB4A1DD73477535BBD6BA539EC6"
      valueUuid: "object"
      methodExercised:
        expression: "isRunning():boolean1"
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "4727471B675E082ECA2C202A2CCF217E"
      valueUuid: "object"
      methodExercised:
        expression: "isAllowPoolSuspension():boolean2"
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "0FF48200C7D04D677F75F71F9B2A2833"
      valueUuid: "object"
      methodExercised:
        expression: "getHikariPoolMXBean():hikariPoolMXBean"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "DBAF0ABD03C8731E0A36219207694CC6"
      valueUuid: "hikariPoolMXBean"
      methodExercised:
        expression: "suspendPool():void5"
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "9603536B3F44DB3D23CAC10091BFFB10"
      valueUuid: "object"
      methodExercised:
        expression: "getConnectionTimeout():long1"
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "0FF48200C7D04D677F75F71F9B2A2833"
      valueUuid: "object"
      methodExercised:
        expression: "getHikariPoolMXBean():hikariPoolMXBean2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "C8154B3A525988C61CE88733DF486440"
      valueUuid: "hikariPoolMXBean2"
      methodExercised:
        expression: "softEvictConnections():void7"
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "CCA354C8970D353C4C5BF825E79AAF0A"
      valueUuid: "object"
      methodExercised:
        expression: "getHikariPoolMXBean():hikariPoolMXBean3"
    - type: "LOCAL_VARIABLE"
      name: "allConnectionsClosed"
      modelFingerprint: "CE6CD00FF96E0B7E4141B44BDEC204D6"
      valueUuid: "completableFuture"
      methodExercised:
        expression: "get(timeout:long3,unit:Enum-java.util.concurrent.TimeUnit-MILLISECONDS):object2"
        throwsExceptions:
        - "java.lang.InterruptedException"
        - "java.util.concurrent.ExecutionException"
        - "java.util.concurrent.TimeoutException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_POTENTIAL_HARM_FULL_SYSTEM_CALL"
      source: "allConnectionsClosed.get(shutdownTimeout.toMillis(), TimeUnit.MILLISECONDS);"
      lineNumber: 121
      details: "Potential harmful system call (CompletableFuture.get) detected; Learn\
        \ more: https://github.com/Sapient-AI/docs#disabled-generated-tests"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.HikariCheckpointRestoreLifecycle"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "javax.sql.DataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.HikariCheckpointRestoreLifecycle"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.jdbc.DataSourceUnwrapper"
      uuid: "DataSourceUnwrapper.class"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "javax.sql.DataSource"
      uuid: "dataSource"
    - sapientType: "CLASS"
      content: !<regular>
        value: "com.zaxxer.hikari.HikariConfigMXBean"
      valueType: "java.lang.Class"
      genericValueType: "com.zaxxer.hikari.HikariConfigMXBean"
      uuid: "uniqueUuid21"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "com.zaxxer.hikari.HikariDataSource"
      valueType: "java.lang.Class"
      genericValueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "uniqueUuid22"
      fixed: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariPoolMXBean"
      uuid: "hikariPoolMXBean"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariPoolMXBean"
      uuid: "hikariPoolMXBean"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "long"
      uuid: "long1"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariPoolMXBean"
      uuid: "hikariPoolMXBean2"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariPoolMXBean"
      uuid: "hikariPoolMXBean2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.pool.HikariPool"
      uuid: "hikariPoolMXBean3"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.concurrent.CompletableFuture"
        parameters: []
      valueType: "java.util.concurrent.CompletableFuture"
      genericValueType: "java.lang.Void"
      uuid: "completableFuture"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 251
      valueType: "long"
      uuid: "long3"
    - sapientType: "ENUM"
      content: !<regular>
        value: "MILLISECONDS"
      valueType: "java.util.concurrent.TimeUnit"
      uuid: "Enum-java.util.concurrent.TimeUnit-MILLISECONDS"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 105
      expression: "this.dataSource == null"
      range: "(105,7)-(105,29)"
      evaluatedAs: false
    - lineNumber: 105
      expression: "!this.dataSource.isRunning()"
      range: "(105,34)-(105,61)"
      evaluatedAs: false
    - lineNumber: 108
      expression: "this.dataSource.isAllowPoolSuspension()"
      range: "(108,7)-(108,45)"
      evaluatedAs: true
    - lineNumber: 137
      expression: "this.hasOpenConnections.apply((HikariPool) this.dataSource.getHikariPoolMXBean())"
      range: "(137,10)-(137,90)"
      evaluatedAs: false
      internalMethodName: "waitForConnectionsToClose"
    - lineNumber: 124
      expression: "catch-exception (InterruptedException)"
      range: "(124,3)-(124,32)"
      evaluatedAs: true
      internalMethodName: "closeConnections"
    catchBlockExercised:
      idExternalInstruction: 41
      id: 1
      catchExceptions:
      - "java.lang.InterruptedException"
  - pathId: "path8"
    testPathName: "stopWhenCaughtExecutionExceptionThrowsRuntimeException"
    constructorSignature: "<init>(javax.sql.DataSource) : void"
    modelFingerprint: "757441CFC6120F5B55F64EB913F32EDA"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6946068172F9F53FFDFC68372B1FA3CD"
      valueUuid: "target"
    - type: "STATIC"
      name: "DataSourceUnwrapper.class"
      modelFingerprint: "7552078EE48BE53CC024FEAD295882DC"
      valueUuid: "DataSourceUnwrapper.class"
      methodExercised:
        expression: "unwrap(dataSource:dataSource,unwrapInterface:uniqueUuid23,target:uniqueUuid24):object"
        staticAccess: true
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "082F0AB4A1DD73477535BBD6BA539EC6"
      valueUuid: "object"
      methodExercised:
        expression: "isRunning():boolean1"
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "4727471B675E082ECA2C202A2CCF217E"
      valueUuid: "object"
      methodExercised:
        expression: "isAllowPoolSuspension():boolean2"
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "0FF48200C7D04D677F75F71F9B2A2833"
      valueUuid: "object"
      methodExercised:
        expression: "getHikariPoolMXBean():hikariPoolMXBean"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "DBAF0ABD03C8731E0A36219207694CC6"
      valueUuid: "hikariPoolMXBean"
      methodExercised:
        expression: "suspendPool():void5"
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "9603536B3F44DB3D23CAC10091BFFB10"
      valueUuid: "object"
      methodExercised:
        expression: "getConnectionTimeout():long1"
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "0FF48200C7D04D677F75F71F9B2A2833"
      valueUuid: "object"
      methodExercised:
        expression: "getHikariPoolMXBean():hikariPoolMXBean2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "C8154B3A525988C61CE88733DF486440"
      valueUuid: "hikariPoolMXBean2"
      methodExercised:
        expression: "softEvictConnections():void7"
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "CCA354C8970D353C4C5BF825E79AAF0A"
      valueUuid: "object"
      methodExercised:
        expression: "getHikariPoolMXBean():hikariPoolMXBean3"
    - type: "LOCAL_VARIABLE"
      name: "allConnectionsClosed"
      modelFingerprint: "CE6CD00FF96E0B7E4141B44BDEC204D6"
      valueUuid: "completableFuture"
      methodExercised:
        expression: "get(timeout:long3,unit:Enum-java.util.concurrent.TimeUnit-MILLISECONDS):object2"
        throwsExceptions:
        - "java.lang.InterruptedException"
        - "java.util.concurrent.ExecutionException"
        - "java.util.concurrent.TimeoutException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "83F60EC7B27E6D2B1C0AB505DF257CE7"
      valueUuid: "runtimeException"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_POTENTIAL_HARM_FULL_SYSTEM_CALL"
      source: "allConnectionsClosed.get(shutdownTimeout.toMillis(), TimeUnit.MILLISECONDS);"
      lineNumber: 121
      details: "Potential harmful system call (CompletableFuture.get) detected; Learn\
        \ more: https://github.com/Sapient-AI/docs#disabled-generated-tests"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.HikariCheckpointRestoreLifecycle"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "javax.sql.DataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.HikariCheckpointRestoreLifecycle"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.jdbc.DataSourceUnwrapper"
      uuid: "DataSourceUnwrapper.class"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "javax.sql.DataSource"
      uuid: "dataSource"
    - sapientType: "CLASS"
      content: !<regular>
        value: "com.zaxxer.hikari.HikariConfigMXBean"
      valueType: "java.lang.Class"
      genericValueType: "com.zaxxer.hikari.HikariConfigMXBean"
      uuid: "uniqueUuid23"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "com.zaxxer.hikari.HikariDataSource"
      valueType: "java.lang.Class"
      genericValueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "uniqueUuid24"
      fixed: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariPoolMXBean"
      uuid: "hikariPoolMXBean"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariPoolMXBean"
      uuid: "hikariPoolMXBean"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "long"
      uuid: "long1"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariPoolMXBean"
      uuid: "hikariPoolMXBean2"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariPoolMXBean"
      uuid: "hikariPoolMXBean2"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.pool.HikariPool"
      uuid: "hikariPoolMXBean3"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.concurrent.CompletableFuture"
        parameters: []
      valueType: "java.util.concurrent.CompletableFuture"
      genericValueType: "java.lang.Void"
      uuid: "completableFuture"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 251
      valueType: "long"
      uuid: "long3"
    - sapientType: "ENUM"
      content: !<regular>
        value: "MILLISECONDS"
      valueType: "java.util.concurrent.TimeUnit"
      uuid: "Enum-java.util.concurrent.TimeUnit-MILLISECONDS"
      fixed: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.RuntimeException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Failed to close Hikari connections"
            valueType: "java.lang.String"
            uuid: "uniqueUuid25"
            fixed: true
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.util.concurrent.ExecutionException"
              parameters:
              - name: "cause"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "java.lang.Throwable"
                    parameters: []
                  valueType: "java.lang.Throwable"
                  uuid: "executionException-cause"
            valueType: "java.util.concurrent.ExecutionException"
            uuid: "executionException"
      valueType: "java.lang.RuntimeException"
      uuid: "runtimeException"
      fixed: true
    branches:
    - lineNumber: 105
      expression: "this.dataSource == null"
      range: "(105,7)-(105,29)"
      evaluatedAs: false
    - lineNumber: 105
      expression: "!this.dataSource.isRunning()"
      range: "(105,34)-(105,61)"
      evaluatedAs: false
    - lineNumber: 108
      expression: "this.dataSource.isAllowPoolSuspension()"
      range: "(108,7)-(108,45)"
      evaluatedAs: true
    - lineNumber: 137
      expression: "this.hasOpenConnections.apply((HikariPool) this.dataSource.getHikariPoolMXBean())"
      range: "(137,10)-(137,90)"
      evaluatedAs: false
      internalMethodName: "waitForConnectionsToClose"
    - lineNumber: 131
      expression: "catch-exception (ExecutionException)"
      range: "(131,3)-(131,30)"
      evaluatedAs: true
      internalMethodName: "closeConnections"
    catchBlockExercised:
      idExternalInstruction: 41
      id: 3
      catchExceptions:
      - "java.util.concurrent.ExecutionException"
  - pathId: "path7"
    testPathName: "stopWhenCaughtTimeoutException"
    constructorSignature: "<init>(javax.sql.DataSource) : void"
    modelFingerprint: "A17142B6DD4D341A7BF6D07C60CE7F0C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6946068172F9F53FFDFC68372B1FA3CD"
      valueUuid: "target"
    - type: "STATIC"
      name: "DataSourceUnwrapper.class"
      modelFingerprint: "7552078EE48BE53CC024FEAD295882DC"
      valueUuid: "DataSourceUnwrapper.class"
      methodExercised:
        expression: "unwrap(dataSource:dataSource,unwrapInterface:uniqueUuid26,target:uniqueUuid27):object"
        staticAccess: true
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "082F0AB4A1DD73477535BBD6BA539EC6"
      valueUuid: "object"
      methodExercised:
        expression: "isRunning():boolean1"
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "CB623B9CC6BA07AB957675A55D8EED2B"
      valueUuid: "object"
      methodExercised:
        expression: "isAllowPoolSuspension():boolean2"
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "9603536B3F44DB3D23CAC10091BFFB10"
      valueUuid: "object"
      methodExercised:
        expression: "getConnectionTimeout():long1"
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "0FF48200C7D04D677F75F71F9B2A2833"
      valueUuid: "object"
      methodExercised:
        expression: "getHikariPoolMXBean():hikariPoolMXBean"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "C8154B3A525988C61CE88733DF486440"
      valueUuid: "hikariPoolMXBean"
      methodExercised:
        expression: "softEvictConnections():void5"
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "CCA354C8970D353C4C5BF825E79AAF0A"
      valueUuid: "object"
      methodExercised:
        expression: "getHikariPoolMXBean():hikariPoolMXBean2"
    - type: "LOCAL_VARIABLE"
      name: "allConnectionsClosed"
      modelFingerprint: "CE6CD00FF96E0B7E4141B44BDEC204D6"
      valueUuid: "completableFuture"
      methodExercised:
        expression: "get(timeout:long3,unit:Enum-java.util.concurrent.TimeUnit-MILLISECONDS):object2"
        throwsExceptions:
        - "java.lang.InterruptedException"
        - "java.util.concurrent.ExecutionException"
        - "java.util.concurrent.TimeoutException"
    - type: "STATIC"
      name: "LogMessage.class"
      modelFingerprint: "57061CF7D643BD479AEAE2969D4CBC35"
      valueUuid: "LogMessage.class"
      methodExercised:
        expression: "format(format:uniqueUuid28,arg1:duration):logMessage"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_POTENTIAL_HARM_FULL_SYSTEM_CALL"
      source: "allConnectionsClosed.get(shutdownTimeout.toMillis(), TimeUnit.MILLISECONDS);"
      lineNumber: 121
      details: "Potential harmful system call (CompletableFuture.get) detected; Learn\
        \ more: https://github.com/Sapient-AI/docs#disabled-generated-tests"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.HikariCheckpointRestoreLifecycle"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "javax.sql.DataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.HikariCheckpointRestoreLifecycle"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.jdbc.DataSourceUnwrapper"
      uuid: "DataSourceUnwrapper.class"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "javax.sql.DataSource"
      uuid: "dataSource"
    - sapientType: "CLASS"
      content: !<regular>
        value: "com.zaxxer.hikari.HikariConfigMXBean"
      valueType: "java.lang.Class"
      genericValueType: "com.zaxxer.hikari.HikariConfigMXBean"
      uuid: "uniqueUuid26"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "com.zaxxer.hikari.HikariDataSource"
      valueType: "java.lang.Class"
      genericValueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "uniqueUuid27"
      fixed: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: 1
      valueType: "long"
      uuid: "long1"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariPoolMXBean"
      uuid: "hikariPoolMXBean"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariPoolMXBean"
      uuid: "hikariPoolMXBean"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.pool.HikariPool"
      uuid: "hikariPoolMXBean2"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.util.concurrent.CompletableFuture"
        parameters: []
      valueType: "java.util.concurrent.CompletableFuture"
      genericValueType: "java.lang.Void"
      uuid: "completableFuture"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 251
      valueType: "long"
      uuid: "long3"
    - sapientType: "ENUM"
      content: !<regular>
        value: "MILLISECONDS"
      valueType: "java.util.concurrent.TimeUnit"
      uuid: "Enum-java.util.concurrent.TimeUnit-MILLISECONDS"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.log.LogMessage"
      uuid: "LogMessage.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.log.LogMessage"
      uuid: "logMessage"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Hikari connections could not be closed within %s"
      valueType: "java.lang.String"
      uuid: "uniqueUuid28"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.time.Duration"
        method: "ofMillis"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: 251
            valueType: "long"
            uuid: "long2"
      valueType: "java.time.Duration"
      uuid: "duration"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 105
      expression: "this.dataSource == null"
      range: "(105,7)-(105,29)"
      evaluatedAs: false
    - lineNumber: 105
      expression: "!this.dataSource.isRunning()"
      range: "(105,34)-(105,61)"
      evaluatedAs: false
    - lineNumber: 108
      expression: "this.dataSource.isAllowPoolSuspension()"
      range: "(108,7)-(108,45)"
      evaluatedAs: false
    - lineNumber: 137
      expression: "this.hasOpenConnections.apply((HikariPool) this.dataSource.getHikariPoolMXBean())"
      range: "(137,10)-(137,90)"
      evaluatedAs: false
      internalMethodName: "waitForConnectionsToClose"
    - lineNumber: 128
      expression: "catch-exception (TimeoutException)"
      range: "(128,3)-(128,28)"
      evaluatedAs: true
      internalMethodName: "closeConnections"
    catchBlockExercised:
      idExternalInstruction: 41
      id: 2
      catchExceptions:
      - "java.util.concurrent.TimeoutException"
- method:
    name: "isRunning"
    sourceCodeSignature: "boolean isRunning()"
    returnType: "boolean"
    instructionFingerprint: "5814AA4EDF43CB883080063AF2EF6D8F"
  paths:
  - pathId: "path1"
    testPathName: "isRunningWhenThisDataSourceIsRunning"
    constructorSignature: "<init>(javax.sql.DataSource) : void"
    modelFingerprint: "F16AF6C7E427BCAE2DBF65A3EA849F82"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6946068172F9F53FFDFC68372B1FA3CD"
      valueUuid: "target"
    - type: "STATIC"
      name: "DataSourceUnwrapper.class"
      modelFingerprint: "7552078EE48BE53CC024FEAD295882DC"
      valueUuid: "DataSourceUnwrapper.class"
      methodExercised:
        expression: "unwrap(dataSource:dataSource,unwrapInterface:uniqueUuid29,target:uniqueUuid30):object"
        staticAccess: true
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "082F0AB4A1DD73477535BBD6BA539EC6"
      valueUuid: "object"
      methodExercised:
        expression: "isRunning():boolean1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.HikariCheckpointRestoreLifecycle"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "javax.sql.DataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.HikariCheckpointRestoreLifecycle"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.jdbc.DataSourceUnwrapper"
      uuid: "DataSourceUnwrapper.class"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "javax.sql.DataSource"
      uuid: "dataSource"
    - sapientType: "CLASS"
      content: !<regular>
        value: "com.zaxxer.hikari.HikariConfigMXBean"
      valueType: "java.lang.Class"
      genericValueType: "com.zaxxer.hikari.HikariConfigMXBean"
      uuid: "uniqueUuid29"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "com.zaxxer.hikari.HikariDataSource"
      valueType: "java.lang.Class"
      genericValueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "uniqueUuid30"
      fixed: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 150
      expression: "this.dataSource != null"
      range: "(150,10)-(150,32)"
      evaluatedAs: true
    - lineNumber: 150
      expression: "this.dataSource.isRunning()"
      range: "(150,37)-(150,63)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "isRunningWhenThisDataSourceNotIsRunning"
    constructorSignature: "<init>(javax.sql.DataSource) : void"
    modelFingerprint: "E2EB00F423F05360B2458ACB26C46049"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6946068172F9F53FFDFC68372B1FA3CD"
      valueUuid: "target"
    - type: "STATIC"
      name: "DataSourceUnwrapper.class"
      modelFingerprint: "7552078EE48BE53CC024FEAD295882DC"
      valueUuid: "DataSourceUnwrapper.class"
      methodExercised:
        expression: "unwrap(dataSource:dataSource,unwrapInterface:uniqueUuid31,target:uniqueUuid32):object"
        staticAccess: true
    - type: "FIELD"
      name: "dataSource"
      modelFingerprint: "9C180A0CBDE39D9D8F6BF17341E1A012"
      valueUuid: "object"
      methodExercised:
        expression: "isRunning():boolean1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.jdbc.HikariCheckpointRestoreLifecycle"
        parameters:
        - name: "dataSource"
          value:
            sapientType: "MOCK"
            valueType: "javax.sql.DataSource"
            uuid: "dataSource"
      valueType: "org.springframework.boot.jdbc.HikariCheckpointRestoreLifecycle"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.jdbc.DataSourceUnwrapper"
      uuid: "DataSourceUnwrapper.class"
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "javax.sql.DataSource"
      uuid: "dataSource"
    - sapientType: "CLASS"
      content: !<regular>
        value: "com.zaxxer.hikari.HikariConfigMXBean"
      valueType: "java.lang.Class"
      genericValueType: "com.zaxxer.hikari.HikariConfigMXBean"
      uuid: "uniqueUuid31"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "com.zaxxer.hikari.HikariDataSource"
      valueType: "java.lang.Class"
      genericValueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "uniqueUuid32"
      fixed: true
    - sapientType: "MOCK"
      valueType: "com.zaxxer.hikari.HikariDataSource"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 150
      expression: "this.dataSource != null"
      range: "(150,10)-(150,32)"
      evaluatedAs: true
    - lineNumber: 150
      expression: "this.dataSource.isRunning()"
      range: "(150,37)-(150,63)"
      evaluatedAs: false
