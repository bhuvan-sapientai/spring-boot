---
modelFingerprint: "1745048EDBAF3F86C943CFAD480E6060"
targetClass:
  fullClassName: "org.springframework.boot.logging.LoggerGroup"
methods:
- method:
    name: "getName"
    sourceCodeSignature: "String getName()"
    returnType: "java.lang.String"
    instructionFingerprint: "C90C2589CCC57FC1671FB67D2AEEC0AE"
  paths:
  - pathId: "path1"
    testPathName: "getNameTest"
    constructorSignature: "<init>(java.lang.String,java.util.List<java.lang.String>)\
      \ : void"
    modelFingerprint: "3592595466A722A6974BE52F36952059"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getMembers"
    sourceCodeSignature: "List<String> getMembers()"
    returnType: "java.util.List"
    genericReturnType: "java.lang.String"
    instructionFingerprint: "A4163A6F22D40CACD07B4E2899DEF00E"
  paths:
  - pathId: "path1"
    testPathName: "getMembersTest"
    constructorSignature: "<init>(java.lang.String,java.util.List<java.lang.String>)\
      \ : void"
    modelFingerprint: "60CD7497834E03D8F3EF5B4785F8F765"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "hasMembers"
    sourceCodeSignature: "boolean hasMembers()"
    returnType: "boolean"
    instructionFingerprint: "43F3EEE424AC0533795694463ACBD0FF"
  paths:
  - pathId: "path1"
    testPathName: "hasMembersWhenThisMembersNotIsEmpty"
    constructorSignature: "<init>(java.lang.String,java.util.List<java.lang.String>)\
      \ : void"
    modelFingerprint: "2446146D5FD90E94B5D5C7166FC6CAE8"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "DD50793F844DF8DCE2645A5B01D3B733"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LoggerGroup"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "name1"
            valueType: "java.lang.String"
            uuid: "name"
        - name: "members"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "NULL"
                uuid: "arrayListItem0"
            valueType: "java.util.List"
            genericValueType: "java.lang.String"
            uuid: "members"
      valueType: "org.springframework.boot.logging.LoggerGroup"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 53
      expression: "!this.members.isEmpty()"
      range: "(53,10)-(53,32)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "hasMembersWhenThisMembersIsEmpty"
    constructorSignature: "<init>(java.lang.String,java.util.List<java.lang.String>)\
      \ : void"
    modelFingerprint: "C1126A2FAE962D921463FDD39EB95609"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "C3839131C0A558B8A3FDCD79E6CBF959"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LoggerGroup"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "name1"
            valueType: "java.lang.String"
            uuid: "name"
        - name: "members"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "java.lang.String"
            uuid: "members"
      valueType: "org.springframework.boot.logging.LoggerGroup"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 53
      expression: "!this.members.isEmpty()"
      range: "(53,10)-(53,32)"
      evaluatedAs: false
- method:
    name: "getConfiguredLevel"
    sourceCodeSignature: "LogLevel getConfiguredLevel()"
    returnType: "org.springframework.boot.logging.LogLevel"
    instructionFingerprint: "AC415226FD31D7450ABEE2548CE8DA23"
  paths:
  - pathId: "path1"
    testPathName: "getConfiguredLevelTest"
    constructorSignature: "<init>(java.lang.String,java.util.List<java.lang.String>)\
      \ : void"
    modelFingerprint: "EFFB54F3B0443717A14EDCAB748F4D08"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "configureLogLevel"
    sourceCodeSignature: "void configureLogLevel(LogLevel level, BiConsumer<String,\
      \ LogLevel> configurer)"
    returnType: "void"
    parameters:
    - name: "level"
      type: "org.springframework.boot.logging.LogLevel"
    - name: "configurer"
      type: "java.util.function.BiConsumer"
    instructionFingerprint: "DED8FEC4655FEECEB72882ADCB46BFFB"
  paths:
  - pathId: "path1"
    testPathName: "configureLogLevelTest"
    constructorSignature: "<init>(java.lang.String,java.util.List<java.lang.String>)\
      \ : void"
    modelFingerprint: "A5907D8D3EF76E738B288F6E1B4057DB"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B8C0FB50B226FF2FDA618E9A7233E519"
      valueUuid: "target"
    - type: "INPUT"
      name: "level"
      modelFingerprint: "807596B6F5FFFB76F8F25521917FA5E7"
      valueUuid: "level"
    - type: "INPUT"
      name: "configurer"
      modelFingerprint: "8122A45E6ED5871D12FF339C52672D69"
      valueUuid: "configurer"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    - type: "STATE_VERIFICATION_FIELD"
      name: "configuredLevel"
      modelFingerprint: "AB31FFD8A21A11DCEBBEEB9337472655"
      valueUuid: "level"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LoggerGroup"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "name1"
            valueType: "java.lang.String"
            uuid: "name"
        - name: "members"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "NULL"
                uuid: "arrayListItem0"
            valueType: "java.util.List"
            genericValueType: "java.lang.String"
            uuid: "members"
      valueType: "org.springframework.boot.logging.LoggerGroup"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "TRACE"
      valueType: "org.springframework.boot.logging.LogLevel"
      uuid: "level"
    - sapientType: "MOCK"
      valueType: "java.util.function.BiConsumer"
      uuid: "configurer"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "TRACE"
      valueType: "org.springframework.boot.logging.LogLevel"
      uuid: "level"
