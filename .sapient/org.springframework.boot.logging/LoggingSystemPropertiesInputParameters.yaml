---
modelFingerprint: "B71A6055CDBDD3EAFADA11FC5356E4E1"
targetClass:
  fullClassName: "org.springframework.boot.logging.LoggingSystemProperties"
methods:
- method:
    name: "getDefaultCharset"
    sourceCodeSignature: "Charset getDefaultCharset()"
    returnType: "java.nio.charset.Charset"
    instructionFingerprint: "C150A8E8CB6721256E598E5F59C83D1A"
  paths:
  - pathId: "path1"
    testPathName: "getDefaultCharsetTest"
    constructorSignature: "<init>(org.springframework.core.env.Environment,java.util.function.Function<java.lang.String,java.lang.String>,java.util.function.BiConsumer<java.lang.String,java.lang.String>)\
      \ : void"
    modelFingerprint: "F7E4F30F0CCA27C0522D269312C6C14A"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "79CBF7C198AF86660A68F18B54156DCE"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A9120F2979FFD49184F97A4BB1DD278"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:environment,message:uniqueUuid1):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "DA066BB0C4281F581EB2798633B62F2B"
      valueUuid: "charset"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LoggingSystemProperties"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
        - name: "defaultValueResolver"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "defaultValueResolver"
        - name: "setter"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.BiConsumer"
            uuid: "setter"
      valueType: "org.springframework.boot.logging.LoggingSystemProperties"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Environment must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "java.nio.charset.StandardCharsets"
        fieldName: "UTF_8"
      valueType: "java.nio.charset.Charset"
      uuid: "charset"
- method:
    name: "apply"
    sourceCodeSignature: "void apply()"
    returnType: "void"
    instructionFingerprint: "765B111970A61B88FBC87CB7E9C7A93D"
  paths:
  - pathId: "path1"
    testPathName: "applyTest"
    constructorSignature: "<init>(org.springframework.core.env.Environment,java.util.function.Function<java.lang.String,java.lang.String>,java.util.function.BiConsumer<java.lang.String,java.lang.String>)\
      \ : void"
    modelFingerprint: "5B4F9A549868D6B31FE079FDBDAB4735"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "79CBF7C198AF86660A68F18B54156DCE"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A9120F2979FFD49184F97A4BB1DD278"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:environment,message:uniqueUuid2):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "A7C140C85D0E55F07B85DA1573887EF6"
      methodExercised:
        expression: "apply(logFile:uniqueUuid3):void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LoggingSystemProperties"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
        - name: "defaultValueResolver"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "defaultValueResolver"
        - name: "setter"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.BiConsumer"
            uuid: "setter"
      valueType: "org.springframework.boot.logging.LoggingSystemProperties"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Environment must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "uniqueUuid3"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "apply"
    sourceCodeSignature: "void apply(LogFile logFile)"
    returnType: "void"
    parameters:
    - name: "logFile"
      type: "org.springframework.boot.logging.LogFile"
    instructionFingerprint: "8DBCD58B339F101EF386E470621B542F"
  paths:
  - pathId: "path1"
    testPathName: "apply1WhenThisEnvironmentInstanceOfConfigurableEnvironment"
    constructorSignature: "<init>(org.springframework.core.env.Environment,java.util.function.Function<java.lang.String,java.lang.String>,java.util.function.BiConsumer<java.lang.String,java.lang.String>)\
      \ : void"
    modelFingerprint: "7ECB76BE6568571CD6F29B718AD2B1C9"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D34D3FB231FDA24CE9EDC6BB8FC04CEB"
      valueUuid: "target"
    - type: "INPUT"
      name: "logFile"
      modelFingerprint: "86BCE540ED2DF71D13DEB1FE7D6B7A32"
      valueUuid: "logFile"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "246032E3BA24C84C6BA8670075790770"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:environment,message:uniqueUuid4):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "configurableEnvironment"
      modelFingerprint: "276EF401AE3C78FE9E9D8C7F17B82A6E"
      valueUuid: "environment"
      methodExercised:
        expression: "getPropertySources():mutablePropertySources"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F96CDDE722C90C4B5B7B722CC448FACB"
      valueUuid: "environment"
      methodExercised:
        expression: "getConversionService():configurableConversionService"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "1EA7D5A9447AA139925113BB30DBE155"
      methodExercised:
        expression: "apply(logFile:logFile,resolver:propertySourcesPropertyResolver):void4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LoggingSystemProperties"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "environment"
        - name: "defaultValueResolver"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "defaultValueResolver"
        - name: "setter"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.BiConsumer"
            uuid: "setter"
      valueType: "org.springframework.boot.logging.LoggingSystemProperties"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "logFile"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Environment must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.MutablePropertySources"
      uuid: "mutablePropertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.convert.support.ConfigurableConversionService"
      uuid: "configurableConversionService"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "logFile"
    - sapientType: "ANY"
      valueType: "org.springframework.core.env.PropertySourcesPropertyResolver"
      uuid: "propertySourcesPropertyResolver"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 219
      expression: "this.environment instanceof ConfigurableEnvironment configurableEnvironment"
      range: "(219,7)-(219,81)"
      evaluatedAs: true
      internalMethodName: "getPropertyResolver"
  - pathId: "path2"
    testPathName: "apply1WhenThisEnvironmentNotInstanceOfConfigurableEnvironment"
    constructorSignature: "<init>(org.springframework.core.env.Environment,java.util.function.Function<java.lang.String,java.lang.String>,java.util.function.BiConsumer<java.lang.String,java.lang.String>)\
      \ : void"
    modelFingerprint: "3DC70F3CA105C83C008766035B60B303"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "79CBF7C198AF86660A68F18B54156DCE"
      valueUuid: "target"
    - type: "INPUT"
      name: "logFile"
      modelFingerprint: "86BCE540ED2DF71D13DEB1FE7D6B7A32"
      valueUuid: "logFile"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A9120F2979FFD49184F97A4BB1DD278"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:environment,message:uniqueUuid6):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "66EAC90312C889DE5A6D9E49203321DD"
      methodExercised:
        expression: "apply(logFile:logFile,resolver:environment):void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LoggingSystemProperties"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
        - name: "defaultValueResolver"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "defaultValueResolver"
        - name: "setter"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.BiConsumer"
            uuid: "setter"
      valueType: "org.springframework.boot.logging.LoggingSystemProperties"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "logFile"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Environment must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "logFile"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "environment"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 219
      expression: "this.environment instanceof ConfigurableEnvironment configurableEnvironment"
      range: "(219,7)-(219,81)"
      evaluatedAs: false
      internalMethodName: "getPropertyResolver"
- method:
    name: "apply"
    sourceCodeSignature: "void apply(LogFile logFile, PropertyResolver resolver)"
    returnType: "void"
    parameters:
    - name: "logFile"
      type: "org.springframework.boot.logging.LogFile"
    - name: "resolver"
      type: "org.springframework.core.env.PropertyResolver"
    instructionFingerprint: "6749B8629A31227877026298CC31EC8F"
  paths:
  - pathId: "path1"
    testPathName: "apply2WhenLogFileIsNotNull"
    constructorSignature: "<init>(org.springframework.core.env.Environment,java.util.function.Function<java.lang.String,java.lang.String>,java.util.function.BiConsumer<java.lang.String,java.lang.String>)\
      \ : void"
    modelFingerprint: "A38942EC5E6BCE7E22B4DB45ADB4DF20"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "79CBF7C198AF86660A68F18B54156DCE"
      valueUuid: "target"
    - type: "INPUT"
      name: "logFile"
      modelFingerprint: "FD63EDAC74D018570B13AF3BFB01E7BB"
      valueUuid: "logFile"
    - type: "INPUT"
      name: "resolver"
      modelFingerprint: "06D596DBF03D2C6499DA0355A24D422E"
      valueUuid: "resolver"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A9120F2979FFD49184F97A4BB1DD278"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:environment,message:uniqueUuid7):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "resolver"
      modelFingerprint: "8B75463B729DB390D59D0234C5F56392"
      valueUuid: "resolver"
      methodExercised:
        expression: "getProperty(key:uniqueUuid8,targetType:uniqueUuid9,defaultValue:boolean):object"
    - type: "LOCAL_VARIABLE"
      name: "resolver"
      modelFingerprint: "F81441399D511116B27C28BA17A93B1D"
      valueUuid: "resolver"
      methodExercised:
        expression: "getProperty(key:uniqueUuid10):string14"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "A91647CB447119BB97CB86EA51675C61"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:string14):boolean3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "resolver"
      modelFingerprint: "C9AA4923FB2844468AE0F3450491AB02"
      valueUuid: "resolver"
      methodExercised:
        expression: "getProperty(key:string20):string21"
    - type: "LOCAL_VARIABLE"
      name: "resolver"
      modelFingerprint: "C9AA4923FB2844468AE0F3450491AB02"
      valueUuid: "resolver"
      methodExercised:
        expression: "getProperty(key:string27):string28"
    - type: "LOCAL_VARIABLE"
      name: "resolver"
      modelFingerprint: "C9AA4923FB2844468AE0F3450491AB02"
      valueUuid: "resolver"
      methodExercised:
        expression: "getProperty(key:string33):string34"
    - type: "LOCAL_VARIABLE"
      name: "resolver"
      modelFingerprint: "C9AA4923FB2844468AE0F3450491AB02"
      valueUuid: "resolver"
      methodExercised:
        expression: "getProperty(key:string39):string40"
    - type: "LOCAL_VARIABLE"
      name: "resolver"
      modelFingerprint: "C9AA4923FB2844468AE0F3450491AB02"
      valueUuid: "resolver"
      methodExercised:
        expression: "getProperty(key:string45):string46"
    - type: "LOCAL_VARIABLE"
      name: "resolver"
      modelFingerprint: "C9AA4923FB2844468AE0F3450491AB02"
      valueUuid: "resolver"
      methodExercised:
        expression: "getProperty(key:string51):string52"
    - type: "LOCAL_VARIABLE"
      name: "resolver"
      modelFingerprint: "C9AA4923FB2844468AE0F3450491AB02"
      valueUuid: "resolver"
      methodExercised:
        expression: "getProperty(key:string57):string58"
    - type: "LOCAL_VARIABLE"
      name: "resolver"
      modelFingerprint: "C9AA4923FB2844468AE0F3450491AB02"
      valueUuid: "resolver"
      methodExercised:
        expression: "getProperty(key:string63):string64"
    - type: "LOCAL_VARIABLE"
      name: "resolver"
      modelFingerprint: "C9AA4923FB2844468AE0F3450491AB02"
      valueUuid: "resolver"
      methodExercised:
        expression: "getProperty(key:string69):string70"
    - type: "LOCAL_VARIABLE"
      name: "resolver"
      modelFingerprint: "C9AA4923FB2844468AE0F3450491AB02"
      valueUuid: "resolver"
      methodExercised:
        expression: "getProperty(key:string75):string76"
    - type: "LOCAL_VARIABLE"
      name: "logFile"
      modelFingerprint: "463FD816C41FF0DDCF84DD92EF9AD9C4"
      valueUuid: "logFile"
      methodExercised:
        expression: "applyToSystemProperties():void14"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.BiConsumer.accept(java.lang.String,java.lang.String)\
        \ : void"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LoggingSystemProperties"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
        - name: "defaultValueResolver"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "defaultValueResolver"
        - name: "setter"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.BiConsumer"
            uuid: "setter"
      valueType: "org.springframework.boot.logging.LoggingSystemProperties"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "logFile"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "resolver"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Environment must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "resolver"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "java.lang.Boolean"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "logging.include-application-name"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Boolean"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Boolean"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "java.lang.Boolean"
      uuid: "boolean"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "resolver"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string14"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.application.name"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string14"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "resolver"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string21"
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "string20"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "resolver"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string28"
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "string27"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "resolver"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string34"
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "string33"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "resolver"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string40"
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "string39"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "resolver"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string46"
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "string45"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "resolver"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string52"
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "string51"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "resolver"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string58"
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "string57"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "resolver"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string64"
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "string63"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "resolver"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string70"
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "string69"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "resolver"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string76"
    - sapientType: "BASIC"
      content: !<regular>
        value: "key1"
      valueType: "java.lang.String"
      uuid: "string75"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "logFile"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void14"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 249
      expression: "resolver.getProperty(\\\"logging.include-application-name\\\",\
        \ Boolean.class, Boolean.TRUE)"
      range: "(249,7)-(249,91)"
      evaluatedAs: true
      internalMethodName: "setApplicationNameSystemProperty"
    - lineNumber: 251
      expression: "StringUtils.hasText(applicationName)"
      range: "(251,8)-(251,43)"
      evaluatedAs: true
      internalMethodName: "setApplicationNameSystemProperty"
    - lineNumber: 263
      expression: "property.getApplicationPropertyName() != null"
      range: "(263,19)-(263,63)"
      evaluatedAs: true
      internalMethodName: "setSystemProperty"
    - lineNumber: 265
      expression: "value != null"
      range: "(265,12)-(265,24)"
      evaluatedAs: true
      internalMethodName: "setSystemProperty"
    - lineNumber: 266
      expression: "value != null"
      range: "(266,12)-(266,24)"
      evaluatedAs: false
      internalMethodName: "setSystemProperty"
    - lineNumber: 243
      expression: "logFile != null"
      range: "(243,7)-(243,21)"
      evaluatedAs: true
  - pathId: "path22"
    testPathName: "apply2WhenPropertyGetApplicationPropertyNameIsNullAndValueIsNullAndValueIsNullAndLogFileIsNull"
    constructorSignature: "<init>(org.springframework.core.env.Environment,java.util.function.Function<java.lang.String,java.lang.String>,java.util.function.BiConsumer<java.lang.String,java.lang.String>)\
      \ : void"
    modelFingerprint: "79807E6AFDC5171F826EF0C10C882183"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "79CBF7C198AF86660A68F18B54156DCE"
      valueUuid: "target"
    - type: "INPUT"
      name: "logFile"
      modelFingerprint: "9B1BF83008E682F052DC52C99E63D7C5"
      valueUuid: "logFile"
    - type: "INPUT"
      name: "resolver"
      modelFingerprint: "06D596DBF03D2C6499DA0355A24D422E"
      valueUuid: "resolver"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A9120F2979FFD49184F97A4BB1DD278"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:environment,message:uniqueUuid11):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "resolver"
      modelFingerprint: "8B75463B729DB390D59D0234C5F56392"
      valueUuid: "resolver"
      methodExercised:
        expression: "getProperty(key:uniqueUuid12,targetType:uniqueUuid13,defaultValue:boolean):object"
    - type: "LOCAL_VARIABLE"
      name: "resolver"
      modelFingerprint: "F81441399D511116B27C28BA17A93B1D"
      valueUuid: "resolver"
      methodExercised:
        expression: "getProperty(key:uniqueUuid14):string14"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "A91647CB447119BB97CB86EA51675C61"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:string14):boolean3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.BiConsumer.accept(java.lang.String,java.lang.String)\
        \ : void"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LoggingSystemProperties"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
        - name: "defaultValueResolver"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "defaultValueResolver"
        - name: "setter"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.BiConsumer"
            uuid: "setter"
      valueType: "org.springframework.boot.logging.LoggingSystemProperties"
      uuid: "target"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "logFile"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "resolver"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Environment must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "resolver"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "java.lang.Boolean"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "logging.include-application-name"
      valueType: "java.lang.String"
      uuid: "uniqueUuid12"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Boolean"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Boolean"
      uuid: "uniqueUuid13"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "java.lang.Boolean"
      uuid: "boolean"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "resolver"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string14"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.application.name"
      valueType: "java.lang.String"
      uuid: "uniqueUuid14"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string14"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 249
      expression: "resolver.getProperty(\\\"logging.include-application-name\\\",\
        \ Boolean.class, Boolean.TRUE)"
      range: "(249,7)-(249,91)"
      evaluatedAs: true
      internalMethodName: "setApplicationNameSystemProperty"
    - lineNumber: 251
      expression: "StringUtils.hasText(applicationName)"
      range: "(251,8)-(251,43)"
      evaluatedAs: true
      internalMethodName: "setApplicationNameSystemProperty"
    - lineNumber: 263
      expression: "property.getApplicationPropertyName() != null"
      range: "(263,19)-(263,63)"
      evaluatedAs: false
      internalMethodName: "setSystemProperty"
    - lineNumber: 265
      expression: "value != null"
      range: "(265,12)-(265,24)"
      evaluatedAs: false
      internalMethodName: "setSystemProperty"
    - lineNumber: 266
      expression: "value != null"
      range: "(266,12)-(266,24)"
      evaluatedAs: false
      internalMethodName: "setSystemProperty"
    - lineNumber: 243
      expression: "logFile != null"
      range: "(243,7)-(243,21)"
      evaluatedAs: false
- method:
    name: "setSystemProperty"
    sourceCodeSignature: "void setSystemProperty(PropertyResolver resolver, String\
      \ systemPropertyName, String propertyName)"
    returnType: "void"
    parameters:
    - name: "resolver"
      type: "org.springframework.core.env.PropertyResolver"
    - name: "systemPropertyName"
      type: "java.lang.String"
    - name: "propertyName"
      type: "java.lang.String"
    instructionFingerprint: "7B35A454F86FA96F77EC1C1EA3767CD0"
  paths:
  - pathId: "path1"
    testPathName: "setSystemProperty3Test"
    constructorSignature: "<init>(org.springframework.core.env.Environment,java.util.function.Function<java.lang.String,java.lang.String>,java.util.function.BiConsumer<java.lang.String,java.lang.String>)\
      \ : void"
    modelFingerprint: "7908CEE1F3214324EAE559052556BF51"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "79CBF7C198AF86660A68F18B54156DCE"
      valueUuid: "target"
    - type: "INPUT"
      name: "resolver"
      modelFingerprint: "1B18893457541AF5479212B8076D4DC8"
      valueUuid: "resolver"
    - type: "INPUT"
      name: "systemPropertyName"
      modelFingerprint: "E86E821924CC80F7ECD2DF080C631D74"
      valueUuid: "systemPropertyName"
    - type: "INPUT"
      name: "propertyName"
      modelFingerprint: "25B450E2130DD987718A23568BE5AD08"
      valueUuid: "propertyName"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A9120F2979FFD49184F97A4BB1DD278"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:environment,message:uniqueUuid15):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "E1AD05690980F6D1C958C0B069015308"
      methodExercised:
        expression: "setSystemProperty(resolver:resolver,systemPropertyName:systemPropertyName,propertyName:propertyName,defaultValue:uniqueUuid16):void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LoggingSystemProperties"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
        - name: "defaultValueResolver"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "defaultValueResolver"
        - name: "setter"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.BiConsumer"
            uuid: "setter"
      valueType: "org.springframework.boot.logging.LoggingSystemProperties"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "resolver"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemPropertyName1"
      valueType: "java.lang.String"
      uuid: "systemPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "propertyName1"
      valueType: "java.lang.String"
      uuid: "propertyName"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Environment must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid15"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "resolver"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemPropertyName1"
      valueType: "java.lang.String"
      uuid: "systemPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "propertyName1"
      valueType: "java.lang.String"
      uuid: "propertyName"
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "uniqueUuid16"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "setSystemProperty"
    sourceCodeSignature: "void setSystemProperty(PropertyResolver resolver, String\
      \ systemPropertyName, String propertyName, String defaultValue)"
    returnType: "void"
    parameters:
    - name: "resolver"
      type: "org.springframework.core.env.PropertyResolver"
    - name: "systemPropertyName"
      type: "java.lang.String"
    - name: "propertyName"
      type: "java.lang.String"
    - name: "defaultValue"
      type: "java.lang.String"
    instructionFingerprint: "93322413D514E11F9266A72969111B56"
  paths:
  - pathId: "path1"
    testPathName: "setSystemProperty4WhenValueIsNotNull"
    constructorSignature: "<init>(org.springframework.core.env.Environment,java.util.function.Function<java.lang.String,java.lang.String>,java.util.function.BiConsumer<java.lang.String,java.lang.String>)\
      \ : void"
    modelFingerprint: "1C297279DF4AC6D1A222EEB1DD1BFD22"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "79CBF7C198AF86660A68F18B54156DCE"
      valueUuid: "target"
    - type: "INPUT"
      name: "resolver"
      modelFingerprint: "06D596DBF03D2C6499DA0355A24D422E"
      valueUuid: "resolver"
    - type: "INPUT"
      name: "systemPropertyName"
      modelFingerprint: "E86E821924CC80F7ECD2DF080C631D74"
      valueUuid: "systemPropertyName"
    - type: "INPUT"
      name: "propertyName"
      modelFingerprint: "25B450E2130DD987718A23568BE5AD08"
      valueUuid: "propertyName"
    - type: "INPUT"
      name: "defaultValue"
      modelFingerprint: "A71933DA5207F4DB047EDDDA5B632E89"
      valueUuid: "defaultValue"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A9120F2979FFD49184F97A4BB1DD278"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:environment,message:uniqueUuid17):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "resolver"
      modelFingerprint: "2B63394BBC72E7C0A835FC534C07E280"
      valueUuid: "resolver"
      methodExercised:
        expression: "getProperty(key:propertyName):string13"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.BiConsumer.accept(java.lang.String,java.lang.String)\
        \ : void"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LoggingSystemProperties"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
        - name: "defaultValueResolver"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "defaultValueResolver"
        - name: "setter"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.BiConsumer"
            uuid: "setter"
      valueType: "org.springframework.boot.logging.LoggingSystemProperties"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "resolver"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemPropertyName1"
      valueType: "java.lang.String"
      uuid: "systemPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "propertyName1"
      valueType: "java.lang.String"
      uuid: "propertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "defaultValue1"
      valueType: "java.lang.String"
      uuid: "defaultValue"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Environment must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid17"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "resolver"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_getProperty1"
      valueType: "java.lang.String"
      uuid: "string13"
    - sapientType: "BASIC"
      content: !<regular>
        value: "propertyName1"
      valueType: "java.lang.String"
      uuid: "propertyName"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 298
      expression: "value != null"
      range: "(298,12)-(298,24)"
      evaluatedAs: true
    - lineNumber: 299
      expression: "value != null"
      range: "(299,12)-(299,24)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "setSystemProperty4WhenValueIsNull"
    constructorSignature: "<init>(org.springframework.core.env.Environment,java.util.function.Function<java.lang.String,java.lang.String>,java.util.function.BiConsumer<java.lang.String,java.lang.String>)\
      \ : void"
    modelFingerprint: "3E5215A286E8330B924ADE5956847011"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "79CBF7C198AF86660A68F18B54156DCE"
      valueUuid: "target"
    - type: "INPUT"
      name: "resolver"
      modelFingerprint: "06D596DBF03D2C6499DA0355A24D422E"
      valueUuid: "resolver"
    - type: "INPUT"
      name: "systemPropertyName"
      modelFingerprint: "E86E821924CC80F7ECD2DF080C631D74"
      valueUuid: "systemPropertyName"
    - type: "INPUT"
      name: "propertyName"
      modelFingerprint: "25B450E2130DD987718A23568BE5AD08"
      valueUuid: "propertyName"
    - type: "INPUT"
      name: "defaultValue"
      modelFingerprint: "A71933DA5207F4DB047EDDDA5B632E89"
      valueUuid: "defaultValue"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A9120F2979FFD49184F97A4BB1DD278"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:environment,message:uniqueUuid18):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "resolver"
      modelFingerprint: "4D3DA35C46BE9A38C882D1807B3CA374"
      valueUuid: "resolver"
      methodExercised:
        expression: "getProperty(key:propertyName):string13"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.BiConsumer.accept(java.lang.String,java.lang.String)\
        \ : void"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LoggingSystemProperties"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
        - name: "defaultValueResolver"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "defaultValueResolver"
        - name: "setter"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.BiConsumer"
            uuid: "setter"
      valueType: "org.springframework.boot.logging.LoggingSystemProperties"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "resolver"
    - sapientType: "BASIC"
      content: !<regular>
        value: "systemPropertyName1"
      valueType: "java.lang.String"
      uuid: "systemPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "propertyName1"
      valueType: "java.lang.String"
      uuid: "propertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "defaultValue1"
      valueType: "java.lang.String"
      uuid: "defaultValue"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Environment must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid18"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "resolver"
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "string13"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "propertyName1"
      valueType: "java.lang.String"
      uuid: "propertyName"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 298
      expression: "value != null"
      range: "(298,12)-(298,24)"
      evaluatedAs: false
    - lineNumber: 299
      expression: "value != null"
      range: "(299,12)-(299,24)"
      evaluatedAs: false
- method:
    name: "setSystemProperty"
    sourceCodeSignature: "void setSystemProperty(String name, String value)"
    returnType: "void"
    parameters:
    - name: "name"
      type: "java.lang.String"
    - name: "value"
      type: "java.lang.String"
    instructionFingerprint: "CD604F0F680AA7278A424D9091F356EA"
  paths:
  - pathId: "path1"
    testPathName: "setSystemProperty5Test"
    constructorSignature: "<init>(org.springframework.core.env.Environment,java.util.function.Function<java.lang.String,java.lang.String>,java.util.function.BiConsumer<java.lang.String,java.lang.String>)\
      \ : void"
    modelFingerprint: "3AE81106AAA2A0B2E217C94A3572578C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "79CBF7C198AF86660A68F18B54156DCE"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "63F0AEB18588FDD50129913BF544F767"
      valueUuid: "name"
    - type: "INPUT"
      name: "value"
      modelFingerprint: "771DC1EEA9260D80AEE9A3ECE44C7DDE"
      valueUuid: "value"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A9120F2979FFD49184F97A4BB1DD278"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:environment,message:uniqueUuid19):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.BiConsumer.accept(java.lang.String,java.lang.String)\
        \ : void"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LoggingSystemProperties"
        parameters:
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.Environment"
            uuid: "environment"
        - name: "defaultValueResolver"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "defaultValueResolver"
        - name: "setter"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.BiConsumer"
            uuid: "setter"
      valueType: "org.springframework.boot.logging.LoggingSystemProperties"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "value1"
      valueType: "java.lang.String"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Environment must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid19"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
