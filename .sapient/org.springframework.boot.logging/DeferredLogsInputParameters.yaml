---
modelFingerprint: "1948663315D6D6C1418830AAA484C075"
targetClass:
  fullClassName: "org.springframework.boot.logging.DeferredLogs"
methods:
- method:
    name: "getLog"
    sourceCodeSignature: "Log getLog(Class<?> destination)"
    returnType: "org.apache.commons.logging.Log"
    parameters:
    - name: "destination"
      type: "java.lang.Class"
    instructionFingerprint: "2BDA0DFF7FAD344BF6A8A015BCC00265"
  paths:
  - pathId: "path1"
    testPathName: "getLogTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "E679663BEFBC81B0170B3FF4F8A3EC90"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "destination"
      modelFingerprint: "E6B4B6617A923F83D7602D1C34C5C7E9"
      valueUuid: "destination"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "3659017179B87E5982C4E1B4528CB284"
      methodExercised:
        expression: "getLog(destination:uniqueUuid1):log"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B6702A90479907A71DD3A69BECE2A34B"
      valueUuid: "log"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.DeferredLogs"
        parameters: []
      valueType: "org.springframework.boot.logging.DeferredLogs"
      uuid: "target"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "destination"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      uuid: "uniqueUuid1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log"
- method:
    name: "getLog"
    sourceCodeSignature: "Log getLog(Log destination)"
    returnType: "org.apache.commons.logging.Log"
    parameters:
    - name: "destination"
      type: "org.apache.commons.logging.Log"
    instructionFingerprint: "205F535D48051D59F43601FD62081C9A"
  paths:
  - pathId: "path1"
    testPathName: "getLog1Test"
    constructorSignature: "<init>() : void"
    modelFingerprint: "8F98381812C9D3AC93898CC2FFB85005"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "destination"
      modelFingerprint: "81DC09865D18182A3592ABAF19EB8401"
      valueUuid: "destination"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "3659017179B87E5982C4E1B4528CB284"
      methodExercised:
        expression: "getLog(destination:uniqueUuid2):log"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B6702A90479907A71DD3A69BECE2A34B"
      valueUuid: "log"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.DeferredLogs"
        parameters: []
      valueType: "org.springframework.boot.logging.DeferredLogs"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "destination"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      uuid: "uniqueUuid2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "log"
- method:
    name: "getLog"
    sourceCodeSignature: "Log getLog(Supplier<Log> destination)"
    returnType: "org.apache.commons.logging.Log"
    parameters:
    - name: "destination"
      type: "java.util.function.Supplier"
    instructionFingerprint: "9D32D4628EB035FAB0FA516B085D9148"
  paths:
  - pathId: "path1"
    testPathName: "getLog2Test"
    constructorSignature: "<init>() : void"
    modelFingerprint: "C4D771B6B94E069F11BA79D6AA8B42BA"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "destination"
      modelFingerprint: "3A3A596194E8F8B866520998BCCF9D62"
      valueUuid: "destination"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CF316690919B93E928A8D3B69A9C1AD2"
      valueUuid: "deferredLog"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.DeferredLogs"
        parameters: []
      valueType: "org.springframework.boot.logging.DeferredLogs"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "destination"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.DeferredLog"
        parameters:
        - name: "destination"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Supplier"
            uuid: "destination"
        - name: "lines"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.logging.DeferredLog$Lines"
              parameters: []
            valueType: "org.springframework.boot.logging.DeferredLog$Lines"
            uuid: "deferredLog.Lines"
            fixed: true
      valueType: "org.springframework.boot.logging.DeferredLog"
      uuid: "deferredLog"
      fixed: true
- method:
    name: "switchOverAll"
    sourceCodeSignature: "void switchOverAll()"
    returnType: "void"
    instructionFingerprint: "6C3568DBB0D78DCFCAAAFDCA68677DDC"
  paths:
  - pathId: "path1"
    testPathName: "switchOverAllWhenThisLoggersIsEmpty"
    constructorSignature: "<init>() : void"
    modelFingerprint: "1CAD34BD85ADBA1118257CF8548E1F14"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "FIELD"
      name: "lines"
      modelFingerprint: "E76AFB1F3E0827ED2FCECB73018ABB85"
      valueUuid: "deferredLog.Lines"
      methodExercised:
        expression: "iterator():iterator"
    - type: "LOCAL_VARIABLE"
      name: "line"
      modelFingerprint: "E3F2B4D2EC0DB290BC68278A2AD1C2EE"
      valueUuid: "object"
      methodExercised:
        expression: "getDestination():log"
    - type: "LOCAL_VARIABLE"
      name: "line"
      modelFingerprint: "34F40048F07E26F073ED939AD10EEA39"
      valueUuid: "object"
      methodExercised:
        expression: "getLevel():logLevel"
    - type: "LOCAL_VARIABLE"
      name: "line"
      modelFingerprint: "8DDE66773C8CF948E8548573D4AC081B"
      valueUuid: "object"
      methodExercised:
        expression: "getMessage():object2"
    - type: "LOCAL_VARIABLE"
      name: "line"
      modelFingerprint: "DF88BF8DA580E88DB00E88A13B7F32C6"
      valueUuid: "object"
      methodExercised:
        expression: "getThrowable():throwable"
    - type: "STATIC"
      name: "DeferredLog.class"
      modelFingerprint: "25D598C9AB6CF3FA4EDD2286E28C16D5"
      valueUuid: "DeferredLog.class"
      methodExercised:
        expression: "logTo(log:log,level:logLevel,message:object2,throwable:throwable):void"
        staticAccess: true
    - type: "FIELD"
      name: "lines"
      modelFingerprint: "93C24F85516DFE895387409ADE36BEC5"
      valueUuid: "deferredLog.Lines"
      methodExercised:
        expression: "clear():void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (Line line : this.lines) {"
      lineNumber: 84
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: var2 - Method: hasNext"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.DeferredLogs"
        parameters: []
      valueType: "org.springframework.boot.logging.DeferredLogs"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.DeferredLog$Lines"
        parameters: []
      valueType: "org.springframework.boot.logging.DeferredLog$Lines"
      uuid: "deferredLog.Lines"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.util.Iterator"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.logging.DeferredLog$Lines"
            parameters: []
          valueType: "org.springframework.boot.logging.DeferredLog$Lines"
          uuid: "deferredLog.Lines"
          fixed: true
        methodParameters: []
        methodName: "iterator"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.logging.DeferredLog$Line"
      uuid: "iterator"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "java.util.Iterator"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.boot.logging.DeferredLog$Lines"
                parameters: []
              valueType: "org.springframework.boot.logging.DeferredLog$Lines"
              uuid: "deferredLog.Lines"
              fixed: true
            methodParameters: []
            methodName: "iterator"
          valueType: "java.util.Iterator"
          genericValueType: "org.springframework.boot.logging.DeferredLog$Line"
          uuid: "iterator"
        methodParameters: []
        methodName: "next"
      valueType: "org.springframework.boot.logging.DeferredLog$Line"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.apache.commons.logging.Log"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "java.lang.Object"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<method_return_from_value>
                target: "java.util.Iterator"
                localVariableValue:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.springframework.boot.logging.DeferredLog$Lines"
                    parameters: []
                  valueType: "org.springframework.boot.logging.DeferredLog$Lines"
                  uuid: "deferredLog.Lines"
                  fixed: true
                methodParameters: []
                methodName: "iterator"
              valueType: "java.util.Iterator"
              genericValueType: "org.springframework.boot.logging.DeferredLog$Line"
              uuid: "iterator"
            methodParameters: []
            methodName: "next"
          valueType: "org.springframework.boot.logging.DeferredLog$Line"
          uuid: "object"
          explicitCastNeeded: true
        methodParameters: []
        methodName: "getDestination"
      valueType: "org.apache.commons.logging.Log"
      uuid: "log"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "java.util.Iterator"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.boot.logging.DeferredLog$Lines"
                parameters: []
              valueType: "org.springframework.boot.logging.DeferredLog$Lines"
              uuid: "deferredLog.Lines"
              fixed: true
            methodParameters: []
            methodName: "iterator"
          valueType: "java.util.Iterator"
          genericValueType: "org.springframework.boot.logging.DeferredLog$Line"
          uuid: "iterator"
        methodParameters: []
        methodName: "next"
      valueType: "org.springframework.boot.logging.DeferredLog$Line"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "TRACE"
      valueType: "org.springframework.boot.logging.LogLevel"
      uuid: "logLevel"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "java.util.Iterator"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.boot.logging.DeferredLog$Lines"
                parameters: []
              valueType: "org.springframework.boot.logging.DeferredLog$Lines"
              uuid: "deferredLog.Lines"
              fixed: true
            methodParameters: []
            methodName: "iterator"
          valueType: "java.util.Iterator"
          genericValueType: "org.springframework.boot.logging.DeferredLog$Line"
          uuid: "iterator"
        methodParameters: []
        methodName: "next"
      valueType: "org.springframework.boot.logging.DeferredLog$Line"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "java.lang.Object"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<method_return_from_value>
                target: "java.util.Iterator"
                localVariableValue:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.springframework.boot.logging.DeferredLog$Lines"
                    parameters: []
                  valueType: "org.springframework.boot.logging.DeferredLog$Lines"
                  uuid: "deferredLog.Lines"
                  fixed: true
                methodParameters: []
                methodName: "iterator"
              valueType: "java.util.Iterator"
              genericValueType: "org.springframework.boot.logging.DeferredLog$Line"
              uuid: "iterator"
            methodParameters: []
            methodName: "next"
          valueType: "org.springframework.boot.logging.DeferredLog$Line"
          uuid: "object"
          explicitCastNeeded: true
        methodParameters: []
        methodName: "getMessage"
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "java.util.Iterator"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<new>
                target: "org.springframework.boot.logging.DeferredLog$Lines"
                parameters: []
              valueType: "org.springframework.boot.logging.DeferredLog$Lines"
              uuid: "deferredLog.Lines"
              fixed: true
            methodParameters: []
            methodName: "iterator"
          valueType: "java.util.Iterator"
          genericValueType: "org.springframework.boot.logging.DeferredLog$Line"
          uuid: "iterator"
        methodParameters: []
        methodName: "next"
      valueType: "org.springframework.boot.logging.DeferredLog$Line"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Throwable"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "java.lang.Object"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<method_return_from_value>
                target: "java.util.Iterator"
                localVariableValue:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.springframework.boot.logging.DeferredLog$Lines"
                    parameters: []
                  valueType: "org.springframework.boot.logging.DeferredLog$Lines"
                  uuid: "deferredLog.Lines"
                  fixed: true
                methodParameters: []
                methodName: "iterator"
              valueType: "java.util.Iterator"
              genericValueType: "org.springframework.boot.logging.DeferredLog$Line"
              uuid: "iterator"
            methodParameters: []
            methodName: "next"
          valueType: "org.springframework.boot.logging.DeferredLog$Line"
          uuid: "object"
          explicitCastNeeded: true
        methodParameters: []
        methodName: "getThrowable"
      valueType: "java.lang.Throwable"
      uuid: "throwable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.DeferredLog"
      uuid: "DeferredLog.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.apache.commons.logging.Log"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "java.lang.Object"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<method_return_from_value>
                target: "java.util.Iterator"
                localVariableValue:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.springframework.boot.logging.DeferredLog$Lines"
                    parameters: []
                  valueType: "org.springframework.boot.logging.DeferredLog$Lines"
                  uuid: "deferredLog.Lines"
                  fixed: true
                methodParameters: []
                methodName: "iterator"
              valueType: "java.util.Iterator"
              genericValueType: "org.springframework.boot.logging.DeferredLog$Line"
              uuid: "iterator"
            methodParameters: []
            methodName: "next"
          valueType: "org.springframework.boot.logging.DeferredLog$Line"
          uuid: "object"
          explicitCastNeeded: true
        methodParameters: []
        methodName: "getDestination"
      valueType: "org.apache.commons.logging.Log"
      uuid: "log"
    - sapientType: "ENUM"
      content: !<regular>
        value: "TRACE"
      valueType: "org.springframework.boot.logging.LogLevel"
      uuid: "logLevel"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "java.lang.Object"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<method_return_from_value>
                target: "java.util.Iterator"
                localVariableValue:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.springframework.boot.logging.DeferredLog$Lines"
                    parameters: []
                  valueType: "org.springframework.boot.logging.DeferredLog$Lines"
                  uuid: "deferredLog.Lines"
                  fixed: true
                methodParameters: []
                methodName: "iterator"
              valueType: "java.util.Iterator"
              genericValueType: "org.springframework.boot.logging.DeferredLog$Line"
              uuid: "iterator"
            methodParameters: []
            methodName: "next"
          valueType: "org.springframework.boot.logging.DeferredLog$Line"
          uuid: "object"
          explicitCastNeeded: true
        methodParameters: []
        methodName: "getMessage"
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Throwable"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<method_return_from_value>
            target: "java.lang.Object"
            localVariableValue:
              sapientType: "OBJECT"
              content: !<method_return_from_value>
                target: "java.util.Iterator"
                localVariableValue:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "org.springframework.boot.logging.DeferredLog$Lines"
                    parameters: []
                  valueType: "org.springframework.boot.logging.DeferredLog$Lines"
                  uuid: "deferredLog.Lines"
                  fixed: true
                methodParameters: []
                methodName: "iterator"
              valueType: "java.util.Iterator"
              genericValueType: "org.springframework.boot.logging.DeferredLog$Line"
              uuid: "iterator"
            methodParameters: []
            methodName: "next"
          valueType: "org.springframework.boot.logging.DeferredLog$Line"
          uuid: "object"
          explicitCastNeeded: true
        methodParameters: []
        methodName: "getThrowable"
      valueType: "java.lang.Throwable"
      uuid: "throwable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.DeferredLog$Lines"
        parameters: []
      valueType: "org.springframework.boot.logging.DeferredLog$Lines"
      uuid: "deferredLog.Lines"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 84
      expression: "for-each(this.lines)"
      range: "(84,21)-(84,30)"
      evaluatedAs: true
    - lineNumber: 87
      expression: "for-each(this.loggers)"
      range: "(87,30)-(87,41)"
      evaluatedAs: false
