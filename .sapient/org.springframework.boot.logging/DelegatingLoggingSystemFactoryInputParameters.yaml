---
modelFingerprint: "E1C7076F676CFC8FAA76FCA9C9D1B2C7"
targetClass:
  fullClassName: "org.springframework.boot.logging.DelegatingLoggingSystemFactory"
methods:
- method:
    name: "getLoggingSystem"
    sourceCodeSignature: "LoggingSystem getLoggingSystem(ClassLoader classLoader)"
    returnType: "org.springframework.boot.logging.LoggingSystem"
    parameters:
    - name: "classLoader"
      type: "java.lang.ClassLoader"
    instructionFingerprint: "27A0209669149AC6947482AE4895CC79"
  paths:
  - pathId: "path1"
    testPathName: "getLoggingSystemWhenLoggingSystemIsNotNull"
    constructorSignature: "<init>(java.util.function.Function<java.lang.ClassLoader,java.util.List<org.springframework.boot.logging.LoggingSystemFactory>>)\
      \ : void"
    modelFingerprint: "6131896D98D3863CF8C900D04E41D0C6"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7F9498D322E66DBDA62E547033829B3B"
      valueUuid: "target"
    - type: "INPUT"
      name: "classLoader"
      modelFingerprint: "C286DE215DE7563ED1CD0033A63BD833"
      valueUuid: "classLoader"
    - type: "LOCAL_VARIABLE"
      name: "delegate"
      modelFingerprint: "8BA3CAC5FDE9100AB73DE570351980CC"
      valueUuid: "object2"
      methodExercised:
        expression: "getLoggingSystem(classLoader:classLoader):loggingSystem"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6F7BC5F5A8F4FA2E005CD1B62F14BB11"
      valueUuid: "loggingSystem"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Function.apply(java.lang.ClassLoader)\
        \ : java.lang.Object"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.DelegatingLoggingSystemFactory"
        parameters:
        - name: "delegates"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "delegates"
      valueType: "org.springframework.boot.logging.DelegatingLoggingSystemFactory"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggingSystemFactory"
      uuid: "object2"
      collectionUuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggingSystem"
      uuid: "loggingSystem"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggingSystem"
      uuid: "loggingSystem"
    branches:
    - lineNumber: 41
      expression: "this.delegates != null"
      range: "(41,43)-(41,64)"
      evaluatedAs: true
    - lineNumber: 42
      expression: "delegates != null"
      range: "(42,7)-(42,23)"
      evaluatedAs: true
    - lineNumber: 43
      expression: "for-each(delegates)"
      range: "(43,41)-(43,49)"
      evaluatedAs: true
    - lineNumber: 45
      expression: "loggingSystem != null"
      range: "(45,9)-(45,29)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getLoggingSystemWhenLoggingSystemIsNull"
    constructorSignature: "<init>(java.util.function.Function<java.lang.ClassLoader,java.util.List<org.springframework.boot.logging.LoggingSystemFactory>>)\
      \ : void"
    modelFingerprint: "256759F8F8B9449C4A9204D4F1BC9413"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7F9498D322E66DBDA62E547033829B3B"
      valueUuid: "target"
    - type: "INPUT"
      name: "classLoader"
      modelFingerprint: "C286DE215DE7563ED1CD0033A63BD833"
      valueUuid: "classLoader"
    - type: "LOCAL_VARIABLE"
      name: "delegate"
      modelFingerprint: "56051A445244C43357A1C706EB6D88CC"
      valueUuid: "object2"
      methodExercised:
        expression: "getLoggingSystem(classLoader:classLoader):loggingSystem"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "24CDB7C34FA615D54AFE108053C916B5"
      valueUuid: "loggingSystem2"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Function.apply(java.lang.ClassLoader)\
        \ : java.lang.Object"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.DelegatingLoggingSystemFactory"
        parameters:
        - name: "delegates"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Function"
            uuid: "delegates"
      valueType: "org.springframework.boot.logging.DelegatingLoggingSystemFactory"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggingSystemFactory"
      uuid: "object2"
      collectionUuid: "object"
      explicitCastNeeded: true
    - sapientType: "NULL"
      valueType: "org.springframework.boot.logging.LoggingSystem"
      uuid: "loggingSystem"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.lang.ClassLoader"
        method: "getPlatformClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.logging.LoggingSystem"
      uuid: "loggingSystem2"
      fixed: true
    branches:
    - lineNumber: 41
      expression: "this.delegates != null"
      range: "(41,43)-(41,64)"
      evaluatedAs: true
    - lineNumber: 42
      expression: "delegates != null"
      range: "(42,7)-(42,23)"
      evaluatedAs: true
    - lineNumber: 43
      expression: "for-each(delegates)"
      range: "(43,41)-(43,49)"
      evaluatedAs: true
    - lineNumber: 45
      expression: "loggingSystem != null"
      range: "(45,9)-(45,29)"
      evaluatedAs: false
