---
modelFingerprint: "26FE267AEA65BE2313AA474689635677"
targetClass:
  fullClassName: "org.springframework.boot.logging.LogFile"
methods:
- method:
    name: "applyToSystemProperties"
    sourceCodeSignature: "void applyToSystemProperties()"
    returnType: "void"
    instructionFingerprint: "FF9D3BED702635A10B671E98D9960CD5"
  paths:
  - pathId: "path1"
    testPathName: "applyToSystemPropertiesTest"
    constructorSignature: "<init>(java.lang.String,java.lang.String) : void"
    modelFingerprint: "72A4D27CF9053A073531A065792EBCA2"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "75F6A1641CB55D062C6D2E796DD87C45"
      valueUuid: "target"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "CF5B0CB56D37E80CBCBF79E41BCAB39F"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasLength(str:file):boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "6981B0A7E5DA1E6913A3E1EF568C42FF"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid1,message:uniqueUuid2):void"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "E4C3E69A063C27320C2486DA8EE9AF3D"
      methodExercised:
        expression: "applyTo(properties:properties):void2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.System.getProperties() : java.util.Properties"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LogFile"
        parameters:
        - name: "file"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "<value>"
            valueType: "java.lang.String"
            uuid: "file"
        - name: "path"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "<value>"
            valueType: "java.lang.String"
            uuid: "path"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "<value>"
      valueType: "java.lang.String"
      uuid: "file"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "File or Path must not be empty"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Properties"
      uuid: "properties"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "applyTo"
    sourceCodeSignature: "void applyTo(Properties properties)"
    returnType: "void"
    parameters:
    - name: "properties"
      type: "java.util.Properties"
    instructionFingerprint: "614BAF0F87BE550B9C7B2F18AE831982"
  paths:
  - pathId: "path1"
    testPathName: "applyToWhenStringUtilsHasLengthValue"
    constructorSignature: "<init>(java.lang.String,java.lang.String) : void"
    modelFingerprint: "63081ABA73AFC59FC09AC065A1B6429B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D46F757FC3484D0538E9BA24D10131B7"
      valueUuid: "target"
    - type: "INPUT"
      name: "properties"
      modelFingerprint: "EB59EEFA2FA541519D8A1C19309B75F4"
      valueUuid: "properties"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "357CCF99196BB32D51056E6B18EF18A0"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:file):boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "30372322C45E787D41751536D4E15141"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:path):boolean2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "6981B0A7E5DA1E6913A3E1EF568C42FF"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid3,message:uniqueUuid4):void"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "30372322C45E787D41751536D4E15141"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:path):boolean3"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "6F1A54954BB8787C90B3DC9AEEA38E66"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:string2):boolean4"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    - type: "STATE_VERIFICATION_PARAMETER"
      name: "properties"
      modelFingerprint: "A1360AC2B59ED6A309DC75E6FFB8DF42"
      valueUuid: "properties2"
      originalValueUuid: "properties"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_INTERNAL_METHOD_FAILURE"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LogFile"
        parameters:
        - name: "file"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "file"
        - name: "path"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "path"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Properties"
      uuid: "properties"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "file"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "File or Path must not be empty"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "LOG_PATH"
              valueType: "java.lang.String"
              uuid: "string"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "B"
              valueType: "java.lang.String"
              uuid: "path"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid5"
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "BASIC"
              content: !<regular>
                value: "LOG_FILE"
              valueType: "java.lang.String"
              uuid: "string3"
            value:
              sapientType: "BASIC"
              content: !<regular>
                value: "C"
              valueType: "java.lang.String"
              uuid: "string2"
          valueType: "java.util.Map$Entry"
          genericValueType: "java.lang.String,java.lang.String"
          uuid: "uniqueUuid6"
      valueType: "java.util.Properties"
      uuid: "properties2"
    branches:
    - lineNumber: 94
      expression: "StringUtils.hasLength(value)"
      range: "(94,7)-(94,34)"
      evaluatedAs: true
      internalMethodName: "put"
- method:
    name: "toString"
    sourceCodeSignature: "String toString()"
    returnType: "java.lang.String"
    instructionFingerprint: "5A3E4D8081D8ECD7512E02B969913996"
  paths:
  - pathId: "path1"
    testPathName: "toStringWhenStringUtilsHasLengthThisFile"
    constructorSignature: "<init>(java.lang.String,java.lang.String) : void"
    modelFingerprint: "80CAE2CD0ED4019746FB3835D4B7F35F"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D46F757FC3484D0538E9BA24D10131B7"
      valueUuid: "target"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "357CCF99196BB32D51056E6B18EF18A0"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:file):boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "30372322C45E787D41751536D4E15141"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:path):boolean2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "6981B0A7E5DA1E6913A3E1EF568C42FF"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid7,message:uniqueUuid8):void"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "343F4757C4E645C5D95B6C1E12B9BF12"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:file):boolean3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "53100A871679A25710750D746CFDC6EC"
      valueUuid: "file"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LogFile"
        parameters:
        - name: "file"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "file"
        - name: "path"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "path"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "file"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "File or Path must not be empty"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "file"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "file"
    branches:
    - lineNumber: 101
      expression: "StringUtils.hasLength(this.file)"
      range: "(101,7)-(101,38)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "toStringWhenStringUtilsNotHasLengthThisFile"
    constructorSignature: "<init>(java.lang.String,java.lang.String) : void"
    modelFingerprint: "152C10198A6E5883F40B1C04E0845C28"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "D46F757FC3484D0538E9BA24D10131B7"
      valueUuid: "target"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "357CCF99196BB32D51056E6B18EF18A0"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:file):boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "30372322C45E787D41751536D4E15141"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:path):boolean2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "6981B0A7E5DA1E6913A3E1EF568C42FF"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid9,message:uniqueUuid10):void"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "357CCF99196BB32D51056E6B18EF18A0"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:file):boolean3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D446A609419428DDEAA49A58091F3986"
      valueUuid: "string"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return new File(this.path, \\\"spring.log\\\").getPath();"
      lineNumber: 104
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: object of type File - Method: getPath"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LogFile"
        parameters:
        - name: "file"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "file"
        - name: "path"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "path"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "file"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "path"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "File or Path must not be empty"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "file"
    - sapientType: "BASIC"
      content: !<regular>
        value: "result1"
      valueType: "java.lang.String"
      uuid: "string"
    branches:
    - lineNumber: 101
      expression: "StringUtils.hasLength(this.file)"
      range: "(101,7)-(101,38)"
      evaluatedAs: false
- method:
    name: "get"
    sourceCodeSignature: "LogFile get(PropertyResolver propertyResolver)"
    returnType: "org.springframework.boot.logging.LogFile"
    parameters:
    - name: "propertyResolver"
      type: "org.springframework.core.env.PropertyResolver"
    instructionFingerprint: "6CE30E79776B0098CAB2C1E1EA60E776"
  paths:
  - pathId: "path4"
    testPathName: "getWhenStringUtilsNotHasLengthPath"
    modelFingerprint: "9BE7E0557C434403BE6A0BB9B51FFB9A"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "propertyResolver"
      modelFingerprint: "BFDB3CEFDA5ACD3211EA711227801CA3"
      valueUuid: "propertyResolver"
    - type: "LOCAL_VARIABLE"
      name: "propertyResolver"
      modelFingerprint: "DD4DB6F14E95D0BAC882041C3998B733"
      valueUuid: "propertyResolver"
      methodExercised:
        expression: "getProperty(key:uniqueUuid11):string"
    - type: "LOCAL_VARIABLE"
      name: "propertyResolver"
      modelFingerprint: "2D1C2B81A38EC07C78136D6B99F0A3EE"
      valueUuid: "propertyResolver"
      methodExercised:
        expression: "getProperty(key:uniqueUuid12):string2"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "25FD9920EAB36AEB9ABCDC4C1708075C"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:string):boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "C2604A03CA03BFAB37C0AD4EFDCC34F5"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:string2):boolean2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "518A9746190B43F7AB3098CDCF3FCECA"
      valueUuid: "logFile"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "propertyResolver"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "propertyResolver"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "logging.file.name"
      valueType: "java.lang.String"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "propertyResolver"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "logging.file.path"
      valueType: "java.lang.String"
      uuid: "uniqueUuid12"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "logFile"
      fixed: true
    branches:
    - lineNumber: 117
      expression: "StringUtils.hasLength(file)"
      range: "(117,7)-(117,33)"
      evaluatedAs: false
    - lineNumber: 117
      expression: "StringUtils.hasLength(path)"
      range: "(117,38)-(117,64)"
      evaluatedAs: false
  - pathId: "path1"
    testPathName: "getWhenStringUtilsNotHasLengthFileAndStringUtilsHasLengthPathAndDefaultBranch"
    modelFingerprint: "F89C7B02CD6D8B768FF0B9AD52B992C1"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "propertyResolver"
      modelFingerprint: "BFDB3CEFDA5ACD3211EA711227801CA3"
      valueUuid: "propertyResolver"
    - type: "LOCAL_VARIABLE"
      name: "propertyResolver"
      modelFingerprint: "DD4DB6F14E95D0BAC882041C3998B733"
      valueUuid: "propertyResolver"
      methodExercised:
        expression: "getProperty(key:uniqueUuid13):string"
    - type: "LOCAL_VARIABLE"
      name: "propertyResolver"
      modelFingerprint: "2D1C2B81A38EC07C78136D6B99F0A3EE"
      valueUuid: "propertyResolver"
      methodExercised:
        expression: "getProperty(key:uniqueUuid14):string2"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "25FD9920EAB36AEB9ABCDC4C1708075C"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:string):boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "7134351239132D3AEBB7FA91063DD3AC"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:string2):boolean2"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "25FD9920EAB36AEB9ABCDC4C1708075C"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:string):boolean3"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "7134351239132D3AEBB7FA91063DD3AC"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:string2):boolean4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "6981B0A7E5DA1E6913A3E1EF568C42FF"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid15,message:uniqueUuid16):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2F721B77A64766E945DD92B20EA31123"
      valueUuid: "logFile"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "propertyResolver"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "propertyResolver"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "logging.file.name"
      valueType: "java.lang.String"
      uuid: "uniqueUuid13"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "propertyResolver"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "logging.file.path"
      valueType: "java.lang.String"
      uuid: "uniqueUuid14"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid15"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "File or Path must not be empty"
      valueType: "java.lang.String"
      uuid: "uniqueUuid16"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LogFile"
        parameters:
        - name: "file"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "string"
        - name: "path"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "string2"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "logFile"
      fixed: true
    branches:
    - lineNumber: 117
      expression: "StringUtils.hasLength(file)"
      range: "(117,7)-(117,33)"
      evaluatedAs: false
    - lineNumber: 117
      expression: "StringUtils.hasLength(path)"
      range: "(117,38)-(117,64)"
      evaluatedAs: true
    - lineNumber: 72
      expression: "branch expression (line 72)"
      range: "(72,1)-(72,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
  - pathId: "path2"
    testPathName: "getWhenStringUtilsNotHasLengthFileAndStringUtilsHasLengthPathAndDefaultBranch2"
    modelFingerprint: "F2121ED7D46DECFEC6F5F66A93E7AC43"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "propertyResolver"
      modelFingerprint: "BFDB3CEFDA5ACD3211EA711227801CA3"
      valueUuid: "propertyResolver"
    - type: "LOCAL_VARIABLE"
      name: "propertyResolver"
      modelFingerprint: "DD4DB6F14E95D0BAC882041C3998B733"
      valueUuid: "propertyResolver"
      methodExercised:
        expression: "getProperty(key:uniqueUuid17):string"
    - type: "LOCAL_VARIABLE"
      name: "propertyResolver"
      modelFingerprint: "2D1C2B81A38EC07C78136D6B99F0A3EE"
      valueUuid: "propertyResolver"
      methodExercised:
        expression: "getProperty(key:uniqueUuid18):string2"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "25FD9920EAB36AEB9ABCDC4C1708075C"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:string):boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "7134351239132D3AEBB7FA91063DD3AC"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:string2):boolean2"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "25FD9920EAB36AEB9ABCDC4C1708075C"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:string):boolean3"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "C2604A03CA03BFAB37C0AD4EFDCC34F5"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:string2):boolean4"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "41B02C806FF6319A9EAF129CFDB1F859"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid19,message:uniqueUuid20):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2F721B77A64766E945DD92B20EA31123"
      valueUuid: "logFile"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "propertyResolver"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "propertyResolver"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "logging.file.name"
      valueType: "java.lang.String"
      uuid: "uniqueUuid17"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertyResolver"
      uuid: "propertyResolver"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "logging.file.path"
      valueType: "java.lang.String"
      uuid: "uniqueUuid18"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid19"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "File or Path must not be empty"
      valueType: "java.lang.String"
      uuid: "uniqueUuid20"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LogFile"
        parameters:
        - name: "file"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "string"
        - name: "path"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "string2"
      valueType: "org.springframework.boot.logging.LogFile"
      uuid: "logFile"
      fixed: true
    branches:
    - lineNumber: 117
      expression: "StringUtils.hasLength(file)"
      range: "(117,7)-(117,33)"
      evaluatedAs: false
    - lineNumber: 117
      expression: "StringUtils.hasLength(path)"
      range: "(117,38)-(117,64)"
      evaluatedAs: true
    - lineNumber: 72
      expression: "branch expression (line 72)"
      range: "(72,1)-(72,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
