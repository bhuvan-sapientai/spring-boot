---
modelFingerprint: "BB9E008D5293B857BDD0D1DE006EFEDB"
targetClass:
  fullClassName: "org.springframework.boot.logging.CorrelationIdFormatter"
methods:
- method:
    name: "format"
    sourceCodeSignature: "String format(UnaryOperator<String> resolver)"
    returnType: "java.lang.String"
    parameters:
    - name: "resolver"
      type: "java.util.function.UnaryOperator"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
    instructionFingerprint: "BC67D9B1977EC7096C1198D1A3800FD0"
  paths:
  - pathId: "path1"
    testPathName: "formatTest"
    constructorSignature: "of(java.lang.String) : org.springframework.boot.logging.CorrelationIdFormatter"
    modelFingerprint: "8FA3238F959A35CACA0C8E5748BE19DD"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "4BCD276F1F81594C443006D1DBBB44A1"
      valueUuid: "target"
    - type: "INPUT"
      name: "resolver"
      modelFingerprint: "5CC78FBAA0ACB7EC2876CA58801A8A95"
      valueUuid: "resolver"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "9300ABCBE7916ECF5E5E27974AAB069D"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:spec):boolean3"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "B071CFD3BA457AFAED87EDD05DF34099"
      methodExercised:
        expression: "formatTo(resolver:resolver,appendable:stringBuilder):void"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D446A609419428DDEAA49A58091F3986"
      valueUuid: "string4"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.logging.CorrelationIdFormatter"
        method: "of"
        methodParameters:
        - name: "spec"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "E"
            valueType: "java.lang.String"
            uuid: "spec"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.util.function.UnaryOperator"
      uuid: "resolver"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "E"
      valueType: "java.lang.String"
      uuid: "spec"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "java.util.function.UnaryOperator"
      uuid: "resolver"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.StringBuilder"
        parameters: []
      valueType: "java.lang.StringBuilder"
      uuid: "stringBuilder"
    - sapientType: "BASIC"
      content: !<regular>
        value: ""
      valueType: "java.lang.String"
      uuid: "string4"
- method:
    name: "formatTo"
    sourceCodeSignature: "void formatTo(UnaryOperator<String> resolver, Appendable\
      \ appendable)"
    returnType: "void"
    parameters:
    - name: "resolver"
      type: "java.util.function.UnaryOperator"
    - name: "appendable"
      type: "java.lang.Appendable"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
    instructionFingerprint: "A824AFD7358B3C93BD3340DA3F0D628E"
  paths:
  - pathId: "path2"
    testPathName: "formatToWhenThisPartsStreamIsEmptyAnyMatchCanResolve"
    constructorSignature: "of(java.lang.String) : org.springframework.boot.logging.CorrelationIdFormatter"
    modelFingerprint: "B4A796911BB67C6624EE92B24DF2C953"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "7BCF81742AAD244844FA9AEB0200AD9B"
      valueUuid: "target"
    - type: "INPUT"
      name: "resolver"
      modelFingerprint: "5CC78FBAA0ACB7EC2876CA58801A8A95"
      valueUuid: "resolver"
    - type: "INPUT"
      name: "appendable"
      modelFingerprint: "4B20AE716D5D8C67534CDCC586A54568"
      valueUuid: "appendable"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "3F44E5544DC0E28888E2760F19E802DC"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:spec):boolean3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "part"
      modelFingerprint: "B12F5DDB89B3F26DED569499996E674A"
      valueUuid: "correlationIdFormatter.Part"
      methodExercised:
        expression: "name():string4"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "5B1CABAF6FDAA8951C1C207D1ABE7A06"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:object2):boolean5"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "part"
      modelFingerprint: "B12F5DDB89B3F26DED569499996E674A"
      valueUuid: "correlationIdFormatter.Part2"
      methodExercised:
        expression: "name():string5"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "ABEABA94EE13F7020E948EDC72412EF6"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:object3):boolean6"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.UnaryOperator.apply(java.lang.String)\
        \ : java.lang.Object"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.logging.CorrelationIdFormatter"
        method: "of"
        methodParameters:
        - name: "spec"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "C"
            valueType: "java.lang.String"
            uuid: "spec"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.util.function.UnaryOperator"
      uuid: "resolver"
    - sapientType: "MOCK"
      valueType: "java.lang.Appendable"
      uuid: "appendable"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "spec"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter$Part"
      uuid: "correlationIdFormatter.Part"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_name1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean5"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "D"
      valueType: "java.lang.String"
      uuid: "object2"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter$Part"
      uuid: "correlationIdFormatter.Part2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_name1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "E"
      valueType: "java.lang.String"
      uuid: "object3"
      explicitCastNeeded: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 100
      expression: "branch expression (line 100)"
      evaluatedAs: false
    - lineNumber: 102
      expression: "this.parts.stream().anyMatch(canResolve)"
      range: "(102,8)-(102,47)"
      evaluatedAs: false
  - pathId: "path4"
    testPathName: "formatToWhenCaughtIOExceptionThrowsUncheckedIOException"
    constructorSignature: "of(java.lang.String) : org.springframework.boot.logging.CorrelationIdFormatter"
    modelFingerprint: "FE65EC792EDEE919B68F893370480978"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "7BCF81742AAD244844FA9AEB0200AD9B"
      valueUuid: "target"
    - type: "INPUT"
      name: "resolver"
      modelFingerprint: "5CC78FBAA0ACB7EC2876CA58801A8A95"
      valueUuid: "resolver"
    - type: "INPUT"
      name: "appendable"
      modelFingerprint: "4B20AE716D5D8C67534CDCC586A54568"
      valueUuid: "appendable"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "3F44E5544DC0E28888E2760F19E802DC"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:spec):boolean3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "part"
      modelFingerprint: "B12F5DDB89B3F26DED569499996E674A"
      valueUuid: "correlationIdFormatter.Part"
      methodExercised:
        expression: "name():string4"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "5B1CABAF6FDAA8951C1C207D1ABE7A06"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:object2):boolean5"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "part"
      modelFingerprint: "B12F5DDB89B3F26DED569499996E674A"
      valueUuid: "correlationIdFormatter.Part2"
      methodExercised:
        expression: "name():string5"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "ABEABA94EE13F7020E948EDC72412EF6"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasLength(str:object3):boolean6"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "appendable"
      modelFingerprint: "E76580E09E4C89FDA19F89E1EC46DDAA"
      valueUuid: "appendable"
      methodExercised:
        expression: "append(arg0:string3):appendable2"
        throwsExceptions:
        - "java.io.IOException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7015352F7EFDB52F44001EBF4E496C80"
      valueUuid: "uncheckedIOException"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.UnaryOperator.apply(java.lang.String)\
        \ : java.lang.Object"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.logging.CorrelationIdFormatter"
        method: "of"
        methodParameters:
        - name: "spec"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "C"
            valueType: "java.lang.String"
            uuid: "spec"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.util.function.UnaryOperator"
      uuid: "resolver"
    - sapientType: "MOCK"
      valueType: "java.lang.Appendable"
      uuid: "appendable"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "spec"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter$Part"
      uuid: "correlationIdFormatter.Part"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_name1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean5"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "D"
      valueType: "java.lang.String"
      uuid: "object2"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter$Part"
      uuid: "correlationIdFormatter.Part2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_name1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "E"
      valueType: "java.lang.String"
      uuid: "object3"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "java.lang.Appendable"
      uuid: "appendable"
    - sapientType: "MOCK"
      valueType: "java.lang.Appendable"
      uuid: "appendable2"
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.io.UncheckedIOException"
        parameters:
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.IOException"
              parameters: []
            valueType: "java.io.IOException"
            uuid: "iOException"
      valueType: "java.io.UncheckedIOException"
      uuid: "uncheckedIOException"
      fixed: true
    branches:
    - lineNumber: 100
      expression: "branch expression (line 100)"
      evaluatedAs: false
    - lineNumber: 102
      expression: "this.parts.stream().anyMatch(canResolve)"
      range: "(102,8)-(102,47)"
      evaluatedAs: false
    - lineNumber: 116
      expression: "catch-exception (IOException)"
      range: "(116,3)-(116,23)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
  - pathId: "path1"
    testPathName: "formatToWhenIteratorHasNext"
    constructorSignature: "of(java.lang.String) : org.springframework.boot.logging.CorrelationIdFormatter"
    modelFingerprint: "A8E0391E95EFCBC8F21ABFB7C535EC06"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "4BCD276F1F81594C443006D1DBBB44A1"
      valueUuid: "target"
    - type: "INPUT"
      name: "resolver"
      modelFingerprint: "5CC78FBAA0ACB7EC2876CA58801A8A95"
      valueUuid: "resolver"
    - type: "INPUT"
      name: "appendable"
      modelFingerprint: "4B20AE716D5D8C67534CDCC586A54568"
      valueUuid: "appendable"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "9300ABCBE7916ECF5E5E27974AAB069D"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:spec):boolean3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "part"
      modelFingerprint: "B12F5DDB89B3F26DED569499996E674A"
      valueUuid: "correlationIdFormatter.Part"
      methodExercised:
        expression: "name():string4"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "59238EF088E2315FBB188F7B0B3A17C2"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasLength(str:object2):boolean5"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F38F905B2B91432E9021B4F52AC316CC"
      valueUuid: "correlationIdFormatter.Part"
      methodExercised:
        expression: "resolve(resolver:resolver):string5"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F38F905B2B91432E9021B4F52AC316CC"
      valueUuid: "correlationIdFormatter.Part2"
      methodExercised:
        expression: "resolve(resolver:resolver):string6"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.UnaryOperator.apply(java.lang.String)\
        \ : java.lang.Object"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.logging.CorrelationIdFormatter"
        method: "of"
        methodParameters:
        - name: "spec"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "E"
            valueType: "java.lang.String"
            uuid: "spec"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.util.function.UnaryOperator"
      uuid: "resolver"
    - sapientType: "MOCK"
      valueType: "java.lang.Appendable"
      uuid: "appendable"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "E"
      valueType: "java.lang.String"
      uuid: "spec"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter$Part"
      uuid: "correlationIdFormatter.Part"
      collectionUuid: "list3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_name1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean5"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "F"
      valueType: "java.lang.String"
      uuid: "object2"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter$Part"
      uuid: "correlationIdFormatter.Part"
      collectionUuid: "list3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_resolve1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "MOCK"
      valueType: "java.util.function.UnaryOperator"
      uuid: "resolver"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter$Part"
      uuid: "correlationIdFormatter.Part2"
      collectionUuid: "list3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_resolve1"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "MOCK"
      valueType: "java.util.function.UnaryOperator"
      uuid: "resolver"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 100
      expression: "branch expression (line 100)"
      evaluatedAs: true
    - lineNumber: 102
      expression: "this.parts.stream().anyMatch(canResolve)"
      range: "(102,8)-(102,47)"
      evaluatedAs: true
    - lineNumber: 104
      expression: "iterator.hasNext()"
      range: "(104,59)-(104,76)"
      evaluatedAs: true
    - lineNumber: 106
      expression: "iterator.hasNext()"
      range: "(106,10)-(106,27)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "formatToWhenIteratorHasNextAndCaughtIOExceptionThrowsUncheckedIOException"
    constructorSignature: "of(java.lang.String) : org.springframework.boot.logging.CorrelationIdFormatter"
    modelFingerprint: "FDF21F81B0BE8F02C06A1E1B38CB8757"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "4BCD276F1F81594C443006D1DBBB44A1"
      valueUuid: "target"
    - type: "INPUT"
      name: "resolver"
      modelFingerprint: "5CC78FBAA0ACB7EC2876CA58801A8A95"
      valueUuid: "resolver"
    - type: "INPUT"
      name: "appendable"
      modelFingerprint: "4B20AE716D5D8C67534CDCC586A54568"
      valueUuid: "appendable"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "9300ABCBE7916ECF5E5E27974AAB069D"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:spec):boolean3"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "part"
      modelFingerprint: "B12F5DDB89B3F26DED569499996E674A"
      valueUuid: "correlationIdFormatter.Part"
      methodExercised:
        expression: "name():string4"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "59238EF088E2315FBB188F7B0B3A17C2"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasLength(str:object2):boolean5"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "appendable"
      modelFingerprint: "F9E77040EE457665C03FA8F56C31D10F"
      valueUuid: "appendable"
      methodExercised:
        expression: "append(arg0:uniqueUuid1):appendable2"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F38F905B2B91432E9021B4F52AC316CC"
      valueUuid: "correlationIdFormatter.Part"
      methodExercised:
        expression: "resolve(resolver:resolver):string5"
    - type: "LOCAL_VARIABLE"
      name: "appendable"
      modelFingerprint: "57F766C8D2C5D2DCBD4181EBB42F3E94"
      valueUuid: "appendable"
      methodExercised:
        expression: "append(arg0:string5):appendable3"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      name: "appendable"
      modelFingerprint: "B58375B3D6936503BC2B18915422EAD0"
      valueUuid: "appendable"
      methodExercised:
        expression: "append(arg0:uniqueUuid2):appendable4"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F38F905B2B91432E9021B4F52AC316CC"
      valueUuid: "correlationIdFormatter.Part2"
      methodExercised:
        expression: "resolve(resolver:resolver):string6"
    - type: "LOCAL_VARIABLE"
      name: "appendable"
      modelFingerprint: "57F766C8D2C5D2DCBD4181EBB42F3E94"
      valueUuid: "appendable"
      methodExercised:
        expression: "append(arg0:string6):appendable5"
        throwsExceptions:
        - "java.io.IOException"
    - type: "LOCAL_VARIABLE"
      name: "appendable"
      modelFingerprint: "25327D6EFE30C7C8E1B5935CA9208888"
      valueUuid: "appendable"
      methodExercised:
        expression: "append(arg0:uniqueUuid3):appendable6"
        throwsExceptions:
        - "java.io.IOException"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7015352F7EFDB52F44001EBF4E496C80"
      valueUuid: "uncheckedIOException"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.UnaryOperator.apply(java.lang.String)\
        \ : java.lang.Object"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.logging.CorrelationIdFormatter"
        method: "of"
        methodParameters:
        - name: "spec"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "E"
            valueType: "java.lang.String"
            uuid: "spec"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.util.function.UnaryOperator"
      uuid: "resolver"
    - sapientType: "MOCK"
      valueType: "java.lang.Appendable"
      uuid: "appendable"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "E"
      valueType: "java.lang.String"
      uuid: "spec"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter$Part"
      uuid: "correlationIdFormatter.Part"
      collectionUuid: "list3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_name1"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean5"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "F"
      valueType: "java.lang.String"
      uuid: "object2"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "java.lang.Appendable"
      uuid: "appendable"
    - sapientType: "MOCK"
      valueType: "java.lang.Appendable"
      uuid: "appendable2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "["
      valueType: "char"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter$Part"
      uuid: "correlationIdFormatter.Part"
      collectionUuid: "list3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_resolve1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "MOCK"
      valueType: "java.util.function.UnaryOperator"
      uuid: "resolver"
    - sapientType: "MOCK"
      valueType: "java.lang.Appendable"
      uuid: "appendable"
    - sapientType: "MOCK"
      valueType: "java.lang.Appendable"
      uuid: "appendable3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_resolve1"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "MOCK"
      valueType: "java.lang.Appendable"
      uuid: "appendable"
    - sapientType: "MOCK"
      valueType: "java.lang.Appendable"
      uuid: "appendable4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "-"
      valueType: "char"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter$Part"
      uuid: "correlationIdFormatter.Part2"
      collectionUuid: "list3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_resolve1"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "MOCK"
      valueType: "java.util.function.UnaryOperator"
      uuid: "resolver"
    - sapientType: "MOCK"
      valueType: "java.lang.Appendable"
      uuid: "appendable"
    - sapientType: "MOCK"
      valueType: "java.lang.Appendable"
      uuid: "appendable5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_resolve1"
      valueType: "java.lang.String"
      uuid: "string6"
    - sapientType: "MOCK"
      valueType: "java.lang.Appendable"
      uuid: "appendable"
    - sapientType: "MOCK"
      valueType: "java.lang.Appendable"
      uuid: "appendable6"
    - sapientType: "BASIC"
      content: !<regular>
        value: "] "
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.io.UncheckedIOException"
        parameters:
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.IOException"
              parameters: []
            valueType: "java.io.IOException"
            uuid: "iOException"
      valueType: "java.io.UncheckedIOException"
      uuid: "uncheckedIOException"
      fixed: true
    branches:
    - lineNumber: 100
      expression: "branch expression (line 100)"
      evaluatedAs: true
    - lineNumber: 102
      expression: "this.parts.stream().anyMatch(canResolve)"
      range: "(102,8)-(102,47)"
      evaluatedAs: true
    - lineNumber: 104
      expression: "iterator.hasNext()"
      range: "(104,59)-(104,76)"
      evaluatedAs: true
    - lineNumber: 106
      expression: "iterator.hasNext()"
      range: "(106,10)-(106,27)"
      evaluatedAs: true
    - lineNumber: 116
      expression: "catch-exception (IOException)"
      range: "(116,3)-(116,23)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
- method:
    name: "toString"
    sourceCodeSignature: "String toString()"
    returnType: "java.lang.String"
    instructionFingerprint: "98B98103F44198490C98F72F1ABDACE5"
  paths:
  - pathId: "path1"
    testPathName: "toStringTest"
    constructorSignature: "of(java.lang.String) : org.springframework.boot.logging.CorrelationIdFormatter"
    modelFingerprint: "3ABB0621F9BB59C566FA7D236C6B0B8C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "4BCD276F1F81594C443006D1DBBB44A1"
      valueUuid: "target"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "9300ABCBE7916ECF5E5E27974AAB069D"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:spec):boolean3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A532CEA47A21927F3197E306A68DCB82"
      valueUuid: "object2"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.logging.CorrelationIdFormatter"
        method: "of"
        methodParameters:
        - name: "spec"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "E"
            valueType: "java.lang.String"
            uuid: "spec"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "E"
      valueType: "java.lang.String"
      uuid: "spec"
    - sapientType: "BASIC"
      content: !<regular>
        value: "correlationIdFormatter.Part,correlationIdFormatter.Part2"
      valueType: "java.lang.String"
      uuid: "object2"
      collectionUuid: "list5"
- method:
    name: "of"
    sourceCodeSignature: "CorrelationIdFormatter of(String spec)"
    returnType: "org.springframework.boot.logging.CorrelationIdFormatter"
    parameters:
    - name: "spec"
      type: "java.lang.String"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "D53FF14725CE8B84700BFC996743EB16"
  paths:
  - pathId: "path1"
    testPathName: "ofWhenStringUtilsHasTextSpec"
    modelFingerprint: "3D1736950995FDD5F1E299B0C7CEB9ED"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "spec"
      modelFingerprint: "2BAD81A3EA3367CC9759F78D03630297"
      valueUuid: "uniqueUuid4"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "6F5F21F7BE6AA652F4D5A477D55319AE"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:uniqueUuid5):boolean3"
        staticAccess: true
    - type: "STATIC"
      name: "CorrelationIdFormatter.class"
      modelFingerprint: "9BD8FAD9427961DF761511442FD36BE3"
      valueUuid: "CorrelationIdFormatter.class"
      methodExercised:
        expression: "of(spec:list5):correlationIdFormatter3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "497920629C4FE71BCCA3DAF955A7A36C"
      valueUuid: "correlationIdFormatter3"
    disabled: false
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "traceId(32),spanId(16)"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "traceId(32),spanId(16)"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter"
      uuid: "CorrelationIdFormatter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter"
      uuid: "correlationIdFormatter3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "traceId(32)"
          valueType: "java.lang.String"
          uuid: "uniqueUuid6"
          fixed: true
        - sapientType: "BASIC"
          content: !<regular>
            value: "spanId(16)"
          valueType: "java.lang.String"
          uuid: "uniqueUuid7"
          fixed: true
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "list5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter"
      uuid: "correlationIdFormatter3"
    branches:
    - lineNumber: 133
      expression: "!StringUtils.hasText(spec)"
      range: "(133,12)-(133,37)"
      evaluatedAs: false
  - pathId: "path2"
    testPathName: "ofWhenCaughtExceptionThrowsIllegalStateException"
    modelFingerprint: "A0FC556EEC8785E623F42B0C29839174"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "spec"
      modelFingerprint: "2BAD81A3EA3367CC9759F78D03630297"
      valueUuid: "uniqueUuid1"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "6F5F21F7BE6AA652F4D5A477D55319AE"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:uniqueUuid2):boolean3"
        staticAccess: true
    - type: "STATIC"
      name: "CorrelationIdFormatter.class"
      modelFingerprint: "B605049624F6170F8C5D6DA82C2D583A"
      valueUuid: "CorrelationIdFormatter.class"
      methodExercised:
        expression: "of(spec:list5):correlationIdFormatter3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0F0385B803B018FC53DEA4A224F27719"
      valueUuid: "illegalStateException"
    disabled: false
    allValues:
    - sapientType: "BASIC"
      content: !<regular>
        value: "traceId(32),spanId(16)"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "traceId(32),spanId(16)"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter"
      uuid: "CorrelationIdFormatter.class"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.RuntimeException"
        parameters: []
      valueType: "java.lang.RuntimeException"
      uuid: "correlationIdFormatter3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "traceId(32)"
          valueType: "java.lang.String"
          uuid: "uniqueUuid3"
          fixed: true
        - sapientType: "BASIC"
          content: !<regular>
            value: "spanId(16)"
          valueType: "java.lang.String"
          uuid: "uniqueUuid4"
          fixed: true
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "list5"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable to parse correlation formatter spec 'traceId(32),spanId(16)'"
            valueType: "java.lang.String"
            uuid: "string4"
        - name: "cause"
          value:
            sapientType: "EXCEPTION"
            content: !<new>
              target: "java.lang.RuntimeException"
              parameters: []
            valueType: "java.lang.RuntimeException"
            uuid: "correlationIdFormatter3"
      valueType: "java.lang.IllegalStateException"
      uuid: "illegalStateException"
      fixed: true
    branches:
    - lineNumber: 133
      expression: "!StringUtils.hasText(spec)"
      range: "(133,12)-(133,37)"
      evaluatedAs: false
    - lineNumber: 135
      expression: "catch-exception (Exception)"
      range: "(135,3)-(135,21)"
      evaluatedAs: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
- method:
    name: "of"
    sourceCodeSignature: "CorrelationIdFormatter of(String[] spec)"
    returnType: "org.springframework.boot.logging.CorrelationIdFormatter"
    parameters:
    - name: "spec"
      type: "java.lang.String[]"
    instructionFingerprint: "AD9933225E377517D32BB8B14B14B91B"
  paths:
  - pathId: "path1"
    testPathName: "of1WhenSpecIsNotNull"
    modelFingerprint: "9B3C352D5DE3F091A7D3A61D4343BCBD"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "spec"
      modelFingerprint: "4C36BE95E61A633B0305B54DC60FA1EE"
      valueUuid: "spec"
    - type: "STATIC"
      name: "CorrelationIdFormatter.class"
      modelFingerprint: "2D1B76DE69126D2A6A9B5DE07E345C8E"
      valueUuid: "CorrelationIdFormatter.class"
      methodExercised:
        expression: "of(spec:list5):correlationIdFormatter3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "497920629C4FE71BCCA3DAF955A7A36C"
      valueUuid: "correlationIdFormatter3"
    disabled: false
    allValues:
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "spec"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter"
      uuid: "CorrelationIdFormatter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter"
      uuid: "correlationIdFormatter3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "ARRAY"
          content: !<array>
            values: {}
          valueType: "java.lang.String[]"
          uuid: "spec"
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "list5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter"
      uuid: "correlationIdFormatter3"
    branches:
    - lineNumber: 146
      expression: "spec != null"
      range: "(146,14)-(146,25)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "of1WhenSpecIsNull"
    modelFingerprint: "46CE2EC91E184089E19F5B6DE6ACE2F4"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "spec"
      modelFingerprint: "D80DF2BF5C72553EC9A2D5ADF8CEDC64"
      valueUuid: "spec"
    - type: "STATIC"
      name: "CorrelationIdFormatter.class"
      modelFingerprint: "C1B2452DBD63AACBABD646AB653C04C4"
      valueUuid: "CorrelationIdFormatter.class"
      methodExercised:
        expression: "of(spec:list5):correlationIdFormatter3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "497920629C4FE71BCCA3DAF955A7A36C"
      valueUuid: "correlationIdFormatter3"
    disabled: false
    allValues:
    - sapientType: "NULL"
      valueType: "java.lang.String[]"
      uuid: "spec"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter"
      uuid: "CorrelationIdFormatter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter"
      uuid: "correlationIdFormatter3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "list5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter"
      uuid: "correlationIdFormatter3"
    branches:
    - lineNumber: 146
      expression: "spec != null"
      range: "(146,14)-(146,25)"
      evaluatedAs: false
- method:
    name: "of"
    sourceCodeSignature: "CorrelationIdFormatter of(Collection<String> spec)"
    returnType: "org.springframework.boot.logging.CorrelationIdFormatter"
    parameters:
    - name: "spec"
      type: "java.util.Collection"
    instructionFingerprint: "6C0B875114C4B0FA93CC6551B064AB23"
  paths:
  - pathId: "path1"
    testPathName: "of2WhenCollectionUtilsNotIsEmptySpec"
    modelFingerprint: "3FB44F35927B89507FB89B77F5296EE7"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "spec"
      modelFingerprint: "3E576F0F71DC0B7D9A78B006B6B1291D"
      valueUuid: "list"
    - type: "STATIC"
      name: "CollectionUtils.class.real"
      modelFingerprint: "491504E0C8A5F31B6A1405DB1D7AAE20"
      valueUuid: "CollectionUtils.class.real"
      methodExercised:
        expression: "isEmpty(collection:list):boolean3"
        staticAccess: true
    - type: "STATIC"
      name: "CorrelationIdFormatter.Part.class"
      modelFingerprint: "4E56306B0E4374DFFAF5D06825C49006"
      valueUuid: "CorrelationIdFormatter.Part.class"
      methodExercised:
        expression: "of(null:uniqueUuid16):correlationIdFormatter.Part3"
        staticAccess: true
    - type: "STATIC"
      name: "CorrelationIdFormatter.Part.class"
      modelFingerprint: "9F67F0229E6F295ED353825C3C536C2C"
      valueUuid: "CorrelationIdFormatter.Part.class"
      methodExercised:
        expression: "of(null:uniqueUuid17):correlationIdFormatter.Part4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "3A9B18B5B7650A02D260C98AF7C9D12A"
      valueUuid: "correlationIdFormatter.Part3"
      methodExercised:
        expression: "blank():string4"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "FC1092102642DEB7F9F1E0F4955679C7"
      valueUuid: "correlationIdFormatter.Part4"
      methodExercised:
        expression: "blank():string5"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "213A04A97B4DEB357E58EA684DE26B8E"
      valueUuid: "correlationIdFormatter3"
    disabled: false
    allValues:
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "traceId(32)"
          valueType: "java.lang.String"
          uuid: "uniqueUuid14"
          fixed: true
        - sapientType: "BASIC"
          content: !<regular>
            value: "spanId(16)"
          valueType: "java.lang.String"
          uuid: "uniqueUuid15"
          fixed: true
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "list"
    - sapientType: "REAL"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "BASIC"
          content: !<regular>
            value: "traceId(32)"
          valueType: "java.lang.String"
          uuid: "uniqueUuid14"
          fixed: true
        - sapientType: "BASIC"
          content: !<regular>
            value: "spanId(16)"
          valueType: "java.lang.String"
          uuid: "uniqueUuid15"
          fixed: true
      valueType: "java.util.List"
      genericValueType: "java.lang.String"
      uuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter$Part"
      uuid: "CorrelationIdFormatter.Part.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter$Part"
      uuid: "correlationIdFormatter.Part3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "traceId(32)"
      valueType: "java.lang.String"
      uuid: "uniqueUuid16"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter$Part"
      uuid: "CorrelationIdFormatter.Part.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter$Part"
      uuid: "correlationIdFormatter.Part4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spanId(16)"
      valueType: "java.lang.String"
      uuid: "uniqueUuid17"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter$Part"
      uuid: "correlationIdFormatter.Part3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "C"
      valueType: "java.lang.String"
      uuid: "string4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter$Part"
      uuid: "correlationIdFormatter.Part4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "D"
      valueType: "java.lang.String"
      uuid: "string5"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.CorrelationIdFormatter"
        parameters:
        - name: "parts"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.logging.CorrelationIdFormatter$Part"
                uuid: "correlationIdFormatter.Part3"
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.logging.CorrelationIdFormatter$Part"
                uuid: "correlationIdFormatter.Part4"
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.logging.CorrelationIdFormatter$Part"
            uuid: "list6"
            collectionUuid: "list5"
      valueType: "org.springframework.boot.logging.CorrelationIdFormatter"
      uuid: "correlationIdFormatter3"
      fixed: true
    branches:
    - lineNumber: 155
      expression: "CollectionUtils.isEmpty(spec)"
      range: "(155,7)-(155,35)"
      evaluatedAs: false
