---
modelFingerprint: "E886AE32580AC28DC9EB4B27FD241215"
targetClass:
  fullClassName: "org.springframework.boot.logging.LoggerConfiguration"
methods:
- method:
    name: "getName"
    sourceCodeSignature: "String getName()"
    returnType: "java.lang.String"
    instructionFingerprint: "C90C2589CCC57FC1671FB67D2AEEC0AE"
  paths:
  - pathId: "path1"
    testPathName: "getNameTest"
    constructorSignature: "<init>(java.lang.String,org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration,org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration)\
      \ : void"
    modelFingerprint: "987282C1CB1549C4B0D60DA525D92115"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getConfiguredLevel"
    sourceCodeSignature: "LogLevel getConfiguredLevel()"
    returnType: "org.springframework.boot.logging.LogLevel"
    instructionFingerprint: "EC9CE4EB7B28CF99C233BE693C8FD6A9"
  paths:
  - pathId: "path1"
    testPathName: "getConfiguredLevelWhenConfigurationIsNotNull"
    constructorSignature: "<init>(java.lang.String,org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration,org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration)\
      \ : void"
    modelFingerprint: "937F8E0A98BCB9387B6B21274F6D82D8"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2DE0218D996446AE3AA5B425446EE0FA"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "49586823591C9EA778F39043B5133FE5"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid3):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "103605CBB3544E76E089A6C703F15E9E"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:inheritedLevelConfiguration,message:uniqueUuid4):void2"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "0BE27F86A4457BB9EFC82E943EBFCBBF"
      methodExercised:
        expression: "getLevelConfiguration(scope:Enum-org.springframework.boot.logging.LoggerConfiguration$ConfigurationScope-DIRECT):loggerConfiguration.LevelConfiguration"
    - type: "LOCAL_VARIABLE"
      name: "configuration"
      modelFingerprint: "997CB2935D9D02AF1B813538A710B19A"
      valueUuid: "loggerConfiguration.LevelConfiguration"
      methodExercised:
        expression: "getLevel():logLevel"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A52305709520DB4E07BF18708C6FE1B1"
      valueUuid: "logLevel"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LoggerConfiguration"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "name"
        - name: "levelConfiguration"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
            uuid: "levelConfiguration"
        - name: "inheritedLevelConfiguration"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
            uuid: "inheritedLevelConfiguration"
      valueType: "org.springframework.boot.logging.LoggerConfiguration"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
      uuid: "inheritedLevelConfiguration"
    - sapientType: "BASIC"
      content: !<regular>
        value: "InheritedLevelConfiguration must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
      uuid: "loggerConfiguration.LevelConfiguration"
    - sapientType: "ENUM"
      content: !<regular>
        value: "DIRECT"
      valueType: "org.springframework.boot.logging.LoggerConfiguration$ConfigurationScope"
      uuid: "Enum-org.springframework.boot.logging.LoggerConfiguration$ConfigurationScope-DIRECT"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
      uuid: "loggerConfiguration.LevelConfiguration"
    - sapientType: "ENUM"
      content: !<regular>
        value: "TRACE"
      valueType: "org.springframework.boot.logging.LogLevel"
      uuid: "logLevel"
    - sapientType: "ENUM"
      content: !<regular>
        value: "TRACE"
      valueType: "org.springframework.boot.logging.LogLevel"
      uuid: "logLevel"
    branches:
    - lineNumber: 84
      expression: "configuration != null"
      range: "(84,11)-(84,31)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getConfiguredLevelWhenConfigurationIsNull"
    constructorSignature: "<init>(java.lang.String,org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration,org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration)\
      \ : void"
    modelFingerprint: "98A92541DF2D851E631DD00CD2ADF680"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2DE0218D996446AE3AA5B425446EE0FA"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "49586823591C9EA778F39043B5133FE5"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid5):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "103605CBB3544E76E089A6C703F15E9E"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:inheritedLevelConfiguration,message:uniqueUuid6):void2"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "42C24ECF9D8E9D38C79FFA4AEDF70A12"
      methodExercised:
        expression: "getLevelConfiguration(scope:Enum-org.springframework.boot.logging.LoggerConfiguration$ConfigurationScope-DIRECT):loggerConfiguration.LevelConfiguration"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "51C7D683DA38432E0945C821D10E51A5"
      valueUuid: "logLevel"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LoggerConfiguration"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "name"
        - name: "levelConfiguration"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
            uuid: "levelConfiguration"
        - name: "inheritedLevelConfiguration"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
            uuid: "inheritedLevelConfiguration"
      valueType: "org.springframework.boot.logging.LoggerConfiguration"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
      uuid: "inheritedLevelConfiguration"
    - sapientType: "BASIC"
      content: !<regular>
        value: "InheritedLevelConfiguration must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
      uuid: "loggerConfiguration.LevelConfiguration"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "DIRECT"
      valueType: "org.springframework.boot.logging.LoggerConfiguration$ConfigurationScope"
      uuid: "Enum-org.springframework.boot.logging.LoggerConfiguration$ConfigurationScope-DIRECT"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.boot.logging.LogLevel"
      uuid: "logLevel"
      fixed: true
    branches:
    - lineNumber: 84
      expression: "configuration != null"
      range: "(84,11)-(84,31)"
      evaluatedAs: false
- method:
    name: "getEffectiveLevel"
    sourceCodeSignature: "LogLevel getEffectiveLevel()"
    returnType: "org.springframework.boot.logging.LogLevel"
    instructionFingerprint: "2E363140CC26230417534113C9051F3A"
  paths:
  - pathId: "path1"
    testPathName: "getEffectiveLevelTest"
    constructorSignature: "<init>(java.lang.String,org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration,org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration)\
      \ : void"
    modelFingerprint: "19B35A0AA19068D7F22AF99D2077D791"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2DE0218D996446AE3AA5B425446EE0FA"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "49586823591C9EA778F39043B5133FE5"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid7):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "103605CBB3544E76E089A6C703F15E9E"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:inheritedLevelConfiguration,message:uniqueUuid8):void2"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "52E8B6A6315FD3067FEE97EB649DF1FC"
      methodExercised:
        expression: "getLevelConfiguration():loggerConfiguration.LevelConfiguration"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "997CB2935D9D02AF1B813538A710B19A"
      valueUuid: "loggerConfiguration.LevelConfiguration"
      methodExercised:
        expression: "getLevel():logLevel"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A52305709520DB4E07BF18708C6FE1B1"
      valueUuid: "logLevel"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LoggerConfiguration"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "name"
        - name: "levelConfiguration"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
            uuid: "levelConfiguration"
        - name: "inheritedLevelConfiguration"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
            uuid: "inheritedLevelConfiguration"
      valueType: "org.springframework.boot.logging.LoggerConfiguration"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
      uuid: "inheritedLevelConfiguration"
    - sapientType: "BASIC"
      content: !<regular>
        value: "InheritedLevelConfiguration must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
      uuid: "loggerConfiguration.LevelConfiguration"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
      uuid: "loggerConfiguration.LevelConfiguration"
    - sapientType: "ENUM"
      content: !<regular>
        value: "TRACE"
      valueType: "org.springframework.boot.logging.LogLevel"
      uuid: "logLevel"
    - sapientType: "ENUM"
      content: !<regular>
        value: "TRACE"
      valueType: "org.springframework.boot.logging.LogLevel"
      uuid: "logLevel"
- method:
    name: "getLevelConfiguration"
    sourceCodeSignature: "LevelConfiguration getLevelConfiguration()"
    returnType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
    instructionFingerprint: "0A87567D9DE439753C6FF38A67078840"
  paths:
  - pathId: "path1"
    testPathName: "getLevelConfigurationTest"
    constructorSignature: "<init>(java.lang.String,org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration,org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration)\
      \ : void"
    modelFingerprint: "987515D35D85EC9DC670B0B7AAE97F86"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2DE0218D996446AE3AA5B425446EE0FA"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "49586823591C9EA778F39043B5133FE5"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid9):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "103605CBB3544E76E089A6C703F15E9E"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:inheritedLevelConfiguration,message:uniqueUuid10):void2"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "50E4C65B77ABCDD783B1C59DDB4FADAB"
      methodExercised:
        expression: "getLevelConfiguration(scope:Enum-org.springframework.boot.logging.LoggerConfiguration$ConfigurationScope-INHERITED):loggerConfiguration.LevelConfiguration"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "29F5B2B98720972799EDE3C200261F86"
      valueUuid: "loggerConfiguration.LevelConfiguration"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LoggerConfiguration"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "name"
        - name: "levelConfiguration"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
            uuid: "levelConfiguration"
        - name: "inheritedLevelConfiguration"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
            uuid: "inheritedLevelConfiguration"
      valueType: "org.springframework.boot.logging.LoggerConfiguration"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
      uuid: "inheritedLevelConfiguration"
    - sapientType: "BASIC"
      content: !<regular>
        value: "InheritedLevelConfiguration must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
      uuid: "loggerConfiguration.LevelConfiguration"
    - sapientType: "ENUM"
      content: !<regular>
        value: "INHERITED"
      valueType: "org.springframework.boot.logging.LoggerConfiguration$ConfigurationScope"
      uuid: "Enum-org.springframework.boot.logging.LoggerConfiguration$ConfigurationScope-INHERITED"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
      uuid: "loggerConfiguration.LevelConfiguration"
- method:
    name: "getLevelConfiguration"
    sourceCodeSignature: "LevelConfiguration getLevelConfiguration(ConfigurationScope\
      \ scope)"
    returnType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
    parameters:
    - name: "scope"
      type: "org.springframework.boot.logging.LoggerConfiguration$ConfigurationScope"
    instructionFingerprint: "B82FF8F3275315957A7428FD79D0DB91"
  paths:
  - pathId: "path1"
    testPathName: "getLevelConfiguration1WhenScopeNotEqualsConfigurationScopeDIRECT"
    constructorSignature: "<init>(java.lang.String,org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration,org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration)\
      \ : void"
    modelFingerprint: "5BC1DFD229697C6406F4187C57EFCEAD"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2DE0218D996446AE3AA5B425446EE0FA"
      valueUuid: "target"
    - type: "INPUT"
      name: "scope"
      modelFingerprint: "4AB029DE94C5538FCE1F8005204E3820"
      valueUuid: "scope"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "49586823591C9EA778F39043B5133FE5"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid11):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "103605CBB3544E76E089A6C703F15E9E"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:inheritedLevelConfiguration,message:uniqueUuid12):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "60446B32F3C27E9035FD065C83206AE5"
      valueUuid: "inheritedLevelConfiguration"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LoggerConfiguration"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "name"
        - name: "levelConfiguration"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
            uuid: "levelConfiguration"
        - name: "inheritedLevelConfiguration"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
            uuid: "inheritedLevelConfiguration"
      valueType: "org.springframework.boot.logging.LoggerConfiguration"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "INHERITED"
      valueType: "org.springframework.boot.logging.LoggerConfiguration$ConfigurationScope"
      uuid: "scope"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
      uuid: "inheritedLevelConfiguration"
    - sapientType: "BASIC"
      content: !<regular>
        value: "InheritedLevelConfiguration must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid12"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
      uuid: "inheritedLevelConfiguration"
    branches:
    - lineNumber: 114
      expression: "scope != ConfigurationScope.DIRECT"
      range: "(114,11)-(114,44)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getLevelConfiguration1WhenScopeEqualsConfigurationScopeDIRECT"
    constructorSignature: "<init>(java.lang.String,org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration,org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration)\
      \ : void"
    modelFingerprint: "74F84857D94E22089E8E3E0B84FE0F7F"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2DE0218D996446AE3AA5B425446EE0FA"
      valueUuid: "target"
    - type: "INPUT"
      name: "scope"
      modelFingerprint: "78EAA547392B9E663A284AECDC81D25B"
      valueUuid: "scope"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "49586823591C9EA778F39043B5133FE5"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid13):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "103605CBB3544E76E089A6C703F15E9E"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:inheritedLevelConfiguration,message:uniqueUuid14):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "60446B32F3C27E9035FD065C83206AE5"
      valueUuid: "levelConfiguration"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LoggerConfiguration"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "name"
        - name: "levelConfiguration"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
            uuid: "levelConfiguration"
        - name: "inheritedLevelConfiguration"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
            uuid: "inheritedLevelConfiguration"
      valueType: "org.springframework.boot.logging.LoggerConfiguration"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "DIRECT"
      valueType: "org.springframework.boot.logging.LoggerConfiguration$ConfigurationScope"
      uuid: "scope"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid13"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
      uuid: "inheritedLevelConfiguration"
    - sapientType: "BASIC"
      content: !<regular>
        value: "InheritedLevelConfiguration must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid14"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
      uuid: "levelConfiguration"
    branches:
    - lineNumber: 114
      expression: "scope != ConfigurationScope.DIRECT"
      range: "(114,11)-(114,44)"
      evaluatedAs: false
- method:
    name: "equals"
    sourceCodeSignature: "boolean equals(Object obj)"
    returnType: "boolean"
    parameters:
    - name: "obj"
      type: "java.lang.Object"
    instructionFingerprint: "E0F61F49CACF016C96896DE8CC89826C"
  paths:
  - pathId: "path1"
    testPathName: "equalsWhenThisEqualsObj"
    constructorSignature: "<init>(java.lang.String,org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration,org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration)\
      \ : void"
    modelFingerprint: "1AE574B8BAE99442442014A6496F9E50"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 119
      expression: "this == obj"
      range: "(119,7)-(119,17)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "equalsWhenGetClassNotEqualsObjGetClass"
    constructorSignature: "<init>(java.lang.String,org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration,org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration)\
      \ : void"
    modelFingerprint: "5945DBF65CB629BFE6EFB045B31ABA6B"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 119
      expression: "this == obj"
      range: "(119,7)-(119,17)"
      evaluatedAs: false
    - lineNumber: 122
      expression: "obj == null"
      range: "(122,7)-(122,17)"
      evaluatedAs: false
    - lineNumber: 122
      expression: "getClass() != obj.getClass()"
      range: "(122,22)-(122,49)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "equalsWhenObjectUtilsNullSafeEqualsThisInheritedLevelConfigurationOtherInheritedLevelConfiguration"
    constructorSignature: "<init>(java.lang.String,org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration,org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration)\
      \ : void"
    modelFingerprint: "FD37D062A6C97133675703543FFB2866"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 119
      expression: "this == obj"
      range: "(119,7)-(119,17)"
      evaluatedAs: false
    - lineNumber: 122
      expression: "obj == null"
      range: "(122,7)-(122,17)"
      evaluatedAs: false
    - lineNumber: 122
      expression: "getClass() != obj.getClass()"
      range: "(122,22)-(122,49)"
      evaluatedAs: false
    - lineNumber: 126
      expression: "ObjectUtils.nullSafeEquals(this.name, other.name)"
      range: "(126,10)-(126,58)"
      evaluatedAs: true
    - lineNumber: 127
      expression: "ObjectUtils.nullSafeEquals(this.levelConfiguration, other.levelConfiguration)"
      range: "(127,8)-(127,84)"
      evaluatedAs: true
    - lineNumber: 128
      expression: "ObjectUtils.nullSafeEquals(this.inheritedLevelConfiguration, other.inheritedLevelConfiguration)"
      range: "(128,8)-(128,102)"
      evaluatedAs: true
  - pathId: "path4"
    testPathName: "equalsWhenObjectUtilsNotNullSafeEqualsThisInheritedLevelConfigurationOtherInheritedLevelConfiguration"
    constructorSignature: "<init>(java.lang.String,org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration,org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration)\
      \ : void"
    modelFingerprint: "8726C1A8151F4723522BBF63433292AB"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 119
      expression: "this == obj"
      range: "(119,7)-(119,17)"
      evaluatedAs: false
    - lineNumber: 122
      expression: "obj == null"
      range: "(122,7)-(122,17)"
      evaluatedAs: false
    - lineNumber: 122
      expression: "getClass() != obj.getClass()"
      range: "(122,22)-(122,49)"
      evaluatedAs: false
    - lineNumber: 126
      expression: "ObjectUtils.nullSafeEquals(this.name, other.name)"
      range: "(126,10)-(126,58)"
      evaluatedAs: true
    - lineNumber: 127
      expression: "ObjectUtils.nullSafeEquals(this.levelConfiguration, other.levelConfiguration)"
      range: "(127,8)-(127,84)"
      evaluatedAs: true
    - lineNumber: 128
      expression: "ObjectUtils.nullSafeEquals(this.inheritedLevelConfiguration, other.inheritedLevelConfiguration)"
      range: "(128,8)-(128,102)"
      evaluatedAs: false
- method:
    name: "toString"
    sourceCodeSignature: "String toString()"
    returnType: "java.lang.String"
    instructionFingerprint: "42F15A92628434457396317FF4E141F8"
  paths:
  - pathId: "path1"
    testPathName: "toStringTest"
    constructorSignature: "<init>(java.lang.String,org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration,org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration)\
      \ : void"
    modelFingerprint: "82602739ECEE8C01B8F5D75886A5F422"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2DE0218D996446AE3AA5B425446EE0FA"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "49586823591C9EA778F39043B5133FE5"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid23):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "103605CBB3544E76E089A6C703F15E9E"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:inheritedLevelConfiguration,message:uniqueUuid24):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "39210E5BF15DA3389B5F631752AD0E5B"
      valueUuid: "string"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.logging.LoggerConfiguration"
        parameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "name"
        - name: "levelConfiguration"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
            uuid: "levelConfiguration"
            nameForMock: "levelConfiguration"
        - name: "inheritedLevelConfiguration"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
            uuid: "inheritedLevelConfiguration"
            nameForMock: "inheritedLevelConfiguration"
      valueType: "org.springframework.boot.logging.LoggerConfiguration"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid23"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.LoggerConfiguration$LevelConfiguration"
      uuid: "inheritedLevelConfiguration"
      nameForMock: "inheritedLevelConfiguration"
    - sapientType: "BASIC"
      content: !<regular>
        value: "InheritedLevelConfiguration must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid24"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "LoggerConfiguration [name=A, levelConfiguration=levelConfiguration,\
          \ inheritedLevelConfiguration=inheritedLevelConfiguration]"
      valueType: "java.lang.String"
      uuid: "string"
