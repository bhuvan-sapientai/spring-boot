---
modelFingerprint: "7CC19FDA7CBD3D6986F9421016EDE3C6"
targetClass:
  fullClassName: "org.springframework.boot.origin.SystemEnvironmentOrigin"
methods:
- method:
    name: "getProperty"
    sourceCodeSignature: "String getProperty()"
    returnType: "java.lang.String"
    instructionFingerprint: "68856DEC5AFA68A1962112DFC474B281"
  paths:
  - pathId: "path1"
    testPathName: "getPropertyTest"
    constructorSignature: "<init>(java.lang.String) : void"
    modelFingerprint: "CA509202F2D7F2DEA7FC334DDABE2CBE"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "equals"
    sourceCodeSignature: "boolean equals(Object obj)"
    returnType: "boolean"
    parameters:
    - name: "obj"
      type: "java.lang.Object"
    instructionFingerprint: "A4B5E4F52A5D5A68FEBE8068D8C1228E"
  paths:
  - pathId: "path1"
    testPathName: "equalsWhenThisEqualsObj"
    constructorSignature: "<init>(java.lang.String) : void"
    modelFingerprint: "EF10EF17F0F00C10D25C1FFA76EEB198"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 45
      expression: "this == obj"
      range: "(45,7)-(45,17)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "equalsWhenGetClassNotEqualsObjGetClass"
    constructorSignature: "<init>(java.lang.String) : void"
    modelFingerprint: "4CECFB8057E900F5A0F242A791BA33AB"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 45
      expression: "this == obj"
      range: "(45,7)-(45,17)"
      evaluatedAs: false
    - lineNumber: 48
      expression: "obj == null"
      range: "(48,7)-(48,17)"
      evaluatedAs: false
    - lineNumber: 48
      expression: "getClass() != obj.getClass()"
      range: "(48,22)-(48,49)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "equalsWhenObjectUtilsNullSafeEqualsThisPropertyOtherProperty"
    constructorSignature: "<init>(java.lang.String) : void"
    modelFingerprint: "446B9DED2D47FD5E9116CCAA510925ED"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 45
      expression: "this == obj"
      range: "(45,7)-(45,17)"
      evaluatedAs: false
    - lineNumber: 48
      expression: "obj == null"
      range: "(48,7)-(48,17)"
      evaluatedAs: false
    - lineNumber: 48
      expression: "getClass() != obj.getClass()"
      range: "(48,22)-(48,49)"
      evaluatedAs: false
    - lineNumber: 52
      expression: "ObjectUtils.nullSafeEquals(this.property, other.property)"
      range: "(52,10)-(52,66)"
      evaluatedAs: true
  - pathId: "path4"
    testPathName: "equalsWhenObjectUtilsNotNullSafeEqualsThisPropertyOtherProperty"
    constructorSignature: "<init>(java.lang.String) : void"
    modelFingerprint: "777BC43E46796715DC35CCFF998026CA"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 45
      expression: "this == obj"
      range: "(45,7)-(45,17)"
      evaluatedAs: false
    - lineNumber: 48
      expression: "obj == null"
      range: "(48,7)-(48,17)"
      evaluatedAs: false
    - lineNumber: 48
      expression: "getClass() != obj.getClass()"
      range: "(48,22)-(48,49)"
      evaluatedAs: false
    - lineNumber: 52
      expression: "ObjectUtils.nullSafeEquals(this.property, other.property)"
      range: "(52,10)-(52,66)"
      evaluatedAs: false
- method:
    name: "toString"
    sourceCodeSignature: "String toString()"
    returnType: "java.lang.String"
    instructionFingerprint: "8DEB13D9E193B32860B7C332082A66CD"
  paths:
  - pathId: "path1"
    testPathName: "toStringTest"
    constructorSignature: "<init>(java.lang.String) : void"
    modelFingerprint: "D5B29A10F93F5E7FEF34F2C0ED707C0F"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "EA11D218A373168C3622C6EEAE9D3860"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "65F98DF98FCDCF0AF67E8F733A3337D0"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:property,message:uniqueUuid11):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1BBDB4B5D08FE109CC8E454FDF9278A7"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "hasText(text:property,message:uniqueUuid12):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "46FD34167C6FE7FF094B678F0B9B670D"
      valueUuid: "string"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.origin.SystemEnvironmentOrigin"
        parameters:
        - name: "property"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "property"
      valueType: "org.springframework.boot.origin.SystemEnvironmentOrigin"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "property"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "property"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Property name must not be empty"
      valueType: "java.lang.String"
      uuid: "uniqueUuid12"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "System Environment Property \\\"A\\\""
      valueType: "java.lang.String"
      uuid: "string"
