---
modelFingerprint: "E65F22BAFAD7990BC31B812FDBD0C85D"
targetClass:
  fullClassName: "org.springframework.boot.context.config.DelegatingApplicationContextInitializer"
methods:
- method:
    name: "initialize"
    sourceCodeSignature: "void initialize(ConfigurableApplicationContext context)"
    returnType: "void"
    parameters:
    - name: "context"
      type: "org.springframework.context.ConfigurableApplicationContext"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.ClassNotFoundException"
    instructionFingerprint: "4ACF1652F095645DFE80486C2C958417"
  paths:
  - pathId: "path4"
    testPathName: "initializeWhenCaughtClassNotFoundExceptionThrowsApplicationContextException"
    constructorSignature: "<init>() : void"
    modelFingerprint: "3BAA1BB68BF2F278193C62E6E42D1420"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "22F7680E81C8A00E4B019BF90B716E88"
      valueUuid: "context"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "862B2199EAED822A0A6CD36A8ACF2BC7"
      valueUuid: "context"
      methodExercised:
        expression: "getEnvironment():configurableEnvironment"
    - type: "LOCAL_VARIABLE"
      name: "env"
      modelFingerprint: "8C1E56C1B0169CD91DB3E83ECFEA07F2"
      valueUuid: "configurableEnvironment"
      methodExercised:
        expression: "getProperty(key:uniqueUuid1):string"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "7134351239132D3AEBB7FA91063DD3AC"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasLength(str:string):boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "77608E55331578BCD8B2C6DAA3156601"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "tokenizeToStringArray(str:string,delimiters:uniqueUuid2):stringArray"
        staticAccess: true
    - type: "STATIC"
      name: "ClassUtils.class.real"
      modelFingerprint: "70484AD192BDA84A12E8618883BD7800"
      valueUuid: "ClassUtils.class.real"
      methodExercised:
        expression: "getDefaultClassLoader():classLoader"
        staticAccess: true
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "D132A9187A9214C187ADD4DB60D46E0B"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "forName(name:string2,classLoader:classLoader):class"
        throwsExceptions:
        - "java.lang.ClassNotFoundException"
        - "java.lang.LinkageError"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E2A056040AD29818FAB2820CEB4297CA"
      valueUuid: "applicationContextException"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.DelegatingApplicationContextInitializer"
        parameters: []
      valueType: "org.springframework.boot.context.config.DelegatingApplicationContextInitializer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "context.initializer.classes"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "string2"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: ","
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ClassUtils"
        method: "getDefaultClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.ClassNotFoundException"
        parameters: []
      valueType: "java.lang.ClassNotFoundException"
      uuid: "class"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ClassUtils"
        method: "getDefaultClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.context.ApplicationContextException"
        parameters:
        - name: "msg"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Failed to load context initializer class [A]"
            valueType: "java.lang.String"
            uuid: "string3"
        - name: "cause"
          value:
            sapientType: "EXCEPTION"
            content: !<new>
              target: "java.lang.ClassNotFoundException"
              parameters: []
            valueType: "java.lang.ClassNotFoundException"
            uuid: "class"
      valueType: "org.springframework.context.ApplicationContextException"
      uuid: "applicationContextException"
      fixed: true
    branches:
    - lineNumber: 66
      expression: "StringUtils.hasLength(classNames)"
      range: "(66,7)-(66,39)"
      evaluatedAs: true
      internalMethodName: "getInitializerClasses"
    - lineNumber: 67
      expression: "for-each(StringUtils.tokenizeToStringArray(classNames, \\\",\\\"\
        ))"
      range: "(67,28)-(67,77)"
      evaluatedAs: true
      internalMethodName: "getInitializerClasses"
    - lineNumber: 80
      expression: "catch-exception (ClassNotFoundException)"
      range: "(80,3)-(80,34)"
      evaluatedAs: true
      internalMethodName: "getInitializerClass"
    catchBlockExercised:
      idExternalInstruction: 42
      id: 1
      catchExceptions:
      - "java.lang.ClassNotFoundException"
  - pathId: "path1"
    testPathName: "initializeWhenInitializersIsNotEmpty"
    constructorSignature: "<init>() : void"
    modelFingerprint: "61180D0DAC1A3283EDF832B3A31DBF24"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "22F7680E81C8A00E4B019BF90B716E88"
      valueUuid: "context"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "862B2199EAED822A0A6CD36A8ACF2BC7"
      valueUuid: "context"
      methodExercised:
        expression: "getEnvironment():configurableEnvironment"
    - type: "LOCAL_VARIABLE"
      name: "env"
      modelFingerprint: "E3879323885C52F15679582A33A0A9C5"
      valueUuid: "configurableEnvironment"
      methodExercised:
        expression: "getProperty(key:uniqueUuid4):string"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "7B623EE582A0C2E878E2D18F466E3DE6"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasLength(str:string):boolean1"
        staticAccess: true
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "396DF9D070541BB20BFDD7ACE2EE7166"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "tokenizeToStringArray(str:string,delimiters:uniqueUuid5):stringArray"
        staticAccess: true
    - type: "STATIC"
      name: "ClassUtils.class.real"
      modelFingerprint: "70484AD192BDA84A12E8618883BD7800"
      valueUuid: "ClassUtils.class.real"
      methodExercised:
        expression: "getDefaultClassLoader():classLoader"
        staticAccess: true
    - type: "STATIC"
      name: "ClassUtils.class"
      modelFingerprint: "B014E9E703A63E6114AE69357B4F38FA"
      valueUuid: "ClassUtils.class"
      methodExercised:
        expression: "forName(name:string2,classLoader:classLoader):class"
        throwsExceptions:
        - "java.lang.ClassNotFoundException"
        - "java.lang.LinkageError"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "7B6CBC4502E7569219EB1493BE289677"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "isAssignable(superType:uniqueUuid6,subType:class):void"
        staticAccess: true
    - type: "STATIC"
      name: "GenericTypeResolver.class"
      modelFingerprint: "CD7C225594ECAF442E18D758027F33F4"
      valueUuid: "GenericTypeResolver.class"
      methodExercised:
        expression: "resolveTypeArgument(clazz:class,genericType:uniqueUuid7):class3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1309BB4B0B5F1BD29F3DF2BC0B3E6057"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "isAssignable(superType:class3,subType:class2,messageSupplier:uniqueUuid8):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BeanUtils.class"
      modelFingerprint: "37490828E0F1483CC3725019EEF19DB7"
      valueUuid: "BeanUtils.class"
      methodExercised:
        expression: "instantiateClass(clazz:class):object2"
        throwsExceptions:
        - "org.springframework.beans.BeanInstantiationException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "initializer"
      modelFingerprint: "ECD7E694F9E46B30913AE6F30FC75C7A"
      valueUuid: "object2"
      methodExercised:
        expression: "initialize(applicationContext:context):void4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.List.sort(org.springframework.core.annotation.AnnotationAwareOrderComparator)\
        \ : void"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.DelegatingApplicationContextInitializer"
        parameters: []
      valueType: "org.springframework.boot.context.config.DelegatingApplicationContextInitializer"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "configurableEnvironment"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "context.initializer.classes"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_tokenizeToStringArrayItem1"
            valueType: "java.lang.String"
            uuid: "string2"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: ","
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "REAL"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class.real"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ClassUtils"
        method: "getDefaultClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.ClassUtils"
      uuid: "ClassUtils.class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
      collectionUuid: "arrayList"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_tokenizeToStringArrayItem1"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.util.ClassUtils"
        method: "getDefaultClassLoader"
        methodParameters: []
      valueType: "java.lang.ClassLoader"
      uuid: "classLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
      collectionUuid: "arrayList"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.GenericTypeResolver"
      uuid: "GenericTypeResolver.class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
      collectionUuid: "arrayList"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ApplicationContextInitializer"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.context.ConfigurableApplicationContext"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid8"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.BeanUtils"
      uuid: "BeanUtils.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "object2"
      collectionUuid: "arrayList2"
      explicitCastNeeded: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
      collectionUuid: "arrayList"
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ApplicationContextInitializer"
      uuid: "object2"
      collectionUuid: "arrayList2"
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.context.ConfigurableApplicationContext"
      uuid: "context"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 66
      expression: "StringUtils.hasLength(classNames)"
      range: "(66,7)-(66,39)"
      evaluatedAs: true
      internalMethodName: "getInitializerClasses"
    - lineNumber: 67
      expression: "for-each(StringUtils.tokenizeToStringArray(classNames, \\\",\\\"\
        ))"
      range: "(67,28)-(67,77)"
      evaluatedAs: true
      internalMethodName: "getInitializerClasses"
    - lineNumber: 58
      expression: "!initializerClasses.isEmpty()"
      range: "(58,7)-(58,35)"
      evaluatedAs: true
    - lineNumber: 88
      expression: "for-each(initializerClasses)"
      range: "(88,36)-(88,53)"
      evaluatedAs: true
      internalMethodName: "applyInitializerClasses"
    - lineNumber: 109
      expression: "for-each(initializers)"
      range: "(109,52)-(109,63)"
      evaluatedAs: true
      internalMethodName: "applyInitializers"
- method:
    name: "setOrder"
    sourceCodeSignature: "void setOrder(int order)"
    returnType: "void"
    parameters:
    - name: "order"
      type: "int"
    instructionFingerprint: "F88C98C2D7593841680C2CA0FECB4028"
  paths:
  - pathId: "path1"
    testPathName: "setOrderTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "508F327E707578A7601DD6859FED6F5D"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getOrder"
    sourceCodeSignature: "int getOrder()"
    returnType: "int"
    instructionFingerprint: "342D4E4F854A43E567A525BCBCDEA20C"
  paths:
  - pathId: "path1"
    testPathName: "getOrderTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "950510E7803AD5B65C26B3CD5AAAE188"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
