---
modelFingerprint: "01E8E8119C3C33EDE326D5362A232D95"
methods:
- method:
    name: "getResource"
    signature: "getResource() : org.springframework.boot.context.config.ConfigDataResource"
    sourceCodeSignature: "ConfigDataResource getResource()"
    instructionFingerprint: "00DF111282E4CCDA848F6D39D1B1A51E"
  paths:
  - pathId: "path1"
    testPathName: "getResourceTest"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataResource,java.lang.Throwable)\
      \ : void"
    modelFingerprint: "D09C1554E8A6C6C74680C5EE486E641A"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "24daa76f-4779-35df-9343-1e51757b70c3"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "getLocation"
    signature: "getLocation() : org.springframework.boot.context.config.ConfigDataLocation"
    sourceCodeSignature: "ConfigDataLocation getLocation()"
    instructionFingerprint: "EDAAE51B769561EB9940BA79DA30CE9E"
  paths:
  - pathId: "path1"
    testPathName: "getLocationTest"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataResource,java.lang.Throwable)\
      \ : void"
    modelFingerprint: "5DCBA76315B7B0E9F2D261E61D10A9B9"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "ee6cb6cd-2929-3c2a-8c18-cd662e8fb11b"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "getOrigin"
    signature: "getOrigin() : org.springframework.boot.origin.Origin"
    sourceCodeSignature: "Origin getOrigin()"
    instructionFingerprint: "190C3C140F95851B2D0034BBEFF17D2A"
  paths:
  - pathId: "path1"
    testPathName: "getOriginTest"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataResource,java.lang.Throwable)\
      \ : void"
    modelFingerprint: "0AC3989D687DD04CCC942D70B0C9D6B1"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "A7387281E7B707BC89C64463338FD8B1"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "EF09B1450480125E828C76638377351D"
      index: 2
      valueUuid: "uuid7"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "<init>_configDataResource1"
        - name: "message"
          valueUuid: "uuid6"
        signature: "notNull(ConfigDataResource,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
    - type: "STATIC"
      name: "Origin"
      modelFingerprint: "BB7EF760BCE133FD12F5B2C92DE9326E"
      index: 3
      valueUuid: "uuid9"
      methodExercised:
        target: "org.springframework.boot.origin.Origin"
        name: "from"
        parameters:
        - name: "source"
          valueUuid: "uuid8"
        signature: "from(ConfigDataLocation): Origin"
        returnValueUuid: "getOrigin_origin1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5F7FDFDDEDFBC96EDDAA057511F38A3C"
      index: 4
      valueUuid: "getOrigin_origin1"
    uuid: "7470ee36-9b2f-3d61-ac6f-ede146cc5169"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataResourceNotFoundException"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "<init>_configDataResource1"
            fixed: false
            nameForMock: "<init>_configDataResource1"
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Throwable"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Throwable"
            uuid: "<init>_throwable1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.config.ConfigDataResourceNotFoundException"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid7"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "<init>_configDataResource1"
      fixed: false
      nameForMock: "<init>_configDataResource1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Resource must not be null"
      valueType: "java.lang.String"
      uuid: "uuid6"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "uuid9"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "getOrigin_origin1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "uuid8"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "getOrigin_origin1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "getReferenceDescription"
    signature: "getReferenceDescription() : java.lang.String"
    sourceCodeSignature: "String getReferenceDescription()"
    instructionFingerprint: "188C302A79E477F3CF5349872D7D1A4E"
  paths:
  - pathId: "path1"
    testPathName: "getReferenceDescriptionWhenLocationIsNull"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataResource,java.lang.Throwable)\
      \ : void"
    modelFingerprint: "A52AA46D4E2AD5AEE2893DDE8BAE079C"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "A7387281E7B707BC89C64463338FD8B1"
      index: 1
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "EF09B1450480125E828C76638377351D"
      index: 2
      valueUuid: "uuid11"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "<init>_configDataResource1"
        - name: "message"
          valueUuid: "uuid10"
        signature: "notNull(ConfigDataResource,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E44C971418B4A02FD0D255420EC39093"
      index: 3
      valueUuid: "getReferenceDescription_string2"
    uuid: "b4470aa6-1ce4-3fc4-a2b4-8f47ac67a20a"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "UNKNOWN_REASON"
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataResourceNotFoundException"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "<init>_configDataResource1"
            fixed: false
            nameForMock: "<init>_configDataResource1"
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Throwable"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Throwable"
            uuid: "<init>_throwable1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.config.ConfigDataResourceNotFoundException"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid11"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "<init>_configDataResource1"
      fixed: false
      nameForMock: "<init>_configDataResource1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Resource must not be null"
      valueType: "java.lang.String"
      uuid: "uuid10"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "resource 'null'"
      valueType: "java.lang.String"
      uuid: "getReferenceDescription_string2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "withLocation"
    signature: "withLocation(org.springframework.boot.context.config.ConfigDataLocation)\
      \ : org.springframework.boot.context.config.ConfigDataResourceNotFoundException"
    sourceCodeSignature: "ConfigDataResourceNotFoundException withLocation(ConfigDataLocation\
      \ location)"
    instructionFingerprint: "0A519E5BD54E8EB9F802FE5D5F6F5E17"
  paths:
  - pathId: "path1"
    testPathName: "withLocationWhenLocationIsNotNull"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataResource,java.lang.Throwable)\
      \ : void"
    modelFingerprint: "08A2B3E27D05562ABED19F29EDA5E3AB"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "A7387281E7B707BC89C64463338FD8B1"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "location"
      modelFingerprint: "7FF5B3182EB4F3025A108333158B65BF"
      index: 2
      valueUuid: "withLocation_configDataLocation1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "EF09B1450480125E828C76638377351D"
      index: 3
      valueUuid: "uuid13"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "<init>_configDataResource1"
        - name: "message"
          valueUuid: "uuid12"
        signature: "notNull(ConfigDataResource,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "FD667F830E49BAC3AA647960C9EA8F8B"
      index: 4
      methodExercised:
        target: "target"
        name: "getCause"
        parameters: []
        signature: "getCause(): Throwable"
        returnValueUuid: "withLocation_throwable1"
        access: 33
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "EF09B1450480125E828C76638377351D"
      index: 5
      valueUuid: "uuid15"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "<init>_configDataResource1"
        - name: "message"
          valueUuid: "uuid14"
        signature: "notNull(ConfigDataResource,String): void"
        returnValueUuid: "<init>_void2"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "84985B40184CABE54E6FCB733917C094"
      index: 6
      valueUuid: "withLocation_configDataResourceNotFoundException1"
    uuid: "63e75f5a-2b88-3c37-bdb2-16bd9f87d912"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataResourceNotFoundException"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "<init>_configDataResource1"
            fixed: false
            nameForMock: "<init>_configDataResource1"
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Throwable"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Throwable"
            uuid: "<init>_throwable1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.config.ConfigDataResourceNotFoundException"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "withLocation_configDataLocation1"
      fixed: false
      nameForMock: "withLocation_configDataLocation1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid13"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "<init>_configDataResource1"
      fixed: false
      nameForMock: "<init>_configDataResource1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Resource must not be null"
      valueType: "java.lang.String"
      uuid: "uuid12"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.lang.Throwable"
      uuid: "withLocation_throwable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid15"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "<init>_configDataResource1"
      fixed: false
      nameForMock: "<init>_configDataResource1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Resource must not be null"
      valueType: "java.lang.String"
      uuid: "uuid14"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataResourceNotFoundException"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "<init>_configDataResource1"
            fixed: false
            nameForMock: "<init>_configDataResource1"
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "withLocation_configDataLocation1"
            fixed: false
            nameForMock: "withLocation_configDataLocation1"
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Throwable"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.lang.Throwable"
            uuid: "withLocation_throwable1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: true
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.config.ConfigDataResourceNotFoundException"
      uuid: "withLocation_configDataResourceNotFoundException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "withLocationWhenLocationIsNull"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataResource,java.lang.Throwable)\
      \ : void"
    modelFingerprint: "B241D53091D47E0CA2323B785C081323"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "8e25e9c0-5abf-32b8-bf40-8161f89374b6"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "throwIfDoesNotExist"
    signature: "throwIfDoesNotExist(org.springframework.boot.context.config.ConfigDataResource,java.nio.file.Path)\
      \ : void"
    sourceCodeSignature: "void throwIfDoesNotExist(ConfigDataResource resource, Path\
      \ pathToCheck)"
    instructionFingerprint: "A2680F1F61CEFE82A39F881F50E3DB98"
  paths:
  - pathId: "path2"
    testPathName: "throwIfDoesNotExistWhenExists"
    modelFingerprint: "2DC17ECAD22C9B3D8BE4A3F8AD8D7C97"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "resource"
      modelFingerprint: "DF23F58D340470156434685C24E9FE9A"
      index: 1
      valueUuid: "throwIfDoesNotExist_configDataResource1"
    - type: "INPUT"
      name: "pathToCheck"
      modelFingerprint: "AA3705F4F229881200F2E33EB3E50140"
      index: 2
      valueUuid: "throwIfDoesNotExist_path1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 3
      valueUuid: "uuid1"
    uuid: "8e39f001-ff63-3d33-94d7-fa209eb1ad0f"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.nio.file.Files.exists(java.nio.file.Path,java.nio.file.LinkOption[])\
        \ : boolean"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "throwIfDoesNotExist_configDataResource1"
      fixed: false
      nameForMock: "exampleResource"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.nio.file.Path"
      uuid: "throwIfDoesNotExist_path1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path1"
    testPathName: "throwIfDoesNotExistWhenLocationIsNullThrowsConfigDataResourceNotFoundException"
    modelFingerprint: "EF9D3C81104A63EB2D7D45BC1F505E6D"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "resource"
      modelFingerprint: "DF23F58D340470156434685C24E9FE9A"
      index: 1
      valueUuid: "throwIfDoesNotExist_configDataResource1"
    - type: "INPUT"
      name: "pathToCheck"
      modelFingerprint: "AA3705F4F229881200F2E33EB3E50140"
      index: 2
      valueUuid: "throwIfDoesNotExist_path1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "E562FA798F7E2BA77CED43EC07748E21"
      index: 3
      valueUuid: "uuid2"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "throwIfDoesNotExist_configDataResource1"
        - name: "message"
          valueUuid: "uuid1"
        signature: "notNull(ConfigDataResource,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7F5F805AB8C36699B07E2204546CDA86"
      index: 4
      valueUuid: "throwIfDoesNotExist_configDataResourceNotFoundException1"
    uuid: "dc4bd248-8b37-3f2a-a9b0-4a944b46e201"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.nio.file.Files.exists(java.nio.file.Path,java.nio.file.LinkOption[])\
        \ : boolean"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "throwIfDoesNotExist_configDataResource1"
      fixed: false
      nameForMock: "throwIfDoesNotExist_configDataResource1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.nio.file.Path"
      uuid: "throwIfDoesNotExist_path1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "throwIfDoesNotExist_configDataResource1"
      fixed: false
      nameForMock: "throwIfDoesNotExist_configDataResource1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Resource must not be null"
      valueType: "java.lang.String"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataResourceNotFoundException"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "throwIfDoesNotExist_configDataResource1"
            fixed: false
            nameForMock: "throwIfDoesNotExist_configDataResource1"
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.config.ConfigDataResourceNotFoundException"
      uuid: "throwIfDoesNotExist_configDataResourceNotFoundException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "throwIfDoesNotExist"
    signature: "throwIfDoesNotExist(org.springframework.boot.context.config.ConfigDataResource,java.io.File)\
      \ : void"
    sourceCodeSignature: "void throwIfDoesNotExist(ConfigDataResource resource, File\
      \ fileToCheck)"
    instructionFingerprint: "D571A1040C910EED62086FB7B0EB15FB"
  paths:
  - pathId: "path2"
    testPathName: "throwIfDoesNotExist1WhenExists"
    modelFingerprint: "D2983DD3EED592971B0C43DAADB93511"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "resource"
      modelFingerprint: "6204E08D5D4EA8DBA742FA576D02EDE2"
      index: 1
      valueUuid: "throwIfDoesNotExist_configDataResource1"
    - type: "INPUT"
      name: "fileToCheck"
      modelFingerprint: "CF47B459E5E09A45BFCF08F5FFF26259"
      index: 2
      valueUuid: "throwIfDoesNotExist_file1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 3
      valueUuid: "uuid23"
    uuid: "938d5bf5-111a-3abc-9453-0daf6e32f4de"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.io.File.exists() : boolean"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "throwIfDoesNotExist_configDataResource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "throwIfDoesNotExist_file1-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.io.File"
      uuid: "throwIfDoesNotExist_file1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid23"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path1"
    testPathName: "throwIfDoesNotExist1WhenLocationIsNullThrowsConfigDataResourceNotFoundException"
    modelFingerprint: "00B4E1B480033D7ADE6B5E90E9B44600"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "resource"
      modelFingerprint: "6204E08D5D4EA8DBA742FA576D02EDE2"
      index: 1
      valueUuid: "throwIfDoesNotExist_configDataResource1"
    - type: "INPUT"
      name: "fileToCheck"
      modelFingerprint: "59FA8856DE2CD729F128724239DE13D1"
      index: 2
      valueUuid: "throwIfDoesNotExist_file1"
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "EF09B1450480125E828C76638377351D"
      index: 3
      valueUuid: "uuid2"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "throwIfDoesNotExist_configDataResource1"
        - name: "message"
          valueUuid: "uuid1"
        signature: "notNull(ConfigDataResource,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2F902F5A70AFB4A407B368F91C068CC6"
      index: 4
      valueUuid: "throwIfDoesNotExist_configDataResourceNotFoundException1"
    uuid: "8930b87e-cea2-3b95-93f3-2bdf661979ac"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "throwIfDoesNotExist_configDataResource1"
      fixed: false
      nameForMock: "throwIfDoesNotExist_configDataResource1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.io.File"
        parameters:
        - name: "pathname"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "pathname1"
            valueType: "java.lang.String"
            uuid: "throwIfDoesNotExist_file1-pathname"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "java.io.File"
      uuid: "throwIfDoesNotExist_file1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "throwIfDoesNotExist_configDataResource1"
      fixed: false
      nameForMock: "throwIfDoesNotExist_configDataResource1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Resource must not be null"
      valueType: "java.lang.String"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataResourceNotFoundException"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "throwIfDoesNotExist_configDataResource1"
            fixed: false
            nameForMock: "throwIfDoesNotExist_configDataResource1"
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.config.ConfigDataResourceNotFoundException"
      uuid: "throwIfDoesNotExist_configDataResourceNotFoundException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
- method:
    name: "throwIfDoesNotExist"
    signature: "throwIfDoesNotExist(org.springframework.boot.context.config.ConfigDataResource,org.springframework.core.io.Resource)\
      \ : void"
    sourceCodeSignature: "void throwIfDoesNotExist(ConfigDataResource resource, Resource\
      \ resourceToCheck)"
    instructionFingerprint: "64BD698C1399246B2F8532A903C683E1"
  paths:
  - pathId: "path2"
    testPathName: "throwIfDoesNotExist2WhenExists"
    modelFingerprint: "C40100CFAF8DD53E26593839D7A778AB"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "resource"
      modelFingerprint: "6204E08D5D4EA8DBA742FA576D02EDE2"
      index: 1
      valueUuid: "throwIfDoesNotExist_configDataResource1"
    - type: "INPUT"
      name: "resourceToCheck"
      modelFingerprint: "C9E2C951C782C30B79DF9C2F80450B0E"
      index: 2
      valueUuid: "throwIfDoesNotExist_resource1"
    - type: "LOCAL_VARIABLE"
      name: "resourceToCheck"
      modelFingerprint: "CDC060D1337192722749F27190A3E3AC"
      index: 3
      valueUuid: "throwIfDoesNotExist_resource1"
      methodExercised:
        target: "resourceToCheck"
        name: "exists"
        parameters: []
        signature: "exists(): boolean"
        returnValueUuid: "throwIfDoesNotExist_boolean1"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "68041019986276EDF5D420282D883A57"
      index: 4
      valueUuid: "uuid26"
    uuid: "86be841f-c1bf-3884-8357-8e496ee16d22"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "throwIfDoesNotExist_configDataResource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "throwIfDoesNotExist_resource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "throwIfDoesNotExist_resource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "throwIfDoesNotExist_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      uuid: "uuid26"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path1"
    testPathName: "throwIfDoesNotExist2WhenLocationIsNullThrowsConfigDataResourceNotFoundException"
    modelFingerprint: "EAA7D5F82C23C5D8F5DC0AE9238B1B5C"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "INPUT"
      name: "resource"
      modelFingerprint: "6204E08D5D4EA8DBA742FA576D02EDE2"
      index: 1
      valueUuid: "throwIfDoesNotExist_configDataResource1"
    - type: "INPUT"
      name: "resourceToCheck"
      modelFingerprint: "C9E2C951C782C30B79DF9C2F80450B0E"
      index: 2
      valueUuid: "throwIfDoesNotExist_resource1"
    - type: "LOCAL_VARIABLE"
      name: "resourceToCheck"
      modelFingerprint: "A86CC84F8AC460EF63909AC0EFD5B2CB"
      index: 3
      valueUuid: "throwIfDoesNotExist_resource1"
      methodExercised:
        target: "resourceToCheck"
        name: "exists"
        parameters: []
        signature: "exists(): boolean"
        returnValueUuid: "throwIfDoesNotExist_boolean1"
        access: 1025
    - type: "STATIC"
      name: "Assert"
      modelFingerprint: "EF09B1450480125E828C76638377351D"
      index: 4
      valueUuid: "uuid28"
      methodExercised:
        target: "org.springframework.util.Assert"
        name: "notNull"
        parameters:
        - name: "object"
          valueUuid: "throwIfDoesNotExist_configDataResource1"
        - name: "message"
          valueUuid: "uuid27"
        signature: "notNull(ConfigDataResource,String): void"
        returnValueUuid: "<init>_void1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2F902F5A70AFB4A407B368F91C068CC6"
      index: 5
      valueUuid: "throwIfDoesNotExist_configDataResourceNotFoundException1"
    uuid: "867986a8-087a-3ba7-953f-c0d52ff36ff4"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "throwIfDoesNotExist_configDataResource1"
      fixed: false
      nameForMock: "throwIfDoesNotExist_configDataResource1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "throwIfDoesNotExist_resource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.Resource"
      uuid: "throwIfDoesNotExist_resource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "throwIfDoesNotExist_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "uuid28"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "<init>_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "throwIfDoesNotExist_configDataResource1"
      fixed: false
      nameForMock: "throwIfDoesNotExist_configDataResource1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Resource must not be null"
      valueType: "java.lang.String"
      uuid: "uuid27"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataResourceNotFoundException"
        parameters:
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "throwIfDoesNotExist_configDataResource1"
            fixed: false
            nameForMock: "throwIfDoesNotExist_configDataResource1"
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.config.ConfigDataResourceNotFoundException"
      uuid: "throwIfDoesNotExist_configDataResourceNotFoundException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
