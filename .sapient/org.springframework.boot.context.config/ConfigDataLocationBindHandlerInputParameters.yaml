---
modelFingerprint: "983C6D1FA6D4C744E6604926193D0D74"
targetClass:
  fullClassName: "org.springframework.boot.context.config.ConfigDataLocationBindHandler"
methods:
- method:
    name: "onSuccess"
    sourceCodeSignature: "Object onSuccess(ConfigurationPropertyName name, Bindable<?>\
      \ target, BindContext context, Object result)"
    returnType: "java.lang.Object"
    parameters:
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    - name: "target"
      type: "org.springframework.boot.context.properties.bind.Bindable"
    - name: "context"
      type: "org.springframework.boot.context.properties.bind.BindContext"
    - name: "result"
      type: "java.lang.Object"
    instructionFingerprint: "6B32955343CDB043FB96773735E761C7"
  paths:
  - pathId: "path1"
    testPathName: "onSuccessWhenResultGetOriginIsNotNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "D5D037634DCCCFC6CCE94A3BF02505B9"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "3340664D785032C795BAABD64A310117"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "657A0D5935396A840B697C7476D3E736"
      valueUuid: "context"
    - type: "INPUT"
      name: "result"
      modelFingerprint: "C2D336BC4E615A1CFF05112FACBEA7E8"
      valueUuid: "result1"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "23EA22EA8C7A1B5A289E43C44ED7C628"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:bindHandler,message:uniqueUuid1):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "result"
      modelFingerprint: "0CB50D3644CC861F9EB2F7DF40C0C38D"
      valueUuid: "result1"
      methodExercised:
        expression: "getOrigin():origin"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6C52CC8B10021CF8673CD5784669B780"
      valueUuid: "result1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataLocationBindHandler"
        parameters: []
      valueType: "org.springframework.boot.context.config.ConfigDataLocationBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "result1"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.context.properties.bind.BindHandler"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "bindHandler"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "result1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "result1"
    branches:
    - lineNumber: 43
      expression: "result instanceof ConfigDataLocation location"
      range: "(43,7)-(43,51)"
      evaluatedAs: true
    - lineNumber: 63
      expression: "result.getOrigin() != null"
      range: "(63,7)-(63,32)"
      evaluatedAs: true
      internalMethodName: "withOrigin"
  - pathId: "path2"
    testPathName: "onSuccessWhenResultGetOriginIsNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "D110923952007191A1C21B4940EE6C47"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "3340664D785032C795BAABD64A310117"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "4751B65555804AA12E800A372C9B566E"
      valueUuid: "context"
    - type: "INPUT"
      name: "result"
      modelFingerprint: "C2D336BC4E615A1CFF05112FACBEA7E8"
      valueUuid: "result1"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "23EA22EA8C7A1B5A289E43C44ED7C628"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:bindHandler,message:uniqueUuid2):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "result"
      modelFingerprint: "F2395E2F5BC1599EBEC3B2C5C62D2E8B"
      valueUuid: "result1"
      methodExercised:
        expression: "getOrigin():origin"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "5F4DD773545E6A98E169AC1C2A144978"
      valueUuid: "context"
      methodExercised:
        expression: "getConfigurationProperty():configurationProperty"
    - type: "STATIC"
      name: "Origin.class"
      modelFingerprint: "D6597577F88757A1C6DAAEED4F001521"
      valueUuid: "Origin.class"
      methodExercised:
        expression: "from(source:configurationProperty):origin2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "result"
      modelFingerprint: "F6A768914272B3F3848547792EE95FF9"
      valueUuid: "result1"
      methodExercised:
        expression: "withOrigin(origin:origin2):configDataLocation"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7ADAF3E6F291D4D939813BA90575DCB2"
      valueUuid: "configDataLocation"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataLocationBindHandler"
        parameters: []
      valueType: "org.springframework.boot.context.config.ConfigDataLocationBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "result1"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.context.properties.bind.BindHandler"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "bindHandler"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "result1"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "Origin.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "result1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "configDataLocation"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "configDataLocation"
    branches:
    - lineNumber: 43
      expression: "result instanceof ConfigDataLocation location"
      range: "(43,7)-(43,51)"
      evaluatedAs: true
    - lineNumber: 63
      expression: "result.getOrigin() != null"
      range: "(63,7)-(63,32)"
      evaluatedAs: false
      internalMethodName: "withOrigin"
  - pathId: "path5"
    testPathName: "onSuccessWhenElementNotInstanceOfConfigDataLocation"
    constructorSignature: "<init>() : void"
    modelFingerprint: "5B062F744E0E3E9A60466579FFB2581C"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "3340664D785032C795BAABD64A310117"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "657A0D5935396A840B697C7476D3E736"
      valueUuid: "context"
    - type: "INPUT"
      name: "result"
      modelFingerprint: "2D1C73D61C7775621AA54334916B618A"
      valueUuid: "result1"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "23EA22EA8C7A1B5A289E43C44ED7C628"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:bindHandler,message:uniqueUuid3):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "9A89B24F057BDECDD24A15E0DE69DA94"
      valueUuid: "object2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataLocationBindHandler"
        parameters: []
      valueType: "org.springframework.boot.context.config.ConfigDataLocationBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
          valueType: "java.lang.Object"
          uuid: "object"
          collectionUuid: "result1"
      valueType: "java.util.List"
      genericValueType: "?"
      uuid: "result1"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.context.properties.bind.BindHandler"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "bindHandler"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
          valueType: "java.lang.Object"
          uuid: "object"
          collectionUuid: "result1"
      valueType: "java.util.ArrayList"
      uuid: "object2"
      collectionUuid: "list2"
    branches:
    - lineNumber: 43
      expression: "result instanceof ConfigDataLocation location"
      range: "(43,7)-(43,51)"
      evaluatedAs: false
    - lineNumber: 46
      expression: "result instanceof List<?> list"
      range: "(46,7)-(46,36)"
      evaluatedAs: true
    - lineNumber: 49
      expression: "element instanceof ConfigDataLocation location"
      range: "(49,24)-(49,69)"
      evaluatedAs: false
      internalMethodName: "lambda$onSuccess$0"
  - pathId: "path6"
    testPathName: "onSuccessWhenResultInstanceOfConfigDataLocationArray"
    constructorSignature: "<init>() : void"
    modelFingerprint: "22A8E193DF3196BE9F85ED1CE3808803"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "3340664D785032C795BAABD64A310117"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "657A0D5935396A840B697C7476D3E736"
      valueUuid: "context"
    - type: "INPUT"
      name: "result"
      modelFingerprint: "9E5EFC07ACF6ADEC4AB917AF2D33A085"
      valueUuid: "result1"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "23EA22EA8C7A1B5A289E43C44ED7C628"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:bindHandler,message:uniqueUuid4):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "625F48E10B9192A28AFC84827D8AC69E"
      valueUuid: "objectArray"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataLocationBindHandler"
        parameters: []
      valueType: "org.springframework.boot.context.config.ConfigDataLocationBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.context.config.ConfigDataLocation[]"
      uuid: "result1"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.context.properties.bind.BindHandler"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "bindHandler"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.Object[]"
      uuid: "objectArray"
      collectionUuid: "list2"
    branches:
    - lineNumber: 43
      expression: "result instanceof ConfigDataLocation location"
      range: "(43,7)-(43,51)"
      evaluatedAs: false
    - lineNumber: 46
      expression: "result instanceof List<?> list"
      range: "(46,7)-(46,36)"
      evaluatedAs: false
    - lineNumber: 53
      expression: "result instanceof ConfigDataLocation[] unfilteredLocations"
      range: "(53,7)-(53,64)"
      evaluatedAs: true
  - pathId: "path7"
    testPathName: "onSuccessWhenResultNotInstanceOfConfigDataLocationArray"
    constructorSignature: "<init>() : void"
    modelFingerprint: "F14561A2E523C89EF40C4E7CB14D9B88"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "3340664D785032C795BAABD64A310117"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "657A0D5935396A840B697C7476D3E736"
      valueUuid: "context"
    - type: "INPUT"
      name: "result"
      modelFingerprint: "31A650D2671F03F3038B5B482F360664"
      valueUuid: "result1"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "23EA22EA8C7A1B5A289E43C44ED7C628"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:bindHandler,message:uniqueUuid5):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7D8E87CB1B63A9579EC7584A697ED33D"
      valueUuid: "result1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataLocationBindHandler"
        parameters: []
      valueType: "org.springframework.boot.context.config.ConfigDataLocationBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "result1"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.context.properties.bind.BindHandler"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "bindHandler"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "result1"
    branches:
    - lineNumber: 43
      expression: "result instanceof ConfigDataLocation location"
      range: "(43,7)-(43,51)"
      evaluatedAs: false
    - lineNumber: 46
      expression: "result instanceof List<?> list"
      range: "(46,7)-(46,36)"
      evaluatedAs: false
    - lineNumber: 53
      expression: "result instanceof ConfigDataLocation[] unfilteredLocations"
      range: "(53,7)-(53,64)"
      evaluatedAs: false
  - pathId: "path3"
    testPathName: "onSuccessWhenElementInstanceOfConfigDataLocationAndResultGetOriginIsNotNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "0E3C0B6F0BB127DC1FBE9ECC21164C2F"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "3340664D785032C795BAABD64A310117"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "657A0D5935396A840B697C7476D3E736"
      valueUuid: "context"
    - type: "INPUT"
      name: "result"
      modelFingerprint: "AD8534881E03044DA101A9CE75BD0208"
      valueUuid: "result1"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "23EA22EA8C7A1B5A289E43C44ED7C628"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:bindHandler,message:uniqueUuid6):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "result"
      modelFingerprint: "34F048AA30AB15A8FE0CAB32FA5A20CE"
      valueUuid: "object"
      methodExercised:
        expression: "getOrigin():origin"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E642E1400A622E5BACDC9A1B6859622F"
      valueUuid: "object2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataLocationBindHandler"
        parameters: []
      valueType: "org.springframework.boot.context.config.ConfigDataLocationBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.config.ConfigDataLocation"
          uuid: "object"
          collectionUuid: "result1"
      valueType: "java.util.List"
      genericValueType: "?"
      uuid: "result1"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.context.properties.bind.BindHandler"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "bindHandler"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "object"
      collectionUuid: "result1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.config.ConfigDataLocation"
          uuid: "object"
          collectionUuid: "result1"
      valueType: "java.util.ArrayList"
      uuid: "object2"
      collectionUuid: "list2"
    branches:
    - lineNumber: 43
      expression: "result instanceof ConfigDataLocation location"
      range: "(43,7)-(43,51)"
      evaluatedAs: false
    - lineNumber: 46
      expression: "result instanceof List<?> list"
      range: "(46,7)-(46,36)"
      evaluatedAs: true
    - lineNumber: 49
      expression: "element instanceof ConfigDataLocation location"
      range: "(49,24)-(49,69)"
      evaluatedAs: true
      internalMethodName: "lambda$onSuccess$0"
    - lineNumber: 63
      expression: "result.getOrigin() != null"
      range: "(63,7)-(63,32)"
      evaluatedAs: true
      internalMethodName: "withOrigin"
  - pathId: "path4"
    testPathName: "onSuccessWhenElementInstanceOfConfigDataLocationAndResultGetOriginIsNull"
    constructorSignature: "<init>() : void"
    modelFingerprint: "F8F20C483791E005E1EA5F40BB2E12D5"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "3340664D785032C795BAABD64A310117"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "4751B65555804AA12E800A372C9B566E"
      valueUuid: "context"
    - type: "INPUT"
      name: "result"
      modelFingerprint: "AD8534881E03044DA101A9CE75BD0208"
      valueUuid: "result1"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "23EA22EA8C7A1B5A289E43C44ED7C628"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:bindHandler,message:uniqueUuid7):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "result"
      modelFingerprint: "8A2046D514F3C13EAC4EE7DF88511CF6"
      valueUuid: "object"
      methodExercised:
        expression: "getOrigin():origin"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "5F4DD773545E6A98E169AC1C2A144978"
      valueUuid: "context"
      methodExercised:
        expression: "getConfigurationProperty():configurationProperty"
    - type: "STATIC"
      name: "Origin.class"
      modelFingerprint: "D6597577F88757A1C6DAAEED4F001521"
      valueUuid: "Origin.class"
      methodExercised:
        expression: "from(source:configurationProperty):origin2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "result"
      modelFingerprint: "258CF8F4A08F51528CC013651A6D4B89"
      valueUuid: "object"
      methodExercised:
        expression: "withOrigin(origin:origin2):configDataLocation"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C69B68144C084F102E1C3EAF74703F2D"
      valueUuid: "object2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataLocationBindHandler"
        parameters: []
      valueType: "org.springframework.boot.context.config.ConfigDataLocationBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.config.ConfigDataLocation"
          uuid: "object"
          collectionUuid: "result1"
      valueType: "java.util.List"
      genericValueType: "?"
      uuid: "result1"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.context.properties.bind.BindHandler"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "bindHandler"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "object"
      collectionUuid: "result1"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "Origin.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "object"
      collectionUuid: "result1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "configDataLocation"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin2"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.config.ConfigDataLocation"
          uuid: "configDataLocation"
      valueType: "java.util.ArrayList"
      uuid: "object2"
      collectionUuid: "list2"
    branches:
    - lineNumber: 43
      expression: "result instanceof ConfigDataLocation location"
      range: "(43,7)-(43,51)"
      evaluatedAs: false
    - lineNumber: 46
      expression: "result instanceof List<?> list"
      range: "(46,7)-(46,36)"
      evaluatedAs: true
    - lineNumber: 49
      expression: "element instanceof ConfigDataLocation location"
      range: "(49,24)-(49,69)"
      evaluatedAs: true
      internalMethodName: "lambda$onSuccess$0"
    - lineNumber: 63
      expression: "result.getOrigin() != null"
      range: "(63,7)-(63,32)"
      evaluatedAs: false
      internalMethodName: "withOrigin"
