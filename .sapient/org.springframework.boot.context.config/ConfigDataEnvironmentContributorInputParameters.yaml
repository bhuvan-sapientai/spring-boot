---
modelFingerprint: "16669C0C56458C13B334D4360F2F9A93"
targetClass:
  fullClassName: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
methods:
- method:
    name: "getKind"
    sourceCodeSignature: "Kind getKind()"
    returnType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
    instructionFingerprint: "4FF82E0C089E6A6BEEA772E60CDE1911"
  paths:
  - pathId: "path1"
    testPathName: "getKindTest"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "5C997DEA8EAED627C633F40B3F15903C"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getLocation"
    sourceCodeSignature: "ConfigDataLocation getLocation()"
    returnType: "org.springframework.boot.context.config.ConfigDataLocation"
    instructionFingerprint: "EDAAE51B769561EB9940BA79DA30CE9E"
  paths:
  - pathId: "path1"
    testPathName: "getLocationTest"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "6C5A8310AE8C6F338CC9A9DEAB533B24"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "isActive"
    sourceCodeSignature: "boolean isActive(ConfigDataActivationContext activationContext)"
    returnType: "boolean"
    parameters:
    - name: "activationContext"
      type: "org.springframework.boot.context.config.ConfigDataActivationContext"
    instructionFingerprint: "7A26E354FA2B407365F057A892DC733B"
  paths:
  - pathId: "path1"
    testPathName: "isActiveWhenThisKindEqualsKindUNBOUND_IMPORT"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "CA2104FFF1EA797A667D0EE16A31E0A1"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "5084CFC15601C40F1C47033355469948"
      valueUuid: "target"
    - type: "INPUT"
      name: "activationContext"
      modelFingerprint: "5F152DB7362D439AA9B05E0C6C2D5AAA"
      valueUuid: "activationContext"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "UNBOUND_IMPORT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "children"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataActivationContext"
      uuid: "activationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 124
      expression: "this.kind == Kind.UNBOUND_IMPORT"
      range: "(124,7)-(124,38)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "isActiveWhenThisPropertiesIsActiveActivationContext"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "01770E4A1E9C88C6F754950FA0E01324"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "5368BDA91418F053FEEA0BD887C7BBDD"
      valueUuid: "target"
    - type: "INPUT"
      name: "activationContext"
      modelFingerprint: "5F152DB7362D439AA9B05E0C6C2D5AAA"
      valueUuid: "activationContext"
    - type: "FIELD"
      name: "properties"
      modelFingerprint: "42320176A20F3610455CE34C4CD828C1"
      valueUuid: "properties"
      methodExercised:
        expression: "isActive(activationContext:activationContext):boolean1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "EMPTY_LOCATION"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "children"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataActivationContext"
      uuid: "activationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataProperties"
      uuid: "properties"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataActivationContext"
      uuid: "activationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 124
      expression: "this.kind == Kind.UNBOUND_IMPORT"
      range: "(124,7)-(124,38)"
      evaluatedAs: false
    - lineNumber: 127
      expression: "this.properties == null"
      range: "(127,10)-(127,32)"
      evaluatedAs: false
    - lineNumber: 127
      expression: "this.properties.isActive(activationContext)"
      range: "(127,37)-(127,79)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "isActiveWhenThisPropertiesNotIsActiveActivationContext"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "41845C6E362E1B8957DA37F078909069"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "5368BDA91418F053FEEA0BD887C7BBDD"
      valueUuid: "target"
    - type: "INPUT"
      name: "activationContext"
      modelFingerprint: "5F152DB7362D439AA9B05E0C6C2D5AAA"
      valueUuid: "activationContext"
    - type: "FIELD"
      name: "properties"
      modelFingerprint: "0C8018DAECEC2DC88A9643B48C407B8A"
      valueUuid: "properties"
      methodExercised:
        expression: "isActive(activationContext:activationContext):boolean1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "EMPTY_LOCATION"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "children"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataActivationContext"
      uuid: "activationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataProperties"
      uuid: "properties"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataActivationContext"
      uuid: "activationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 124
      expression: "this.kind == Kind.UNBOUND_IMPORT"
      range: "(124,7)-(124,38)"
      evaluatedAs: false
    - lineNumber: 127
      expression: "this.properties == null"
      range: "(127,10)-(127,32)"
      evaluatedAs: false
    - lineNumber: 127
      expression: "this.properties.isActive(activationContext)"
      range: "(127,37)-(127,79)"
      evaluatedAs: false
- method:
    name: "getResource"
    sourceCodeSignature: "ConfigDataResource getResource()"
    returnType: "org.springframework.boot.context.config.ConfigDataResource"
    instructionFingerprint: "00DF111282E4CCDA848F6D39D1B1A51E"
  paths:
  - pathId: "path1"
    testPathName: "getResourceTest"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "EA0C6CA0AF5540CBF8E14527F997D1C8"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "isFromProfileSpecificImport"
    sourceCodeSignature: "boolean isFromProfileSpecificImport()"
    returnType: "boolean"
    instructionFingerprint: "FA2E431C288A61C021CCFF599F1A09D1"
  paths:
  - pathId: "path1"
    testPathName: "isFromProfileSpecificImportWhenThisFromProfileSpecificImport"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "A6EBE4C661DBFD3589C249A30DDC16B8"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 143
      expression: "this.fromProfileSpecificImport"
      range: "(143,10)-(143,39)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "isFromProfileSpecificImportWhenThisNotFromProfileSpecificImport"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "EAAF12120BA656183162A062935EAFFD"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 143
      expression: "this.fromProfileSpecificImport"
      range: "(143,10)-(143,39)"
      evaluatedAs: false
- method:
    name: "getPropertySource"
    sourceCodeSignature: "PropertySource<?> getPropertySource()"
    returnType: "org.springframework.core.env.PropertySource"
    genericReturnType: "?"
    instructionFingerprint: "9E6A8E7932441A7E42D67805690DEC77"
  paths:
  - pathId: "path1"
    testPathName: "getPropertySourceTest"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "11F7FFC3E1D3D9B2100648F77F9ECB89"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getConfigurationPropertySource"
    sourceCodeSignature: "ConfigurationPropertySource getConfigurationPropertySource()"
    returnType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
    instructionFingerprint: "7B7DE8B16785CC380CD519F788D727A4"
  paths:
  - pathId: "path1"
    testPathName: "getConfigurationPropertySourceTest"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "449276FE374ECB96E5E787C94EF7E0C9"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "hasConfigDataOption"
    sourceCodeSignature: "boolean hasConfigDataOption(ConfigData.Option option)"
    returnType: "boolean"
    parameters:
    - name: "option"
      type: "org.springframework.boot.context.config.ConfigData$Option"
    instructionFingerprint: "BBBA6D18B2E476B953642B3D5785AF02"
  paths:
  - pathId: "path1"
    testPathName: "hasConfigDataOptionWhenThisConfigDataOptionsContainsOption"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "A399419EE4667077526EC60CD63A2CFF"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "07ED95A381F6F70C21AEE537E18AB186"
      valueUuid: "target"
    - type: "INPUT"
      name: "option"
      modelFingerprint: "A931C6F6669C8DA9B75A114B8B1DE4B7"
      valueUuid: "option"
    - type: "FIELD"
      name: "configDataOptions"
      modelFingerprint: "CF93B2019D99FA4BDED00AF23110C57A"
      valueUuid: "configDataOptions"
      methodExercised:
        expression: "contains(option:option):boolean1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "boolean1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ROOT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "children"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "IGNORE_IMPORTS"
      valueType: "org.springframework.boot.context.config.ConfigData$Option"
      uuid: "option"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigData$Options"
      uuid: "configDataOptions"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "IGNORE_IMPORTS"
      valueType: "org.springframework.boot.context.config.ConfigData$Option"
      uuid: "option"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
      fixed: true
    branches:
    - lineNumber: 168
      expression: "this.configDataOptions.contains(option)"
      range: "(168,10)-(168,48)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "hasConfigDataOptionWhenThisConfigDataOptionsNotContainsOption"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "13C6F1308C675C8A95AB97A810208135"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "07ED95A381F6F70C21AEE537E18AB186"
      valueUuid: "target"
    - type: "INPUT"
      name: "option"
      modelFingerprint: "A931C6F6669C8DA9B75A114B8B1DE4B7"
      valueUuid: "option"
    - type: "FIELD"
      name: "configDataOptions"
      modelFingerprint: "CD00A0A78AAED0055085691E4DF0C9F0"
      valueUuid: "configDataOptions"
      methodExercised:
        expression: "contains(option:option):boolean1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "boolean1"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ROOT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "children"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "IGNORE_IMPORTS"
      valueType: "org.springframework.boot.context.config.ConfigData$Option"
      uuid: "option"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigData$Options"
      uuid: "configDataOptions"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "IGNORE_IMPORTS"
      valueType: "org.springframework.boot.context.config.ConfigData$Option"
      uuid: "option"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
      fixed: true
    branches:
    - lineNumber: 168
      expression: "this.configDataOptions.contains(option)"
      range: "(168,10)-(168,48)"
      evaluatedAs: false
- method:
    name: "withoutConfigDataOption"
    sourceCodeSignature: "ConfigDataEnvironmentContributor withoutConfigDataOption(ConfigData.Option\
      \ option)"
    returnType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
    parameters:
    - name: "option"
      type: "org.springframework.boot.context.config.ConfigData$Option"
    instructionFingerprint: "132A5EAC26FED019CB199CDE445F474C"
  paths:
  - pathId: "path1"
    testPathName: "withoutConfigDataOptionWhenDefaultBranch"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "D68C202CD3BA9C40025C7A4DDB31D576"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "07ED95A381F6F70C21AEE537E18AB186"
      valueUuid: "target"
    - type: "INPUT"
      name: "option"
      modelFingerprint: "A931C6F6669C8DA9B75A114B8B1DE4B7"
      valueUuid: "option"
    - type: "FIELD"
      name: "configDataOptions"
      modelFingerprint: "2DDC87324F222FB7DD75DD96600C6D36"
      valueUuid: "configDataOptions"
      methodExercised:
        expression: "without(option:option):configData.Options2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "AE7FE98293CCB6793E0242C3519D255E"
      valueUuid: "configDataEnvironmentContributor2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ROOT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "children"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "IGNORE_IMPORTS"
      valueType: "org.springframework.boot.context.config.ConfigData$Option"
      uuid: "option"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigData$Options"
      uuid: "configDataOptions"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigData$Options"
      uuid: "configData.Options2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "IGNORE_IMPORTS"
      valueType: "org.springframework.boot.context.config.ConfigData$Option"
      uuid: "option"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ROOT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configData.Options2"
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "children"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "configDataEnvironmentContributor2"
      fixed: true
    branches:
    - lineNumber: 102
      expression: "branch expression (line 102)"
      range: "(102,1)-(102,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
    - lineNumber: 103
      expression: "branch expression (line 103)"
      range: "(103,1)-(103,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
  - pathId: "path4"
    testPathName: "withoutConfigDataOptionWhenDefaultBranchAndDefaultBranch"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "1C8DA10914C41CE5FBBFAD4C98BAE5ED"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "A5D049A04CF11465FA3E108B3B325CF2"
      valueUuid: "target"
    - type: "INPUT"
      name: "option"
      modelFingerprint: "A931C6F6669C8DA9B75A114B8B1DE4B7"
      valueUuid: "option"
    - type: "FIELD"
      name: "configDataOptions"
      modelFingerprint: "39DFA591CF99F85F2A62289BBD8FB40F"
      valueUuid: "configDataOptions"
      methodExercised:
        expression: "without(option:option):configData.Options2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "769C6ACD3B5A9BB5CEF797CDEB03BF57"
      valueUuid: "configDataEnvironmentContributor2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ROOT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
        - name: "children"
          value:
            sapientType: "NULL"
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "children"
            fixed: true
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "IGNORE_IMPORTS"
      valueType: "org.springframework.boot.context.config.ConfigData$Option"
      uuid: "option"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigData$Options"
      uuid: "configDataOptions"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.config.ConfigData$Options"
      uuid: "configData.Options2"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "IGNORE_IMPORTS"
      valueType: "org.springframework.boot.context.config.ConfigData$Option"
      uuid: "option"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ROOT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configData.Options2"
        - name: "children"
          value:
            sapientType: "NULL"
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "children"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "configDataEnvironmentContributor2"
      fixed: true
    branches:
    - lineNumber: 102
      expression: "branch expression (line 102)"
      range: "(102,1)-(102,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
    - lineNumber: 103
      expression: "branch expression (line 103)"
      range: "(103,1)-(103,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
- method:
    name: "getImports"
    sourceCodeSignature: "List<ConfigDataLocation> getImports()"
    returnType: "java.util.List"
    genericReturnType: "org.springframework.boot.context.config.ConfigDataLocation"
    instructionFingerprint: "5EB319EBFC78104668D28DDA50D91784"
  paths:
  - pathId: "path1"
    testPathName: "getImportsWhenThisPropertiesIsNotNull"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "243BEC88558869EC57CD27C70C45886E"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F412F992EA9B528EF6767C74A9BAE1B2"
      valueUuid: "target"
    - type: "FIELD"
      name: "properties"
      modelFingerprint: "9ABCDCD8E301C0C882A6F2EF982AB819"
      valueUuid: "properties"
      methodExercised:
        expression: "getImports():list"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B673B71DAD53A4F383184D3319EE88BD"
      valueUuid: "list"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ROOT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "children"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataProperties"
      uuid: "properties"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "list"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "list"
    branches:
    - lineNumber: 182
      expression: "this.properties != null"
      range: "(182,11)-(182,33)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getImportsWhenThisPropertiesIsNull"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "57D60BE2E64C9BB1CB72B05D48024866"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "A66F07DDAFF1383B7944C2B140C499C1"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8B7C61AAAB697BFC2AEB732F85603527"
      valueUuid: "list"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ROOT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
            fixed: true
        - name: "configDataOptions"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "children"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "list"
    branches:
    - lineNumber: 182
      expression: "this.properties != null"
      range: "(182,11)-(182,33)"
      evaluatedAs: false
- method:
    name: "hasUnprocessedImports"
    sourceCodeSignature: "boolean hasUnprocessedImports(ImportPhase importPhase)"
    returnType: "boolean"
    parameters:
    - name: "importPhase"
      type: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase"
    instructionFingerprint: "AB03A777528F0DC3BC300AAB4E790ADB"
  paths:
  - pathId: "path1"
    testPathName: "hasUnprocessedImportsWhenGetImportsIsEmpty"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "05C164A84FBB7632DD42AB774F8197CB"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0D9DCB12310FD94B035504081CCE3E9E"
      valueUuid: "target"
    - type: "INPUT"
      name: "importPhase"
      modelFingerprint: "BCB4A6BA624A3CE8ABED985C925C4722"
      valueUuid: "importPhase"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "245F4A02D90AA63580DB42C5898D3C8B"
      methodExercised:
        expression: "getImports():list"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ROOT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "children"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "BEFORE_PROFILE_ACTIVATION"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase"
      uuid: "importPhase"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "list"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 192
      expression: "getImports().isEmpty()"
      range: "(192,7)-(192,28)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "hasUnprocessedImportsWhenThisChildrenNotContainsKeyImportPhase"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "09C69AFE43A6186B29BEA5524E851990"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "F6A1B2C5412D37D18739FACF89D27FB7"
      valueUuid: "target"
    - type: "INPUT"
      name: "importPhase"
      modelFingerprint: "BCB4A6BA624A3CE8ABED985C925C4722"
      valueUuid: "importPhase"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "3A4A2776C015BB6C20DCEF1FDCC8F6F3"
      methodExercised:
        expression: "getImports():list"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ROOT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "children"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "BEFORE_PROFILE_ACTIVATION"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase"
      uuid: "importPhase"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.config.ConfigDataLocation"
          uuid: "listItem0"
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "list"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 192
      expression: "getImports().isEmpty()"
      range: "(192,7)-(192,28)"
      evaluatedAs: false
    - lineNumber: 195
      expression: "!this.children.containsKey(importPhase)"
      range: "(195,10)-(195,48)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "hasUnprocessedImportsWhenThisChildrenContainsKeyImportPhase"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "0F940988BD0A61074427109C444D260B"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1CA47E9C912B5057046F051B1BBD1778"
      valueUuid: "target"
    - type: "INPUT"
      name: "importPhase"
      modelFingerprint: "BCB4A6BA624A3CE8ABED985C925C4722"
      valueUuid: "importPhase"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "3A4A2776C015BB6C20DCEF1FDCC8F6F3"
      methodExercised:
        expression: "getImports():list"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ROOT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "ENUM"
                    content: !<regular>
                      value: "BEFORE_PROFILE_ACTIVATION"
                    valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase"
                    uuid: "importPhase"
                  value:
                    sapientType: "COLLECTION"
                    content: !<collection>
                      parameters: []
                      values: []
                    valueType: "java.util.List"
                    genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
                    uuid: "importPhase-value"
                uuid: "children-item"
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "children"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "BEFORE_PROFILE_ACTIVATION"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase"
      uuid: "importPhase"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.config.ConfigDataLocation"
          uuid: "listItem0"
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "list"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 192
      expression: "getImports().isEmpty()"
      range: "(192,7)-(192,28)"
      evaluatedAs: false
    - lineNumber: 195
      expression: "!this.children.containsKey(importPhase)"
      range: "(195,10)-(195,48)"
      evaluatedAs: false
- method:
    name: "getChildren"
    sourceCodeSignature: "List<ConfigDataEnvironmentContributor> getChildren(ImportPhase\
      \ importPhase)"
    returnType: "java.util.List"
    genericReturnType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
    parameters:
    - name: "importPhase"
      type: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase"
    instructionFingerprint: "68E1B70116C8583A9F678E0987063677"
  paths:
  - pathId: "path1"
    testPathName: "getChildrenTest"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "B8304B7A21CFED7267F88934D6F78FB1"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "A571C34994380FA48D893D42016DBA4E"
      valueUuid: "target"
    - type: "INPUT"
      name: "importPhase"
      modelFingerprint: "EC6A573CF87566444FDCAF82A54E1D74"
      valueUuid: "importPhase"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2735C41F3FD359DA7E8D3F0016E80A67"
      valueUuid: "object"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ROOT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "children"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "BEFORE_PROFILE_ACTIVATION"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase"
      uuid: "importPhase"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      uuid: "object"
      collectionUuid: "children"
      explicitCastNeeded: true
- method:
    name: "stream"
    sourceCodeSignature: "Stream<ConfigDataEnvironmentContributor> stream()"
    returnType: "java.util.stream.Stream"
    genericReturnType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
    instructionFingerprint: "B1961213BFEC5F43113C8BEC6D4863AA"
  paths:
  - pathId: "path1"
    testPathName: "streamTest"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "BF4E9947A4ADE854F84DA6342B697E63"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0D9DCB12310FD94B035504081CCE3E9E"
      valueUuid: "target"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "A71B3DCE3CDC4B98C4EF2C43AA282B12"
      methodExercised:
        expression: "spliterator():spliterator"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B55B1820CF1A5590EBC1A63BF03E1217"
      valueUuid: "stream"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.stream.StreamSupport.stream(java.util.Spliterator,boolean)\
        \ : java.util.stream.Stream"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ROOT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "children"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.util.Spliterator"
      uuid: "spliterator"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "java.util.stream.Stream"
        method: "empty"
        methodParameters: []
      valueType: "java.util.stream.Stream"
      uuid: "stream"
- method:
    name: "iterator"
    sourceCodeSignature: "Iterator<ConfigDataEnvironmentContributor> iterator()"
    returnType: "java.util.Iterator"
    genericReturnType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
    instructionFingerprint: "D8571A776FEA292D3F3ADF855301D505"
  paths:
  - pathId: "path1"
    testPathName: "iteratorTest"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "C63B01B96E93D0CA772394846D315E42"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0D9DCB12310FD94B035504081CCE3E9E"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "ECF56F0B990C47416A9962F1C562A554"
      valueUuid: "configDataEnvironmentContributor.ContributorIteratorNotNull"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ROOT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "children"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "target"
    - sapientType: "NOT_NULL"
      valueType: "java.util.Iterator"
      genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "configDataEnvironmentContributor.ContributorIteratorNotNull"
      fixed: true
- method:
    name: "withBoundProperties"
    sourceCodeSignature: "ConfigDataEnvironmentContributor withBoundProperties(Iterable<ConfigDataEnvironmentContributor>\
      \ contributors, ConfigDataActivationContext activationContext)"
    returnType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
    parameters:
    - name: "contributors"
      type: "java.lang.Iterable"
    - name: "activationContext"
      type: "org.springframework.boot.context.config.ConfigDataActivationContext"
    instructionFingerprint: "38F038EF6BEE6D3450EDC0355F1526BD"
  paths:
  - pathId: "path4"
    testPathName: "withBoundPropertiesWhenDefaultBranchAndDefaultBranch"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "E717029D83968455AAB67AE6E1C12773"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "C7701BF868CAD4D42715AF272A675732"
      valueUuid: "target"
    - type: "INPUT"
      name: "contributors"
      modelFingerprint: "DDAE264E65F68F06B18FB224CB73E649"
      valueUuid: "contributors"
    - type: "INPUT"
      name: "activationContext"
      modelFingerprint: "5F152DB7362D439AA9B05E0C6C2D5AAA"
      valueUuid: "activationContext"
    - type: "STATIC"
      name: "ConfigDataProperties.class"
      modelFingerprint: "7898235EBD1434F158F880283F12D0D5"
      valueUuid: "ConfigDataProperties.class"
      methodExercised:
        expression: "get(binder:binder):configDataProperties"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E54DD8A570A214A1849BB03B807B6DBE"
      valueUuid: "configDataEnvironmentContributor2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ROOT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
            fixed: true
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "children"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "contributors"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataActivationContext"
      uuid: "activationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataProperties"
      uuid: "ConfigDataProperties.class"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.config.ConfigDataProperties"
      uuid: "configDataProperties"
      fixed: true
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "binder"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "BOUND_IMPORT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "Enum-org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind-BOUND_IMPORT"
            fixed: true
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "configDataProperties"
            fixed: true
        - name: "configDataOptions"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
        - name: "children"
          value:
            sapientType: "NULL"
            valueType: "java.util.Map"
            uuid: "uniqueUuid4"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "configDataEnvironmentContributor2"
      fixed: true
    branches:
    - lineNumber: 241
      expression: "properties != null"
      range: "(241,7)-(241,24)"
      evaluatedAs: false
    - lineNumber: 102
      expression: "branch expression (line 102)"
      range: "(102,1)-(102,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
    - lineNumber: 103
      expression: "branch expression (line 103)"
      range: "(103,1)-(103,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
  - pathId: "path1"
    testPathName: "withBoundPropertiesWhenThisConfigDataOptionsContainsConfigDataOptionIGNORE_IMPORTSAndDefaultBranchAndDefaultBranch"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "3AA8288361A6672925A6180F93E68FA9"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "07ED95A381F6F70C21AEE537E18AB186"
      valueUuid: "target"
    - type: "INPUT"
      name: "contributors"
      modelFingerprint: "DDAE264E65F68F06B18FB224CB73E649"
      valueUuid: "contributors"
    - type: "INPUT"
      name: "activationContext"
      modelFingerprint: "5F152DB7362D439AA9B05E0C6C2D5AAA"
      valueUuid: "activationContext"
    - type: "STATIC"
      name: "ConfigDataProperties.class"
      modelFingerprint: "42DED716186D855BA580AFC11AB9367E"
      valueUuid: "ConfigDataProperties.class"
      methodExercised:
        expression: "get(binder:binder):configDataProperties"
        staticAccess: true
    - type: "FIELD"
      name: "configDataOptions"
      modelFingerprint: "5473B15511DEB2FE4A8BAE6F5583BB27"
      valueUuid: "configDataOptions"
      methodExercised:
        expression: "contains(option:Enum-org.springframework.boot.context.config.ConfigData$Option-IGNORE_IMPORTS):boolean1"
    - type: "LOCAL_VARIABLE"
      name: "properties"
      modelFingerprint: "82F4DD52DC3CC8BEB8E9D5D0242D8B66"
      valueUuid: "configDataProperties"
      methodExercised:
        expression: "withoutImports():configDataProperties2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "AAB921A9B6DFAB88C92458C23EC159E1"
      valueUuid: "configDataEnvironmentContributor2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ROOT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "children"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "target"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "contributors"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataActivationContext"
      uuid: "activationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataProperties"
      uuid: "ConfigDataProperties.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataProperties"
      uuid: "configDataProperties"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "binder"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigData$Options"
      uuid: "configDataOptions"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "ENUM"
      content: !<regular>
        value: "IGNORE_IMPORTS"
      valueType: "org.springframework.boot.context.config.ConfigData$Option"
      uuid: "Enum-org.springframework.boot.context.config.ConfigData$Option-IGNORE_IMPORTS"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataProperties"
      uuid: "configDataProperties"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataProperties"
      uuid: "configDataProperties2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "BOUND_IMPORT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "Enum-org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind-BOUND_IMPORT"
            fixed: true
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "configDataProperties2"
        - name: "configDataOptions"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
        - name: "children"
          value:
            sapientType: "NULL"
            valueType: "java.util.Map"
            uuid: "uniqueUuid8"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "configDataEnvironmentContributor2"
      fixed: true
    branches:
    - lineNumber: 241
      expression: "properties != null"
      range: "(241,7)-(241,24)"
      evaluatedAs: true
    - lineNumber: 241
      expression: "this.configDataOptions.contains(ConfigData.Option.IGNORE_IMPORTS)"
      range: "(241,29)-(241,93)"
      evaluatedAs: true
    - lineNumber: 102
      expression: "branch expression (line 102)"
      range: "(102,1)-(102,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
    - lineNumber: 103
      expression: "branch expression (line 103)"
      range: "(103,1)-(103,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
- method:
    name: "withChildren"
    sourceCodeSignature: "ConfigDataEnvironmentContributor withChildren(ImportPhase\
      \ importPhase, List<ConfigDataEnvironmentContributor> children)"
    returnType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
    parameters:
    - name: "importPhase"
      type: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase"
    - name: "children"
      type: "java.util.List"
    instructionFingerprint: "DBE03FC208D95A6067D4EE42174BD997"
  paths:
  - pathId: "path1"
    testPathName: "withChildrenWhenDefaultBranchAndDefaultBranch"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "A8C1713AA263754987076C92BD3953CC"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0D9DCB12310FD94B035504081CCE3E9E"
      valueUuid: "target"
    - type: "INPUT"
      name: "importPhase"
      modelFingerprint: "EE3646F064875D38A5B1F73614ED206B"
      valueUuid: "importPhase"
    - type: "INPUT"
      name: "children"
      modelFingerprint: "AAF8447295B5B7D8BAF59EC58A9E2667"
      valueUuid: "children"
    - type: "STATIC"
      name: "CollectionUtils.class.real"
      modelFingerprint: "259CBC0BADB34F64E0FA64930B5AEB51"
      valueUuid: "CollectionUtils.class.real"
      methodExercised:
        expression: "isEmpty(collection:list2):boolean1"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "CE8ACF1826A1C48CE4AD56330657D4C9"
      valueUuid: "configDataEnvironmentContributor2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ROOT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "children2"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "AFTER_PROFILE_ACTIVATION"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase"
      uuid: "importPhase"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "children"
    - sapientType: "REAL"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "NULL"
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "list2"
      collectionUuid: "linkedHashMap"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ROOT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.LinkedHashMap"
              parameters:
              - name: "m"
                value:
                  sapientType: "COLLECTION"
                  content: !<collection>
                    parameters: []
                    values: []
                  valueType: "java.util.Map"
                  genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
                  uuid: "children2"
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "ENUM"
                    content: !<regular>
                      value: "AFTER_PROFILE_ACTIVATION"
                    valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase"
                    uuid: "importPhase"
                  value:
                    sapientType: "COLLECTION"
                    content: !<collection>
                      parameters: []
                      values: []
                    valueType: "java.util.List"
                    genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
                    uuid: "children"
                valueType: "java.util.Map$Entry"
                genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "linkedHashMap"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "configDataEnvironmentContributor2"
      fixed: true
    branches:
    - lineNumber: 260
      expression: "importPhase == ImportPhase.AFTER_PROFILE_ACTIVATION"
      range: "(260,7)-(260,57)"
      evaluatedAs: true
    - lineNumber: 302
      expression: "CollectionUtils.isEmpty(contributors)"
      range: "(302,7)-(302,43)"
      evaluatedAs: true
      internalMethodName: "hasAnyProfileSpecificChildren"
    - lineNumber: 270
      expression: "!hasAnyProfileSpecificChildren(before)"
      range: "(270,7)-(270,44)"
      evaluatedAs: true
      internalMethodName: "moveProfileSpecific"
    - lineNumber: 102
      expression: "branch expression (line 102)"
      range: "(102,1)-(102,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
    - lineNumber: 103
      expression: "branch expression (line 103)"
      range: "(103,1)-(103,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
  - pathId: "path2"
    testPathName: "withChildrenWhenHasAnyProfileSpecificChildrenNotBeforeAndDefaultBranchAndDefaultBranch"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "75E0F42BB4DD1DB5805E0E25AD4DE037"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "C7701BF868CAD4D42715AF272A675732"
      valueUuid: "target"
    - type: "INPUT"
      name: "importPhase"
      modelFingerprint: "EE3646F064875D38A5B1F73614ED206B"
      valueUuid: "importPhase"
    - type: "INPUT"
      name: "children"
      modelFingerprint: "AAF8447295B5B7D8BAF59EC58A9E2667"
      valueUuid: "children"
    - type: "STATIC"
      name: "CollectionUtils.class.real"
      modelFingerprint: "259CBC0BADB34F64E0FA64930B5AEB51"
      valueUuid: "CollectionUtils.class.real"
      methodExercised:
        expression: "isEmpty(collection:list2):boolean1"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E99EC21BB581A47AF30851963E31021E"
      valueUuid: "configDataEnvironmentContributor2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ROOT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
            fixed: true
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "children2"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "AFTER_PROFILE_ACTIVATION"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase"
      uuid: "importPhase"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "children"
    - sapientType: "REAL"
      valueType: "org.springframework.util.CollectionUtils"
      uuid: "CollectionUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "NULL"
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "list2"
      collectionUuid: "linkedHashMap"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ROOT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.LinkedHashMap"
              parameters:
              - name: "m"
                value:
                  sapientType: "COLLECTION"
                  content: !<collection>
                    parameters: []
                    values: []
                  valueType: "java.util.Map"
                  genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
                  uuid: "children2"
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "ENUM"
                    content: !<regular>
                      value: "AFTER_PROFILE_ACTIVATION"
                    valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase"
                    uuid: "importPhase"
                  value:
                    sapientType: "COLLECTION"
                    content: !<collection>
                      parameters: []
                      values: []
                    valueType: "java.util.List"
                    genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
                    uuid: "children"
                valueType: "java.util.Map$Entry"
                genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "linkedHashMap"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "configDataEnvironmentContributor2"
      fixed: true
    branches:
    - lineNumber: 260
      expression: "importPhase == ImportPhase.AFTER_PROFILE_ACTIVATION"
      range: "(260,7)-(260,57)"
      evaluatedAs: true
    - lineNumber: 302
      expression: "CollectionUtils.isEmpty(contributors)"
      range: "(302,7)-(302,43)"
      evaluatedAs: true
      internalMethodName: "hasAnyProfileSpecificChildren"
    - lineNumber: 270
      expression: "!hasAnyProfileSpecificChildren(before)"
      range: "(270,7)-(270,44)"
      evaluatedAs: true
      internalMethodName: "moveProfileSpecific"
    - lineNumber: 102
      expression: "branch expression (line 102)"
      range: "(102,1)-(102,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
    - lineNumber: 103
      expression: "branch expression (line 103)"
      range: "(103,1)-(103,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
- method:
    name: "withReplacement"
    sourceCodeSignature: "ConfigDataEnvironmentContributor withReplacement(ConfigDataEnvironmentContributor\
      \ existing, ConfigDataEnvironmentContributor replacement)"
    returnType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
    parameters:
    - name: "existing"
      type: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
    - name: "replacement"
      type: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
    instructionFingerprint: "BF6F189D601349F4C5DD851114B99E75"
  paths:
  - pathId: "path1"
    testPathName: "withReplacementWhenThisEqualsExisting"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "EE5118139586C152550B600459030F25"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "0D9DCB12310FD94B035504081CCE3E9E"
      valueUuid: "target"
    - type: "INPUT"
      name: "existing"
      modelFingerprint: "389FC6419FC1B4C9A16E0A936F33E084"
      valueUuid: "targetClassObject"
    - type: "INPUT"
      name: "replacement"
      modelFingerprint: "49FBFFEE13A9A4C7C1817888B933953A"
      valueUuid: "replacement"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2298EE4CC5E912672F0F192EFE06C241"
      valueUuid: "replacement"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ROOT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "children"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "target"
    - sapientType: "THIS"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "targetClassObject"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "replacement"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "replacement"
    branches:
    - lineNumber: 326
      expression: "this == existing"
      range: "(326,7)-(326,22)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "withReplacementWhenDefaultBranch"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "664B9A415CB8534A349D469602A2D553"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "3875055416BBD0E896A23F5FCDE32392"
      valueUuid: "target"
    - type: "INPUT"
      name: "existing"
      modelFingerprint: "114B3D4DBE90991B5E8EBCDD2CE2B38D"
      valueUuid: "existing"
    - type: "INPUT"
      name: "replacement"
      modelFingerprint: "49FBFFEE13A9A4C7C1817888B933953A"
      valueUuid: "replacement"
    - type: "LOCAL_VARIABLE"
      name: "contributor"
      modelFingerprint: "876A2BAB302FFFBD8598B46A6C36DEDB"
      valueUuid: "object"
      methodExercised:
        expression: "withReplacement(existing:existing,replacement:replacement):configDataEnvironmentContributor2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F3D1406A4D835BB4C8119EABD6D9F785"
      valueUuid: "configDataEnvironmentContributor3"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ROOT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "ENUM"
                    content: !<regular>
                      value: "BEFORE_PROFILE_ACTIVATION"
                    valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase"
                    uuid: "configDataEnvironmentContributor.ImportPhase"
                    collectionUuid: "children"
                  value:
                    sapientType: "COLLECTION"
                    content: !<collection>
                      collectionClass: "java.util.ArrayList"
                      parameters: []
                      values:
                      - sapientType: "MOCK"
                        valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
                        uuid: "object"
                        collectionUuid: "list"
                    valueType: "java.util.List"
                    genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
                    uuid: "list"
                    collectionUuid: "children"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "children"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "existing"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "replacement"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "object"
      collectionUuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "configDataEnvironmentContributor2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "existing"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "replacement"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ROOT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.LinkedHashMap"
              parameters:
              - name: "initialCapacity"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "int"
                  uuid: "int1"
                  collectionUuid: "children"
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "ENUM"
                    content: !<regular>
                      value: "BEFORE_PROFILE_ACTIVATION"
                    valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase"
                    uuid: "configDataEnvironmentContributor.ImportPhase"
                    collectionUuid: "children"
                  value:
                    sapientType: "COLLECTION"
                    content: !<collection>
                      collectionClass: "java.util.ArrayList"
                      parameters:
                      - name: "initialCapacity"
                        value:
                          sapientType: "BASIC"
                          content: !<regular>
                            value: 1
                          valueType: "int"
                          uuid: "int2"
                          collectionUuid: "list"
                      values:
                      - sapientType: "MOCK"
                        valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
                        uuid: "configDataEnvironmentContributor2"
                    valueType: "java.util.List"
                    genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
                    uuid: "list"
                valueType: "java.util.Map$Entry"
                genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "linkedHashMap"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "configDataEnvironmentContributor3"
      fixed: true
    branches:
    - lineNumber: 326
      expression: "this == existing"
      range: "(326,7)-(326,22)"
      evaluatedAs: false
    - lineNumber: 333
      expression: "for-each(contributors)"
      range: "(333,56)-(333,67)"
      evaluatedAs: true
      internalMethodName: "lambda$withReplacement$1"
    - lineNumber: 102
      expression: "branch expression (line 102)"
      range: "(102,1)-(102,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
    - lineNumber: 103
      expression: "branch expression (line 103)"
      range: "(103,1)-(103,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
  - pathId: "path3"
    testPathName: "withReplacementWhenDefaultBranchAndDefaultBranch"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "D02C0F43E5C21189A07C4093DF4D1D8D"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "80E921CCC484FC0B44A568798CA80255"
      valueUuid: "target"
    - type: "INPUT"
      name: "existing"
      modelFingerprint: "114B3D4DBE90991B5E8EBCDD2CE2B38D"
      valueUuid: "existing"
    - type: "INPUT"
      name: "replacement"
      modelFingerprint: "49FBFFEE13A9A4C7C1817888B933953A"
      valueUuid: "replacement"
    - type: "LOCAL_VARIABLE"
      name: "contributor"
      modelFingerprint: "876A2BAB302FFFBD8598B46A6C36DEDB"
      valueUuid: "object"
      methodExercised:
        expression: "withReplacement(existing:existing,replacement:replacement):configDataEnvironmentContributor2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "331EAB0EC045EEDBEB6EE69FE03F4C2E"
      valueUuid: "configDataEnvironmentContributor3"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ROOT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.HashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "ENUM"
                    content: !<regular>
                      value: "BEFORE_PROFILE_ACTIVATION"
                    valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase"
                    uuid: "configDataEnvironmentContributor.ImportPhase"
                    collectionUuid: "children"
                  value:
                    sapientType: "COLLECTION"
                    content: !<collection>
                      collectionClass: "java.util.ArrayList"
                      parameters: []
                      values:
                      - sapientType: "MOCK"
                        valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
                        uuid: "object"
                        collectionUuid: "list"
                    valueType: "java.util.List"
                    genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
                    uuid: "list"
                    collectionUuid: "children"
                valueType: "java.util.Map$Entry"
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "children"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "existing"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "replacement"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "object"
      collectionUuid: "list"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "configDataEnvironmentContributor2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "existing"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "replacement"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ROOT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "OBJECT"
            content: !<static_field_return>
              target: "org.springframework.boot.context.config.ConfigData$Options"
              fieldName: "NONE"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configData.Options2"
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.LinkedHashMap"
              parameters:
              - name: "initialCapacity"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: 1
                  valueType: "int"
                  uuid: "int1"
                  collectionUuid: "children"
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "ENUM"
                    content: !<regular>
                      value: "BEFORE_PROFILE_ACTIVATION"
                    valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase"
                    uuid: "configDataEnvironmentContributor.ImportPhase"
                    collectionUuid: "children"
                  value:
                    sapientType: "COLLECTION"
                    content: !<collection>
                      collectionClass: "java.util.ArrayList"
                      parameters:
                      - name: "initialCapacity"
                        value:
                          sapientType: "BASIC"
                          content: !<regular>
                            value: 1
                          valueType: "int"
                          uuid: "int2"
                          collectionUuid: "list"
                      values:
                      - sapientType: "MOCK"
                        valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
                        uuid: "configDataEnvironmentContributor2"
                    valueType: "java.util.List"
                    genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
                    uuid: "list"
                valueType: "java.util.Map$Entry"
                genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "linkedHashMap"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "configDataEnvironmentContributor3"
      fixed: true
    branches:
    - lineNumber: 326
      expression: "this == existing"
      range: "(326,7)-(326,22)"
      evaluatedAs: false
    - lineNumber: 333
      expression: "for-each(contributors)"
      range: "(333,56)-(333,67)"
      evaluatedAs: true
      internalMethodName: "lambda$withReplacement$1"
    - lineNumber: 102
      expression: "branch expression (line 102)"
      range: "(102,1)-(102,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
    - lineNumber: 103
      expression: "branch expression (line 103)"
      range: "(103,1)-(103,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
- method:
    name: "toString"
    sourceCodeSignature: "String toString()"
    returnType: "java.lang.String"
    instructionFingerprint: "A0947E8F7EBCF02D08FECAB5AD61F27D"
  paths:
  - pathId: "path1"
    testPathName: "toStringWhenThisChildrenGetOrDefaultImportPhaseAFTER_PROFILE_ACTIVATIONCollectionsEmptyListIsNotEmpty"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind,org.springframework.boot.context.config.ConfigDataLocation,org.springframework.boot.context.config.ConfigDataResource,boolean,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,org.springframework.boot.context.config.ConfigData$Options,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)\
      \ : void"
    modelFingerprint: "719B82D18B47068A798E377B03A05489"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "8E998B2BFAB24BE50E8D9AF17955A86B"
      valueUuid: "target"
    - type: "LOCAL_VARIABLE"
      name: "child"
      modelFingerprint: "84A5AEB54F1D774579E66F27049EC044"
      valueUuid: "object2"
      methodExercised:
        expression: "buildToString(prefix:uniqueUuid9,builder:stringBuilder):void"
        privateAccess: true
    - type: "LOCAL_VARIABLE"
      name: "child"
      modelFingerprint: "84A5AEB54F1D774579E66F27049EC044"
      valueUuid: "object4"
      methodExercised:
        expression: "buildToString(prefix:uniqueUuid10,builder:stringBuilder):void2"
        privateAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "77B3EBDC32B9627E57118A3DFB44277F"
      valueUuid: "string3"
    disabled: false
    failureReason:
      reason: "MAP_DEFAULT_VALUE_EXPRESSION_FAILURE"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "EMPTY_LOCATION"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "kind"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
            nameForMock: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
            nameForMock: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "fromProfileSpecificImport"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "properties"
        - name: "configDataOptions"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configDataOptions"
            nameForMock: "configDataOptions"
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "children"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "object2"
      collectionUuid: "object"
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "    "
      valueType: "java.lang.String"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.StringBuilder"
        parameters: []
      valueType: "java.lang.StringBuilder"
      uuid: "stringBuilder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "object4"
      collectionUuid: "object3"
      explicitCastNeeded: true
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "    "
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.StringBuilder"
        parameters: []
      valueType: "java.lang.StringBuilder"
      uuid: "stringBuilder"
    - sapientType: "BASIC"
      content: !<regular>
        value: "EMPTY_LOCATION location resource configDataOptions\\n"
      valueType: "java.lang.String"
      uuid: "string3"
    branches:
    - lineNumber: 360
      expression: "for-each(this.children.getOrDefault(ImportPhase.BEFORE_PROFILE_ACTIVATION,\
        \ Collections.emptyList()))"
      range: "(360,49)-(361,28)"
      evaluatedAs: true
      internalMethodName: "buildToString"
    - lineNumber: 364
      expression: "for-each(this.children.getOrDefault(ImportPhase.AFTER_PROFILE_ACTIVATION,\
        \ Collections.emptyList()))"
      range: "(364,49)-(365,28)"
      evaluatedAs: true
      internalMethodName: "buildToString"
- method:
    name: "of"
    sourceCodeSignature: "ConfigDataEnvironmentContributor of(List<ConfigDataEnvironmentContributor>\
      \ contributors)"
    returnType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
    parameters:
    - name: "contributors"
      type: "java.util.List"
    instructionFingerprint: "48525019FAC93C7CC2BD49AC90AF8C10"
  paths:
  - pathId: "path1"
    testPathName: "ofWhenDefaultBranch"
    modelFingerprint: "53B637DC8001AAC9287EE6D87782095E"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "contributors"
      modelFingerprint: "BEE852C637690BC8282D2860ACA915C8"
      valueUuid: "contributors"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6C98B0F1D9DBE5B265D4A5ED1BC80CA5"
      valueUuid: "configDataEnvironmentContributor"
    disabled: false
    allValues:
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "contributors"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "ROOT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "Enum-org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind-ROOT"
            fixed: true
        - name: "location"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "uniqueUuid11"
        - name: "resource"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "uniqueUuid12"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid13"
            fixed: true
        - name: "propertySource"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.env.PropertySource"
            uuid: "uniqueUuid14"
        - name: "configurationPropertySource"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "uniqueUuid15"
        - name: "properties"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "uniqueUuid16"
        - name: "configDataOptions"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "uniqueUuid17"
        - name: "children"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.LinkedHashMap"
              parameters: []
              values:
              - sapientType: "PAIR"
                content: !<pair>
                  key:
                    sapientType: "ENUM"
                    content: !<regular>
                      value: "BEFORE_PROFILE_ACTIVATION"
                    valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase"
                    uuid: "Enum-org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase-BEFORE_PROFILE_ACTIVATION"
                    fixed: true
                  value:
                    sapientType: "COLLECTION"
                    content: !<collection>
                      parameters: []
                      values: []
                    valueType: "java.util.List"
                    genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
                    uuid: "list"
                valueType: "java.util.Map$Entry"
                genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            valueType: "java.util.Map"
            genericValueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>"
            uuid: "linkedHashMap"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "configDataEnvironmentContributor"
      fixed: true
    branches:
    - lineNumber: 102
      expression: "branch expression (line 102)"
      range: "(102,1)-(102,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
    - lineNumber: 103
      expression: "branch expression (line 103)"
      range: "(103,1)-(103,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
- method:
    name: "ofInitialImport"
    sourceCodeSignature: "ConfigDataEnvironmentContributor ofInitialImport(ConfigDataLocation\
      \ initialImport)"
    returnType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
    parameters:
    - name: "initialImport"
      type: "org.springframework.boot.context.config.ConfigDataLocation"
    instructionFingerprint: "84045295EF60E38459D1DEE85A5C4A36"
  paths:
  - pathId: "path1"
    testPathName: "ofInitialImportWhenDefaultBranch"
    modelFingerprint: "3FE691290237A79C2870A763D754026E"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "initialImport"
      modelFingerprint: "10EAD847B127257439FACF91A59BEBA6"
      valueUuid: "initialImport"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7C7A59539B4D6E51206F5C211091BB43"
      valueUuid: "configDataEnvironmentContributor"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "initialImport"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "INITIAL_IMPORT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "Enum-org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind-INITIAL_IMPORT"
            fixed: true
        - name: "location"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "uniqueUuid18"
        - name: "resource"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "uniqueUuid19"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid20"
            fixed: true
        - name: "propertySource"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.env.PropertySource"
            uuid: "uniqueUuid21"
        - name: "configurationPropertySource"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "uniqueUuid22"
        - name: "properties"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.config.ConfigDataProperties"
              parameters:
              - name: "imports"
                value:
                  sapientType: "COLLECTION"
                  content: !<collection>
                    parameters: []
                    values:
                    - sapientType: "MOCK"
                      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
                      uuid: "initialImport"
                  valueType: "java.util.List"
                  genericValueType: "org.springframework.boot.context.config.ConfigDataLocation"
                  uuid: "list"
              - name: "activate"
                value:
                  sapientType: "NULL"
                  valueType: "org.springframework.boot.context.config.ConfigDataProperties$Activate"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "configDataProperties"
            fixed: true
        - name: "configDataOptions"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "uniqueUuid23"
        - name: "children"
          value:
            sapientType: "NULL"
            valueType: "java.util.Map"
            uuid: "uniqueUuid24"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "configDataEnvironmentContributor"
      fixed: true
    branches:
    - lineNumber: 102
      expression: "branch expression (line 102)"
      range: "(102,1)-(102,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
    - lineNumber: 103
      expression: "branch expression (line 103)"
      range: "(103,1)-(103,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
- method:
    name: "ofExisting"
    sourceCodeSignature: "ConfigDataEnvironmentContributor ofExisting(PropertySource<?>\
      \ propertySource)"
    returnType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
    parameters:
    - name: "propertySource"
      type: "org.springframework.core.env.PropertySource"
    instructionFingerprint: "D7B225D7C090B3D3A93F75DE83CE9C93"
  paths:
  - pathId: "path1"
    testPathName: "ofExistingWhenDefaultBranch"
    modelFingerprint: "7BDE1BA4EF8F49CB27EB7A38447B36FB"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "propertySource"
      modelFingerprint: "8D41EB31E94DAD6D526360152B35D702"
      valueUuid: "propertySource"
    - type: "STATIC"
      name: "ConfigurationPropertySource.class"
      modelFingerprint: "E19A877EE1488CD0E8E77054887C2683"
      valueUuid: "ConfigurationPropertySource.class"
      methodExercised:
        expression: "from(source:propertySource):configurationPropertySource"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "ACB48618A4C2800174A8F96A080B7C03"
      valueUuid: "configDataEnvironmentContributor"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertySource"
      genericValueType: "?"
      uuid: "propertySource"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "ConfigurationPropertySource.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "configurationPropertySource"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertySource"
      genericValueType: "?"
      uuid: "propertySource"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "EXISTING"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "Enum-org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind-EXISTING"
            fixed: true
        - name: "location"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "uniqueUuid25"
        - name: "resource"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "uniqueUuid26"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid27"
            fixed: true
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "uniqueUuid28"
        - name: "configDataOptions"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "uniqueUuid29"
        - name: "children"
          value:
            sapientType: "NULL"
            valueType: "java.util.Map"
            uuid: "uniqueUuid30"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "configDataEnvironmentContributor"
      fixed: true
    branches:
    - lineNumber: 102
      expression: "branch expression (line 102)"
      range: "(102,1)-(102,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
    - lineNumber: 103
      expression: "branch expression (line 103)"
      range: "(103,1)-(103,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
- method:
    name: "ofUnboundImport"
    sourceCodeSignature: "ConfigDataEnvironmentContributor ofUnboundImport(ConfigDataLocation\
      \ location, ConfigDataResource resource, boolean profileSpecific, ConfigData\
      \ configData, int propertySourceIndex)"
    returnType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
    parameters:
    - name: "location"
      type: "org.springframework.boot.context.config.ConfigDataLocation"
    - name: "resource"
      type: "org.springframework.boot.context.config.ConfigDataResource"
    - name: "profileSpecific"
      type: "boolean"
    - name: "configData"
      type: "org.springframework.boot.context.config.ConfigData"
    - name: "propertySourceIndex"
      type: "int"
    instructionFingerprint: "448BE33CA00761E2353785589E9B0059"
  paths:
  - pathId: "path1"
    testPathName: "ofUnboundImportWhenDefaultBranch"
    modelFingerprint: "690DB3C1F319B66AABF33EDD5014D460"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "location"
      modelFingerprint: "6B0C45E6FFB6764C84898E62EF2696B3"
      valueUuid: "location"
    - type: "INPUT"
      name: "resource"
      modelFingerprint: "48845B248A662C8DA904EF60719919DB"
      valueUuid: "resource"
    - type: "INPUT"
      name: "profileSpecific"
      modelFingerprint: "C5EB8A14B4186D790E8B201112C1C7A7"
      valueUuid: "profileSpecific"
    - type: "INPUT"
      name: "configData"
      modelFingerprint: "FC4B5A44828F4EBAE16CD74378D15B73"
      valueUuid: "configData"
    - type: "INPUT"
      name: "propertySourceIndex"
      modelFingerprint: "3F9297B3B1A41DDACDF250F365B8E165"
      valueUuid: "propertySourceIndex"
    - type: "LOCAL_VARIABLE"
      name: "configData"
      modelFingerprint: "A3E53DBD0DEF2028E774883120030CFF"
      valueUuid: "configData"
      methodExercised:
        expression: "getPropertySources():propertySources"
    - type: "LOCAL_VARIABLE"
      name: "configData"
      modelFingerprint: "E1B9741B3FBCF584FD8BBB2A363A7292"
      valueUuid: "configData"
      methodExercised:
        expression: "getOptions(propertySource:propertySource):configData.Options2"
    - type: "STATIC"
      name: "ConfigurationPropertySource.class"
      modelFingerprint: "34E13ED31BCE0EA80B137230D14D4B24"
      valueUuid: "ConfigurationPropertySource.class"
      methodExercised:
        expression: "from(source:propertySource):configurationPropertySource"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "4CFF5E1DBAE2FB4D40C4D10CB9554B30"
      valueUuid: "configDataEnvironmentContributor"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "location"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "resource"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "profileSpecific"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigData"
      uuid: "configData"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "propertySourceIndex"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigData"
      uuid: "configData"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.env.PropertySource"
          genericValueType: "?"
          uuid: "propertySource"
          collectionUuid: "propertySources"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.env.PropertySource<?>"
      uuid: "propertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigData"
      uuid: "configData"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigData$Options"
      uuid: "configData.Options2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertySource"
      genericValueType: "?"
      uuid: "propertySource"
      collectionUuid: "propertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "ConfigurationPropertySource.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "configurationPropertySource"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertySource"
      genericValueType: "?"
      uuid: "propertySource"
      collectionUuid: "propertySources"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "UNBOUND_IMPORT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "Enum-org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind-UNBOUND_IMPORT"
            fixed: true
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "profileSpecific"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
            collectionUuid: "propertySources"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "uniqueUuid31"
        - name: "configDataOptions"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configData.Options2"
        - name: "children"
          value:
            sapientType: "NULL"
            valueType: "java.util.Map"
            uuid: "uniqueUuid32"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "configDataEnvironmentContributor"
      fixed: true
    branches:
    - lineNumber: 102
      expression: "branch expression (line 102)"
      range: "(102,1)-(102,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
    - lineNumber: 103
      expression: "branch expression (line 103)"
      range: "(103,1)-(103,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
  - pathId: "path2"
    testPathName: "ofUnboundImportWhenDefaultBranchAndDefaultBranch"
    modelFingerprint: "EFBE4C66C88435F84C04894CA40D6B4D"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "location"
      modelFingerprint: "6B0C45E6FFB6764C84898E62EF2696B3"
      valueUuid: "location"
    - type: "INPUT"
      name: "resource"
      modelFingerprint: "48845B248A662C8DA904EF60719919DB"
      valueUuid: "resource"
    - type: "INPUT"
      name: "profileSpecific"
      modelFingerprint: "C5EB8A14B4186D790E8B201112C1C7A7"
      valueUuid: "profileSpecific"
    - type: "INPUT"
      name: "configData"
      modelFingerprint: "FC4B5A44828F4EBAE16CD74378D15B73"
      valueUuid: "configData"
    - type: "INPUT"
      name: "propertySourceIndex"
      modelFingerprint: "3F9297B3B1A41DDACDF250F365B8E165"
      valueUuid: "propertySourceIndex"
    - type: "LOCAL_VARIABLE"
      name: "configData"
      modelFingerprint: "A3E53DBD0DEF2028E774883120030CFF"
      valueUuid: "configData"
      methodExercised:
        expression: "getPropertySources():propertySources"
    - type: "LOCAL_VARIABLE"
      name: "configData"
      modelFingerprint: "E923986225EDA5D91C6192E5B258CF3C"
      valueUuid: "configData"
      methodExercised:
        expression: "getOptions(propertySource:propertySource):configData.Options2"
    - type: "STATIC"
      name: "ConfigurationPropertySource.class"
      modelFingerprint: "34E13ED31BCE0EA80B137230D14D4B24"
      valueUuid: "ConfigurationPropertySource.class"
      methodExercised:
        expression: "from(source:propertySource):configurationPropertySource"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3DE3EC37A51956F16EF4B6D946EA4184"
      valueUuid: "configDataEnvironmentContributor"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "location"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "resource"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "profileSpecific"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigData"
      uuid: "configData"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "propertySourceIndex"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigData"
      uuid: "configData"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.env.PropertySource"
          genericValueType: "?"
          uuid: "propertySource"
          collectionUuid: "propertySources"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.env.PropertySource<?>"
      uuid: "propertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigData"
      uuid: "configData"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.config.ConfigData$Options"
      uuid: "configData.Options2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertySource"
      genericValueType: "?"
      uuid: "propertySource"
      collectionUuid: "propertySources"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "ConfigurationPropertySource.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "configurationPropertySource"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertySource"
      genericValueType: "?"
      uuid: "propertySource"
      collectionUuid: "propertySources"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "UNBOUND_IMPORT"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "Enum-org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind-UNBOUND_IMPORT"
            fixed: true
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "resource"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "profileSpecific"
        - name: "propertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.PropertySource"
            genericValueType: "?"
            uuid: "propertySource"
            collectionUuid: "propertySources"
        - name: "configurationPropertySource"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "configurationPropertySource"
        - name: "properties"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "uniqueUuid33"
        - name: "configDataOptions"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configData.Options2"
        - name: "children"
          value:
            sapientType: "NULL"
            valueType: "java.util.Map"
            uuid: "uniqueUuid34"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "configDataEnvironmentContributor"
      fixed: true
    branches:
    - lineNumber: 102
      expression: "branch expression (line 102)"
      range: "(102,1)-(102,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
    - lineNumber: 103
      expression: "branch expression (line 103)"
      range: "(103,1)-(103,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
- method:
    name: "ofEmptyLocation"
    sourceCodeSignature: "ConfigDataEnvironmentContributor ofEmptyLocation(ConfigDataLocation\
      \ location, boolean profileSpecific)"
    returnType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
    parameters:
    - name: "location"
      type: "org.springframework.boot.context.config.ConfigDataLocation"
    - name: "profileSpecific"
      type: "boolean"
    instructionFingerprint: "8C914B5B7069D24866FFB693A337C3FB"
  paths:
  - pathId: "path1"
    testPathName: "ofEmptyLocationWhenDefaultBranch"
    modelFingerprint: "2473AA0EFF497B103D0542238A0B2FA3"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "location"
      modelFingerprint: "6B0C45E6FFB6764C84898E62EF2696B3"
      valueUuid: "location"
    - type: "INPUT"
      name: "profileSpecific"
      modelFingerprint: "C5EB8A14B4186D790E8B201112C1C7A7"
      valueUuid: "profileSpecific"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "62CC8123F1D42F15FBBB4BF7CB57944C"
      valueUuid: "configDataEnvironmentContributor"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "location"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "profileSpecific"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
        parameters:
        - name: "kind"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "EMPTY_LOCATION"
            valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind"
            uuid: "Enum-org.springframework.boot.context.config.ConfigDataEnvironmentContributor$Kind-EMPTY_LOCATION"
            fixed: true
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "resource"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "uniqueUuid35"
        - name: "fromProfileSpecificImport"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "profileSpecific"
        - name: "propertySource"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.env.PropertySource"
            uuid: "uniqueUuid36"
        - name: "configurationPropertySource"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "uniqueUuid37"
        - name: "properties"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "uniqueUuid38"
        - name: "configDataOptions"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.springframework.boot.context.config.ConfigData$Options"
              method: "of"
              methodParameters:
              - value:
                  sapientType: "ARRAY"
                  content: !<array>
                    values:
                      0:
                        sapientType: "ENUM"
                        content: !<regular>
                          value: "IGNORE_IMPORTS"
                        valueType: "org.springframework.boot.context.config.ConfigData$Option"
                        uuid: "Enum-org.springframework.boot.context.config.ConfigData$Option-IGNORE_IMPORTS"
                        fixed: true
                  valueType: "org.springframework.boot.context.config.ConfigData$Option[]"
                  uuid: "configData.OptionArray"
            valueType: "org.springframework.boot.context.config.ConfigData$Options"
            uuid: "configData.Options"
        - name: "children"
          value:
            sapientType: "NULL"
            valueType: "java.util.Map"
            uuid: "uniqueUuid39"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "configDataEnvironmentContributor"
      fixed: true
    branches:
    - lineNumber: 102
      expression: "branch expression (line 102)"
      range: "(102,1)-(102,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
    - lineNumber: 103
      expression: "branch expression (line 103)"
      range: "(103,1)-(103,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
