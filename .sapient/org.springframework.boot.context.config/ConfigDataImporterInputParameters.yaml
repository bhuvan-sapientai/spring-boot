---
modelFingerprint: "B8C40C68D0B06D49C6BBEB8D6A906607"
methods:
- method:
    name: "resolveAndLoad"
    signature: "resolveAndLoad(org.springframework.boot.context.config.ConfigDataActivationContext,org.springframework.boot.context.config.ConfigDataLocationResolverContext,org.springframework.boot.context.config.ConfigDataLoaderContext,java.util.List<org.springframework.boot.context.config.ConfigDataLocation>)\
      \ : java.util.Map<org.springframework.boot.context.config.ConfigDataResolutionResult,org.springframework.boot.context.config.ConfigData>"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "org.springframework.boot.context.config.ConfigDataNotFoundException"
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "org.springframework.boot.context.config.ConfigDataNotFoundException"
    instructionFingerprint: "C9B2CF74E2AEB3F0E37130A2ED6E4FE3"
  paths:
  - pathId: "path5"
    testPathName: "resolveAndLoadWhenILessThan0"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory,org.springframework.boot.context.config.ConfigDataNotFoundAction,org.springframework.boot.context.config.ConfigDataLocationResolvers,org.springframework.boot.context.config.ConfigDataLoaders)\
      \ : void"
    filledByUser: false
    modelFingerprint: "51D590AA65B4562A602EA3643505BD3B"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "10546206-ce3b-3304-a9e4-f54bd49fb08a"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path6"
    testPathName: "resolveAndLoadWhenLocationsIsEmptyAndILessThan0"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory,org.springframework.boot.context.config.ConfigDataNotFoundAction,org.springframework.boot.context.config.ConfigDataLocationResolvers,org.springframework.boot.context.config.ConfigDataLoaders)\
      \ : void"
    filledByUser: false
    modelFingerprint: "7E808263D759AB6338F048050CA66D93"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "053b0785-d459-3928-b475-849a7cc7b434"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path7"
    testPathName: "resolveAndLoadWhenActivationContextIsNullAndLocationsIsEmptyAndILessThan0"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory,org.springframework.boot.context.config.ConfigDataNotFoundAction,org.springframework.boot.context.config.ConfigDataLocationResolvers,org.springframework.boot.context.config.ConfigDataLoaders)\
      \ : void"
    filledByUser: false
    modelFingerprint: "D819CF2008B3BEBADA4AC408BEC617E1"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "5A60B26DED4826BD9BA3482A7761F9F7"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "activationContext"
      modelFingerprint: "07B9EF5EED72F65F3154254A6BDF69D8"
      index: 2
      ignored: false
      valueUuid: "resolveAndLoad_configDataActivationContext1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "locationResolverContext"
      modelFingerprint: "385B39825F2177486144D992C533F799"
      index: 3
      ignored: false
      valueUuid: "resolveAndLoad_configDataLocationResolverContext1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "loaderContext"
      modelFingerprint: "F2B64A9023B7FBD20CA9436E30741574"
      index: 4
      ignored: false
      valueUuid: "resolveAndLoad_configDataLoaderContext1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "locations"
      modelFingerprint: "71A674FC38975D6D0A7581CB6763BD24"
      index: 5
      ignored: false
      valueUuid: "resolveAndLoad_list1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "logFactory"
      modelFingerprint: "7F0B9A08172DE4D7E76C06D9CCDE0D5D"
      index: 6
      ignored: false
      valueUuid: "<init>_deferredLogFactory1"
      methodExercised:
        target: "logFactory"
        name: "getLog"
        parameters:
        - name: "destination"
          valueUuid: "uuid3"
        signature: "getLog(Class): Log"
        returnValueUuid: "<init>_log1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "23A055F56842988AE1C18DA9140A91C4"
      index: 7
      ignored: false
      valueUuid: "load_map1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "34f58acc-aa3c-3127-929b-a7af5c4a067c"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataImporter"
        parameters:
        - name: "logFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.DeferredLogFactory"
            uuid: "<init>_deferredLogFactory1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "notFoundAction"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "FAIL"
            valueType: "org.springframework.boot.context.config.ConfigDataNotFoundAction"
            uuid: "<init>_configDataNotFoundAction1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolvers"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocationResolvers"
            uuid: "<init>_configDataLocationResolvers1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "loaders"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLoaders"
            uuid: "<init>_configDataLoaders1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.context.config.ConfigDataImporter"
        parameters:
        - name: "logFactory"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "org.springframework.boot.logging.DeferredLogFactory"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.springframework.boot.logging.DeferredLogFactory"
            uuid: "<init>_deferredLogFactory1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "notFoundAction"
          value:
            sapientType: "ENUM"
            valueType: "org.springframework.boot.context.config.ConfigDataNotFoundAction"
            uuid: "<init>_configDataNotFoundAction1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolvers"
          value:
            sapientType: "UNKNOWN"
            valueType: "org.springframework.boot.context.config.ConfigDataLocationResolvers"
            uuid: "<init>_configDataLocationResolvers1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "loaders"
          value:
            sapientType: "UNKNOWN"
            valueType: "org.springframework.boot.context.config.ConfigDataLoaders"
            uuid: "<init>_configDataLoaders1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.config.ConfigDataImporter"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.config.ConfigDataActivationContext"
      uuid: "resolveAndLoad_configDataActivationContext1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocationResolverContext"
      uuid: "resolveAndLoad_configDataLocationResolverContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLoaderContext"
      uuid: "resolveAndLoad_configDataLoaderContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      suggestedContent: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "resolveAndLoad_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.DeferredLogFactory"
      uuid: "<init>_deferredLogFactory1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "<init>_log1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.context.config.ConfigDataImporter"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.context.config.ConfigDataImporter"
      uuid: "uuid3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashMap"
        parameters: []
        values: []
      suggestedContent: !<collection>
        collectionClass: "java.util.LinkedHashMap"
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "org.springframework.boot.context.config.ConfigDataResolutionResult,org.springframework.boot.context.config.ConfigData"
      uuid: "load_map1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path9"
    testPathName: "resolveAndLoadWhenCaughtIOExceptionThrowsIllegalStateException"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory,org.springframework.boot.context.config.ConfigDataNotFoundAction,org.springframework.boot.context.config.ConfigDataLocationResolvers,org.springframework.boot.context.config.ConfigDataLoaders)\
      \ : void"
    filledByUser: false
    modelFingerprint: "405F6CA69874B6E43F5FCFF0875E7060"
    problemWasSolvedByProver: true
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
    truncated: true
    inputParameters: []
    uuid: "b858ec4f-2448-3990-8efe-9dadbbd72416"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path10"
    testPathName: "resolveAndLoadWhenILessThan0AndCaughtIOExceptionThrowsIllegalStateException"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory,org.springframework.boot.context.config.ConfigDataNotFoundAction,org.springframework.boot.context.config.ConfigDataLocationResolvers,org.springframework.boot.context.config.ConfigDataLoaders)\
      \ : void"
    filledByUser: false
    modelFingerprint: "D2E7C05AAD5933EAC3C9A19219A49E31"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "5A60B26DED4826BD9BA3482A7761F9F7"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "activationContext"
      modelFingerprint: "07B9EF5EED72F65F3154254A6BDF69D8"
      index: 2
      ignored: false
      valueUuid: "resolveAndLoad_configDataActivationContext1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "locationResolverContext"
      modelFingerprint: "385B39825F2177486144D992C533F799"
      index: 3
      ignored: false
      valueUuid: "resolveAndLoad_configDataLocationResolverContext1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "loaderContext"
      modelFingerprint: "F2B64A9023B7FBD20CA9436E30741574"
      index: 4
      ignored: false
      valueUuid: "resolveAndLoad_configDataLoaderContext1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "locations"
      modelFingerprint: "71A674FC38975D6D0A7581CB6763BD24"
      index: 5
      ignored: false
      valueUuid: "resolveAndLoad_list1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "logFactory"
      modelFingerprint: "7F0B9A08172DE4D7E76C06D9CCDE0D5D"
      index: 6
      ignored: false
      valueUuid: "<init>_deferredLogFactory1"
      methodExercised:
        target: "logFactory"
        name: "getLog"
        parameters:
        - name: "destination"
          valueUuid: "uuid5"
        signature: "getLog(Class): Log"
        returnValueUuid: "<init>_log1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E7E2407A89FD623DE9CC0A0E5D916470"
      index: 7
      ignored: false
      valueUuid: "resolveAndLoad_illegalStateException1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "ea38d006-ae53-35ca-9c3e-0c861d82b40a"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "DEPENDENCY_TO_THROW_EXCEPTION_NOT_FOUND"
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataImporter"
        parameters:
        - name: "logFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.DeferredLogFactory"
            uuid: "<init>_deferredLogFactory1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "notFoundAction"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "FAIL"
            valueType: "org.springframework.boot.context.config.ConfigDataNotFoundAction"
            uuid: "<init>_configDataNotFoundAction1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolvers"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocationResolvers"
            uuid: "<init>_configDataLocationResolvers1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "loaders"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLoaders"
            uuid: "<init>_configDataLoaders1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.context.config.ConfigDataImporter"
        parameters:
        - name: "logFactory"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "org.springframework.boot.logging.DeferredLogFactory"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.springframework.boot.logging.DeferredLogFactory"
            uuid: "<init>_deferredLogFactory1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "notFoundAction"
          value:
            sapientType: "ENUM"
            valueType: "org.springframework.boot.context.config.ConfigDataNotFoundAction"
            uuid: "<init>_configDataNotFoundAction1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolvers"
          value:
            sapientType: "UNKNOWN"
            valueType: "org.springframework.boot.context.config.ConfigDataLocationResolvers"
            uuid: "<init>_configDataLocationResolvers1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "loaders"
          value:
            sapientType: "UNKNOWN"
            valueType: "org.springframework.boot.context.config.ConfigDataLoaders"
            uuid: "<init>_configDataLoaders1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.config.ConfigDataImporter"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.config.ConfigDataActivationContext"
      uuid: "resolveAndLoad_configDataActivationContext1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocationResolverContext"
      uuid: "resolveAndLoad_configDataLocationResolverContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLoaderContext"
      uuid: "resolveAndLoad_configDataLoaderContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      suggestedContent: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "resolveAndLoad_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.DeferredLogFactory"
      uuid: "<init>_deferredLogFactory1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "<init>_log1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.context.config.ConfigDataImporter"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.context.config.ConfigDataImporter"
      uuid: "uuid5"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "IO error on loading imports from []"
            suggestedContent: !<regular>
              value: "IO error on loading imports from []"
            valueType: "java.lang.String"
            uuid: "resolveAndLoad_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.IOException"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.io.IOException"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.io.IOException"
            uuid: "resolveAndLoad_iOException1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            suggestedContent: !<regular>
              value: "IO error on loading imports from []"
            valueType: "java.lang.String"
            uuid: "resolveAndLoad_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<new>
              target: "java.io.IOException"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.io.IOException"
            uuid: "resolveAndLoad_iOException1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.IllegalStateException"
      uuid: "resolveAndLoad_illegalStateException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path1"
    testPathName: "resolveAndLoadWhenLoadedIsNotNull"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory,org.springframework.boot.context.config.ConfigDataNotFoundAction,org.springframework.boot.context.config.ConfigDataLocationResolvers,org.springframework.boot.context.config.ConfigDataLoaders)\
      \ : void"
    filledByUser: false
    modelFingerprint: "629CA14153E2FDFECDE11B2577A30D94"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "8944134E33420236BDEDD48CFE119158"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "activationContext"
      modelFingerprint: "62EE4A687ED2631DF44B8EECD39BE6FA"
      index: 2
      ignored: false
      valueUuid: "resolveAndLoad_configDataActivationContext1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "locationResolverContext"
      modelFingerprint: "385B39825F2177486144D992C533F799"
      index: 3
      ignored: false
      valueUuid: "resolveAndLoad_configDataLocationResolverContext1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "loaderContext"
      modelFingerprint: "F2B64A9023B7FBD20CA9436E30741574"
      index: 4
      ignored: false
      valueUuid: "resolveAndLoad_configDataLoaderContext1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "locations"
      modelFingerprint: "12ABDC750253E60E07569088C1063906"
      index: 5
      ignored: false
      valueUuid: "resolveAndLoad_list1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "logFactory"
      modelFingerprint: "7F0B9A08172DE4D7E76C06D9CCDE0D5D"
      index: 6
      ignored: false
      valueUuid: "<init>_deferredLogFactory1"
      methodExercised:
        target: "logFactory"
        name: "getLog"
        parameters:
        - name: "destination"
          valueUuid: "uuid1"
        signature: "getLog(Class): Log"
        returnValueUuid: "<init>_log1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "activationContext"
      modelFingerprint: "7020F794B88B09B3E97B1CB01CAE4312"
      index: 7
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "resolveAndLoad_configDataActivationContext1"
      methodExercised:
        target: "activationContext"
        name: "getProfiles"
        parameters: []
        signature: "getProfiles(): Profiles"
        returnValueUuid: "resolveAndLoad_profiles1"
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "resolvers"
      modelFingerprint: "672AEDC2E9234D23074FC5A7BA6D35EB"
      index: 8
      ignored: false
      idsTryCatchBlockSurrounding:
      - 290002
      valueUuid: "<init>_configDataLocationResolvers1"
      methodExercised:
        target: "this.resolvers"
        name: "resolve"
        parameters:
        - name: "context"
          valueUuid: "resolveAndLoad_configDataLocationResolverContext1"
        - name: "location"
          valueUuid: "resolve_object1"
        - name: "profiles"
          valueUuid: "resolveAndLoad_profiles1"
        signature: "resolve(ConfigDataLocationResolverContext,ConfigDataLocation,Profiles):\
          \ List"
        returnValueUuid: "resolve_list1"
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "165C6F0957D55CB6371219BF6A3FDF1E"
      index: 9
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "load_configDataResolutionResult1"
      methodExercised:
        target: "candidate"
        name: "getLocation"
        parameters: []
        signature: "getLocation(): ConfigDataLocation"
        returnValueUuid: "load_configDataLocation1"
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "8147B593FA43EFD7645CEE2FD486ACDE"
      index: 10
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "load_configDataResolutionResult1"
      methodExercised:
        target: "candidate"
        name: "getResource"
        parameters: []
        signature: "getResource(): ConfigDataResource"
        returnValueUuid: "load_configDataResource1"
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "LogMessage"
      modelFingerprint: "A6480EEBE925611DFD7C4E5049C5055B"
      index: 11
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "uuid3"
      methodExercised:
        target: "org.springframework.core.log.LogMessage"
        name: "format"
        parameters:
        - name: "format"
          valueUuid: "uuid2"
        - name: "arg1"
          valueUuid: "load_configDataResource1"
        - name: "arg2"
          valueUuid: "load_configDataLocation1"
        signature: "format(String,ConfigDataResource,ConfigDataLocation): LogMessage"
        returnValueUuid: "load_logMessage1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "resource"
      modelFingerprint: "8FAE98805F9151A2785EF148F2647F39"
      index: 12
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "load_configDataResource1"
      methodExercised:
        target: "resource"
        name: "isOptional"
        parameters: []
        signature: "isOptional(): boolean"
        returnValueUuid: "load_boolean1"
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "loaders"
      modelFingerprint: "9AB8BDFE70BA60DCBCB1711C44E6C69B"
      index: 13
      ignored: false
      idsTryCatchBlockSurrounding:
      - 260003
      - 1
      valueUuid: "<init>_configDataLoaders1"
      methodExercised:
        target: "this.loaders"
        name: "load"
        parameters:
        - name: "context"
          valueUuid: "resolveAndLoad_configDataLoaderContext1"
        - name: "resource"
          valueUuid: "load_configDataResource1"
        throwsExceptions:
        - "java.io.IOException"
        signature: "load(ConfigDataLoaderContext,ConfigDataResource): ConfigData throws\
          \ java.io.IOException"
        returnValueUuid: "load_configData1"
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "LogMessage"
      modelFingerprint: "D28FBAD275DB3B5D24C650F093645F88"
      index: 14
      ignored: false
      idsTryCatchBlockSurrounding:
      - 260003
      - 1
      valueUuid: "uuid5"
      methodExercised:
        target: "org.springframework.core.log.LogMessage"
        name: "format"
        parameters:
        - name: "format"
          valueUuid: "uuid4"
        - name: "arg1"
          valueUuid: "load_configDataResource1"
        - name: "arg2"
          valueUuid: "load_configDataLocation1"
        signature: "format(String,ConfigDataResource,ConfigDataLocation): LogMessage"
        returnValueUuid: "load_logMessage2"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "88EFCC4C4303E0324A9BCBB277ABFFDF"
      index: 15
      ignored: false
      valueUuid: "load_map1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "e0e90118-01cd-38fe-bbdf-a4ac99c10c1d"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "UNKNOWN_REASON"
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataImporter"
        parameters:
        - name: "logFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.DeferredLogFactory"
            uuid: "<init>_deferredLogFactory1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "notFoundAction"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "FAIL"
            suggestedContent: !<regular>
              value: "FAIL"
            valueType: "org.springframework.boot.context.config.ConfigDataNotFoundAction"
            uuid: "<init>_configDataNotFoundAction1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolvers"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocationResolvers"
            uuid: "<init>_configDataLocationResolvers1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "loaders"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLoaders"
            uuid: "<init>_configDataLoaders1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.context.config.ConfigDataImporter"
        parameters:
        - name: "logFactory"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "org.springframework.boot.logging.DeferredLogFactory"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.springframework.boot.logging.DeferredLogFactory"
            uuid: "<init>_deferredLogFactory1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "notFoundAction"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "FAIL"
            suggestedContent: !<regular>
              value: "FAIL"
            valueType: "org.springframework.boot.context.config.ConfigDataNotFoundAction"
            uuid: "<init>_configDataNotFoundAction1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolvers"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocationResolvers"
            uuid: "<init>_configDataLocationResolvers1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "loaders"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLoaders"
            uuid: "<init>_configDataLoaders1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.config.ConfigDataImporter"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataActivationContext"
      uuid: "resolveAndLoad_configDataActivationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocationResolverContext"
      uuid: "resolveAndLoad_configDataLocationResolverContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLoaderContext"
      uuid: "resolveAndLoad_configDataLoaderContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.config.ConfigDataLocation"
          uuid: "resolve_object1"
          fixed: false
          collectionUuid: "resolveAndLoad_list1"
          equalsMethodPresent: false
          explicitCastNeeded: false
      suggestedContent: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.config.ConfigDataLocation"
          uuid: "resolve_object1"
          fixed: false
          collectionUuid: "resolveAndLoad_list1"
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "resolveAndLoad_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.DeferredLogFactory"
      uuid: "<init>_deferredLogFactory1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "<init>_log1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.context.config.ConfigDataImporter"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.context.config.ConfigDataImporter"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataActivationContext"
      uuid: "resolveAndLoad_configDataActivationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.Profiles"
      uuid: "resolveAndLoad_profiles1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocationResolvers"
      uuid: "<init>_configDataLocationResolvers1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      suggestedContent: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.config.ConfigDataResolutionResult"
      uuid: "resolve_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocationResolverContext"
      uuid: "resolveAndLoad_configDataLocationResolverContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "resolve_object1"
      fixed: false
      collectionUuid: "resolveAndLoad_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.Profiles"
      uuid: "resolveAndLoad_profiles1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResolutionResult"
      uuid: "load_configDataResolutionResult1"
      fixed: false
      collectionUuid: "resolve_list2"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "load_configDataLocation1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResolutionResult"
      uuid: "load_configDataResolutionResult1"
      fixed: false
      collectionUuid: "resolve_list2"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "load_configDataResource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.log.LogMessage"
      uuid: "uuid3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.log.LogMessage"
      uuid: "load_logMessage1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Considering resource %s from location %s"
      valueType: "java.lang.String"
      uuid: "uuid2"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "load_configDataResource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "load_configDataLocation1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "load_configDataResource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      suggestedContent: !<regular>
        value: true
      valueType: "boolean"
      uuid: "load_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLoaders"
      uuid: "<init>_configDataLoaders1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigData"
      uuid: "load_configData1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLoaderContext"
      uuid: "resolveAndLoad_configDataLoaderContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "load_configDataResource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.log.LogMessage"
      uuid: "uuid5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.log.LogMessage"
      uuid: "load_logMessage2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Loaded resource %s from location %s"
      valueType: "java.lang.String"
      uuid: "uuid4"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "load_configDataResource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "load_configDataLocation1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.config.ConfigDataResolutionResult"
              uuid: "load_configDataResolutionResult1"
              fixed: false
              collectionUuid: "resolve_list2"
              equalsMethodPresent: false
              explicitCastNeeded: false
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.config.ConfigData"
              uuid: "load_configData1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Map$Entry"
          genericValueType: "org.springframework.boot.context.config.ConfigDataResolutionResult,org.springframework.boot.context.config.ConfigData"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      suggestedContent: !<collection>
        collectionClass: "java.util.LinkedHashMap"
        parameters: []
        values:
        - sapientType: "PAIR"
          content: !<pair>
            key:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.config.ConfigDataResolutionResult"
              uuid: "load_configDataResolutionResult1"
              fixed: false
              collectionUuid: "resolve_list2"
              equalsMethodPresent: false
              explicitCastNeeded: false
            value:
              sapientType: "MOCK"
              valueType: "org.springframework.boot.context.config.ConfigData"
              uuid: "load_configData1"
              fixed: false
              equalsMethodPresent: false
              explicitCastNeeded: false
          valueType: "java.util.Map$Entry"
          genericValueType: "org.springframework.boot.context.config.ConfigDataResolutionResult,org.springframework.boot.context.config.ConfigData"
          fixed: false
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Map"
      genericValueType: "org.springframework.boot.context.config.ConfigDataResolutionResult,org.springframework.boot.context.config.ConfigData"
      uuid: "load_map1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "resolveAndLoadWhenLoadedIsNull"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory,org.springframework.boot.context.config.ConfigDataNotFoundAction,org.springframework.boot.context.config.ConfigDataLocationResolvers,org.springframework.boot.context.config.ConfigDataLoaders)\
      \ : void"
    filledByUser: false
    modelFingerprint: "0094D55F93561E2C0DF3E07771DEF652"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "11db6243-7df0-3fd9-83d5-0226c8e3d604"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path3"
    testPathName: "resolveAndLoadWhenThisLoadedNotContainsResourceAndLoadedIsNotNull"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory,org.springframework.boot.context.config.ConfigDataNotFoundAction,org.springframework.boot.context.config.ConfigDataLocationResolvers,org.springframework.boot.context.config.ConfigDataLoaders)\
      \ : void"
    filledByUser: false
    modelFingerprint: "5AF60146BA28B592B0027982274B8446"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "92004cff-53cb-3cc1-a51c-81157d651e61"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path4"
    testPathName: "resolveAndLoadWhenThisLoadedNotContainsResourceAndLoadedIsNull"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory,org.springframework.boot.context.config.ConfigDataNotFoundAction,org.springframework.boot.context.config.ConfigDataLocationResolvers,org.springframework.boot.context.config.ConfigDataLoaders)\
      \ : void"
    filledByUser: false
    modelFingerprint: "1EB9AB40BDE4A093F04A2EC16F006433"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "32303ba4-6085-3c52-bc6c-b32310dd7b1c"
    deleted: true
    disabled: false
    ignoredBySystem: true
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path13"
    testPathName: "resolveAndLoadWhenResourceIsNullAndILessThan0"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory,org.springframework.boot.context.config.ConfigDataNotFoundAction,org.springframework.boot.context.config.ConfigDataLocationResolvers,org.springframework.boot.context.config.ConfigDataLoaders)\
      \ : void"
    filledByUser: false
    modelFingerprint: "822633136928EB579DB1AB385918F71A"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 29
      id: 2
      catchExceptions:
      - "org.springframework.boot.context.config.ConfigDataNotFoundException"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "C0AAC55417051869AB36BACBCE43484E"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "activationContext"
      modelFingerprint: "A08584F93A8BDCE12F167FCED57DC94C"
      index: 2
      ignored: false
      valueUuid: "resolveAndLoad_configDataActivationContext1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "locationResolverContext"
      modelFingerprint: "15EA87B1DAFC7B54EFEFABB122A17A95"
      index: 3
      ignored: false
      valueUuid: "resolveAndLoad_configDataLocationResolverContext1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "loaderContext"
      modelFingerprint: "0F6C4BA51C928ECE1F663BA3CC283503"
      index: 4
      ignored: false
      valueUuid: "resolveAndLoad_configDataLoaderContext1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "locations"
      modelFingerprint: "0A21E135737EE7C229BBB0E5B209F6AA"
      index: 5
      ignored: false
      valueUuid: "resolveAndLoad_list1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "logFactory"
      modelFingerprint: "933A9449F8305FAE6614B2FE99C7388C"
      index: 6
      ignored: false
      valueUuid: "<init>_deferredLogFactory1"
      methodExercised:
        target: "logFactory"
        name: "getLog"
        parameters:
        - name: "destination"
          valueUuid: "uuid1"
        signature: "getLog(Class): Log"
        returnValueUuid: "<init>_log1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "activationContext"
      modelFingerprint: "61006BEF622AE4A7F8959ACE9D950ADC"
      index: 7
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "resolveAndLoad_configDataActivationContext1"
      methodExercised:
        target: "activationContext"
        name: "getProfiles"
        parameters: []
        signature: "getProfiles(): Profiles"
        returnValueUuid: "resolveAndLoad_profiles1"
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "resolvers"
      modelFingerprint: "66E19F037A2D6E5340CCB186774D8F17"
      index: 8
      ignored: false
      idsTryCatchBlockSurrounding:
      - 290002
      valueUuid: "<init>_configDataLocationResolvers1"
      methodExercised:
        target: "this.resolvers"
        name: "resolve"
        parameters:
        - name: "context"
          valueUuid: "resolveAndLoad_configDataLocationResolverContext1"
        - name: "location"
          valueUuid: "resolveAndLoad_list1-0"
        - name: "profiles"
          valueUuid: "resolveAndLoad_profiles1"
        signature: "resolve(ConfigDataLocationResolverContext,ConfigDataLocation,Profiles):\
          \ List"
        returnValueUuid: "resolve_list1"
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "notFoundException"
      modelFingerprint: "7A1231E1C9F8C8171B0D9821FD24C391"
      index: 9
      ignored: false
      valueUuid: "resolve_configDataNotFoundException1"
      methodExercised:
        target: "notFoundException"
        name: "withLocation"
        parameters:
        - name: "location"
          valueUuid: "resolveAndLoad_list1-0"
        signature: "withLocation(ConfigDataLocation): ConfigDataResourceNotFoundException"
        returnValueUuid: "handle_configDataResourceNotFoundException1"
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "location"
      modelFingerprint: "9D9DB338F07954EF41AB0EDC9C55F370"
      index: 10
      ignored: false
      valueUuid: "resolveAndLoad_list1-0"
      methodExercised:
        target: "location"
        name: "isOptional"
        parameters: []
        signature: "isOptional(): boolean"
        returnValueUuid: "getNotFoundAction_boolean1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "23A055F56842988AE1C18DA9140A91C4"
      index: 11
      ignored: false
      valueUuid: "load_map1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "a463e7ef-0f08-3411-9126-ffdbc47b0847"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.config.ConfigDataNotFoundAction.handle(org.apache.commons.logging.Log,org.springframework.boot.context.config.ConfigDataResourceNotFoundException)\
        \ : void"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataImporter"
        parameters:
        - name: "logFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.DeferredLogFactory"
            uuid: "<init>_deferredLogFactory1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "notFoundAction"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "FAIL"
            valueType: "org.springframework.boot.context.config.ConfigDataNotFoundAction"
            uuid: "<init>_configDataNotFoundAction1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolvers"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocationResolvers"
            uuid: "<init>_configDataLocationResolvers1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "loaders"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLoaders"
            uuid: "<init>_configDataLoaders1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.context.config.ConfigDataImporter"
        parameters:
        - name: "logFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.DeferredLogFactory"
            uuid: "<init>_deferredLogFactory1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "notFoundAction"
          value:
            sapientType: "ENUM"
            valueType: "org.springframework.boot.context.config.ConfigDataNotFoundAction"
            uuid: "<init>_configDataNotFoundAction1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolvers"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocationResolvers"
            uuid: "<init>_configDataLocationResolvers1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "loaders"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLoaders"
            uuid: "<init>_configDataLoaders1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.config.ConfigDataImporter"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataActivationContext"
      uuid: "resolveAndLoad_configDataActivationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocationResolverContext"
      uuid: "resolveAndLoad_configDataLocationResolverContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLoaderContext"
      uuid: "resolveAndLoad_configDataLoaderContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.springframework.boot.context.config.ConfigDataLocation"
            method: "of"
            methodParameters:
            - name: "location"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "location1"
                valueType: "java.lang.String"
                uuid: "resolveAndLoad_list1-0-location"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.springframework.boot.context.config.ConfigDataLocation"
            method: "of"
            methodParameters:
            - name: "location"
              value:
                sapientType: "BASIC"
                valueType: "java.lang.String"
                uuid: "resolveAndLoad_list1-0-location"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "org.springframework.boot.context.config.ConfigDataLocation"
          uuid: "resolveAndLoad_list1-0"
          fixed: false
          collectionUuid: "resolveAndLoad_list1"
          equalsMethodPresent: false
          explicitCastNeeded: false
      suggestedContent: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.springframework.boot.context.config.ConfigDataLocation"
            method: "of"
            methodParameters:
            - name: "location"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "location1"
                valueType: "java.lang.String"
                uuid: "resolveAndLoad_list1-0-location"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.springframework.boot.context.config.ConfigDataLocation"
            method: "of"
            methodParameters:
            - name: "location"
              value:
                sapientType: "BASIC"
                valueType: "java.lang.String"
                uuid: "resolveAndLoad_list1-0-location"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "org.springframework.boot.context.config.ConfigDataLocation"
          uuid: "resolveAndLoad_list1-0"
          fixed: false
          collectionUuid: "resolveAndLoad_list1"
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "resolveAndLoad_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.DeferredLogFactory"
      uuid: "<init>_deferredLogFactory1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "<init>_log1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.context.config.ConfigDataImporter"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.context.config.ConfigDataImporter"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataActivationContext"
      uuid: "resolveAndLoad_configDataActivationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.Profiles"
      uuid: "resolveAndLoad_profiles1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocationResolvers"
      uuid: "<init>_configDataLocationResolvers1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      suggestedContent: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.config.ConfigDataResolutionResult"
      uuid: "resolve_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocationResolverContext"
      uuid: "resolveAndLoad_configDataLocationResolverContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.config.ConfigDataLocation"
        method: "of"
        methodParameters:
        - name: "location"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "location1"
            valueType: "java.lang.String"
            uuid: "resolveAndLoad_list1-0-location"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      suggestedContent: !<static_method_return>
        target: "org.springframework.boot.context.config.ConfigDataLocation"
        method: "of"
        methodParameters:
        - name: "location"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "resolveAndLoad_list1-0-location"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "resolveAndLoad_list1-0"
      fixed: false
      collectionUuid: "resolveAndLoad_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.Profiles"
      uuid: "resolveAndLoad_profiles1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResourceNotFoundException"
      uuid: "resolve_configDataNotFoundException1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResourceNotFoundException"
      uuid: "handle_configDataResourceNotFoundException1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.config.ConfigDataLocation"
        method: "of"
        methodParameters:
        - name: "location"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "location1"
            valueType: "java.lang.String"
            uuid: "resolveAndLoad_list1-0-location"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      suggestedContent: !<static_method_return>
        target: "org.springframework.boot.context.config.ConfigDataLocation"
        method: "of"
        methodParameters:
        - name: "location"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "resolveAndLoad_list1-0-location"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "resolveAndLoad_list1-0"
      fixed: false
      collectionUuid: "resolveAndLoad_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.config.ConfigDataLocation"
        method: "of"
        methodParameters:
        - name: "location"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "location1"
            valueType: "java.lang.String"
            uuid: "resolveAndLoad_list1-0-location"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      suggestedContent: !<static_method_return>
        target: "org.springframework.boot.context.config.ConfigDataLocation"
        method: "of"
        methodParameters:
        - name: "location"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "resolveAndLoad_list1-0-location"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "resolveAndLoad_list1-0"
      fixed: false
      collectionUuid: "resolveAndLoad_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      suggestedContent: !<regular>
        value: false
      valueType: "boolean"
      uuid: "getNotFoundAction_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashMap"
        parameters: []
        values: []
      suggestedContent: !<collection>
        collectionClass: "java.util.LinkedHashMap"
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "org.springframework.boot.context.config.ConfigDataResolutionResult,org.springframework.boot.context.config.ConfigData"
      uuid: "load_map1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path8"
    testPathName: "resolveAndLoadWhenLoadedIsNotNullAndCaughtIOExceptionThrowsIllegalStateException"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory,org.springframework.boot.context.config.ConfigDataNotFoundAction,org.springframework.boot.context.config.ConfigDataLocationResolvers,org.springframework.boot.context.config.ConfigDataLoaders)\
      \ : void"
    filledByUser: false
    modelFingerprint: "A35F4E31E8442CD0AE1B224BC1D409B4"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.io.IOException"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "987DD5D39689685C8224B702072F1DB3"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "activationContext"
      modelFingerprint: "62EE4A687ED2631DF44B8EECD39BE6FA"
      index: 2
      ignored: false
      valueUuid: "resolveAndLoad_configDataActivationContext1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "locationResolverContext"
      modelFingerprint: "385B39825F2177486144D992C533F799"
      index: 3
      ignored: false
      valueUuid: "resolveAndLoad_configDataLocationResolverContext1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "loaderContext"
      modelFingerprint: "F2B64A9023B7FBD20CA9436E30741574"
      index: 4
      ignored: false
      valueUuid: "resolveAndLoad_configDataLoaderContext1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "locations"
      modelFingerprint: "F2068DFDB84010CAB27A322FBABE661D"
      index: 5
      ignored: false
      valueUuid: "resolveAndLoad_list1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "logFactory"
      modelFingerprint: "7F0B9A08172DE4D7E76C06D9CCDE0D5D"
      index: 6
      ignored: false
      valueUuid: "<init>_deferredLogFactory1"
      methodExercised:
        target: "logFactory"
        name: "getLog"
        parameters:
        - name: "destination"
          valueUuid: "uuid23"
        signature: "getLog(Class): Log"
        returnValueUuid: "<init>_log1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "activationContext"
      modelFingerprint: "7020F794B88B09B3E97B1CB01CAE4312"
      index: 7
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "resolveAndLoad_configDataActivationContext1"
      methodExercised:
        target: "activationContext"
        name: "getProfiles"
        parameters: []
        signature: "getProfiles(): Profiles"
        returnValueUuid: "resolveAndLoad_profiles1"
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "resolvers"
      modelFingerprint: "15B04093960B094AFF574E2D55708AB1"
      index: 8
      ignored: false
      idsTryCatchBlockSurrounding:
      - 290002
      valueUuid: "<init>_configDataLocationResolvers1"
      methodExercised:
        target: "this.resolvers"
        name: "resolve"
        parameters:
        - name: "context"
          valueUuid: "resolveAndLoad_configDataLocationResolverContext1"
        - name: "location"
          valueUuid: "resolve_object1"
        - name: "profiles"
          valueUuid: "resolveAndLoad_profiles1"
        signature: "resolve(ConfigDataLocationResolverContext,ConfigDataLocation,Profiles):\
          \ List"
        returnValueUuid: "resolve_list1"
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "165C6F0957D55CB6371219BF6A3FDF1E"
      index: 9
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "load_configDataResolutionResult1"
      methodExercised:
        target: "candidate"
        name: "getLocation"
        parameters: []
        signature: "getLocation(): ConfigDataLocation"
        returnValueUuid: "load_configDataLocation1"
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "candidate"
      modelFingerprint: "8147B593FA43EFD7645CEE2FD486ACDE"
      index: 10
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "load_configDataResolutionResult1"
      methodExercised:
        target: "candidate"
        name: "getResource"
        parameters: []
        signature: "getResource(): ConfigDataResource"
        returnValueUuid: "load_configDataResource1"
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "LogMessage"
      modelFingerprint: "A6480EEBE925611DFD7C4E5049C5055B"
      index: 11
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "uuid25"
      methodExercised:
        target: "org.springframework.core.log.LogMessage"
        name: "format"
        parameters:
        - name: "format"
          valueUuid: "uuid24"
        - name: "arg1"
          valueUuid: "load_configDataResource1"
        - name: "arg2"
          valueUuid: "load_configDataLocation1"
        signature: "format(String,ConfigDataResource,ConfigDataLocation): LogMessage"
        returnValueUuid: "load_logMessage1"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "resource"
      modelFingerprint: "8FAE98805F9151A2785EF148F2647F39"
      index: 12
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "load_configDataResource1"
      methodExercised:
        target: "resource"
        name: "isOptional"
        parameters: []
        signature: "isOptional(): boolean"
        returnValueUuid: "load_boolean1"
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "loaders"
      modelFingerprint: "FC2BFC6CA3185B60F1C61E548DD023FC"
      index: 13
      ignored: false
      idsTryCatchBlockSurrounding:
      - 260003
      - 1
      valueUuid: "<init>_configDataLoaders1"
      methodExercised:
        target: "this.loaders"
        name: "load"
        parameters:
        - name: "context"
          valueUuid: "resolveAndLoad_configDataLoaderContext1"
        - name: "resource"
          valueUuid: "load_configDataResource1"
        throwsExceptions:
        - "java.io.IOException"
        signature: "load(ConfigDataLoaderContext,ConfigDataResource): ConfigData throws\
          \ java.io.IOException"
        returnValueUuid: "load_configData1"
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "STATIC"
      name: "LogMessage"
      modelFingerprint: "D28FBAD275DB3B5D24C650F093645F88"
      index: 14
      ignored: false
      idsTryCatchBlockSurrounding:
      - 260003
      - 1
      valueUuid: "uuid27"
      methodExercised:
        target: "org.springframework.core.log.LogMessage"
        name: "format"
        parameters:
        - name: "format"
          valueUuid: "uuid26"
        - name: "arg1"
          valueUuid: "load_configDataResource1"
        - name: "arg2"
          valueUuid: "load_configDataLocation1"
        signature: "format(String,ConfigDataResource,ConfigDataLocation): LogMessage"
        returnValueUuid: "load_logMessage2"
        access: 9
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E7E2407A89FD623DE9CC0A0E5D916470"
      index: 15
      ignored: false
      valueUuid: "resolveAndLoad_illegalStateException1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "fd103a77-e3f1-3fd1-a0f6-27943e1d832e"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "COLLECTION_ARRAY_WITH_CONSTRAINTS_AND_NEEDS_TO_STRING"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataImporter"
        parameters:
        - name: "logFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.DeferredLogFactory"
            uuid: "<init>_deferredLogFactory1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "notFoundAction"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "FAIL"
            valueType: "org.springframework.boot.context.config.ConfigDataNotFoundAction"
            uuid: "<init>_configDataNotFoundAction1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolvers"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocationResolvers"
            uuid: "<init>_configDataLocationResolvers1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "loaders"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLoaders"
            uuid: "<init>_configDataLoaders1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.context.config.ConfigDataImporter"
        parameters:
        - name: "logFactory"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "org.springframework.boot.logging.DeferredLogFactory"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.springframework.boot.logging.DeferredLogFactory"
            uuid: "<init>_deferredLogFactory1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "notFoundAction"
          value:
            sapientType: "ENUM"
            valueType: "org.springframework.boot.context.config.ConfigDataNotFoundAction"
            uuid: "<init>_configDataNotFoundAction1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolvers"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "org.springframework.boot.context.config.ConfigDataLocationResolvers"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.springframework.boot.context.config.ConfigDataLocationResolvers"
            uuid: "<init>_configDataLocationResolvers1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "loaders"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<unknown_object>
              target: "org.springframework.boot.context.config.ConfigDataLoaders"
              onlyPojoFunctions: false
              builderPattern: false
            valueType: "org.springframework.boot.context.config.ConfigDataLoaders"
            uuid: "<init>_configDataLoaders1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.config.ConfigDataImporter"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataActivationContext"
      uuid: "resolveAndLoad_configDataActivationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocationResolverContext"
      uuid: "resolveAndLoad_configDataLocationResolverContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLoaderContext"
      uuid: "resolveAndLoad_configDataLoaderContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.config.ConfigDataLocation"
          uuid: "resolve_object1"
          fixed: false
          collectionUuid: "resolveAndLoad_list1"
          equalsMethodPresent: false
          explicitCastNeeded: false
      suggestedContent: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.config.ConfigDataLocation"
          uuid: "resolve_object1"
          fixed: false
          collectionUuid: "resolveAndLoad_list1"
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "resolveAndLoad_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.DeferredLogFactory"
      uuid: "<init>_deferredLogFactory1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "<init>_log1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.context.config.ConfigDataImporter"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.context.config.ConfigDataImporter"
      uuid: "uuid23"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataActivationContext"
      uuid: "resolveAndLoad_configDataActivationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.Profiles"
      uuid: "resolveAndLoad_profiles1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocationResolvers"
      uuid: "<init>_configDataLocationResolvers1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      suggestedContent: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.config.ConfigDataResolutionResult"
      uuid: "resolve_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocationResolverContext"
      uuid: "resolveAndLoad_configDataLocationResolverContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "resolve_object1"
      fixed: false
      collectionUuid: "resolveAndLoad_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.Profiles"
      uuid: "resolveAndLoad_profiles1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResolutionResult"
      uuid: "load_configDataResolutionResult1"
      fixed: false
      collectionUuid: "resolve_list2"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "load_configDataLocation1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResolutionResult"
      uuid: "load_configDataResolutionResult1"
      fixed: false
      collectionUuid: "resolve_list2"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "load_configDataResource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.log.LogMessage"
      uuid: "uuid25"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.log.LogMessage"
      uuid: "load_logMessage1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Considering resource %s from location %s"
      valueType: "java.lang.String"
      uuid: "uuid24"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "load_configDataResource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "load_configDataLocation1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "load_configDataResource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      suggestedContent: !<regular>
        value: true
      valueType: "boolean"
      uuid: "load_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLoaders"
      uuid: "<init>_configDataLoaders1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigData"
      uuid: "load_configData1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLoaderContext"
      uuid: "resolveAndLoad_configDataLoaderContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "load_configDataResource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.log.LogMessage"
      uuid: "uuid27"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.log.LogMessage"
      uuid: "load_logMessage2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: "Loaded resource %s from location %s"
      valueType: "java.lang.String"
      uuid: "uuid26"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "load_configDataResource1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "load_configDataLocation1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "IO error on loading imports from []"
            suggestedContent: !<regular>
              value: "IO error on loading imports from []"
            valueType: "java.lang.String"
            uuid: "resolveAndLoad_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.io.IOException"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            suggestedContent: !<new>
              target: "java.io.IOException"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.io.IOException"
            uuid: "resolveAndLoad_iOException1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      suggestedContent: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "message"
          value:
            sapientType: "BASIC"
            suggestedContent: !<regular>
              value: "IO error on loading imports from []"
            valueType: "java.lang.String"
            uuid: "resolveAndLoad_string1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "cause"
          value:
            sapientType: "UNKNOWN"
            suggestedContent: !<new>
              target: "java.io.IOException"
              parameters: []
              privateConstructor: false
              createdByTargetCode: false
            valueType: "java.io.IOException"
            uuid: "resolveAndLoad_iOException1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "java.lang.IllegalStateException"
      uuid: "resolveAndLoad_illegalStateException1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path12"
    testPathName: "resolveAndLoadWhenLocationIsOptional"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory,org.springframework.boot.context.config.ConfigDataNotFoundAction,org.springframework.boot.context.config.ConfigDataLocationResolvers,org.springframework.boot.context.config.ConfigDataLoaders)\
      \ : void"
    filledByUser: false
    modelFingerprint: "51A210799D3095B80E6913D6502485F9"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 26
      id: 3
      catchExceptions:
      - "org.springframework.boot.context.config.ConfigDataNotFoundException"
    truncated: true
    inputParameters: []
    uuid: "550bf153-377e-3d2b-a4bc-e8569329049e"
    deleted: true
    disabled: false
    ignoredBySystem: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.config.ConfigDataNotFoundAction.handle(org.apache.commons.logging.Log,org.springframework.boot.context.config.ConfigDataNotFoundException)\
        \ : void"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
  - pathId: "path11"
    testPathName: "resolveAndLoadWhenResourceIsOptional"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory,org.springframework.boot.context.config.ConfigDataNotFoundAction,org.springframework.boot.context.config.ConfigDataLocationResolvers,org.springframework.boot.context.config.ConfigDataLoaders)\
      \ : void"
    filledByUser: false
    modelFingerprint: "1A7083375ECC954AD12F1963F217E7F7"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 26
      id: 3
      catchExceptions:
      - "org.springframework.boot.context.config.ConfigDataNotFoundException"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "C0AAC55417051869AB36BACBCE43484E"
      index: 1
      ignored: false
      valueUuid: "target"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "activationContext"
      modelFingerprint: "A08584F93A8BDCE12F167FCED57DC94C"
      index: 2
      ignored: false
      valueUuid: "resolveAndLoad_configDataActivationContext1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "locationResolverContext"
      modelFingerprint: "15EA87B1DAFC7B54EFEFABB122A17A95"
      index: 3
      ignored: false
      valueUuid: "resolveAndLoad_configDataLocationResolverContext1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "loaderContext"
      modelFingerprint: "0F6C4BA51C928ECE1F663BA3CC283503"
      index: 4
      ignored: false
      valueUuid: "resolveAndLoad_configDataLoaderContext1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "INPUT"
      name: "locations"
      modelFingerprint: "0A21E135737EE7C229BBB0E5B209F6AA"
      index: 5
      ignored: false
      valueUuid: "resolveAndLoad_list1"
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "logFactory"
      modelFingerprint: "933A9449F8305FAE6614B2FE99C7388C"
      index: 6
      ignored: false
      valueUuid: "<init>_deferredLogFactory1"
      methodExercised:
        target: "logFactory"
        name: "getLog"
        parameters:
        - name: "destination"
          valueUuid: "uuid1"
        signature: "getLog(Class): Log"
        returnValueUuid: "<init>_log1"
        access: 1
      staticReadMethodForField: false
      filledByUser: false
    - type: "LOCAL_VARIABLE"
      name: "activationContext"
      modelFingerprint: "61006BEF622AE4A7F8959ACE9D950ADC"
      index: 7
      ignored: false
      idsTryCatchBlockSurrounding:
      - 1
      valueUuid: "resolveAndLoad_configDataActivationContext1"
      methodExercised:
        target: "activationContext"
        name: "getProfiles"
        parameters: []
        signature: "getProfiles(): Profiles"
        returnValueUuid: "resolveAndLoad_profiles1"
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "FIELD"
      name: "resolvers"
      modelFingerprint: "66E19F037A2D6E5340CCB186774D8F17"
      index: 8
      ignored: false
      idsTryCatchBlockSurrounding:
      - 290002
      valueUuid: "<init>_configDataLocationResolvers1"
      methodExercised:
        target: "this.resolvers"
        name: "resolve"
        parameters:
        - name: "context"
          valueUuid: "resolveAndLoad_configDataLocationResolverContext1"
        - name: "location"
          valueUuid: "resolveAndLoad_list1-0"
        - name: "profiles"
          valueUuid: "resolveAndLoad_profiles1"
        signature: "resolve(ConfigDataLocationResolverContext,ConfigDataLocation,Profiles):\
          \ List"
        returnValueUuid: "resolve_list1"
        access: 0
      staticReadMethodForField: false
      filledByUser: false
    - type: "RESULT"
      name: "result"
      modelFingerprint: "23A055F56842988AE1C18DA9140A91C4"
      index: 9
      ignored: false
      valueUuid: "load_map1"
      staticReadMethodForField: false
      filledByUser: false
    uuid: "3675beae-b7c7-342c-b6e4-b023070cb4e4"
    deleted: false
    disabled: false
    ignoredBySystem: false
    failureReason:
      reason: "DEPENDENCY_TO_THROW_EXCEPTION_NOT_FOUND"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataImporter"
        parameters:
        - name: "logFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.DeferredLogFactory"
            uuid: "<init>_deferredLogFactory1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "notFoundAction"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "FAIL"
            valueType: "org.springframework.boot.context.config.ConfigDataNotFoundAction"
            uuid: "<init>_configDataNotFoundAction1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolvers"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocationResolvers"
            uuid: "<init>_configDataLocationResolvers1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "loaders"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLoaders"
            uuid: "<init>_configDataLoaders1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.springframework.boot.context.config.ConfigDataImporter"
        parameters:
        - name: "logFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.DeferredLogFactory"
            uuid: "<init>_deferredLogFactory1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "notFoundAction"
          value:
            sapientType: "ENUM"
            valueType: "org.springframework.boot.context.config.ConfigDataNotFoundAction"
            uuid: "<init>_configDataNotFoundAction1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "resolvers"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocationResolvers"
            uuid: "<init>_configDataLocationResolvers1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "loaders"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLoaders"
            uuid: "<init>_configDataLoaders1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.config.ConfigDataImporter"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataActivationContext"
      uuid: "resolveAndLoad_configDataActivationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocationResolverContext"
      uuid: "resolveAndLoad_configDataLocationResolverContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLoaderContext"
      uuid: "resolveAndLoad_configDataLoaderContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.springframework.boot.context.config.ConfigDataLocation"
            method: "of"
            methodParameters:
            - name: "location"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "location1"
                valueType: "java.lang.String"
                uuid: "resolveAndLoad_list1-0-location"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.springframework.boot.context.config.ConfigDataLocation"
            method: "of"
            methodParameters:
            - name: "location"
              value:
                sapientType: "BASIC"
                valueType: "java.lang.String"
                uuid: "resolveAndLoad_list1-0-location"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "org.springframework.boot.context.config.ConfigDataLocation"
          uuid: "resolveAndLoad_list1-0"
          fixed: false
          collectionUuid: "resolveAndLoad_list1"
          equalsMethodPresent: false
          explicitCastNeeded: false
      suggestedContent: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<static_method_return>
            target: "org.springframework.boot.context.config.ConfigDataLocation"
            method: "of"
            methodParameters:
            - name: "location"
              value:
                sapientType: "BASIC"
                content: !<regular>
                  value: "location1"
                valueType: "java.lang.String"
                uuid: "resolveAndLoad_list1-0-location"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
          suggestedContent: !<static_method_return>
            target: "org.springframework.boot.context.config.ConfigDataLocation"
            method: "of"
            methodParameters:
            - name: "location"
              value:
                sapientType: "BASIC"
                valueType: "java.lang.String"
                uuid: "resolveAndLoad_list1-0-location"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
          valueType: "org.springframework.boot.context.config.ConfigDataLocation"
          uuid: "resolveAndLoad_list1-0"
          fixed: false
          collectionUuid: "resolveAndLoad_list1"
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "resolveAndLoad_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.DeferredLogFactory"
      uuid: "<init>_deferredLogFactory1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      suggestedContent: !<new>
        target: "org.apache.commons.logging.impl.NoOpLog"
        parameters: []
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.apache.commons.logging.impl.NoOpLog"
      uuid: "<init>_log1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.context.config.ConfigDataImporter"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.context.config.ConfigDataImporter"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataActivationContext"
      uuid: "resolveAndLoad_configDataActivationContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.Profiles"
      uuid: "resolveAndLoad_profiles1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocationResolvers"
      uuid: "<init>_configDataLocationResolvers1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      suggestedContent: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.config.ConfigDataResolutionResult"
      uuid: "resolve_list1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocationResolverContext"
      uuid: "resolveAndLoad_configDataLocationResolverContext1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.config.ConfigDataLocation"
        method: "of"
        methodParameters:
        - name: "location"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "location1"
            valueType: "java.lang.String"
            uuid: "resolveAndLoad_list1-0-location"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      suggestedContent: !<static_method_return>
        target: "org.springframework.boot.context.config.ConfigDataLocation"
        method: "of"
        methodParameters:
        - name: "location"
          value:
            sapientType: "BASIC"
            valueType: "java.lang.String"
            uuid: "resolveAndLoad_list1-0-location"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "resolveAndLoad_list1-0"
      fixed: false
      collectionUuid: "resolveAndLoad_list1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.Profiles"
      uuid: "resolveAndLoad_profiles1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.LinkedHashMap"
        parameters: []
        values: []
      suggestedContent: !<collection>
        collectionClass: "java.util.LinkedHashMap"
        parameters: []
        values: []
      valueType: "java.util.Map"
      genericValueType: "org.springframework.boot.context.config.ConfigDataResolutionResult,org.springframework.boot.context.config.ConfigData"
      uuid: "load_map1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "getLoadedLocations"
    signature: "getLoadedLocations() : java.util.Set<org.springframework.boot.context.config.ConfigDataLocation>"
    instructionFingerprint: "BB0AC1DB2952A724A9C040B1F9320F72"
  paths:
  - pathId: "path1"
    testPathName: "getLoadedLocationsTest"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory,org.springframework.boot.context.config.ConfigDataNotFoundAction,org.springframework.boot.context.config.ConfigDataLocationResolvers,org.springframework.boot.context.config.ConfigDataLoaders)\
      \ : void"
    filledByUser: false
    modelFingerprint: "24C5C1BC024F865B58145A577381143F"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "38e3d344-6267-38de-83ca-f5b21cf69f11"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
- method:
    name: "getOptionalLocations"
    signature: "getOptionalLocations() : java.util.Set<org.springframework.boot.context.config.ConfigDataLocation>"
    instructionFingerprint: "80A271780423A00A0E7A4C86D87AE815"
  paths:
  - pathId: "path1"
    testPathName: "getOptionalLocationsTest"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory,org.springframework.boot.context.config.ConfigDataNotFoundAction,org.springframework.boot.context.config.ConfigDataLocationResolvers,org.springframework.boot.context.config.ConfigDataLoaders)\
      \ : void"
    filledByUser: false
    modelFingerprint: "24C5C1BC024F865B58145A577381143F"
    problemWasSolvedByProver: true
    truncated: true
    inputParameters: []
    uuid: "1ccbbc0e-2e93-31f8-8e81-df20cbec7160"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "DEFAULT"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues: []
