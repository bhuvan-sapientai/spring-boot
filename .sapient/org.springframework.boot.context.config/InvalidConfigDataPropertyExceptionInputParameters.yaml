---
modelFingerprint: "612E080CB54BE292DC578F1BAD4A19A7"
targetClass:
  fullClassName: "org.springframework.boot.context.config.InvalidConfigDataPropertyException"
methods:
- method:
    name: "getProperty"
    sourceCodeSignature: "ConfigurationProperty getProperty()"
    returnType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
    instructionFingerprint: "0DA48631820DCB0AFD9BE865B0672EC5"
  paths:
  - pathId: "path1"
    testPathName: "getPropertyTest"
    constructorSignature: "<init>(org.springframework.boot.context.properties.source.ConfigurationProperty,boolean,org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.config.ConfigDataResource)\
      \ : void"
    modelFingerprint: "46934DE632028C9F757815DEDF8CCAD5"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    calledSomeStaticInternalMethod: true
- method:
    name: "getLocation"
    sourceCodeSignature: "ConfigDataResource getLocation()"
    returnType: "org.springframework.boot.context.config.ConfigDataResource"
    instructionFingerprint: "661E4FFFD4FE6B488A391F91D0FB5AD5"
  paths:
  - pathId: "path1"
    testPathName: "getLocationTest"
    constructorSignature: "<init>(org.springframework.boot.context.properties.source.ConfigurationProperty,boolean,org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.config.ConfigDataResource)\
      \ : void"
    modelFingerprint: "7C1FD4158CFC4B92DBF3E9E25944A804"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    calledSomeStaticInternalMethod: true
- method:
    name: "getReplacement"
    sourceCodeSignature: "ConfigurationPropertyName getReplacement()"
    returnType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    instructionFingerprint: "E034D84840DF3FB9ED5BF5853A6B30A7"
  paths:
  - pathId: "path1"
    testPathName: "getReplacementTest"
    constructorSignature: "<init>(org.springframework.boot.context.properties.source.ConfigurationProperty,boolean,org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.config.ConfigDataResource)\
      \ : void"
    modelFingerprint: "BC8F47DBCCE572C89101EF7021877CDD"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    calledSomeStaticInternalMethod: true
- method:
    name: "throwIfPropertyFound"
    sourceCodeSignature: "void throwIfPropertyFound(ConfigDataEnvironmentContributor\
      \ contributor)"
    returnType: "void"
    parameters:
    - name: "contributor"
      type: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
    instructionFingerprint: "F2B6BE5AA985D817415315ADBB2F8A2F"
  paths:
  - pathId: "path5"
    testPathName: "throwIfPropertyFoundWhenPropertySourceIsNull"
    modelFingerprint: "8862FD5A7F2650902C94F50DF590BDB6"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "contributor"
      modelFingerprint: "D407471C02B47EFF772C794A87E34CCE"
      valueUuid: "contributor"
    - type: "LOCAL_VARIABLE"
      name: "contributor"
      modelFingerprint: "2771C3D06E970A7C408FA41C3857A638"
      valueUuid: "contributor"
      methodExercised:
        expression: "getConfigurationPropertySource():configurationPropertySource"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "contributor"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "contributor"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "configurationPropertySource"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 108
      expression: "propertySource != null"
      range: "(108,7)-(108,28)"
      evaluatedAs: false
  - pathId: "path1"
    testPathName: "throwIfPropertyFoundWhenPropertyGetOriginIsNotNullThrowsInvalidConfigDataPropertyException"
    modelFingerprint: "D8D4F53B2462768A590EAC997FCA712F"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "contributor"
      modelFingerprint: "D407471C02B47EFF772C794A87E34CCE"
      valueUuid: "contributor"
    - type: "LOCAL_VARIABLE"
      name: "contributor"
      modelFingerprint: "4A373645B9F0AD28E6A20657E67B2AE8"
      valueUuid: "contributor"
      methodExercised:
        expression: "getConfigurationPropertySource():configurationPropertySource"
    - type: "LOCAL_VARIABLE"
      name: "propertySource"
      modelFingerprint: "5984A4EBFD360018FCA8D387F9027369"
      valueUuid: "configurationPropertySource"
      methodExercised:
        expression: "getConfigurationProperty(name:configurationPropertyName):configurationProperty"
    - type: "LOCAL_VARIABLE"
      name: "contributor"
      modelFingerprint: "9AF08F6A033BD30BC6AA780226ED4E92"
      valueUuid: "contributor"
      methodExercised:
        expression: "getResource():configDataResource"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "34ABCE920DE413DDE6F7F6E4E3BE41A7"
      valueUuid: "configurationProperty"
      methodExercised:
        expression: "getName():name"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "04B8525EB145861BAE77CEB56DAEC5E2"
      valueUuid: "configurationProperty"
      methodExercised:
        expression: "getOrigin():origin"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "04B8525EB145861BAE77CEB56DAEC5E2"
      valueUuid: "configurationProperty"
      methodExercised:
        expression: "getOrigin():origin"
    - type: "LOCAL_VARIABLE"
      name: "propertySource"
      modelFingerprint: "B75FD55746CD447D86CB352332B41817"
      valueUuid: "configurationPropertySource"
      methodExercised:
        expression: "getConfigurationProperty(name:configurationPropertyName4):configurationProperty2"
    - type: "LOCAL_VARIABLE"
      name: "contributor"
      modelFingerprint: "9AF08F6A033BD30BC6AA780226ED4E92"
      valueUuid: "contributor"
      methodExercised:
        expression: "getResource():configDataResource2"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "34ABCE920DE413DDE6F7F6E4E3BE41A7"
      valueUuid: "configurationProperty2"
      methodExercised:
        expression: "getName():name2"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "04B8525EB145861BAE77CEB56DAEC5E2"
      valueUuid: "configurationProperty2"
      methodExercised:
        expression: "getOrigin():origin3"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "04B8525EB145861BAE77CEB56DAEC5E2"
      valueUuid: "configurationProperty2"
      methodExercised:
        expression: "getOrigin():origin3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B795086118DB74D95C041D4341676AFF"
      valueUuid: "invalidConfigDataPropertyException3"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "contributor"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "contributor"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "configurationPropertySource"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "configurationPropertySource"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "configurationProperty-value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "of"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "spring.profiles"
            valueType: "java.lang.String"
            uuid: "uniqueUuid1"
            fixed: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "contributor"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "configDataResource"
      nameForMock: "configDataResource"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "configurationProperty-value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
      nameForMock: "name"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "configurationProperty-value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
      nameForMock: "origin"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "configurationProperty-value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
      nameForMock: "origin"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "configurationPropertySource"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name2"
            nameForMock: "name2"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "configurationProperty2-value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin3"
            nameForMock: "origin3"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty2"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "of"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "spring.profiles[0]"
            valueType: "java.lang.String"
            uuid: "uniqueUuid2"
            fixed: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "contributor"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "configDataResource2"
      nameForMock: "configDataResource2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name2"
            nameForMock: "name2"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "configurationProperty2-value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin3"
            nameForMock: "origin3"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name2"
      nameForMock: "name2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name2"
            nameForMock: "name2"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "configurationProperty2-value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin3"
            nameForMock: "origin3"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin3"
      nameForMock: "origin3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name2"
            nameForMock: "name2"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "configurationProperty2-value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin3"
            nameForMock: "origin3"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin3"
      nameForMock: "origin3"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.context.config.InvalidConfigDataPropertyException"
        parameters:
        - name: "property"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
              parameters:
              - name: "name"
                value:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                  uuid: "name2"
                  nameForMock: "name2"
              - name: "value"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "java.lang.Object"
                    parameters: []
                  valueType: "java.lang.Object"
                  uuid: "configurationProperty2-value"
              - name: "origin"
                value:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.origin.Origin"
                  uuid: "origin3"
                  nameForMock: "origin3"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            uuid: "configurationProperty2"
        - name: "profileSpecific"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid3"
            fixed: true
        - name: "replacement"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              method: "of"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "spring.config.activate.on-profile"
                  valueType: "java.lang.String"
                  fixed: true
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "configurationPropertyName5"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "configDataResource2"
            nameForMock: "configDataResource2"
      valueType: "org.springframework.boot.context.config.InvalidConfigDataPropertyException"
      uuid: "invalidConfigDataPropertyException3"
      fixed: true
    branches:
    - lineNumber: 108
      expression: "propertySource != null"
      range: "(108,7)-(108,28)"
      evaluatedAs: true
    - lineNumber: 111
      expression: "property != null"
      range: "(111,9)-(111,24)"
      evaluatedAs: true
      internalMethodName: "lambda$throwIfPropertyFound$0"
    - lineNumber: 132
      expression: "location != null"
      range: "(132,7)-(132,22)"
      evaluatedAs: true
      internalMethodName: "getMessage"
    - lineNumber: 137
      expression: "profileSpecific"
      range: "(137,7)-(137,21)"
      evaluatedAs: false
      internalMethodName: "getMessage"
    - lineNumber: 140
      expression: "replacement != null"
      range: "(140,7)-(140,25)"
      evaluatedAs: true
      internalMethodName: "getMessage"
    - lineNumber: 145
      expression: "property.getOrigin() != null"
      range: "(145,7)-(145,34)"
      evaluatedAs: true
      internalMethodName: "getMessage"
  - pathId: "path4"
    testPathName: "throwIfPropertyFoundWhenReplacementIsNotNullAndPropertyGetOriginIsNullThrowsInvalidConfigDataPropertyException"
    modelFingerprint: "AB87C34A42A6C5DB10CA19B7D3D059D1"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "contributor"
      modelFingerprint: "D407471C02B47EFF772C794A87E34CCE"
      valueUuid: "contributor"
    - type: "LOCAL_VARIABLE"
      name: "contributor"
      modelFingerprint: "4A373645B9F0AD28E6A20657E67B2AE8"
      valueUuid: "contributor"
      methodExercised:
        expression: "getConfigurationPropertySource():configurationPropertySource"
    - type: "LOCAL_VARIABLE"
      name: "propertySource"
      modelFingerprint: "E030D24FD155FCA9134E6880A9FB3A3B"
      valueUuid: "configurationPropertySource"
      methodExercised:
        expression: "getConfigurationProperty(name:configurationPropertyName):configurationProperty"
    - type: "LOCAL_VARIABLE"
      name: "contributor"
      modelFingerprint: "DA4540EF0E898FB25BB9FE9BB821C2A8"
      valueUuid: "contributor"
      methodExercised:
        expression: "getResource():configDataResource"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "81E00192FD522A1E7E6137A7493AB1D9"
      valueUuid: "configurationProperty"
      methodExercised:
        expression: "getName():name"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "58D5F48ECF9A76C961D24BF96EA41F5B"
      valueUuid: "configurationProperty"
      methodExercised:
        expression: "getOrigin():origin"
    - type: "LOCAL_VARIABLE"
      name: "propertySource"
      modelFingerprint: "1AA4212EE18CA8E5AFB7A7576707224B"
      valueUuid: "configurationPropertySource"
      methodExercised:
        expression: "getConfigurationProperty(name:configurationPropertyName4):configurationProperty2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "E0B76A5D7FED88E1D811F4EFC62FED5D"
      valueUuid: "invalidConfigDataPropertyException"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "contributor"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "contributor"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "configurationPropertySource"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "configurationPropertySource"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "configurationProperty-value"
        - name: "origin"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            fixed: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "of"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "spring.profiles"
            valueType: "java.lang.String"
            uuid: "uniqueUuid4"
            fixed: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "contributor"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "configDataResource"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "configurationProperty-value"
        - name: "origin"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            fixed: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
      nameForMock: "name"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
            nameForMock: "name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "configurationProperty-value"
        - name: "origin"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            fixed: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "configurationPropertySource"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty2"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "of"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "spring.profiles[0]"
            valueType: "java.lang.String"
            uuid: "uniqueUuid5"
            fixed: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName4"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.context.config.InvalidConfigDataPropertyException"
        parameters:
        - name: "property"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
              parameters:
              - name: "name"
                value:
                  sapientType: "MOCK"
                  valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
                  uuid: "name"
                  nameForMock: "name"
              - name: "value"
                value:
                  sapientType: "OBJECT"
                  content: !<new>
                    target: "java.lang.Object"
                    parameters: []
                  valueType: "java.lang.Object"
                  uuid: "configurationProperty-value"
              - name: "origin"
                value:
                  sapientType: "NULL"
                  valueType: "org.springframework.boot.origin.Origin"
                  uuid: "origin"
                  fixed: true
            valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
            uuid: "configurationProperty"
        - name: "profileSpecific"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: false
            valueType: "boolean"
            uuid: "uniqueUuid6"
            fixed: true
        - name: "replacement"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
              method: "of"
              methodParameters:
              - value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "spring.config.activate.on-profile"
                  valueType: "java.lang.String"
                  fixed: true
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "configurationPropertyName2"
        - name: "location"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "configDataResource"
      valueType: "org.springframework.boot.context.config.InvalidConfigDataPropertyException"
      uuid: "invalidConfigDataPropertyException"
      fixed: true
    branches:
    - lineNumber: 108
      expression: "propertySource != null"
      range: "(108,7)-(108,28)"
      evaluatedAs: true
    - lineNumber: 111
      expression: "property != null"
      range: "(111,9)-(111,24)"
      evaluatedAs: true
      internalMethodName: "lambda$throwIfPropertyFound$0"
    - lineNumber: 132
      expression: "location != null"
      range: "(132,7)-(132,22)"
      evaluatedAs: false
      internalMethodName: "getMessage"
    - lineNumber: 137
      expression: "profileSpecific"
      range: "(137,7)-(137,21)"
      evaluatedAs: false
      internalMethodName: "getMessage"
    - lineNumber: 140
      expression: "replacement != null"
      range: "(140,7)-(140,25)"
      evaluatedAs: true
      internalMethodName: "getMessage"
    - lineNumber: 145
      expression: "property.getOrigin() != null"
      range: "(145,7)-(145,34)"
      evaluatedAs: false
      internalMethodName: "getMessage"
