---
modelFingerprint: "B748AC63D34C5EF061CC8AB1CB4E0626"
targetClass:
  fullClassName: "org.springframework.boot.context.config.StandardConfigDataReference"
methods:
- method:
    name: "getConfigDataLocation"
    sourceCodeSignature: "ConfigDataLocation getConfigDataLocation()"
    returnType: "org.springframework.boot.context.config.ConfigDataLocation"
    instructionFingerprint: "568F7650108F7FFC2E82ABD6D4A370A2"
  paths:
  - pathId: "path1"
    testPathName: "getConfigDataLocationTest"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataLocation,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.boot.env.PropertySourceLoader)\
      \ : void"
    modelFingerprint: "28430FBA853CD5D549B2851665BAFBB5"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getResourceLocation"
    sourceCodeSignature: "String getResourceLocation()"
    returnType: "java.lang.String"
    instructionFingerprint: "296325CC5924EB4877448E28130B9E79"
  paths:
  - pathId: "path1"
    testPathName: "getResourceLocationTest"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataLocation,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.boot.env.PropertySourceLoader)\
      \ : void"
    modelFingerprint: "AA3E75221923F8DE6C361ADD481E0577"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "isMandatoryDirectory"
    sourceCodeSignature: "boolean isMandatoryDirectory()"
    returnType: "boolean"
    instructionFingerprint: "7677FD6E634AA6C0B7775D8C22A7DBB7"
  paths:
  - pathId: "path1"
    testPathName: "isMandatoryDirectoryWhenThisDirectoryIsNotNull"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataLocation,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.boot.env.PropertySourceLoader)\
      \ : void"
    modelFingerprint: "A5FF28A18671EE30A2CF6189B7543FCD"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "A1065E096D1788F8BF1130CB2B0DB69B"
      valueUuid: "target"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "C7ACBCFE5616F1184610C59DE2BE7F5B"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:profile):boolean1"
        staticAccess: true
    - type: "FIELD"
      name: "configDataLocation"
      modelFingerprint: "4E81E3BE312B67968F02D932D8A3E808"
      valueUuid: "configDataLocation"
      methodExercised:
        expression: "isOptional():optional"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.StandardConfigDataReference"
        parameters:
        - name: "configDataLocation"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "configDataLocation"
        - name: "directory"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "directory1"
            valueType: "java.lang.String"
            uuid: "directory"
        - name: "root"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "root"
        - name: "profile"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "profile"
        - name: "extension"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "C"
            valueType: "java.lang.String"
            uuid: "extension"
        - name: "propertySourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.env.PropertySourceLoader"
            uuid: "propertySourceLoader"
      valueType: "org.springframework.boot.context.config.StandardConfigDataReference"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "profile"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "configDataLocation"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "optional"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 70
      expression: "!this.configDataLocation.isOptional()"
      range: "(70,10)-(70,46)"
      evaluatedAs: true
    - lineNumber: 70
      expression: "this.directory != null"
      range: "(70,51)-(70,72)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "isMandatoryDirectoryWhenThisDirectoryIsNull"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataLocation,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.boot.env.PropertySourceLoader)\
      \ : void"
    modelFingerprint: "A4097B2C93D155E2B85A0BCC1708A4B0"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "160F2D00983CE1C9B2B99A4E2FA0B261"
      valueUuid: "target"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "C7ACBCFE5616F1184610C59DE2BE7F5B"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:profile):boolean1"
        staticAccess: true
    - type: "FIELD"
      name: "configDataLocation"
      modelFingerprint: "4E81E3BE312B67968F02D932D8A3E808"
      valueUuid: "configDataLocation"
      methodExercised:
        expression: "isOptional():optional"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.StandardConfigDataReference"
        parameters:
        - name: "configDataLocation"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "configDataLocation"
        - name: "directory"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "directory"
            fixed: true
        - name: "root"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "root"
        - name: "profile"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "profile"
        - name: "extension"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "C"
            valueType: "java.lang.String"
            uuid: "extension"
        - name: "propertySourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.env.PropertySourceLoader"
            uuid: "propertySourceLoader"
      valueType: "org.springframework.boot.context.config.StandardConfigDataReference"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "profile"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "configDataLocation"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "optional"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 70
      expression: "!this.configDataLocation.isOptional()"
      range: "(70,10)-(70,46)"
      evaluatedAs: true
    - lineNumber: 70
      expression: "this.directory != null"
      range: "(70,51)-(70,72)"
      evaluatedAs: false
- method:
    name: "getDirectory"
    sourceCodeSignature: "String getDirectory()"
    returnType: "java.lang.String"
    instructionFingerprint: "6E6E018569CC2D94279B28C7646E3C17"
  paths:
  - pathId: "path1"
    testPathName: "getDirectoryTest"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataLocation,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.boot.env.PropertySourceLoader)\
      \ : void"
    modelFingerprint: "992EC9901C40F0EE6E8E98DA6C88E66A"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getProfile"
    sourceCodeSignature: "String getProfile()"
    returnType: "java.lang.String"
    instructionFingerprint: "BE491A43AE3E7EE0ABA3D10F9A11820A"
  paths:
  - pathId: "path1"
    testPathName: "getProfileTest"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataLocation,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.boot.env.PropertySourceLoader)\
      \ : void"
    modelFingerprint: "BD98A8131303374EE87EB92D3CC35F00"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "isSkippable"
    sourceCodeSignature: "boolean isSkippable()"
    returnType: "boolean"
    instructionFingerprint: "D540918773EED0517F62FEB08453BFFD"
  paths:
  - pathId: "path1"
    testPathName: "isSkippableWhenThisProfileIsNotNull"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataLocation,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.boot.env.PropertySourceLoader)\
      \ : void"
    modelFingerprint: "A2F5C7E504A60690DD055B2A4CA99297"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "160F2D00983CE1C9B2B99A4E2FA0B261"
      valueUuid: "target"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "C7ACBCFE5616F1184610C59DE2BE7F5B"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:profile):boolean1"
        staticAccess: true
    - type: "FIELD"
      name: "configDataLocation"
      modelFingerprint: "4E81E3BE312B67968F02D932D8A3E808"
      valueUuid: "configDataLocation"
      methodExercised:
        expression: "isOptional():optional"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.StandardConfigDataReference"
        parameters:
        - name: "configDataLocation"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "configDataLocation"
        - name: "directory"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "directory"
            fixed: true
        - name: "root"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "root"
        - name: "profile"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "profile"
        - name: "extension"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "C"
            valueType: "java.lang.String"
            uuid: "extension"
        - name: "propertySourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.env.PropertySourceLoader"
            uuid: "propertySourceLoader"
      valueType: "org.springframework.boot.context.config.StandardConfigDataReference"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "profile"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "configDataLocation"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "optional"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 82
      expression: "this.configDataLocation.isOptional()"
      range: "(82,10)-(82,45)"
      evaluatedAs: false
    - lineNumber: 82
      expression: "this.directory != null"
      range: "(82,50)-(82,71)"
      evaluatedAs: false
    - lineNumber: 82
      expression: "this.profile != null"
      range: "(82,76)-(82,95)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "isSkippableWhenThisProfileIsNull"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataLocation,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.boot.env.PropertySourceLoader)\
      \ : void"
    modelFingerprint: "BDE8C57809CC5752841344CF47191F40"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1C177A5C68258C0981AD3F66933390D2"
      valueUuid: "target"
    - type: "STATIC"
      name: "StringUtils.class"
      modelFingerprint: "76EA4AF2D687744DA61581AC9D9C79D2"
      valueUuid: "StringUtils.class"
      methodExercised:
        expression: "hasText(str:profile):boolean1"
        staticAccess: true
    - type: "FIELD"
      name: "configDataLocation"
      modelFingerprint: "4E81E3BE312B67968F02D932D8A3E808"
      valueUuid: "configDataLocation"
      methodExercised:
        expression: "isOptional():optional"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.StandardConfigDataReference"
        parameters:
        - name: "configDataLocation"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "configDataLocation"
        - name: "directory"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "directory"
            fixed: true
        - name: "root"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "C"
            valueType: "java.lang.String"
            uuid: "root"
        - name: "profile"
          value:
            sapientType: "NULL"
            valueType: "java.lang.String"
            uuid: "profile"
            fixed: true
        - name: "extension"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "extension"
        - name: "propertySourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.env.PropertySourceLoader"
            uuid: "propertySourceLoader"
      valueType: "org.springframework.boot.context.config.StandardConfigDataReference"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "profile"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "configDataLocation"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "optional"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 82
      expression: "this.configDataLocation.isOptional()"
      range: "(82,10)-(82,45)"
      evaluatedAs: false
    - lineNumber: 82
      expression: "this.directory != null"
      range: "(82,50)-(82,71)"
      evaluatedAs: false
    - lineNumber: 82
      expression: "this.profile != null"
      range: "(82,76)-(82,95)"
      evaluatedAs: false
- method:
    name: "getPropertySourceLoader"
    sourceCodeSignature: "PropertySourceLoader getPropertySourceLoader()"
    returnType: "org.springframework.boot.env.PropertySourceLoader"
    instructionFingerprint: "4B150E2CE75453609BC345A90638DACA"
  paths:
  - pathId: "path1"
    testPathName: "getPropertySourceLoaderTest"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataLocation,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.boot.env.PropertySourceLoader)\
      \ : void"
    modelFingerprint: "D77C4DDB928C038559D27687A74A1B9F"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "equals"
    sourceCodeSignature: "boolean equals(Object obj)"
    returnType: "boolean"
    parameters:
    - name: "obj"
      type: "java.lang.Object"
    instructionFingerprint: "FC9C9932BF80928F8732F096CF2DA6B2"
  paths:
  - pathId: "path1"
    testPathName: "equalsWhenThisEqualsObj"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataLocation,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.boot.env.PropertySourceLoader)\
      \ : void"
    modelFingerprint: "CBE33593CE1782AD6B5FB0491EBCEFD6"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 91
      expression: "this == obj"
      range: "(91,7)-(91,17)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "equalsWhenGetClassNotEqualsObjGetClass"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataLocation,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.boot.env.PropertySourceLoader)\
      \ : void"
    modelFingerprint: "0A7CE3DE1892195B84161C4E698F596C"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 91
      expression: "this == obj"
      range: "(91,7)-(91,17)"
      evaluatedAs: false
    - lineNumber: 94
      expression: "obj == null"
      range: "(94,8)-(94,18)"
      evaluatedAs: false
    - lineNumber: 94
      expression: "getClass() != obj.getClass()"
      range: "(94,25)-(94,52)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "equalsWhenThisResourceLocationEqualsOtherResourceLocation"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataLocation,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.boot.env.PropertySourceLoader)\
      \ : void"
    modelFingerprint: "74F28B427BB6AE51BCFC75D19B38BAB7"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "PROVER_COULD_NOT_SOLVE_THE_PROBLEM"
    allValues: []
    branches:
    - lineNumber: 91
      expression: "this == obj"
      range: "(91,7)-(91,17)"
      evaluatedAs: false
    - lineNumber: 94
      expression: "obj == null"
      range: "(94,8)-(94,18)"
      evaluatedAs: false
    - lineNumber: 94
      expression: "getClass() != obj.getClass()"
      range: "(94,25)-(94,52)"
      evaluatedAs: false
    - lineNumber: 98
      expression: "this.resourceLocation.equals(other.resourceLocation)"
      range: "(98,10)-(98,61)"
      evaluatedAs: true
  - pathId: "path4"
    testPathName: "equalsWhenThisResourceLocationNotEqualsOtherResourceLocation"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataLocation,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.boot.env.PropertySourceLoader)\
      \ : void"
    modelFingerprint: "22D500CF6BEBFC4FA0764164D5920FDA"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 91
      expression: "this == obj"
      range: "(91,7)-(91,17)"
      evaluatedAs: false
    - lineNumber: 94
      expression: "obj == null"
      range: "(94,8)-(94,18)"
      evaluatedAs: false
    - lineNumber: 94
      expression: "getClass() != obj.getClass()"
      range: "(94,25)-(94,52)"
      evaluatedAs: false
    - lineNumber: 98
      expression: "this.resourceLocation.equals(other.resourceLocation)"
      range: "(98,10)-(98,61)"
      evaluatedAs: false
- method:
    name: "toString"
    sourceCodeSignature: "String toString()"
    returnType: "java.lang.String"
    instructionFingerprint: "945C4C08B941432C70CF9F99111416BA"
  paths:
  - pathId: "path1"
    testPathName: "toStringTest"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataLocation,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.boot.env.PropertySourceLoader)\
      \ : void"
    modelFingerprint: "AA3E75221923F8DE6C361ADD481E0577"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "5192B1765CD43A5AAF3AA187075DA1DB"
      valueUuid: "target"
    - type: "STATIC"
      name: "StringUtils.class.real"
      modelFingerprint: "C7ACBCFE5616F1184610C59DE2BE7F5B"
      valueUuid: "StringUtils.class.real"
      methodExercised:
        expression: "hasText(str:profile):boolean1"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5C0C73755154A6FD6C96981E70A6D57"
      valueUuid: "string3"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.StandardConfigDataReference"
        parameters:
        - name: "configDataLocation"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "configDataLocation"
        - name: "directory"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "directory1"
            valueType: "java.lang.String"
            uuid: "directory"
        - name: "root"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "B"
            valueType: "java.lang.String"
            uuid: "root"
        - name: "profile"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "profile"
        - name: "extension"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "C"
            valueType: "java.lang.String"
            uuid: "extension"
        - name: "propertySourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.env.PropertySourceLoader"
            uuid: "propertySourceLoader"
      valueType: "org.springframework.boot.context.config.StandardConfigDataReference"
      uuid: "target"
    - sapientType: "REAL"
      valueType: "org.springframework.util.StringUtils"
      uuid: "StringUtils.class.real"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "profile"
    - sapientType: "BASIC"
      content: !<regular>
        value: "B-A.C"
      valueType: "java.lang.String"
      uuid: "string3"
