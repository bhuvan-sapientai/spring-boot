---
modelFingerprint: "96C1E588CCB96FEC2851FE7F0CFD731F"
targetClass:
  fullClassName: "org.springframework.boot.context.config.ConfigDataLocationResolvers"
methods:
- method:
    name: "resolve"
    sourceCodeSignature: "List<ConfigDataResolutionResult> resolve(ConfigDataLocationResolverContext\
      \ context, ConfigDataLocation location, Profiles profiles)"
    returnType: "java.util.List"
    genericReturnType: "org.springframework.boot.context.config.ConfigDataResolutionResult"
    parameters:
    - name: "context"
      type: "org.springframework.boot.context.config.ConfigDataLocationResolverContext"
    - name: "location"
      type: "org.springframework.boot.context.config.ConfigDataLocation"
    - name: "profiles"
      type: "org.springframework.boot.context.config.Profiles"
    instructionFingerprint: "F8838A004E095EF2A58F8C2D6C736CA5"
  paths:
  - pathId: "path1"
    testPathName: "resolveWhenLocationIsNull"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory,org.springframework.boot.ConfigurableBootstrapContext,org.springframework.boot.context.properties.bind.Binder,org.springframework.core.io.ResourceLoader,org.springframework.core.io.support.SpringFactoriesLoader)\
      \ : void"
    modelFingerprint: "ED32D45F57930927FB1AA71DF8DC6859"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "8C30C163047F0B51321E88416724A829"
      valueUuid: "target"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "871FEFB5409D506BCB70E00622B7AF27"
      valueUuid: "context"
    - type: "INPUT"
      name: "location"
      modelFingerprint: "CC4802EA518BC08BDE94E75D4AFC52AD"
      valueUuid: "location"
    - type: "INPUT"
      name: "profiles"
      modelFingerprint: "94DB7841E4063FBE5D7010645BC08A04"
      valueUuid: "profiles"
    - type: "STATIC"
      name: "SpringFactoriesLoader.ArgumentResolver.class"
      modelFingerprint: "D37C2BEA47E3A2185DCF1F39CA6D6D38"
      valueUuid: "SpringFactoriesLoader.ArgumentResolver.class"
      methodExercised:
        expression: "of(type:uniqueUuid1,value:logFactory):springFactoriesLoader.ArgumentResolver"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "argumentResolver"
      modelFingerprint: "DF0A562E43BEFC017EE94AC0ED782244"
      valueUuid: "springFactoriesLoader.ArgumentResolver"
      methodExercised:
        expression: "and(type:uniqueUuid2,value:binder):springFactoriesLoader.ArgumentResolver2"
    - type: "LOCAL_VARIABLE"
      name: "argumentResolver"
      modelFingerprint: "7AB2AA71B68D8A3DA415A9DCA33FC685"
      valueUuid: "springFactoriesLoader.ArgumentResolver2"
      methodExercised:
        expression: "and(type:uniqueUuid3,value:resourceLoader):springFactoriesLoader.ArgumentResolver3"
    - type: "LOCAL_VARIABLE"
      name: "argumentResolver"
      modelFingerprint: "8814639EF3A863A40BE3EFDF97223994"
      valueUuid: "springFactoriesLoader.ArgumentResolver3"
      methodExercised:
        expression: "and(type:uniqueUuid4,value:bootstrapContext):springFactoriesLoader.ArgumentResolver4"
    - type: "LOCAL_VARIABLE"
      name: "argumentResolver"
      modelFingerprint: "62F1225961CFBA0EEE5B836D3B094278"
      valueUuid: "springFactoriesLoader.ArgumentResolver4"
      methodExercised:
        expression: "and(type:uniqueUuid5,value:bootstrapContext):springFactoriesLoader.ArgumentResolver5"
    - type: "LOCAL_VARIABLE"
      name: "argumentResolver"
      modelFingerprint: "81962DFBF44687191399A90E725ADF8C"
      valueUuid: "springFactoriesLoader.ArgumentResolver5"
      methodExercised:
        expression: "and(type:uniqueUuid6,value:bootstrapContext):springFactoriesLoader.ArgumentResolver6"
    - type: "LOCAL_VARIABLE"
      name: "argumentResolver"
      modelFingerprint: "48F0C3526389247854EE54319F595BE6"
      valueUuid: "springFactoriesLoader.ArgumentResolver6"
      methodExercised:
        expression: "andSupplied(type:uniqueUuid7,valueSupplier:uniqueUuid8):springFactoriesLoader.ArgumentResolver7"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "1E6E72D2097C4B1CF95BB78D7F7B5B87"
      valueUuid: "list"
    disabled: false
    failureReason:
      reason: "NO_CONSTRUCTOR_PATH_WITHOUT_EXCEPTION"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataLocationResolvers"
        parameters:
        - name: "logFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.DeferredLogFactory"
            uuid: "logFactory"
        - name: "bootstrapContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ConfigurableBootstrapContext"
            uuid: "bootstrapContext"
        - name: "binder"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Binder"
            uuid: "binder"
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "springFactoriesLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
            uuid: "springFactoriesLoader"
      valueType: "org.springframework.boot.context.config.ConfigDataLocationResolvers"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocationResolverContext"
      uuid: "context"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "location"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.Profiles"
      uuid: "profiles"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "SpringFactoriesLoader.ArgumentResolver.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.DeferredLogFactory"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.logging.DeferredLogFactory"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.DeferredLogFactory"
      uuid: "logFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.context.properties.bind.Binder"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "binder"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.core.io.ResourceLoader"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.core.io.ResourceLoader"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.ConfigurableBootstrapContext"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.ConfigurableBootstrapContext"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ConfigurableBootstrapContext"
      uuid: "bootstrapContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver5"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapContext"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapContext"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ConfigurableBootstrapContext"
      uuid: "bootstrapContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver5"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver6"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistry"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistry"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ConfigurableBootstrapContext"
      uuid: "bootstrapContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver6"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver7"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.apache.commons.logging.Log"
      valueType: "java.lang.Class"
      genericValueType: "org.apache.commons.logging.Log"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      uuid: "uniqueUuid8"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.List"
      genericValueType: "org.springframework.boot.context.config.ConfigDataResolutionResult"
      uuid: "list"
    branches:
    - lineNumber: 89
      expression: "location == null"
      range: "(89,7)-(89,22)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "resolveWhenLocationIsNotNullThrowsNullPointerException"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory,org.springframework.boot.ConfigurableBootstrapContext,org.springframework.boot.context.properties.bind.Binder,org.springframework.core.io.ResourceLoader,org.springframework.core.io.support.SpringFactoriesLoader)\
      \ : void"
    modelFingerprint: "A969039E89DA26992C6EE51C2561511A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "8C30C163047F0B51321E88416724A829"
      valueUuid: "target"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "871FEFB5409D506BCB70E00622B7AF27"
      valueUuid: "context"
    - type: "INPUT"
      name: "location"
      modelFingerprint: "6B0C45E6FFB6764C84898E62EF2696B3"
      valueUuid: "location"
    - type: "INPUT"
      name: "profiles"
      modelFingerprint: "94DB7841E4063FBE5D7010645BC08A04"
      valueUuid: "profiles"
    - type: "STATIC"
      name: "SpringFactoriesLoader.ArgumentResolver.class"
      modelFingerprint: "D37C2BEA47E3A2185DCF1F39CA6D6D38"
      valueUuid: "SpringFactoriesLoader.ArgumentResolver.class"
      methodExercised:
        expression: "of(type:uniqueUuid9,value:logFactory):springFactoriesLoader.ArgumentResolver"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "argumentResolver"
      modelFingerprint: "DF0A562E43BEFC017EE94AC0ED782244"
      valueUuid: "springFactoriesLoader.ArgumentResolver"
      methodExercised:
        expression: "and(type:uniqueUuid10,value:binder):springFactoriesLoader.ArgumentResolver2"
    - type: "LOCAL_VARIABLE"
      name: "argumentResolver"
      modelFingerprint: "7AB2AA71B68D8A3DA415A9DCA33FC685"
      valueUuid: "springFactoriesLoader.ArgumentResolver2"
      methodExercised:
        expression: "and(type:uniqueUuid11,value:resourceLoader):springFactoriesLoader.ArgumentResolver3"
    - type: "LOCAL_VARIABLE"
      name: "argumentResolver"
      modelFingerprint: "8814639EF3A863A40BE3EFDF97223994"
      valueUuid: "springFactoriesLoader.ArgumentResolver3"
      methodExercised:
        expression: "and(type:uniqueUuid12,value:bootstrapContext):springFactoriesLoader.ArgumentResolver4"
    - type: "LOCAL_VARIABLE"
      name: "argumentResolver"
      modelFingerprint: "62F1225961CFBA0EEE5B836D3B094278"
      valueUuid: "springFactoriesLoader.ArgumentResolver4"
      methodExercised:
        expression: "and(type:uniqueUuid13,value:bootstrapContext):springFactoriesLoader.ArgumentResolver5"
    - type: "LOCAL_VARIABLE"
      name: "argumentResolver"
      modelFingerprint: "81962DFBF44687191399A90E725ADF8C"
      valueUuid: "springFactoriesLoader.ArgumentResolver5"
      methodExercised:
        expression: "and(type:uniqueUuid14,value:bootstrapContext):springFactoriesLoader.ArgumentResolver6"
    - type: "LOCAL_VARIABLE"
      name: "argumentResolver"
      modelFingerprint: "48F0C3526389247854EE54319F595BE6"
      valueUuid: "springFactoriesLoader.ArgumentResolver6"
      methodExercised:
        expression: "andSupplied(type:uniqueUuid15,valueSupplier:uniqueUuid16):springFactoriesLoader.ArgumentResolver7"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "085DC12750BAC37E63C370C4A90AE3FA"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "NO_CONSTRUCTOR_PATH_WITHOUT_EXCEPTION"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataLocationResolvers"
        parameters:
        - name: "logFactory"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.logging.DeferredLogFactory"
            uuid: "logFactory"
        - name: "bootstrapContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ConfigurableBootstrapContext"
            uuid: "bootstrapContext"
        - name: "binder"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Binder"
            uuid: "binder"
        - name: "resourceLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.ResourceLoader"
            uuid: "resourceLoader"
        - name: "springFactoriesLoader"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.io.support.SpringFactoriesLoader"
            uuid: "springFactoriesLoader"
      valueType: "org.springframework.boot.context.config.ConfigDataLocationResolvers"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocationResolverContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "location"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.Profiles"
      uuid: "profiles"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "SpringFactoriesLoader.ArgumentResolver.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.logging.DeferredLogFactory"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.logging.DeferredLogFactory"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.logging.DeferredLogFactory"
      uuid: "logFactory"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.context.properties.bind.Binder"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "binder"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.core.io.ResourceLoader"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.core.io.ResourceLoader"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.ResourceLoader"
      uuid: "resourceLoader"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.ConfigurableBootstrapContext"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.ConfigurableBootstrapContext"
      uuid: "uniqueUuid12"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ConfigurableBootstrapContext"
      uuid: "bootstrapContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver5"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapContext"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapContext"
      uuid: "uniqueUuid13"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ConfigurableBootstrapContext"
      uuid: "bootstrapContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver5"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver6"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.BootstrapRegistry"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.BootstrapRegistry"
      uuid: "uniqueUuid14"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ConfigurableBootstrapContext"
      uuid: "bootstrapContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver6"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.io.support.SpringFactoriesLoader$ArgumentResolver"
      uuid: "springFactoriesLoader.ArgumentResolver7"
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.apache.commons.logging.Log"
      valueType: "java.lang.Class"
      genericValueType: "org.apache.commons.logging.Log"
      uuid: "uniqueUuid15"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      uuid: "uniqueUuid16"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.NullPointerException"
        parameters: []
      valueType: "java.lang.NullPointerException"
      uuid: "expectedResult"
    branches:
    - lineNumber: 89
      expression: "location == null"
      range: "(89,7)-(89,22)"
      evaluatedAs: false
- method:
    name: "getResolvers"
    sourceCodeSignature: "List<ConfigDataLocationResolver<?>> getResolvers()"
    returnType: "java.util.List"
    genericReturnType: "org.springframework.boot.context.config.ConfigDataLocationResolver<?>"
    instructionFingerprint: "E4CB7D58187D417CE649A16E37EF2ED8"
  paths:
  - pathId: "path1"
    testPathName: "getResolversTest"
    constructorSignature: "<init>(org.springframework.boot.logging.DeferredLogFactory,org.springframework.boot.ConfigurableBootstrapContext,org.springframework.boot.context.properties.bind.Binder,org.springframework.core.io.ResourceLoader,org.springframework.core.io.support.SpringFactoriesLoader)\
      \ : void"
    modelFingerprint: "2542F3FF55A2BA7E0612B0FEC05846F7"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "NO_CONSTRUCTOR_PATH_WITHOUT_EXCEPTION"
    allValues: []
