---
modelFingerprint: "94FCDDC58D569315C083CB9AB76179A7"
targetClass:
  fullClassName: "org.springframework.boot.context.config.ConfigDataProperties"
methods:
- method:
    name: "getImports"
    sourceCodeSignature: "List<ConfigDataLocation> getImports()"
    returnType: "java.util.List"
    genericReturnType: "org.springframework.boot.context.config.ConfigDataLocation"
    instructionFingerprint: "A40DF9B7B415F583C3D9519EA7C8B996"
  paths:
  - pathId: "path1"
    testPathName: "getImportsTest"
    constructorSignature: "<init>(java.util.List<org.springframework.boot.context.config.ConfigDataLocation>,org.springframework.boot.context.config.ConfigDataProperties$Activate)\
      \ : void"
    modelFingerprint: "DBF06E5C345C6660264B6AB749AE508E"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "isActive"
    sourceCodeSignature: "boolean isActive(ConfigDataActivationContext activationContext)"
    returnType: "boolean"
    parameters:
    - name: "activationContext"
      type: "org.springframework.boot.context.config.ConfigDataActivationContext"
    instructionFingerprint: "285ED5E8F10C99B1A3F5C5149CB6C805"
  paths:
  - pathId: "path1"
    testPathName: "isActiveWhenThisActivateIsActiveActivationContext"
    constructorSignature: "<init>(java.util.List<org.springframework.boot.context.config.ConfigDataLocation>,org.springframework.boot.context.config.ConfigDataProperties$Activate)\
      \ : void"
    modelFingerprint: "6229788878CDB11F8EA344B5451A9005"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "96CAEA09528BFF43143229E3DED00477"
      valueUuid: "target"
    - type: "INPUT"
      name: "activationContext"
      modelFingerprint: "5F152DB7362D439AA9B05E0C6C2D5AAA"
      valueUuid: "activationContext"
    - type: "FIELD"
      name: "activate"
      modelFingerprint: "BA96CD48788216996E5D244BB44EFA60"
      valueUuid: "activate"
      methodExercised:
        expression: "isActive(activationContext:activationContext):boolean1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "8383DF6F1D02800B0E90FD4143032B37"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataProperties"
        parameters:
        - name: "imports"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "imports"
        - name: "activate"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties$Activate"
            uuid: "activate"
      valueType: "org.springframework.boot.context.config.ConfigDataProperties"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataActivationContext"
      uuid: "activationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataProperties$Activate"
      uuid: "activate"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataActivationContext"
      uuid: "activationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 72
      expression: "this.activate == null"
      range: "(72,10)-(72,30)"
      evaluatedAs: false
    - lineNumber: 72
      expression: "this.activate.isActive(activationContext)"
      range: "(72,35)-(72,75)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "isActiveWhenThisActivateNotIsActiveActivationContext"
    constructorSignature: "<init>(java.util.List<org.springframework.boot.context.config.ConfigDataLocation>,org.springframework.boot.context.config.ConfigDataProperties$Activate)\
      \ : void"
    modelFingerprint: "666287BF47A62672964DE6CF8994757A"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "96CAEA09528BFF43143229E3DED00477"
      valueUuid: "target"
    - type: "INPUT"
      name: "activationContext"
      modelFingerprint: "5F152DB7362D439AA9B05E0C6C2D5AAA"
      valueUuid: "activationContext"
    - type: "FIELD"
      name: "activate"
      modelFingerprint: "BB2CEDAF4597410AE36BB89D2040C457"
      valueUuid: "activate"
      methodExercised:
        expression: "isActive(activationContext:activationContext):boolean1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataProperties"
        parameters:
        - name: "imports"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "imports"
        - name: "activate"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties$Activate"
            uuid: "activate"
      valueType: "org.springframework.boot.context.config.ConfigDataProperties"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataActivationContext"
      uuid: "activationContext"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataProperties$Activate"
      uuid: "activate"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataActivationContext"
      uuid: "activationContext"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 72
      expression: "this.activate == null"
      range: "(72,10)-(72,30)"
      evaluatedAs: false
    - lineNumber: 72
      expression: "this.activate.isActive(activationContext)"
      range: "(72,35)-(72,75)"
      evaluatedAs: false
- method:
    name: "withoutImports"
    sourceCodeSignature: "ConfigDataProperties withoutImports()"
    returnType: "org.springframework.boot.context.config.ConfigDataProperties"
    instructionFingerprint: "EE5D5567BD17957DBE7AFCE3E818446A"
  paths:
  - pathId: "path1"
    testPathName: "withoutImportsWhenDefaultBranch"
    constructorSignature: "<init>(java.util.List<org.springframework.boot.context.config.ConfigDataLocation>,org.springframework.boot.context.config.ConfigDataProperties$Activate)\
      \ : void"
    modelFingerprint: "ECE783AC6F04071D5B2878FE64BB4F7E"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "7F0EB874A854275A12A350BBE3DBBC8F"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "6BE056953599991DDC0B72879BFF4DBF"
      valueUuid: "configDataProperties2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataProperties"
        parameters:
        - name: "imports"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "imports"
        - name: "activate"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties$Activate"
            uuid: "activate"
      valueType: "org.springframework.boot.context.config.ConfigDataProperties"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataProperties"
        parameters:
        - name: "imports"
          value:
            sapientType: "NULL"
            valueType: "java.util.List"
            uuid: "uniqueUuid1"
        - name: "activate"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataProperties$Activate"
            uuid: "activate"
      valueType: "org.springframework.boot.context.config.ConfigDataProperties"
      uuid: "configDataProperties2"
      fixed: true
    branches:
    - lineNumber: 53
      expression: "branch expression (line 53)"
      range: "(53,1)-(53,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
- method:
    name: "get"
    sourceCodeSignature: "ConfigDataProperties get(Binder binder)"
    returnType: "org.springframework.boot.context.config.ConfigDataProperties"
    parameters:
    - name: "binder"
      type: "org.springframework.boot.context.properties.bind.Binder"
    instructionFingerprint: "D52AA1D261D024FFE4269E57EC7B7A0F"
  paths:
  - pathId: "path1"
    testPathName: "getTest"
    modelFingerprint: "5CCEC3C6FF17833FC8B499C685FEDDDC"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "binder"
      modelFingerprint: "89CFFB464A0CA6B7F09059185E4583C8"
      valueUuid: "binder"
    - type: "LOCAL_VARIABLE"
      name: "binder"
      modelFingerprint: "DF828B9840F001D1736C884DE1956725"
      valueUuid: "binder"
      methodExercised:
        expression: "bind(name:configurationPropertyName,target:bindable,handler:configDataLocationBindHandler):bindResult"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "CB72A1C41F5EEFD24BA6DAAE4577B868"
      valueUuid: "bindResult"
      methodExercised:
        expression: "orElse(other:uniqueUuid4):object"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "DDC5C70675466E10BBF5D596D7C8B028"
      valueUuid: "object"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "binder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "binder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "bindResult"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
        method: "of"
        methodParameters:
        - value:
            sapientType: "BASIC"
            content: !<regular>
              value: "spring.config"
            valueType: "java.lang.String"
            uuid: "uniqueUuid2"
            fixed: true
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - value:
            sapientType: "CLASS"
            content: !<regular>
              value: "org.springframework.boot.context.config.ConfigDataProperties"
            valueType: "java.lang.Class"
            genericValueType: "org.springframework.boot.context.config.ConfigDataProperties"
            uuid: "uniqueUuid3"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "org.springframework.boot.context.config.ConfigDataProperties"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.config.ConfigDataLocationBindHandler"
      uuid: "configDataLocationBindHandler"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "bindResult"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataProperties"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "NULL"
      uuid: "uniqueUuid4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataProperties"
      uuid: "object"
      explicitCastNeeded: true
