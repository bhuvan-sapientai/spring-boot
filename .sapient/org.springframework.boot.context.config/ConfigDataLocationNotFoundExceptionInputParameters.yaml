---
modelFingerprint: "C546040F48DB8E0C7A7E71BFCC2FB5C5"
targetClass:
  fullClassName: "org.springframework.boot.context.config.ConfigDataLocationNotFoundException"
methods:
- method:
    name: "getLocation"
    sourceCodeSignature: "ConfigDataLocation getLocation()"
    returnType: "org.springframework.boot.context.config.ConfigDataLocation"
    instructionFingerprint: "EDAAE51B769561EB9940BA79DA30CE9E"
  paths:
  - pathId: "path1"
    testPathName: "getLocationTest"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataLocation,java.lang.String,java.lang.Throwable)\
      \ : void"
    modelFingerprint: "B50C68D93E2EF12E39714194A1F12E8D"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getOrigin"
    sourceCodeSignature: "Origin getOrigin()"
    returnType: "org.springframework.boot.origin.Origin"
    instructionFingerprint: "190C3C140F95851B2D0034BBEFF17D2A"
  paths:
  - pathId: "path1"
    testPathName: "getOriginTest"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataLocation,java.lang.String,java.lang.Throwable)\
      \ : void"
    modelFingerprint: "9A31DB3E032F9C0557E4AFEB09F229DB"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6E5C54FA5383144FF73C6D3B96E44F47"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A788351D39280C120D3D0A78C51B6D5D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:location,message:uniqueUuid2):void"
        staticAccess: true
    - type: "STATIC"
      name: "Origin.class"
      modelFingerprint: "A51FACB3DA7DA6BD38146A0E462C29A8"
      valueUuid: "Origin.class"
      methodExercised:
        expression: "from(source:location):origin"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5692B041B63EBC5E48D608049DCE404F"
      valueUuid: "origin"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataLocationNotFoundException"
        parameters:
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "message1"
            valueType: "java.lang.String"
            uuid: "message"
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Throwable"
              parameters: []
            valueType: "java.lang.Throwable"
            uuid: "cause"
      valueType: "org.springframework.boot.context.config.ConfigDataLocationNotFoundException"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "location"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Location must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "Origin.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "location"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
- method:
    name: "getReferenceDescription"
    sourceCodeSignature: "String getReferenceDescription()"
    returnType: "java.lang.String"
    instructionFingerprint: "DAF88A1FBC403B9EE10A029746D3B05E"
  paths:
  - pathId: "path1"
    testPathName: "getReferenceDescriptionTest"
    constructorSignature: "<init>(org.springframework.boot.context.config.ConfigDataLocation,java.lang.String,java.lang.Throwable)\
      \ : void"
    modelFingerprint: "2DAE3C271345C593EFC038982A7C47B5"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "6E5C54FA5383144FF73C6D3B96E44F47"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A788351D39280C120D3D0A78C51B6D5D"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:location,message:uniqueUuid3):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D446A609419428DDEAA49A58091F3986"
      valueUuid: "string"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigDataLocationNotFoundException"
        parameters:
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataLocation"
            uuid: "location"
            nameForMock: "location"
        - name: "message"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "message1"
            valueType: "java.lang.String"
            uuid: "message"
        - name: "cause"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Throwable"
              parameters: []
            valueType: "java.lang.Throwable"
            uuid: "cause"
      valueType: "org.springframework.boot.context.config.ConfigDataLocationNotFoundException"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLocation"
      uuid: "location"
      nameForMock: "location"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Location must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "result1"
      valueType: "java.lang.String"
      uuid: "string"
    calledSomeStaticInternalMethod: true
