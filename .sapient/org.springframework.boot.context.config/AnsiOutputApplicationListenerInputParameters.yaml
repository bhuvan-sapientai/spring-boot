---
modelFingerprint: "0B1E72319A3C21B8BF77FA58F87B6444"
targetClass:
  fullClassName: "org.springframework.boot.context.config.AnsiOutputApplicationListener"
methods:
- method:
    name: "onApplicationEvent"
    sourceCodeSignature: "void onApplicationEvent(ApplicationEnvironmentPreparedEvent\
      \ event)"
    returnType: "void"
    parameters:
    - name: "event"
      type: "org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent"
    instructionFingerprint: "7DE71F3D7360565863E50BC43A9E2131"
  paths:
  - pathId: "path1"
    testPathName: "onApplicationEventTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "7E9CBBA414B00B0C5380963C7F0FAEE7"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "event"
      modelFingerprint: "F2DF357A1BE2AA3010912B31D7133C88"
      valueUuid: "event"
    - type: "LOCAL_VARIABLE"
      name: "event"
      modelFingerprint: "78076DE4E95D179B34C105C3BEFFCDB6"
      valueUuid: "event"
      methodExercised:
        expression: "getEnvironment():environment"
    - type: "STATIC"
      name: "Binder.class"
      modelFingerprint: "39A93C8B3983B1D632E155AA670ACD50"
      valueUuid: "Binder.class"
      methodExercised:
        expression: "get(environment:environment):binder"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F0826E7F47BAC552829488038867A2DE"
      valueUuid: "binder"
      methodExercised:
        expression: "bind(name:uniqueUuid1,target:uniqueUuid2):bindResult"
    - type: "STATIC"
      name: "AnsiOutput.class"
      modelFingerprint: "750B6EF72272E358051DEF29FB7EA0BA"
      valueUuid: "AnsiOutput.class"
      methodExercised:
        expression: "setEnabled(null:ansiOutput.Enabled):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "0EE0EE4CCFABF401A7483EC4AC364B0A"
      valueUuid: "bindResult"
      methodExercised:
        expression: "ifBound(consumer:uniqueUuid3):void"
    - type: "LOCAL_VARIABLE"
      name: "environment"
      modelFingerprint: "8B1D6AAE9551A841D8A1844C3CED9ACB"
      valueUuid: "environment"
      methodExercised:
        expression: "getProperty(key:uniqueUuid4,targetType:uniqueUuid5):object"
    - type: "STATIC"
      name: "AnsiOutput.class"
      modelFingerprint: "96F5B3CB947533CF950B6C1F9CAB1027"
      valueUuid: "AnsiOutput.class"
      methodExercised:
        expression: "setConsoleAvailable(consoleAvailable:object):void3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.AnsiOutputApplicationListener"
        parameters: []
      valueType: "org.springframework.boot.context.config.AnsiOutputApplicationListener"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent"
        parameters:
        - name: "bootstrapContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ConfigurableBootstrapContext"
            uuid: "event-bootstrapContext"
        - name: "application"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.SpringApplication"
            uuid: "event-application"
        - name: "args"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "event-args"
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "environment"
      valueType: "org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent"
      uuid: "event"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent"
        parameters:
        - name: "bootstrapContext"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.ConfigurableBootstrapContext"
            uuid: "event-bootstrapContext"
        - name: "application"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.SpringApplication"
            uuid: "event-application"
        - name: "args"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.String[]"
            uuid: "event-args"
        - name: "environment"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.env.ConfigurableEnvironment"
            uuid: "environment"
      valueType: "org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent"
      uuid: "event"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "Binder.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "binder"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "binder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "bindResult"
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.output.ansi.enabled"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "org.springframework.boot.ansi.AnsiOutput$Enabled"
      valueType: "java.lang.Class"
      genericValueType: "org.springframework.boot.ansi.AnsiOutput$Enabled"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ansi.AnsiOutput"
      uuid: "AnsiOutput.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "ENUM"
      content: !<regular>
        value: "NEVER"
      valueType: "org.springframework.boot.ansi.AnsiOutput$Enabled"
      uuid: "ansiOutput.Enabled"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "bindResult"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Consumer"
      uuid: "uniqueUuid3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.ConfigurableEnvironment"
      uuid: "environment"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "spring.output.ansi.console-available"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Boolean"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Boolean"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.ansi.AnsiOutput"
      uuid: "AnsiOutput.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "java.lang.Boolean"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
- method:
    name: "getOrder"
    sourceCodeSignature: "int getOrder()"
    returnType: "int"
    instructionFingerprint: "95CF55ABF81D9F2AD97C4B845549B578"
  paths:
  - pathId: "path1"
    testPathName: "getOrderTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "FEDCD89C6A569702FA5CE141B92361CB"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FC59F4824A889255F9562A0007FA343A"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.AnsiOutputApplicationListener"
        parameters: []
      valueType: "org.springframework.boot.context.config.AnsiOutputApplicationListener"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: -2147483637
      valueType: "int"
      uuid: "expectedResult"
      fixed: true
