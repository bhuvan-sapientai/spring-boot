---
modelFingerprint: "AF689F3506D0B10B642842D3C550EE22"
targetClass:
  fullClassName: "org.springframework.boot.context.config.ConfigTreeConfigDataLoader"
methods:
- method:
    name: "load"
    sourceCodeSignature: "ConfigData load(ConfigDataLoaderContext context, ConfigTreeConfigDataResource\
      \ resource)"
    returnType: "org.springframework.boot.context.config.ConfigData"
    throwsExceptions:
    - "java.io.IOException"
    - "org.springframework.boot.context.config.ConfigDataResourceNotFoundException"
    parameters:
    - name: "context"
      type: "org.springframework.boot.context.config.ConfigDataLoaderContext"
    - name: "resource"
      type: "org.springframework.boot.context.config.ConfigTreeConfigDataResource"
    instructionFingerprint: "F5BEF8FCE3F0BDF00ADE8F8E5BBB5286"
  paths:
  - pathId: "path1"
    testPathName: "loadTest"
    constructorSignature: "<init>() : void"
    modelFingerprint: "BC91D99E55D8893B9F753A9A7CB2C6E7"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "4DB0F57EEFC6BBF1691C61D6F11B96D4"
      valueUuid: "target"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "006A2A1ABE79FF07EAE48D2AB79FE9EA"
      valueUuid: "context"
    - type: "INPUT"
      name: "resource"
      modelFingerprint: "6F89BDF69BAB6F443B3327DA4BB82958"
      valueUuid: "resource"
    - type: "LOCAL_VARIABLE"
      name: "resource"
      modelFingerprint: "C742E64E3DFAB3B8C83E02C16068CEAC"
      valueUuid: "resource"
      methodExercised:
        expression: "getPath():path"
    - type: "STATIC"
      name: "ConfigDataResourceNotFoundException.class"
      modelFingerprint: "65C1BA68214BE9F2D6B424A49E406861"
      valueUuid: "ConfigDataResourceNotFoundException.class"
      methodExercised:
        expression: "throwIfDoesNotExist(resource:resource,pathToCheck:path):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3E46E5F17EED7A33C92245A1A42FCE94"
      valueUuid: "configData"
    disabled: true
    failureReason:
      reason: "CLASS_TYPE_COULD_NOT_BE_MOCKED_AND_NEEDS_TO_STRING"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigTreeConfigDataLoader"
        parameters: []
      valueType: "org.springframework.boot.context.config.ConfigTreeConfigDataLoader"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataLoaderContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigTreeConfigDataResource"
      uuid: "resource"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigTreeConfigDataResource"
      uuid: "resource"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Path"
      uuid: "path"
      nameForMock: "path"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResourceNotFoundException"
      uuid: "ConfigDataResourceNotFoundException.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigTreeConfigDataResource"
      uuid: "resource"
    - sapientType: "MOCK"
      valueType: "java.nio.file.Path"
      uuid: "path"
      nameForMock: "path"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.config.ConfigData"
        parameters:
        - name: "propertySources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values:
              - sapientType: "OBJECT"
                content: !<new>
                  target: "org.springframework.boot.env.ConfigTreePropertySource"
                  parameters:
                  - name: "name"
                    value:
                      sapientType: "BASIC"
                      content: !<regular>
                        value: "Config tree 'path'"
                      valueType: "java.lang.String"
                      uuid: "string"
                  - name: "sourceDirectory"
                    value:
                      sapientType: "MOCK"
                      valueType: "java.nio.file.Path"
                      uuid: "path"
                      nameForMock: "path"
                  - name: "options"
                    value:
                      sapientType: "ARRAY"
                      content: !<array>
                        values:
                          0:
                            sapientType: "ENUM"
                            content: !<regular>
                              value: "AUTO_TRIM_TRAILING_NEW_LINE"
                            valueType: "org.springframework.boot.env.ConfigTreePropertySource$Option"
                            uuid: "Enum-org.springframework.boot.env.ConfigTreePropertySource$Option-AUTO_TRIM_TRAILING_NEW_LINE"
                            fixed: true
                      valueType: "org.springframework.boot.env.ConfigTreePropertySource$Option[]"
                      uuid: "configTreePropertySource.OptionArray"
                valueType: "org.springframework.boot.env.ConfigTreePropertySource"
                uuid: "configTreePropertySource"
                fixed: true
            valueType: "java.util.List"
            genericValueType: "org.springframework.boot.env.ConfigTreePropertySource"
            uuid: "list"
        - name: "options"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.boot.context.config.ConfigData$Option[]"
            uuid: "configData.OptionArray"
      valueType: "org.springframework.boot.context.config.ConfigData"
      uuid: "configData"
      fixed: true
