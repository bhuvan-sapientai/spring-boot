---
modelFingerprint: "E4B4BAF62F576F7912C0FCABFBB910B8"
targetClass:
  fullClassName: "org.springframework.boot.context.config.InactiveConfigDataAccessException"
methods:
- method:
    name: "getPropertySource"
    sourceCodeSignature: "PropertySource<?> getPropertySource()"
    returnType: "org.springframework.core.env.PropertySource"
    genericReturnType: "?"
    instructionFingerprint: "9E6A8E7932441A7E42D67805690DEC77"
  paths:
  - pathId: "path1"
    testPathName: "getPropertySourceTest"
    constructorSignature: "<init>(org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.config.ConfigDataResource,java.lang.String,org.springframework.boot.origin.Origin)\
      \ : void"
    modelFingerprint: "2E370FA0E1FD5A332057750334A87E7C"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    calledSomeStaticInternalMethod: true
- method:
    name: "getLocation"
    sourceCodeSignature: "ConfigDataResource getLocation()"
    returnType: "org.springframework.boot.context.config.ConfigDataResource"
    instructionFingerprint: "661E4FFFD4FE6B488A391F91D0FB5AD5"
  paths:
  - pathId: "path1"
    testPathName: "getLocationTest"
    constructorSignature: "<init>(org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.config.ConfigDataResource,java.lang.String,org.springframework.boot.origin.Origin)\
      \ : void"
    modelFingerprint: "B16CF97747883BF0AD0BA32BBD74BAA1"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    calledSomeStaticInternalMethod: true
- method:
    name: "getPropertyName"
    sourceCodeSignature: "String getPropertyName()"
    returnType: "java.lang.String"
    instructionFingerprint: "D701E1CEA13030F9A7190D4A8CE47FAE"
  paths:
  - pathId: "path1"
    testPathName: "getPropertyNameTest"
    constructorSignature: "<init>(org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.config.ConfigDataResource,java.lang.String,org.springframework.boot.origin.Origin)\
      \ : void"
    modelFingerprint: "944983631E24ED5036F2E6153DC22433"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    calledSomeStaticInternalMethod: true
- method:
    name: "getOrigin"
    sourceCodeSignature: "Origin getOrigin()"
    returnType: "org.springframework.boot.origin.Origin"
    instructionFingerprint: "F4DCD75CCFE1C9F17DBCC0F175DAAF8B"
  paths:
  - pathId: "path1"
    testPathName: "getOriginTest"
    constructorSignature: "<init>(org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.config.ConfigDataResource,java.lang.String,org.springframework.boot.origin.Origin)\
      \ : void"
    modelFingerprint: "9BBE8EF6318F9479F56F3005C71C3675"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    calledSomeStaticInternalMethod: true
- method:
    name: "throwIfPropertyFound"
    sourceCodeSignature: "void throwIfPropertyFound(ConfigDataEnvironmentContributor\
      \ contributor, ConfigurationPropertyName name)"
    returnType: "void"
    parameters:
    - name: "contributor"
      type: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    instructionFingerprint: "3739A25BAEF6A6B874593BDE82F7E588"
  paths:
  - pathId: "path6"
    testPathName: "throwIfPropertyFoundWhenSourceIsNullAndPropertyIsNull"
    modelFingerprint: "9CC46368EB509E92E1CC13AC4D8ED1D3"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "contributor"
      modelFingerprint: "D407471C02B47EFF772C794A87E34CCE"
      valueUuid: "contributor"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "LOCAL_VARIABLE"
      name: "contributor"
      modelFingerprint: "2771C3D06E970A7C408FA41C3857A638"
      valueUuid: "contributor"
      methodExercised:
        expression: "getConfigurationPropertySource():configurationPropertySource"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "contributor"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "contributor"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "configurationPropertySource"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 121
      expression: "source != null"
      range: "(121,37)-(121,50)"
      evaluatedAs: false
    - lineNumber: 122
      expression: "property != null"
      range: "(122,7)-(122,22)"
      evaluatedAs: false
  - pathId: "path1"
    testPathName: "throwIfPropertyFoundWhenOriginIsNotNullThrowsInactiveConfigDataAccessException"
    modelFingerprint: "5E097A833C0B78AFB4CF62C502AA6039"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "contributor"
      modelFingerprint: "D407471C02B47EFF772C794A87E34CCE"
      valueUuid: "contributor"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "LOCAL_VARIABLE"
      name: "contributor"
      modelFingerprint: "4A373645B9F0AD28E6A20657E67B2AE8"
      valueUuid: "contributor"
      methodExercised:
        expression: "getConfigurationPropertySource():configurationPropertySource"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "7837AA3F816931C9F9CFCD17C35D721D"
      valueUuid: "configurationPropertySource"
      methodExercised:
        expression: "getConfigurationProperty(name:name):configurationProperty"
    - type: "LOCAL_VARIABLE"
      name: "contributor"
      modelFingerprint: "A356F22ACFB41924BB1B860E2CB665A9"
      valueUuid: "contributor"
      methodExercised:
        expression: "getPropertySource():propertySource"
    - type: "LOCAL_VARIABLE"
      name: "contributor"
      modelFingerprint: "9AF08F6A033BD30BC6AA780226ED4E92"
      valueUuid: "contributor"
      methodExercised:
        expression: "getResource():configDataResource"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "04B8525EB145861BAE77CEB56DAEC5E2"
      valueUuid: "configurationProperty"
      methodExercised:
        expression: "getOrigin():origin"
    - type: "LOCAL_VARIABLE"
      name: "propertySource"
      modelFingerprint: "C0D7D8C3405870FFD1AC430258167BFF"
      valueUuid: "propertySource"
      methodExercised:
        expression: "getName():name2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "DDFFEBC0729FEC95E178B31278419584"
      valueUuid: "inactiveConfigDataAccessException"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "contributor"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
      nameForMock: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "contributor"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "configurationPropertySource"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "configurationPropertySource"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "configurationProperty-name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "configurationProperty-value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
      nameForMock: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "contributor"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.core.env.PropertySource"
        method: "named"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "name2"
      valueType: "org.springframework.core.env.PropertySource"
      uuid: "propertySource"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataEnvironmentContributor"
      uuid: "contributor"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.config.ConfigDataResource"
      uuid: "configDataResource"
      nameForMock: "configDataResource"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "configurationProperty-name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "configurationProperty-value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.origin.Origin"
      uuid: "origin"
      nameForMock: "origin"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.core.env.PropertySource"
        method: "named"
        methodParameters:
        - name: "name"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "A"
            valueType: "java.lang.String"
            uuid: "name2"
      valueType: "org.springframework.core.env.PropertySource"
      uuid: "propertySource"
    - sapientType: "BASIC"
      content: !<regular>
        value: "A"
      valueType: "java.lang.String"
      uuid: "name2"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "org.springframework.boot.context.config.InactiveConfigDataAccessException"
        parameters:
        - name: "propertySource"
          value:
            sapientType: "OBJECT"
            content: !<static_method_return>
              target: "org.springframework.core.env.PropertySource"
              method: "named"
              methodParameters:
              - name: "name"
                value:
                  sapientType: "BASIC"
                  content: !<regular>
                    value: "A"
                  valueType: "java.lang.String"
                  uuid: "name2"
            valueType: "org.springframework.core.env.PropertySource"
            uuid: "propertySource"
        - name: "location"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.config.ConfigDataResource"
            uuid: "configDataResource"
            nameForMock: "configDataResource"
        - name: "propertyName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "name"
            valueType: "java.lang.String"
            uuid: "string"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "origin"
            nameForMock: "origin"
      valueType: "org.springframework.boot.context.config.InactiveConfigDataAccessException"
      uuid: "inactiveConfigDataAccessException"
      fixed: true
    branches:
    - lineNumber: 121
      expression: "source != null"
      range: "(121,37)-(121,50)"
      evaluatedAs: true
    - lineNumber: 122
      expression: "property != null"
      range: "(122,7)-(122,22)"
      evaluatedAs: true
    - lineNumber: 65
      expression: "location != null"
      range: "(65,7)-(65,22)"
      evaluatedAs: true
      internalMethodName: "getMessage"
    - lineNumber: 72
      expression: "origin != null"
      range: "(72,7)-(72,20)"
      evaluatedAs: true
      internalMethodName: "getMessage"
