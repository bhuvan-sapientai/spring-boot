---
modelFingerprint: "041BED8B895B05B91E232E7A42718319"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.bind.ArrayBinder"
methods:
- method:
    name: "bindAggregate"
    sourceCodeSignature: "Object bindAggregate(ConfigurationPropertyName name, Bindable<?>\
      \ target, AggregateElementBinder elementBinder)"
    returnType: "java.lang.Object"
    parameters:
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    - name: "target"
      type: "org.springframework.boot.context.properties.bind.Bindable"
    - name: "elementBinder"
      type: "org.springframework.boot.context.properties.bind.AggregateElementBinder"
    instructionFingerprint: "53F3A51A70E27087F1DABFAE95207B4B"
  paths:
  - pathId: "path2"
    testPathName: "bindAggregateWhenResultNotWasSupplied"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.Binder$Context)\
      \ : void"
    modelFingerprint: "0F678B4D246EA62DE6922DF4758E1321"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E31B1EB53FE1D3C3DE0C6B8EEC81F1A9"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "BF25F014EB73A7427A883BFEC99E9E57"
      valueUuid: "target1"
    - type: "INPUT"
      name: "elementBinder"
      modelFingerprint: "852BCFED0C32B41F1D6923BCEA563E6F"
      valueUuid: "elementBinder"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "B55A83216BD2168FBBACFEEC8E87C743"
      valueUuid: "target1"
      methodExercised:
        expression: "getType():type"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "B55A83216BD2168FBBACFEEC8E87C743"
      valueUuid: "target1"
      methodExercised:
        expression: "getType():type"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A110762CB89CDC37B6CA6C32173F43B2"
      valueUuid: "type"
      methodExercised:
        expression: "getComponentType():componentType"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "C2055CBE85BEB1B9908F597E5218411D"
      methodExercised:
        expression: "bindIndexed(name:name,target:target1,elementBinder:elementBinder,aggregateType:type,elementType:componentType,result:indexedElementsBinder.IndexedCollectionSupplier):void"
    - type: "LOCAL_VARIABLE"
      name: "result"
      modelFingerprint: "6C338E3630B4A021CFDDAC2709760782"
      valueUuid: "indexedElementsBinder.IndexedCollectionSupplier"
      methodExercised:
        expression: "wasSupplied():boolean1"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B5832848421B6892B8D06BE61ADCD847"
      valueUuid: "object"
    disabled: false
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "if (result.wasSupplied()) {"
      lineNumber: 47
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: result - Method: wasSupplied"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ArrayBinder"
        parameters:
        - name: "context"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
            uuid: "context"
      valueType: "org.springframework.boot.context.properties.bind.ArrayBinder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.AggregateElementBinder"
      uuid: "elementBinder"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "componentType"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.AggregateElementBinder"
      uuid: "elementBinder"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "componentType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier"
        parameters:
        - name: "supplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.util.Collection<java.lang.Object>"
            uuid: "uniqueUuid2"
      valueType: "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier"
      uuid: "indexedElementsBinder.IndexedCollectionSupplier"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier"
        parameters:
        - name: "supplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.util.Collection<java.lang.Object>"
            uuid: "uniqueUuid2"
      valueType: "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier"
      uuid: "indexedElementsBinder.IndexedCollectionSupplier"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object"
      fixed: true
    branches:
    - lineNumber: 47
      expression: "result.wasSupplied()"
      range: "(47,7)-(47,26)"
      evaluatedAs: false
  - pathId: "path1"
    testPathName: "bindAggregateWhenILessThanListSize"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.Binder$Context)\
      \ : void"
    modelFingerprint: "97D74271DBE86E2D24CFCBA4F203E67D"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E31B1EB53FE1D3C3DE0C6B8EEC81F1A9"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "BF25F014EB73A7427A883BFEC99E9E57"
      valueUuid: "target1"
    - type: "INPUT"
      name: "elementBinder"
      modelFingerprint: "852BCFED0C32B41F1D6923BCEA563E6F"
      valueUuid: "elementBinder"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "B55A83216BD2168FBBACFEEC8E87C743"
      valueUuid: "target1"
      methodExercised:
        expression: "getType():type"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "B55A83216BD2168FBBACFEEC8E87C743"
      valueUuid: "target1"
      methodExercised:
        expression: "getType():type"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "353A6D1FE87B16E9566BDB23365E7DDA"
      valueUuid: "type"
      methodExercised:
        expression: "getComponentType():componentType"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "25013B7AD2A40635F7DB58E57E1D5B73"
      methodExercised:
        expression: "bindIndexed(name:name,target:target1,elementBinder:elementBinder,aggregateType:type,elementType:componentType,result:indexedElementsBinder.IndexedCollectionSupplier):void"
    - type: "LOCAL_VARIABLE"
      name: "result"
      modelFingerprint: "7F94746236E5AA87C182706714DFE80C"
      valueUuid: "indexedElementsBinder.IndexedCollectionSupplier"
      methodExercised:
        expression: "wasSupplied():boolean1"
    - type: "LOCAL_VARIABLE"
      name: "result"
      modelFingerprint: "EF2CEFC03AE46C1C7CFDF181A9B635C8"
      valueUuid: "indexedElementsBinder.IndexedCollectionSupplier"
      methodExercised:
        expression: "get():object"
    - type: "LOCAL_VARIABLE"
      name: "elementType"
      modelFingerprint: "839245556C80DD2528C73D5D2B32BC65"
      valueUuid: "componentType"
      methodExercised:
        expression: "resolve():class"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object2"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "if (result.wasSupplied()) {"
      lineNumber: 47
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: result - Method: wasSupplied"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ArrayBinder"
        parameters:
        - name: "context"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
            uuid: "context"
      valueType: "org.springframework.boot.context.properties.bind.ArrayBinder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.AggregateElementBinder"
      uuid: "elementBinder"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "componentType"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.AggregateElementBinder"
      uuid: "elementBinder"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "componentType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier"
        parameters:
        - name: "supplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.util.Collection<java.lang.Object>"
            uuid: "uniqueUuid5"
      valueType: "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier"
      uuid: "indexedElementsBinder.IndexedCollectionSupplier"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier"
        parameters:
        - name: "supplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.util.Collection<java.lang.Object>"
            uuid: "uniqueUuid5"
      valueType: "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier"
      uuid: "indexedElementsBinder.IndexedCollectionSupplier"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier"
        parameters:
        - name: "supplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.util.Collection<java.lang.Object>"
            uuid: "uniqueUuid5"
      valueType: "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier"
      uuid: "indexedElementsBinder.IndexedCollectionSupplier"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier"
            parameters:
            - name: "supplier"
              value:
                sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                valueType: "java.util.function.Supplier"
                genericValueType: "java.util.Collection<java.lang.Object>"
          valueType: "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier"
          uuid: "indexedElementsBinder.IndexedCollectionSupplier"
          fixed: true
        methodParameters: []
        methodName: "get"
      valueType: "java.util.List"
      uuid: "object"
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "componentType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    branches:
    - lineNumber: 47
      expression: "result.wasSupplied()"
      range: "(47,7)-(47,26)"
      evaluatedAs: true
    - lineNumber: 50
      expression: "i < list.size()"
      range: "(50,20)-(50,34)"
      evaluatedAs: true
- method:
    name: "merge"
    sourceCodeSignature: "Object merge(Supplier<Object> existing, Object additional)"
    returnType: "java.lang.Object"
    parameters:
    - name: "existing"
      type: "java.util.function.Supplier"
    - name: "additional"
      type: "java.lang.Object"
    instructionFingerprint: "9F85287B312AC442AEA0D784650F6112"
  paths:
  - pathId: "path1"
    testPathName: "mergeTest"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.Binder$Context)\
      \ : void"
    modelFingerprint: "EAA7529372956C46D8740DE62EFA3C8A"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "E31B1EB53FE1D3C3DE0C6B8EEC81F1A9"
      valueUuid: "target"
    - type: "INPUT"
      name: "existing"
      modelFingerprint: "C591FE1BEE6EFC5D3C03CA0AC9576858"
      valueUuid: "existing"
    - type: "INPUT"
      name: "additional"
      modelFingerprint: "E259C47805F5CBAD967AA7A4305F22AF"
      valueUuid: "additional"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7D8E87CB1B63A9579EC7584A697ED33D"
      valueUuid: "additional"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ArrayBinder"
        parameters:
        - name: "context"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
            uuid: "context"
      valueType: "org.springframework.boot.context.properties.bind.ArrayBinder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "existing"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "additional"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "additional"
