---
modelFingerprint: "6EB353FD29FE4A919E3F7776B59362C2"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.bind.BoundPropertiesTrackingBindHandler"
methods:
- method:
    name: "onSuccess"
    sourceCodeSignature: "Object onSuccess(ConfigurationPropertyName name, Bindable<?>\
      \ target, BindContext context, Object result)"
    returnType: "java.lang.Object"
    parameters:
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    - name: "target"
      type: "org.springframework.boot.context.properties.bind.Bindable"
    - name: "context"
      type: "org.springframework.boot.context.properties.bind.BindContext"
    - name: "result"
      type: "java.lang.Object"
    instructionFingerprint: "35BFFDA9163EA4CC0D17D87C75A8D8AF"
  paths:
  - pathId: "path1"
    testPathName: "onSuccessWhenNameEqualsContextGetConfigurationPropertyGetName"
    constructorSignature: "<init>(java.util.function.Consumer<org.springframework.boot.context.properties.source.ConfigurationProperty>)\
      \ : void"
    modelFingerprint: "E3775D5DD5E5E8B7DFC2FEDDDA8974C5"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "2C743BB2DCE73142A2B3E6DAE9D1B442"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "3340664D785032C795BAABD64A310117"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "4751B65555804AA12E800A372C9B566E"
      valueUuid: "context"
    - type: "INPUT"
      name: "result"
      modelFingerprint: "31A650D2671F03F3038B5B482F360664"
      valueUuid: "result1"
    - type: "STATIC"
      name: "Assert.class.real"
      modelFingerprint: "23EA22EA8C7A1B5A289E43C44ED7C628"
      valueUuid: "Assert.class.real"
      methodExercised:
        expression: "notNull(object:bindHandler,message:uniqueUuid1):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "FD11ABB3232BF3FE215389DD20BAF763"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:consumer,message:uniqueUuid2):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "5F4DD773545E6A98E169AC1C2A144978"
      valueUuid: "context"
      methodExercised:
        expression: "getConfigurationProperty():configurationProperty"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "92487CB3863D226C5FF5D7B83FB224AC"
      valueUuid: "context"
      methodExercised:
        expression: "getConfigurationProperty():configurationProperty2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D7D2BF7D4932AA729976B3662733B7FD"
      valueUuid: "configurationProperty2"
      methodExercised:
        expression: "getName():name"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "5F4DD773545E6A98E169AC1C2A144978"
      valueUuid: "context"
      methodExercised:
        expression: "getConfigurationProperty():configurationProperty3"
    - type: "FIELD"
      name: "parent"
      modelFingerprint: "4C14C798529984F1DB37A7751238A9F8"
      valueUuid: "bindHandler"
      methodExercised:
        expression: "onSuccess(name:name,target:target1,context:context,result:result1):object"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "F281CAA680DE816E7E47B3CED3FBCDAC"
      valueUuid: "object"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.function.Consumer.accept(org.springframework.boot.context.properties.source.ConfigurationProperty)\
        \ : void"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.BoundPropertiesTrackingBindHandler"
        parameters:
        - name: "consumer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "consumer"
      valueType: "org.springframework.boot.context.properties.bind.BoundPropertiesTrackingBindHandler"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "result1"
    - sapientType: "REAL"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class.real"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.context.properties.bind.BindHandler"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "bindHandler"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Parent must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "consumer"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Consumer must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "configurationProperty2-value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "configurationProperty2-origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "configurationProperty2-value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "configurationProperty2-origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty3"
    - sapientType: "OBJECT"
      content: !<static_field_return>
        target: "org.springframework.boot.context.properties.bind.BindHandler"
        fieldName: "DEFAULT"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "bindHandler"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_field_return>
            target: "org.springframework.boot.context.properties.bind.BindHandler"
            fieldName: "DEFAULT"
          valueType: "org.springframework.boot.context.properties.bind.BindHandler"
          uuid: "bindHandler"
        methodParameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            genericValueType: "?"
            uuid: "target1"
        - name: "context"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindContext"
            uuid: "context"
        - name: "result"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "result1"
        methodName: "onSuccess"
      valueType: "java.lang.Object"
      uuid: "object"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "?"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindContext"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "result1"
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<static_field_return>
            target: "org.springframework.boot.context.properties.bind.BindHandler"
            fieldName: "DEFAULT"
          valueType: "org.springframework.boot.context.properties.bind.BindHandler"
          uuid: "bindHandler"
        methodParameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            genericValueType: "?"
            uuid: "target1"
        - name: "context"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindContext"
            uuid: "context"
        - name: "result"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "result1"
        methodName: "onSuccess"
      valueType: "java.lang.Object"
      uuid: "object"
    branches:
    - lineNumber: 42
      expression: "context.getConfigurationProperty() != null"
      range: "(42,7)-(42,48)"
      evaluatedAs: true
    - lineNumber: 42
      expression: "name.equals(context.getConfigurationProperty().getName())"
      range: "(42,53)-(42,109)"
      evaluatedAs: true
