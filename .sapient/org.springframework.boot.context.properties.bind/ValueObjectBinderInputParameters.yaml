---
modelFingerprint: "7F06F43513CE8EBC9F8AE912FDFEF7CF"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
methods:
- method:
    name: "bind"
    sourceCodeSignature: "<T> T bind(ConfigurationPropertyName name, Bindable<T> target,\
      \ Binder.Context context, DataObjectPropertyBinder propertyBinder)"
    returnType: "java.lang.Object"
    parameters:
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    - name: "target"
      type: "org.springframework.boot.context.properties.bind.Bindable"
    - name: "context"
      type: "org.springframework.boot.context.properties.bind.Binder$Context"
    - name: "propertyBinder"
      type: "org.springframework.boot.context.properties.bind.DataObjectPropertyBinder"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "org.springframework.core.convert.ConversionException"
    instructionFingerprint: "1D4438238D2E006ED0B468EF9F4BB45E"
  paths:
  - pathId: "path1"
    testPathName: "bindWhenValueObjectIsNull"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "8D2E5F6B43B742834E5E6D3D9358E860"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "5776B76502D7DF1101091C7784082AA2"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "INPUT"
      name: "propertyBinder"
      modelFingerprint: "D423D71EE2488EF4BA88B3877F4592B8"
      valueUuid: "propertyBinder"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B5832848421B6892B8D06BE61ADCD847"
      valueUuid: "object"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "target1-instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DataObjectPropertyBinder"
      uuid: "propertyBinder"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object"
      fixed: true
    branches:
    - lineNumber: 76
      expression: "valueObject == null"
      range: "(76,7)-(76,25)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "bindWhenBound"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "E569E71D097F23362B1579C2952DAFDB"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "BF25F014EB73A7427A883BFEC99E9E57"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "INPUT"
      name: "propertyBinder"
      modelFingerprint: "D423D71EE2488EF4BA88B3877F4592B8"
      valueUuid: "propertyBinder"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "B55A83216BD2168FBBACFEEC8E87C743"
      valueUuid: "target1"
      methodExercised:
        expression: "getType():type"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "839245556C80DD2528C73D5D2B32BC65"
      valueUuid: "type"
      methodExercised:
        expression: "resolve():class"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "7C5B2F325F394A7110E50B0EF36BFDB8"
      valueUuid: "context"
      methodExercised:
        expression: "pushConstructorBoundTypes(value:class):void"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "86228B5E6DEDD11B36BD9CD8E8EF6FC0"
      valueUuid: "context"
      methodExercised:
        expression: "clearConfigurationProperty():void2"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "82EF10F6CA95063EBF865EBB3095B72B"
      valueUuid: "context"
      methodExercised:
        expression: "popConstructorBoundTypes():void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object3"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DataObjectPropertyBinder"
      uuid: "propertyBinder"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object3"
    branches:
    - lineNumber: 76
      expression: "valueObject == null"
      range: "(76,7)-(76,25)"
      evaluatedAs: false
    - lineNumber: 83
      expression: "for-each(parameters)"
      range: "(83,41)-(83,50)"
      evaluatedAs: true
    - lineNumber: 85
      expression: "bound"
      range: "(85,12)-(85,16)"
      evaluatedAs: false
    - lineNumber: 85
      expression: "arg != null"
      range: "(85,21)-(85,31)"
      evaluatedAs: true
    - lineNumber: 86
      expression: "arg != null"
      range: "(86,11)-(86,21)"
      evaluatedAs: true
    - lineNumber: 91
      expression: "bound"
      range: "(91,10)-(91,14)"
      evaluatedAs: true
  - pathId: "path16"
    testPathName: "bindWhenAnnotationNotInstanceOfDefaultValueAndNotBound"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "4FCF825C1B396CC9FBC4CB0494CAA024"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "BF25F014EB73A7427A883BFEC99E9E57"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "INPUT"
      name: "propertyBinder"
      modelFingerprint: "D423D71EE2488EF4BA88B3877F4592B8"
      valueUuid: "propertyBinder"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "B55A83216BD2168FBBACFEEC8E87C743"
      valueUuid: "target1"
      methodExercised:
        expression: "getType():type"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "839245556C80DD2528C73D5D2B32BC65"
      valueUuid: "type"
      methodExercised:
        expression: "resolve():class"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "7C5B2F325F394A7110E50B0EF36BFDB8"
      valueUuid: "context"
      methodExercised:
        expression: "pushConstructorBoundTypes(value:class):void"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "86228B5E6DEDD11B36BD9CD8E8EF6FC0"
      valueUuid: "context"
      methodExercised:
        expression: "clearConfigurationProperty():void2"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "82EF10F6CA95063EBF865EBB3095B72B"
      valueUuid: "context"
      methodExercised:
        expression: "popConstructorBoundTypes():void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B5832848421B6892B8D06BE61ADCD847"
      valueUuid: "object4"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DataObjectPropertyBinder"
      uuid: "propertyBinder"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object4"
      fixed: true
    branches:
    - lineNumber: 76
      expression: "valueObject == null"
      range: "(76,7)-(76,25)"
      evaluatedAs: false
    - lineNumber: 83
      expression: "for-each(parameters)"
      range: "(83,41)-(83,50)"
      evaluatedAs: true
    - lineNumber: 85
      expression: "bound"
      range: "(85,12)-(85,16)"
      evaluatedAs: false
    - lineNumber: 85
      expression: "arg != null"
      range: "(85,21)-(85,31)"
      evaluatedAs: false
    - lineNumber: 86
      expression: "arg != null"
      range: "(86,11)-(86,21)"
      evaluatedAs: false
    - lineNumber: 121
      expression: "for-each(annotations)"
      range: "(121,32)-(121,42)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 122
      expression: "annotation instanceof DefaultValue defaultValueAnnotation"
      range: "(122,8)-(122,64)"
      evaluatedAs: false
      internalMethodName: "getDefaultValue"
    - lineNumber: 91
      expression: "bound"
      range: "(91,10)-(91,14)"
      evaluatedAs: false
  - pathId: "path15"
    testPathName: "bindWhenDefaultValueLengthNotEquals0AndNotBound"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "C2892A8CCAC3A1D52D5BBC433EDD6C77"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "BF25F014EB73A7427A883BFEC99E9E57"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "INPUT"
      name: "propertyBinder"
      modelFingerprint: "D423D71EE2488EF4BA88B3877F4592B8"
      valueUuid: "propertyBinder"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "B55A83216BD2168FBBACFEEC8E87C743"
      valueUuid: "target1"
      methodExercised:
        expression: "getType():type"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "839245556C80DD2528C73D5D2B32BC65"
      valueUuid: "type"
      methodExercised:
        expression: "resolve():class"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "7C5B2F325F394A7110E50B0EF36BFDB8"
      valueUuid: "context"
      methodExercised:
        expression: "pushConstructorBoundTypes(value:class):void"
    - type: "LOCAL_VARIABLE"
      name: "defaultValueAnnotation"
      modelFingerprint: "5B8DEE1C4556BFDC2E2DB4A5B6CD17E4"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "8F8A2FE8C907FEF3ED304C32EAAAD08F"
      valueUuid: "context"
      methodExercised:
        expression: "getConverter():bindConverter"
    - type: "LOCAL_VARIABLE"
      name: "converter"
      modelFingerprint: "1D190CA1F445BFCED7116C5C707EA4E2"
      valueUuid: "bindConverter"
      methodExercised:
        expression: "convert(source:stringArray,targetType:resolvableType2,targetAnnotations:annotationArray):object3"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "86228B5E6DEDD11B36BD9CD8E8EF6FC0"
      valueUuid: "context"
      methodExercised:
        expression: "clearConfigurationProperty():void2"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "82EF10F6CA95063EBF865EBB3095B72B"
      valueUuid: "context"
      methodExercised:
        expression: "popConstructorBoundTypes():void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B5832848421B6892B8D06BE61ADCD847"
      valueUuid: "object4"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DataObjectPropertyBinder"
      uuid: "propertyBinder"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
      uuid: "annotation"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_valueItem1"
            valueType: "java.lang.String"
            uuid: "stringArrayItem0"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object3"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_valueItem1"
            valueType: "java.lang.String"
            uuid: "stringArrayItem0"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
            uuid: "annotation"
      valueType: "java.lang.annotation.Annotation[]"
      uuid: "annotationArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object4"
      fixed: true
    branches:
    - lineNumber: 76
      expression: "valueObject == null"
      range: "(76,7)-(76,25)"
      evaluatedAs: false
    - lineNumber: 83
      expression: "for-each(parameters)"
      range: "(83,41)-(83,50)"
      evaluatedAs: true
    - lineNumber: 85
      expression: "bound"
      range: "(85,12)-(85,16)"
      evaluatedAs: false
    - lineNumber: 85
      expression: "arg != null"
      range: "(85,21)-(85,31)"
      evaluatedAs: false
    - lineNumber: 86
      expression: "arg != null"
      range: "(86,11)-(86,21)"
      evaluatedAs: false
    - lineNumber: 121
      expression: "for-each(annotations)"
      range: "(121,32)-(121,42)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 122
      expression: "annotation instanceof DefaultValue defaultValueAnnotation"
      range: "(122,8)-(122,64)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 124
      expression: "defaultValue.length == 0"
      range: "(124,9)-(124,32)"
      evaluatedAs: false
      internalMethodName: "getDefaultValue"
    - lineNumber: 91
      expression: "bound"
      range: "(91,10)-(91,14)"
      evaluatedAs: false
  - pathId: "path19"
    testPathName: "bindWhenDefaultValueLengthNotEquals1ThrowsConversionException"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "6A2672B78D05FEC1972364290D3E219A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "BF25F014EB73A7427A883BFEC99E9E57"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "INPUT"
      name: "propertyBinder"
      modelFingerprint: "D423D71EE2488EF4BA88B3877F4592B8"
      valueUuid: "propertyBinder"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "B55A83216BD2168FBBACFEEC8E87C743"
      valueUuid: "target1"
      methodExercised:
        expression: "getType():type"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "839245556C80DD2528C73D5D2B32BC65"
      valueUuid: "type"
      methodExercised:
        expression: "resolve():class"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "7C5B2F325F394A7110E50B0EF36BFDB8"
      valueUuid: "context"
      methodExercised:
        expression: "pushConstructorBoundTypes(value:class):void"
    - type: "LOCAL_VARIABLE"
      name: "defaultValueAnnotation"
      modelFingerprint: "B1D327B3BA06D79986E690459EC9AC79"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "8F8A2FE8C907FEF3ED304C32EAAAD08F"
      valueUuid: "context"
      methodExercised:
        expression: "getConverter():bindConverter"
    - type: "LOCAL_VARIABLE"
      name: "converter"
      modelFingerprint: "C4627A389E90C143C4B0216EA2C759E3"
      valueUuid: "bindConverter"
      methodExercised:
        expression: "convert(source:stringArray,targetType:resolvableType2,targetAnnotations:annotationArray):object3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3D5DDD47D446393489EDB3AEC60996A3"
      valueUuid: "conversionException"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DataObjectPropertyBinder"
      uuid: "propertyBinder"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
      uuid: "annotation"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_valueItem1"
            valueType: "java.lang.String"
            uuid: "stringArrayItem0"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_valueItem1"
            valueType: "java.lang.String"
            uuid: "stringArrayItem1"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object3"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_valueItem1"
            valueType: "java.lang.String"
            uuid: "stringArrayItem0"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_valueItem1"
            valueType: "java.lang.String"
            uuid: "stringArrayItem1"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
            uuid: "annotation"
      valueType: "java.lang.annotation.Annotation[]"
      uuid: "annotationArray"
    - sapientType: "EXCEPTION"
      valueType: "org.springframework.core.convert.ConversionException"
      uuid: "conversionException"
    branches:
    - lineNumber: 76
      expression: "valueObject == null"
      range: "(76,7)-(76,25)"
      evaluatedAs: false
    - lineNumber: 83
      expression: "for-each(parameters)"
      range: "(83,41)-(83,50)"
      evaluatedAs: true
    - lineNumber: 85
      expression: "bound"
      range: "(85,12)-(85,16)"
      evaluatedAs: false
    - lineNumber: 85
      expression: "arg != null"
      range: "(85,21)-(85,31)"
      evaluatedAs: false
    - lineNumber: 86
      expression: "arg != null"
      range: "(86,11)-(86,21)"
      evaluatedAs: false
    - lineNumber: 121
      expression: "for-each(annotations)"
      range: "(121,32)-(121,42)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 122
      expression: "annotation instanceof DefaultValue defaultValueAnnotation"
      range: "(122,8)-(122,64)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 124
      expression: "defaultValue.length == 0"
      range: "(124,9)-(124,32)"
      evaluatedAs: false
      internalMethodName: "getDefaultValue"
    - lineNumber: 138
      expression: "catch-exception (ConversionException)"
      range: "(138,3)-(138,31)"
      evaluatedAs: true
      internalMethodName: "convertDefaultValue"
    - lineNumber: 140
      expression: "defaultValue.length == 1"
      range: "(140,8)-(140,31)"
      evaluatedAs: false
      internalMethodName: "convertDefaultValue"
    catchBlockExercised:
      idExternalInstruction: 62
      id: 2
      catchExceptions:
      - "org.springframework.core.convert.ConversionException"
  - pathId: "path18"
    testPathName: "bindWhenDefaultValueLengthEquals1AndNotBound"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "92409F811FA3AEEFE5A8EB27D1DB22EB"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "BF25F014EB73A7427A883BFEC99E9E57"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "INPUT"
      name: "propertyBinder"
      modelFingerprint: "D423D71EE2488EF4BA88B3877F4592B8"
      valueUuid: "propertyBinder"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "B55A83216BD2168FBBACFEEC8E87C743"
      valueUuid: "target1"
      methodExercised:
        expression: "getType():type"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "839245556C80DD2528C73D5D2B32BC65"
      valueUuid: "type"
      methodExercised:
        expression: "resolve():class"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "7C5B2F325F394A7110E50B0EF36BFDB8"
      valueUuid: "context"
      methodExercised:
        expression: "pushConstructorBoundTypes(value:class):void"
    - type: "LOCAL_VARIABLE"
      name: "defaultValueAnnotation"
      modelFingerprint: "5B8DEE1C4556BFDC2E2DB4A5B6CD17E4"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "8F8A2FE8C907FEF3ED304C32EAAAD08F"
      valueUuid: "context"
      methodExercised:
        expression: "getConverter():bindConverter"
    - type: "LOCAL_VARIABLE"
      name: "converter"
      modelFingerprint: "1D190CA1F445BFCED7116C5C707EA4E2"
      valueUuid: "bindConverter"
      methodExercised:
        expression: "convert(source:stringArray,targetType:resolvableType2,targetAnnotations:annotationArray):object3"
    - type: "LOCAL_VARIABLE"
      name: "converter"
      modelFingerprint: "FFF419DABDB3AAF659EDB7662B17240F"
      valueUuid: "bindConverter"
      methodExercised:
        expression: "convert(source:string,targetType:resolvableType2,targetAnnotations:annotationArray):object4"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "86228B5E6DEDD11B36BD9CD8E8EF6FC0"
      valueUuid: "context"
      methodExercised:
        expression: "clearConfigurationProperty():void2"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "82EF10F6CA95063EBF865EBB3095B72B"
      valueUuid: "context"
      methodExercised:
        expression: "popConstructorBoundTypes():void3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B5832848421B6892B8D06BE61ADCD847"
      valueUuid: "object5"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DataObjectPropertyBinder"
      uuid: "propertyBinder"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
      uuid: "annotation"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_valueItem1"
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object3"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_valueItem1"
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
            uuid: "annotation"
      valueType: "java.lang.annotation.Annotation[]"
      uuid: "annotationArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_valueItem1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
            uuid: "annotation"
      valueType: "java.lang.annotation.Annotation[]"
      uuid: "annotationArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object5"
      fixed: true
    branches:
    - lineNumber: 76
      expression: "valueObject == null"
      range: "(76,7)-(76,25)"
      evaluatedAs: false
    - lineNumber: 83
      expression: "for-each(parameters)"
      range: "(83,41)-(83,50)"
      evaluatedAs: true
    - lineNumber: 85
      expression: "bound"
      range: "(85,12)-(85,16)"
      evaluatedAs: false
    - lineNumber: 85
      expression: "arg != null"
      range: "(85,21)-(85,31)"
      evaluatedAs: false
    - lineNumber: 86
      expression: "arg != null"
      range: "(86,11)-(86,21)"
      evaluatedAs: false
    - lineNumber: 121
      expression: "for-each(annotations)"
      range: "(121,32)-(121,42)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 122
      expression: "annotation instanceof DefaultValue defaultValueAnnotation"
      range: "(122,8)-(122,64)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 124
      expression: "defaultValue.length == 0"
      range: "(124,9)-(124,32)"
      evaluatedAs: false
      internalMethodName: "getDefaultValue"
    - lineNumber: 138
      expression: "catch-exception (ConversionException)"
      range: "(138,3)-(138,31)"
      evaluatedAs: true
      internalMethodName: "convertDefaultValue"
    - lineNumber: 140
      expression: "defaultValue.length == 1"
      range: "(140,8)-(140,31)"
      evaluatedAs: true
      internalMethodName: "convertDefaultValue"
    - lineNumber: 91
      expression: "bound"
      range: "(91,10)-(91,14)"
      evaluatedAs: false
    catchBlockExercised:
      idExternalInstruction: 62
      id: 2
      catchExceptions:
      - "org.springframework.core.convert.ConversionException"
  - pathId: "path14"
    testPathName: "bindWhenResolvedIsNullAndNotBound"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "28CE37D45CA39978C3A41D99444E9374"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "BF25F014EB73A7427A883BFEC99E9E57"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "INPUT"
      name: "propertyBinder"
      modelFingerprint: "D423D71EE2488EF4BA88B3877F4592B8"
      valueUuid: "propertyBinder"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "B55A83216BD2168FBBACFEEC8E87C743"
      valueUuid: "target1"
      methodExercised:
        expression: "getType():type"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "839245556C80DD2528C73D5D2B32BC65"
      valueUuid: "type"
      methodExercised:
        expression: "resolve():class"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "7C5B2F325F394A7110E50B0EF36BFDB8"
      valueUuid: "context"
      methodExercised:
        expression: "pushConstructorBoundTypes(value:class):void"
    - type: "LOCAL_VARIABLE"
      name: "defaultValueAnnotation"
      modelFingerprint: "33C4EF6D00C852D896C2ED6DD67A0127"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "type"
      modelFingerprint: "DAFACB8741AAD9FE4AB02D553D6ECB16"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "resolve():class2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A7F96A6DD09FE22FCDF20C3F86F6C17"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:uniqueUuid1,messageSupplier:uniqueUuid2):void2"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "3CE43667D6F74AC78251E997A6F9BB47"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:resolvableType2):bindable"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "351B937C5B7E16BCD87751FDEBCAF800"
      methodExercised:
        expression: "create(target:bindable,context:context):object3"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "86228B5E6DEDD11B36BD9CD8E8EF6FC0"
      valueUuid: "context"
      methodExercised:
        expression: "clearConfigurationProperty():void3"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "82EF10F6CA95063EBF865EBB3095B72B"
      valueUuid: "context"
      methodExercised:
        expression: "popConstructorBoundTypes():void4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B5832848421B6892B8D06BE61ADCD847"
      valueUuid: "object5"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DataObjectPropertyBinder"
      uuid: "propertyBinder"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
      uuid: "annotation"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object5"
      fixed: true
    branches:
    - lineNumber: 76
      expression: "valueObject == null"
      range: "(76,7)-(76,25)"
      evaluatedAs: false
    - lineNumber: 83
      expression: "for-each(parameters)"
      range: "(83,41)-(83,50)"
      evaluatedAs: true
    - lineNumber: 85
      expression: "bound"
      range: "(85,12)-(85,16)"
      evaluatedAs: false
    - lineNumber: 85
      expression: "arg != null"
      range: "(85,21)-(85,31)"
      evaluatedAs: false
    - lineNumber: 86
      expression: "arg != null"
      range: "(86,11)-(86,21)"
      evaluatedAs: false
    - lineNumber: 121
      expression: "for-each(annotations)"
      range: "(121,32)-(121,42)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 122
      expression: "annotation instanceof DefaultValue defaultValueAnnotation"
      range: "(122,8)-(122,64)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 124
      expression: "defaultValue.length == 0"
      range: "(124,9)-(124,32)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 150
      expression: "resolved == null"
      range: "(150,16)-(150,31)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 152
      expression: "resolved != null"
      range: "(152,7)-(152,22)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 167
      expression: "instance != null"
      range: "(167,7)-(167,22)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 170
      expression: "resolved != null"
      range: "(170,11)-(170,26)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 91
      expression: "bound"
      range: "(91,10)-(91,14)"
      evaluatedAs: false
  - pathId: "path3"
    testPathName: "bindWhenResolvedIsNotNullAndOptionalEqualsResolvedAndNotBound"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "6817C79B63E6C80F8E873B301340C81A"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "BF25F014EB73A7427A883BFEC99E9E57"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "INPUT"
      name: "propertyBinder"
      modelFingerprint: "D423D71EE2488EF4BA88B3877F4592B8"
      valueUuid: "propertyBinder"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "B55A83216BD2168FBBACFEEC8E87C743"
      valueUuid: "target1"
      methodExercised:
        expression: "getType():type"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "839245556C80DD2528C73D5D2B32BC65"
      valueUuid: "type"
      methodExercised:
        expression: "resolve():class"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "7C5B2F325F394A7110E50B0EF36BFDB8"
      valueUuid: "context"
      methodExercised:
        expression: "pushConstructorBoundTypes(value:class):void"
    - type: "LOCAL_VARIABLE"
      name: "defaultValueAnnotation"
      modelFingerprint: "33C4EF6D00C852D896C2ED6DD67A0127"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "type"
      modelFingerprint: "5EEF274B5B4145787EDDD17F39A66151"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "resolve():uniqueUuid3"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A7F96A6DD09FE22FCDF20C3F86F6C17"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:uniqueUuid4,messageSupplier:uniqueUuid5):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "86228B5E6DEDD11B36BD9CD8E8EF6FC0"
      valueUuid: "context"
      methodExercised:
        expression: "clearConfigurationProperty():void3"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "82EF10F6CA95063EBF865EBB3095B72B"
      valueUuid: "context"
      methodExercised:
        expression: "popConstructorBoundTypes():void4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B5832848421B6892B8D06BE61ADCD847"
      valueUuid: "object3"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DataObjectPropertyBinder"
      uuid: "propertyBinder"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
      uuid: "annotation"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.util.Optional"
      valueType: "java.lang.Class"
      genericValueType: "java.util.Optional"
      uuid: "uniqueUuid3"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object3"
      fixed: true
    branches:
    - lineNumber: 76
      expression: "valueObject == null"
      range: "(76,7)-(76,25)"
      evaluatedAs: false
    - lineNumber: 83
      expression: "for-each(parameters)"
      range: "(83,41)-(83,50)"
      evaluatedAs: true
    - lineNumber: 85
      expression: "bound"
      range: "(85,12)-(85,16)"
      evaluatedAs: false
    - lineNumber: 85
      expression: "arg != null"
      range: "(85,21)-(85,31)"
      evaluatedAs: false
    - lineNumber: 86
      expression: "arg != null"
      range: "(86,11)-(86,21)"
      evaluatedAs: false
    - lineNumber: 121
      expression: "for-each(annotations)"
      range: "(121,32)-(121,42)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 122
      expression: "annotation instanceof DefaultValue defaultValueAnnotation"
      range: "(122,8)-(122,64)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 124
      expression: "defaultValue.length == 0"
      range: "(124,9)-(124,32)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 150
      expression: "resolved == null"
      range: "(150,16)-(150,31)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 174
      expression: "Optional.class == type"
      range: "(174,11)-(174,32)"
      evaluatedAs: false
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 179
      expression: "type.isArray()"
      range: "(179,10)-(179,23)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Map.class.isAssignableFrom(type)"
      range: "(179,28)-(179,59)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Collection.class.isAssignableFrom(type)"
      range: "(179,64)-(179,102)"
      evaluatedAs: true
      internalMethodName: "isAggregate"
    - lineNumber: 174
      expression: "isAggregate(type)"
      range: "(174,37)-(174,53)"
      evaluatedAs: true
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 150
      expression: "isEmptyDefaultValueAllowed(resolved)"
      range: "(150,36)-(150,71)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 152
      expression: "resolved != null"
      range: "(152,7)-(152,22)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 153
      expression: "Optional.class == resolved"
      range: "(153,8)-(153,33)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 91
      expression: "bound"
      range: "(91,10)-(91,14)"
      evaluatedAs: false
  - pathId: "path4"
    testPathName: "bindWhenCollectionIsAssignableFromResolvedAndNotBound"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "D42A8FD17120259F0AD4C831F58890D2"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "BF25F014EB73A7427A883BFEC99E9E57"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "INPUT"
      name: "propertyBinder"
      modelFingerprint: "D423D71EE2488EF4BA88B3877F4592B8"
      valueUuid: "propertyBinder"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "B55A83216BD2168FBBACFEEC8E87C743"
      valueUuid: "target1"
      methodExercised:
        expression: "getType():type"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "839245556C80DD2528C73D5D2B32BC65"
      valueUuid: "type"
      methodExercised:
        expression: "resolve():class"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "7C5B2F325F394A7110E50B0EF36BFDB8"
      valueUuid: "context"
      methodExercised:
        expression: "pushConstructorBoundTypes(value:class):void"
    - type: "LOCAL_VARIABLE"
      name: "defaultValueAnnotation"
      modelFingerprint: "33C4EF6D00C852D896C2ED6DD67A0127"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "type"
      modelFingerprint: "68C3A74A10057CD59145CFF1D0F03E06"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "resolve():class2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A7F96A6DD09FE22FCDF20C3F86F6C17"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:uniqueUuid6,messageSupplier:uniqueUuid7):void2"
        staticAccess: true
    - type: "STATIC"
      name: "CollectionFactory.class"
      modelFingerprint: "D4180D3110A50B109A17B59060CF3489"
      valueUuid: "CollectionFactory.class"
      methodExercised:
        expression: "createCollection(collectionType:class2,capacity:uniqueUuid8):collection"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "86228B5E6DEDD11B36BD9CD8E8EF6FC0"
      valueUuid: "context"
      methodExercised:
        expression: "clearConfigurationProperty():void3"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "82EF10F6CA95063EBF865EBB3095B72B"
      valueUuid: "context"
      methodExercised:
        expression: "popConstructorBoundTypes():void4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B5832848421B6892B8D06BE61ADCD847"
      valueUuid: "object3"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DataObjectPropertyBinder"
      uuid: "propertyBinder"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
      uuid: "annotation"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "class2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid7"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.CollectionFactory"
      uuid: "CollectionFactory.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      uuid: "collection"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "class2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object3"
      fixed: true
    branches:
    - lineNumber: 76
      expression: "valueObject == null"
      range: "(76,7)-(76,25)"
      evaluatedAs: false
    - lineNumber: 83
      expression: "for-each(parameters)"
      range: "(83,41)-(83,50)"
      evaluatedAs: true
    - lineNumber: 85
      expression: "bound"
      range: "(85,12)-(85,16)"
      evaluatedAs: false
    - lineNumber: 85
      expression: "arg != null"
      range: "(85,21)-(85,31)"
      evaluatedAs: false
    - lineNumber: 86
      expression: "arg != null"
      range: "(86,11)-(86,21)"
      evaluatedAs: false
    - lineNumber: 121
      expression: "for-each(annotations)"
      range: "(121,32)-(121,42)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 122
      expression: "annotation instanceof DefaultValue defaultValueAnnotation"
      range: "(122,8)-(122,64)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 124
      expression: "defaultValue.length == 0"
      range: "(124,9)-(124,32)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 150
      expression: "resolved == null"
      range: "(150,16)-(150,31)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 174
      expression: "Optional.class == type"
      range: "(174,11)-(174,32)"
      evaluatedAs: false
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 179
      expression: "type.isArray()"
      range: "(179,10)-(179,23)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Map.class.isAssignableFrom(type)"
      range: "(179,28)-(179,59)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Collection.class.isAssignableFrom(type)"
      range: "(179,64)-(179,102)"
      evaluatedAs: true
      internalMethodName: "isAggregate"
    - lineNumber: 174
      expression: "isAggregate(type)"
      range: "(174,37)-(174,53)"
      evaluatedAs: true
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 150
      expression: "isEmptyDefaultValueAllowed(resolved)"
      range: "(150,36)-(150,71)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 152
      expression: "resolved != null"
      range: "(152,7)-(152,22)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 153
      expression: "Optional.class == resolved"
      range: "(153,8)-(153,33)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 156
      expression: "Collection.class.isAssignableFrom(resolved)"
      range: "(156,8)-(156,50)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 91
      expression: "bound"
      range: "(91,10)-(91,14)"
      evaluatedAs: false
  - pathId: "path5"
    testPathName: "bindWhenMapIsAssignableFromResolvedAndNotBound"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "FDE03B372A255018CEB301180E83076D"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "BF25F014EB73A7427A883BFEC99E9E57"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "INPUT"
      name: "propertyBinder"
      modelFingerprint: "D423D71EE2488EF4BA88B3877F4592B8"
      valueUuid: "propertyBinder"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "B55A83216BD2168FBBACFEEC8E87C743"
      valueUuid: "target1"
      methodExercised:
        expression: "getType():type"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "839245556C80DD2528C73D5D2B32BC65"
      valueUuid: "type"
      methodExercised:
        expression: "resolve():class"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "7C5B2F325F394A7110E50B0EF36BFDB8"
      valueUuid: "context"
      methodExercised:
        expression: "pushConstructorBoundTypes(value:class):void"
    - type: "LOCAL_VARIABLE"
      name: "defaultValueAnnotation"
      modelFingerprint: "33C4EF6D00C852D896C2ED6DD67A0127"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "type"
      modelFingerprint: "68C3A74A10057CD59145CFF1D0F03E06"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "resolve():class2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A7F96A6DD09FE22FCDF20C3F86F6C17"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:uniqueUuid9,messageSupplier:uniqueUuid10):void2"
        staticAccess: true
    - type: "STATIC"
      name: "CollectionFactory.class"
      modelFingerprint: "209D0924AA41665A15FAB227F714E9C8"
      valueUuid: "CollectionFactory.class"
      methodExercised:
        expression: "createMap(mapType:class2,capacity:uniqueUuid11):map"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "86228B5E6DEDD11B36BD9CD8E8EF6FC0"
      valueUuid: "context"
      methodExercised:
        expression: "clearConfigurationProperty():void3"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "82EF10F6CA95063EBF865EBB3095B72B"
      valueUuid: "context"
      methodExercised:
        expression: "popConstructorBoundTypes():void4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B5832848421B6892B8D06BE61ADCD847"
      valueUuid: "object3"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DataObjectPropertyBinder"
      uuid: "propertyBinder"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
      uuid: "annotation"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "class2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid10"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.CollectionFactory"
      uuid: "CollectionFactory.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      uuid: "map"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "class2"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object3"
      fixed: true
    branches:
    - lineNumber: 76
      expression: "valueObject == null"
      range: "(76,7)-(76,25)"
      evaluatedAs: false
    - lineNumber: 83
      expression: "for-each(parameters)"
      range: "(83,41)-(83,50)"
      evaluatedAs: true
    - lineNumber: 85
      expression: "bound"
      range: "(85,12)-(85,16)"
      evaluatedAs: false
    - lineNumber: 85
      expression: "arg != null"
      range: "(85,21)-(85,31)"
      evaluatedAs: false
    - lineNumber: 86
      expression: "arg != null"
      range: "(86,11)-(86,21)"
      evaluatedAs: false
    - lineNumber: 121
      expression: "for-each(annotations)"
      range: "(121,32)-(121,42)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 122
      expression: "annotation instanceof DefaultValue defaultValueAnnotation"
      range: "(122,8)-(122,64)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 124
      expression: "defaultValue.length == 0"
      range: "(124,9)-(124,32)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 150
      expression: "resolved == null"
      range: "(150,16)-(150,31)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 174
      expression: "Optional.class == type"
      range: "(174,11)-(174,32)"
      evaluatedAs: false
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 179
      expression: "type.isArray()"
      range: "(179,10)-(179,23)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Map.class.isAssignableFrom(type)"
      range: "(179,28)-(179,59)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Collection.class.isAssignableFrom(type)"
      range: "(179,64)-(179,102)"
      evaluatedAs: true
      internalMethodName: "isAggregate"
    - lineNumber: 174
      expression: "isAggregate(type)"
      range: "(174,37)-(174,53)"
      evaluatedAs: true
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 150
      expression: "isEmptyDefaultValueAllowed(resolved)"
      range: "(150,36)-(150,71)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 152
      expression: "resolved != null"
      range: "(152,7)-(152,22)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 153
      expression: "Optional.class == resolved"
      range: "(153,8)-(153,33)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 156
      expression: "Collection.class.isAssignableFrom(resolved)"
      range: "(156,8)-(156,50)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 159
      expression: "Map.class.isAssignableFrom(resolved)"
      range: "(159,8)-(159,43)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 91
      expression: "bound"
      range: "(91,10)-(91,14)"
      evaluatedAs: false
  - pathId: "path6"
    testPathName: "bindWhenResolvedIsArrayAndNotBound"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "D437CCD8D4C51A9EA98C4A183A1FBF1E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "BF25F014EB73A7427A883BFEC99E9E57"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "INPUT"
      name: "propertyBinder"
      modelFingerprint: "D423D71EE2488EF4BA88B3877F4592B8"
      valueUuid: "propertyBinder"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "B55A83216BD2168FBBACFEEC8E87C743"
      valueUuid: "target1"
      methodExercised:
        expression: "getType():type"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "839245556C80DD2528C73D5D2B32BC65"
      valueUuid: "type"
      methodExercised:
        expression: "resolve():class"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "7C5B2F325F394A7110E50B0EF36BFDB8"
      valueUuid: "context"
      methodExercised:
        expression: "pushConstructorBoundTypes(value:class):void"
    - type: "LOCAL_VARIABLE"
      name: "defaultValueAnnotation"
      modelFingerprint: "33C4EF6D00C852D896C2ED6DD67A0127"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "type"
      modelFingerprint: "68C3A74A10057CD59145CFF1D0F03E06"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "resolve():class2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A7F96A6DD09FE22FCDF20C3F86F6C17"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:uniqueUuid12,messageSupplier:uniqueUuid13):void2"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "86228B5E6DEDD11B36BD9CD8E8EF6FC0"
      valueUuid: "context"
      methodExercised:
        expression: "clearConfigurationProperty():void3"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "82EF10F6CA95063EBF865EBB3095B72B"
      valueUuid: "context"
      methodExercised:
        expression: "popConstructorBoundTypes():void4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B5832848421B6892B8D06BE61ADCD847"
      valueUuid: "object4"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DataObjectPropertyBinder"
      uuid: "propertyBinder"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
      uuid: "annotation"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "class2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid12"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid13"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object4"
      fixed: true
    branches:
    - lineNumber: 76
      expression: "valueObject == null"
      range: "(76,7)-(76,25)"
      evaluatedAs: false
    - lineNumber: 83
      expression: "for-each(parameters)"
      range: "(83,41)-(83,50)"
      evaluatedAs: true
    - lineNumber: 85
      expression: "bound"
      range: "(85,12)-(85,16)"
      evaluatedAs: false
    - lineNumber: 85
      expression: "arg != null"
      range: "(85,21)-(85,31)"
      evaluatedAs: false
    - lineNumber: 86
      expression: "arg != null"
      range: "(86,11)-(86,21)"
      evaluatedAs: false
    - lineNumber: 121
      expression: "for-each(annotations)"
      range: "(121,32)-(121,42)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 122
      expression: "annotation instanceof DefaultValue defaultValueAnnotation"
      range: "(122,8)-(122,64)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 124
      expression: "defaultValue.length == 0"
      range: "(124,9)-(124,32)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 150
      expression: "resolved == null"
      range: "(150,16)-(150,31)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 174
      expression: "Optional.class == type"
      range: "(174,11)-(174,32)"
      evaluatedAs: false
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 179
      expression: "type.isArray()"
      range: "(179,10)-(179,23)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Map.class.isAssignableFrom(type)"
      range: "(179,28)-(179,59)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Collection.class.isAssignableFrom(type)"
      range: "(179,64)-(179,102)"
      evaluatedAs: true
      internalMethodName: "isAggregate"
    - lineNumber: 174
      expression: "isAggregate(type)"
      range: "(174,37)-(174,53)"
      evaluatedAs: true
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 150
      expression: "isEmptyDefaultValueAllowed(resolved)"
      range: "(150,36)-(150,71)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 152
      expression: "resolved != null"
      range: "(152,7)-(152,22)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 153
      expression: "Optional.class == resolved"
      range: "(153,8)-(153,33)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 156
      expression: "Collection.class.isAssignableFrom(resolved)"
      range: "(156,8)-(156,50)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 159
      expression: "Map.class.isAssignableFrom(resolved)"
      range: "(159,8)-(159,43)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 162
      expression: "resolved.isArray()"
      range: "(162,8)-(162,25)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 91
      expression: "bound"
      range: "(91,10)-(91,14)"
      evaluatedAs: false
  - pathId: "path7"
    testPathName: "bindWhenResolvedNotIsArrayAndInstanceIsNotNullAndNotBound"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "6DA21DE18D30C9B8F475F866A2043A8F"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "BF25F014EB73A7427A883BFEC99E9E57"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "INPUT"
      name: "propertyBinder"
      modelFingerprint: "D423D71EE2488EF4BA88B3877F4592B8"
      valueUuid: "propertyBinder"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "B55A83216BD2168FBBACFEEC8E87C743"
      valueUuid: "target1"
      methodExercised:
        expression: "getType():type"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "839245556C80DD2528C73D5D2B32BC65"
      valueUuid: "type"
      methodExercised:
        expression: "resolve():class"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "7C5B2F325F394A7110E50B0EF36BFDB8"
      valueUuid: "context"
      methodExercised:
        expression: "pushConstructorBoundTypes(value:class):void"
    - type: "LOCAL_VARIABLE"
      name: "defaultValueAnnotation"
      modelFingerprint: "33C4EF6D00C852D896C2ED6DD67A0127"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "type"
      modelFingerprint: "68C3A74A10057CD59145CFF1D0F03E06"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "resolve():class2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A7F96A6DD09FE22FCDF20C3F86F6C17"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:uniqueUuid14,messageSupplier:uniqueUuid15):void2"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "3CE43667D6F74AC78251E997A6F9BB47"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:resolvableType2):bindable"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "985B519464FBC989A9FCADF555F8E340"
      methodExercised:
        expression: "create(target:bindable,context:context):object3"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "86228B5E6DEDD11B36BD9CD8E8EF6FC0"
      valueUuid: "context"
      methodExercised:
        expression: "clearConfigurationProperty():void3"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "82EF10F6CA95063EBF865EBB3095B72B"
      valueUuid: "context"
      methodExercised:
        expression: "popConstructorBoundTypes():void4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B5832848421B6892B8D06BE61ADCD847"
      valueUuid: "object4"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DataObjectPropertyBinder"
      uuid: "propertyBinder"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
      uuid: "annotation"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "class2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid14"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid15"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object4"
      fixed: true
    branches:
    - lineNumber: 76
      expression: "valueObject == null"
      range: "(76,7)-(76,25)"
      evaluatedAs: false
    - lineNumber: 83
      expression: "for-each(parameters)"
      range: "(83,41)-(83,50)"
      evaluatedAs: true
    - lineNumber: 85
      expression: "bound"
      range: "(85,12)-(85,16)"
      evaluatedAs: false
    - lineNumber: 85
      expression: "arg != null"
      range: "(85,21)-(85,31)"
      evaluatedAs: false
    - lineNumber: 86
      expression: "arg != null"
      range: "(86,11)-(86,21)"
      evaluatedAs: false
    - lineNumber: 121
      expression: "for-each(annotations)"
      range: "(121,32)-(121,42)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 122
      expression: "annotation instanceof DefaultValue defaultValueAnnotation"
      range: "(122,8)-(122,64)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 124
      expression: "defaultValue.length == 0"
      range: "(124,9)-(124,32)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 150
      expression: "resolved == null"
      range: "(150,16)-(150,31)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 174
      expression: "Optional.class == type"
      range: "(174,11)-(174,32)"
      evaluatedAs: false
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 179
      expression: "type.isArray()"
      range: "(179,10)-(179,23)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Map.class.isAssignableFrom(type)"
      range: "(179,28)-(179,59)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Collection.class.isAssignableFrom(type)"
      range: "(179,64)-(179,102)"
      evaluatedAs: true
      internalMethodName: "isAggregate"
    - lineNumber: 174
      expression: "isAggregate(type)"
      range: "(174,37)-(174,53)"
      evaluatedAs: true
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 150
      expression: "isEmptyDefaultValueAllowed(resolved)"
      range: "(150,36)-(150,71)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 152
      expression: "resolved != null"
      range: "(152,7)-(152,22)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 153
      expression: "Optional.class == resolved"
      range: "(153,8)-(153,33)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 156
      expression: "Collection.class.isAssignableFrom(resolved)"
      range: "(156,8)-(156,50)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 159
      expression: "Map.class.isAssignableFrom(resolved)"
      range: "(159,8)-(159,43)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 162
      expression: "resolved.isArray()"
      range: "(162,8)-(162,25)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 167
      expression: "instance != null"
      range: "(167,7)-(167,22)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 91
      expression: "bound"
      range: "(91,10)-(91,14)"
      evaluatedAs: false
  - pathId: "path10"
    testPathName: "bindWhenResolvedNotIsArrayAndInstanceIsNullAndResolvedIsNotNullAndNotBound"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "C28D548A18413E6BCA76BC8AAF30BFC5"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "BF25F014EB73A7427A883BFEC99E9E57"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "INPUT"
      name: "propertyBinder"
      modelFingerprint: "D423D71EE2488EF4BA88B3877F4592B8"
      valueUuid: "propertyBinder"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "B55A83216BD2168FBBACFEEC8E87C743"
      valueUuid: "target1"
      methodExercised:
        expression: "getType():type"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "839245556C80DD2528C73D5D2B32BC65"
      valueUuid: "type"
      methodExercised:
        expression: "resolve():class"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "7C5B2F325F394A7110E50B0EF36BFDB8"
      valueUuid: "context"
      methodExercised:
        expression: "pushConstructorBoundTypes(value:class):void"
    - type: "LOCAL_VARIABLE"
      name: "defaultValueAnnotation"
      modelFingerprint: "33C4EF6D00C852D896C2ED6DD67A0127"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "type"
      modelFingerprint: "E1C7982BC2C1E6629DCEB9FE83B31A45"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "resolve():class2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "6D5FB5022FA0F8747855BBB24780A9DB"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:uniqueUuid16,messageSupplier:uniqueUuid17):void2"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "3CE43667D6F74AC78251E997A6F9BB47"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:resolvableType2):bindable"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "351B937C5B7E16BCD87751FDEBCAF800"
      methodExercised:
        expression: "create(target:bindable,context:context):object3"
    - type: "STATIC"
      name: "BeanUtils.class"
      modelFingerprint: "E4FF2365C457C11B8587521D338F4374"
      valueUuid: "BeanUtils.class"
      methodExercised:
        expression: "instantiateClass(clazz:class2):object4"
        throwsExceptions:
        - "org.springframework.beans.BeanInstantiationException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "86228B5E6DEDD11B36BD9CD8E8EF6FC0"
      valueUuid: "context"
      methodExercised:
        expression: "clearConfigurationProperty():void3"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "82EF10F6CA95063EBF865EBB3095B72B"
      valueUuid: "context"
      methodExercised:
        expression: "popConstructorBoundTypes():void4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B5832848421B6892B8D06BE61ADCD847"
      valueUuid: "object5"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DataObjectPropertyBinder"
      uuid: "propertyBinder"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
      uuid: "annotation"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "class2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid16"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid17"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.BeanUtils"
      uuid: "BeanUtils.class"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "class2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object5"
      fixed: true
    branches:
    - lineNumber: 76
      expression: "valueObject == null"
      range: "(76,7)-(76,25)"
      evaluatedAs: false
    - lineNumber: 83
      expression: "for-each(parameters)"
      range: "(83,41)-(83,50)"
      evaluatedAs: true
    - lineNumber: 85
      expression: "bound"
      range: "(85,12)-(85,16)"
      evaluatedAs: false
    - lineNumber: 85
      expression: "arg != null"
      range: "(85,21)-(85,31)"
      evaluatedAs: false
    - lineNumber: 86
      expression: "arg != null"
      range: "(86,11)-(86,21)"
      evaluatedAs: false
    - lineNumber: 121
      expression: "for-each(annotations)"
      range: "(121,32)-(121,42)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 122
      expression: "annotation instanceof DefaultValue defaultValueAnnotation"
      range: "(122,8)-(122,64)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 124
      expression: "defaultValue.length == 0"
      range: "(124,9)-(124,32)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 150
      expression: "resolved == null"
      range: "(150,16)-(150,31)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 174
      expression: "Optional.class == type"
      range: "(174,11)-(174,32)"
      evaluatedAs: false
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 179
      expression: "type.isArray()"
      range: "(179,10)-(179,23)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Map.class.isAssignableFrom(type)"
      range: "(179,28)-(179,59)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Collection.class.isAssignableFrom(type)"
      range: "(179,64)-(179,102)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 174
      expression: "isAggregate(type)"
      range: "(174,37)-(174,53)"
      evaluatedAs: false
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 175
      expression: "!(type.isPrimitive() || type.isEnum() || type.getName().startsWith(\\\
        \"java.lang\\\"))"
      range: "(175,8)-(175,87)"
      evaluatedAs: true
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 175
      expression: "type.isPrimitive()"
      range: "(175,10)-(175,27)"
      evaluatedAs: false
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 175
      expression: "type.isEnum()"
      range: "(175,32)-(175,44)"
      evaluatedAs: true
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 150
      expression: "isEmptyDefaultValueAllowed(resolved)"
      range: "(150,36)-(150,71)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 152
      expression: "resolved != null"
      range: "(152,7)-(152,22)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 153
      expression: "Optional.class == resolved"
      range: "(153,8)-(153,33)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 156
      expression: "Collection.class.isAssignableFrom(resolved)"
      range: "(156,8)-(156,50)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 159
      expression: "Map.class.isAssignableFrom(resolved)"
      range: "(159,8)-(159,43)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 162
      expression: "resolved.isArray()"
      range: "(162,8)-(162,25)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 167
      expression: "instance != null"
      range: "(167,7)-(167,22)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 170
      expression: "resolved != null"
      range: "(170,11)-(170,26)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 91
      expression: "bound"
      range: "(91,10)-(91,14)"
      evaluatedAs: false
  - pathId: "path9"
    testPathName: "bindWhenMapNotIsAssignableFromResolvedAndResolvedNotIsArrayAndInstanceIsNullAndResolvedIsNotNullAndNotBound"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "9AC23E26A7BF11A17BFEC290FBDAE0E0"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "BF25F014EB73A7427A883BFEC99E9E57"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "INPUT"
      name: "propertyBinder"
      modelFingerprint: "D423D71EE2488EF4BA88B3877F4592B8"
      valueUuid: "propertyBinder"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "B55A83216BD2168FBBACFEEC8E87C743"
      valueUuid: "target1"
      methodExercised:
        expression: "getType():type"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "839245556C80DD2528C73D5D2B32BC65"
      valueUuid: "type"
      methodExercised:
        expression: "resolve():class"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "7C5B2F325F394A7110E50B0EF36BFDB8"
      valueUuid: "context"
      methodExercised:
        expression: "pushConstructorBoundTypes(value:class):void"
    - type: "LOCAL_VARIABLE"
      name: "defaultValueAnnotation"
      modelFingerprint: "33C4EF6D00C852D896C2ED6DD67A0127"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "type"
      modelFingerprint: "E1C7982BC2C1E6629DCEB9FE83B31A45"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "resolve():class2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A7F96A6DD09FE22FCDF20C3F86F6C17"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:uniqueUuid18,messageSupplier:uniqueUuid19):void2"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "3CE43667D6F74AC78251E997A6F9BB47"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:resolvableType2):bindable"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "351B937C5B7E16BCD87751FDEBCAF800"
      methodExercised:
        expression: "create(target:bindable,context:context):object3"
    - type: "STATIC"
      name: "BeanUtils.class"
      modelFingerprint: "E4FF2365C457C11B8587521D338F4374"
      valueUuid: "BeanUtils.class"
      methodExercised:
        expression: "instantiateClass(clazz:class2):object4"
        throwsExceptions:
        - "org.springframework.beans.BeanInstantiationException"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "86228B5E6DEDD11B36BD9CD8E8EF6FC0"
      valueUuid: "context"
      methodExercised:
        expression: "clearConfigurationProperty():void3"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "82EF10F6CA95063EBF865EBB3095B72B"
      valueUuid: "context"
      methodExercised:
        expression: "popConstructorBoundTypes():void4"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B5832848421B6892B8D06BE61ADCD847"
      valueUuid: "object5"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DataObjectPropertyBinder"
      uuid: "propertyBinder"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
      uuid: "annotation"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "class2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid18"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid19"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.BeanUtils"
      uuid: "BeanUtils.class"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "class2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object5"
      fixed: true
    branches:
    - lineNumber: 76
      expression: "valueObject == null"
      range: "(76,7)-(76,25)"
      evaluatedAs: false
    - lineNumber: 83
      expression: "for-each(parameters)"
      range: "(83,41)-(83,50)"
      evaluatedAs: true
    - lineNumber: 85
      expression: "bound"
      range: "(85,12)-(85,16)"
      evaluatedAs: false
    - lineNumber: 85
      expression: "arg != null"
      range: "(85,21)-(85,31)"
      evaluatedAs: false
    - lineNumber: 86
      expression: "arg != null"
      range: "(86,11)-(86,21)"
      evaluatedAs: false
    - lineNumber: 121
      expression: "for-each(annotations)"
      range: "(121,32)-(121,42)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 122
      expression: "annotation instanceof DefaultValue defaultValueAnnotation"
      range: "(122,8)-(122,64)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 124
      expression: "defaultValue.length == 0"
      range: "(124,9)-(124,32)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 150
      expression: "resolved == null"
      range: "(150,16)-(150,31)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 174
      expression: "Optional.class == type"
      range: "(174,11)-(174,32)"
      evaluatedAs: false
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 179
      expression: "type.isArray()"
      range: "(179,10)-(179,23)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Map.class.isAssignableFrom(type)"
      range: "(179,28)-(179,59)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Collection.class.isAssignableFrom(type)"
      range: "(179,64)-(179,102)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 174
      expression: "isAggregate(type)"
      range: "(174,37)-(174,53)"
      evaluatedAs: false
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 175
      expression: "!(type.isPrimitive() || type.isEnum() || type.getName().startsWith(\\\
        \"java.lang\\\"))"
      range: "(175,8)-(175,87)"
      evaluatedAs: true
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 175
      expression: "type.isPrimitive()"
      range: "(175,10)-(175,27)"
      evaluatedAs: false
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 175
      expression: "type.isEnum()"
      range: "(175,32)-(175,44)"
      evaluatedAs: false
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 150
      expression: "isEmptyDefaultValueAllowed(resolved)"
      range: "(150,36)-(150,71)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 152
      expression: "resolved != null"
      range: "(152,7)-(152,22)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 153
      expression: "Optional.class == resolved"
      range: "(153,8)-(153,33)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 156
      expression: "Collection.class.isAssignableFrom(resolved)"
      range: "(156,8)-(156,50)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 159
      expression: "Map.class.isAssignableFrom(resolved)"
      range: "(159,8)-(159,43)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 162
      expression: "resolved.isArray()"
      range: "(162,8)-(162,25)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 167
      expression: "instance != null"
      range: "(167,7)-(167,22)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 170
      expression: "resolved != null"
      range: "(170,11)-(170,26)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 91
      expression: "bound"
      range: "(91,10)-(91,14)"
      evaluatedAs: false
- method:
    name: "create"
    sourceCodeSignature: "<T> T create(Bindable<T> target, Binder.Context context)"
    returnType: "java.lang.Object"
    parameters:
    - name: "target"
      type: "org.springframework.boot.context.properties.bind.Bindable"
    - name: "context"
      type: "org.springframework.boot.context.properties.bind.Binder$Context"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "org.springframework.core.convert.ConversionException"
    instructionFingerprint: "3FAE5A5C23CA470E1427621C21DEF812"
  paths:
  - pathId: "path1"
    testPathName: "createWhenValueObjectIsNull"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "919C93B43B85E2FED83C0D5AF5DC1E1C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "5776B76502D7DF1101091C7784082AA2"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B5832848421B6892B8D06BE61ADCD847"
      valueUuid: "object"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "target1-instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object"
      fixed: true
    branches:
    - lineNumber: 97
      expression: "valueObject == null"
      range: "(97,7)-(97,25)"
      evaluatedAs: true
  - pathId: "path15"
    testPathName: "createWhenAnnotationNotInstanceOfDefaultValue"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "84A161AD33D6C439BAA80F8BBE690D3E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "5776B76502D7DF1101091C7784082AA2"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object3"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "target1-instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object3"
    branches:
    - lineNumber: 97
      expression: "valueObject == null"
      range: "(97,7)-(97,25)"
      evaluatedAs: false
    - lineNumber: 102
      expression: "for-each(parameters)"
      range: "(102,41)-(102,50)"
      evaluatedAs: true
    - lineNumber: 121
      expression: "for-each(annotations)"
      range: "(121,32)-(121,42)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 122
      expression: "annotation instanceof DefaultValue defaultValueAnnotation"
      range: "(122,8)-(122,64)"
      evaluatedAs: false
      internalMethodName: "getDefaultValue"
  - pathId: "path14"
    testPathName: "createWhenDefaultValueLengthNotEquals0"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "FAE0F1D82C8F1C0F507BB7DC6BE4060B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "5776B76502D7DF1101091C7784082AA2"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "LOCAL_VARIABLE"
      name: "defaultValueAnnotation"
      modelFingerprint: "5B8DEE1C4556BFDC2E2DB4A5B6CD17E4"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "8F8A2FE8C907FEF3ED304C32EAAAD08F"
      valueUuid: "context"
      methodExercised:
        expression: "getConverter():bindConverter"
    - type: "LOCAL_VARIABLE"
      name: "converter"
      modelFingerprint: "1D190CA1F445BFCED7116C5C707EA4E2"
      valueUuid: "bindConverter"
      methodExercised:
        expression: "convert(source:stringArray,targetType:resolvableType,targetAnnotations:annotationArray):object2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object3"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "target1-instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
      uuid: "annotation"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_valueItem1"
            valueType: "java.lang.String"
            uuid: "stringArrayItem0"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_valueItem1"
            valueType: "java.lang.String"
            uuid: "stringArrayItem0"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
            uuid: "annotation"
      valueType: "java.lang.annotation.Annotation[]"
      uuid: "annotationArray"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object3"
    branches:
    - lineNumber: 97
      expression: "valueObject == null"
      range: "(97,7)-(97,25)"
      evaluatedAs: false
    - lineNumber: 102
      expression: "for-each(parameters)"
      range: "(102,41)-(102,50)"
      evaluatedAs: true
    - lineNumber: 121
      expression: "for-each(annotations)"
      range: "(121,32)-(121,42)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 122
      expression: "annotation instanceof DefaultValue defaultValueAnnotation"
      range: "(122,8)-(122,64)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 124
      expression: "defaultValue.length == 0"
      range: "(124,9)-(124,32)"
      evaluatedAs: false
      internalMethodName: "getDefaultValue"
  - pathId: "path17"
    testPathName: "createWhenDefaultValueLengthEquals1"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "89262AFFF17B2C68BD5CF82232E8E8A4"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "5776B76502D7DF1101091C7784082AA2"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "LOCAL_VARIABLE"
      name: "defaultValueAnnotation"
      modelFingerprint: "5B8DEE1C4556BFDC2E2DB4A5B6CD17E4"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "8F8A2FE8C907FEF3ED304C32EAAAD08F"
      valueUuid: "context"
      methodExercised:
        expression: "getConverter():bindConverter"
    - type: "LOCAL_VARIABLE"
      name: "converter"
      modelFingerprint: "1D190CA1F445BFCED7116C5C707EA4E2"
      valueUuid: "bindConverter"
      methodExercised:
        expression: "convert(source:stringArray,targetType:resolvableType,targetAnnotations:annotationArray):object2"
    - type: "LOCAL_VARIABLE"
      name: "converter"
      modelFingerprint: "FFF419DABDB3AAF659EDB7662B17240F"
      valueUuid: "bindConverter"
      methodExercised:
        expression: "convert(source:string,targetType:resolvableType,targetAnnotations:annotationArray):object3"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object4"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "target1-instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
      uuid: "annotation"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_valueItem1"
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_valueItem1"
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
            uuid: "annotation"
      valueType: "java.lang.annotation.Annotation[]"
      uuid: "annotationArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_valueItem1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
            uuid: "annotation"
      valueType: "java.lang.annotation.Annotation[]"
      uuid: "annotationArray"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    branches:
    - lineNumber: 97
      expression: "valueObject == null"
      range: "(97,7)-(97,25)"
      evaluatedAs: false
    - lineNumber: 102
      expression: "for-each(parameters)"
      range: "(102,41)-(102,50)"
      evaluatedAs: true
    - lineNumber: 121
      expression: "for-each(annotations)"
      range: "(121,32)-(121,42)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 122
      expression: "annotation instanceof DefaultValue defaultValueAnnotation"
      range: "(122,8)-(122,64)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 124
      expression: "defaultValue.length == 0"
      range: "(124,9)-(124,32)"
      evaluatedAs: false
      internalMethodName: "getDefaultValue"
    - lineNumber: 138
      expression: "catch-exception (ConversionException)"
      range: "(138,3)-(138,31)"
      evaluatedAs: true
      internalMethodName: "convertDefaultValue"
    - lineNumber: 140
      expression: "defaultValue.length == 1"
      range: "(140,8)-(140,31)"
      evaluatedAs: true
      internalMethodName: "convertDefaultValue"
    catchBlockExercised:
      idExternalInstruction: 62
      id: 2
      catchExceptions:
      - "org.springframework.core.convert.ConversionException"
  - pathId: "path18"
    testPathName: "createWhenDefaultValueLengthNotEquals1ThrowsConversionException"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "F5EC7DCEF0222572A8BE58A8BFFE010B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "5776B76502D7DF1101091C7784082AA2"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "LOCAL_VARIABLE"
      name: "defaultValueAnnotation"
      modelFingerprint: "B1D327B3BA06D79986E690459EC9AC79"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "context"
      modelFingerprint: "8F8A2FE8C907FEF3ED304C32EAAAD08F"
      valueUuid: "context"
      methodExercised:
        expression: "getConverter():bindConverter"
    - type: "LOCAL_VARIABLE"
      name: "converter"
      modelFingerprint: "C4627A389E90C143C4B0216EA2C759E3"
      valueUuid: "bindConverter"
      methodExercised:
        expression: "convert(source:stringArray,targetType:resolvableType,targetAnnotations:annotationArray):object2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "3D5DDD47D446393489EDB3AEC60996A3"
      valueUuid: "conversionException"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "target1-instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
      uuid: "annotation"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_valueItem1"
            valueType: "java.lang.String"
            uuid: "stringArrayItem0"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_valueItem1"
            valueType: "java.lang.String"
            uuid: "stringArrayItem1"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_valueItem1"
            valueType: "java.lang.String"
            uuid: "stringArrayItem0"
          1:
            sapientType: "BASIC"
            content: !<regular>
              value: "return_of_valueItem1"
            valueType: "java.lang.String"
            uuid: "stringArrayItem1"
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
            uuid: "annotation"
      valueType: "java.lang.annotation.Annotation[]"
      uuid: "annotationArray"
    - sapientType: "EXCEPTION"
      valueType: "org.springframework.core.convert.ConversionException"
      uuid: "conversionException"
    branches:
    - lineNumber: 97
      expression: "valueObject == null"
      range: "(97,7)-(97,25)"
      evaluatedAs: false
    - lineNumber: 102
      expression: "for-each(parameters)"
      range: "(102,41)-(102,50)"
      evaluatedAs: true
    - lineNumber: 121
      expression: "for-each(annotations)"
      range: "(121,32)-(121,42)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 122
      expression: "annotation instanceof DefaultValue defaultValueAnnotation"
      range: "(122,8)-(122,64)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 124
      expression: "defaultValue.length == 0"
      range: "(124,9)-(124,32)"
      evaluatedAs: false
      internalMethodName: "getDefaultValue"
    - lineNumber: 138
      expression: "catch-exception (ConversionException)"
      range: "(138,3)-(138,31)"
      evaluatedAs: true
      internalMethodName: "convertDefaultValue"
    - lineNumber: 140
      expression: "defaultValue.length == 1"
      range: "(140,8)-(140,31)"
      evaluatedAs: false
      internalMethodName: "convertDefaultValue"
    catchBlockExercised:
      idExternalInstruction: 62
      id: 2
      catchExceptions:
      - "org.springframework.core.convert.ConversionException"
  - pathId: "path13"
    testPathName: "createWhenResolvedIsNull"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "0AE50719EA13BEC6DAF68D09AB3232F7"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "5776B76502D7DF1101091C7784082AA2"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "LOCAL_VARIABLE"
      name: "defaultValueAnnotation"
      modelFingerprint: "33C4EF6D00C852D896C2ED6DD67A0127"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "type"
      modelFingerprint: "DAFACB8741AAD9FE4AB02D553D6ECB16"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve():class"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A7F96A6DD09FE22FCDF20C3F86F6C17"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:uniqueUuid20,messageSupplier:uniqueUuid21):void"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "3CE43667D6F74AC78251E997A6F9BB47"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:resolvableType):bindable"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object4"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "target1-instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
      uuid: "annotation"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "NULL"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid20"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid21"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    branches:
    - lineNumber: 97
      expression: "valueObject == null"
      range: "(97,7)-(97,25)"
      evaluatedAs: false
    - lineNumber: 102
      expression: "for-each(parameters)"
      range: "(102,41)-(102,50)"
      evaluatedAs: true
    - lineNumber: 121
      expression: "for-each(annotations)"
      range: "(121,32)-(121,42)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 122
      expression: "annotation instanceof DefaultValue defaultValueAnnotation"
      range: "(122,8)-(122,64)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 124
      expression: "defaultValue.length == 0"
      range: "(124,9)-(124,32)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 150
      expression: "resolved == null"
      range: "(150,16)-(150,31)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 152
      expression: "resolved != null"
      range: "(152,7)-(152,22)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 167
      expression: "instance != null"
      range: "(167,7)-(167,22)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 170
      expression: "resolved != null"
      range: "(170,11)-(170,26)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
  - pathId: "path2"
    testPathName: "createWhenResolvedIsNotNullAndOptionalEqualsResolved"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "2375568039DF95CE21BA25BF1FFA75CB"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "5776B76502D7DF1101091C7784082AA2"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "LOCAL_VARIABLE"
      name: "defaultValueAnnotation"
      modelFingerprint: "33C4EF6D00C852D896C2ED6DD67A0127"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "type"
      modelFingerprint: "5EEF274B5B4145787EDDD17F39A66151"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve():uniqueUuid22"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A7F96A6DD09FE22FCDF20C3F86F6C17"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:uniqueUuid23,messageSupplier:uniqueUuid24):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object2"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "target1-instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
      uuid: "annotation"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.util.Optional"
      valueType: "java.lang.Class"
      genericValueType: "java.util.Optional"
      uuid: "uniqueUuid22"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid23"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid24"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    branches:
    - lineNumber: 97
      expression: "valueObject == null"
      range: "(97,7)-(97,25)"
      evaluatedAs: false
    - lineNumber: 102
      expression: "for-each(parameters)"
      range: "(102,41)-(102,50)"
      evaluatedAs: true
    - lineNumber: 121
      expression: "for-each(annotations)"
      range: "(121,32)-(121,42)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 122
      expression: "annotation instanceof DefaultValue defaultValueAnnotation"
      range: "(122,8)-(122,64)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 124
      expression: "defaultValue.length == 0"
      range: "(124,9)-(124,32)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 150
      expression: "resolved == null"
      range: "(150,16)-(150,31)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 174
      expression: "Optional.class == type"
      range: "(174,11)-(174,32)"
      evaluatedAs: false
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 179
      expression: "type.isArray()"
      range: "(179,10)-(179,23)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Map.class.isAssignableFrom(type)"
      range: "(179,28)-(179,59)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Collection.class.isAssignableFrom(type)"
      range: "(179,64)-(179,102)"
      evaluatedAs: true
      internalMethodName: "isAggregate"
    - lineNumber: 174
      expression: "isAggregate(type)"
      range: "(174,37)-(174,53)"
      evaluatedAs: true
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 150
      expression: "isEmptyDefaultValueAllowed(resolved)"
      range: "(150,36)-(150,71)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 152
      expression: "resolved != null"
      range: "(152,7)-(152,22)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 153
      expression: "Optional.class == resolved"
      range: "(153,8)-(153,33)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
  - pathId: "path3"
    testPathName: "createWhenCollectionIsAssignableFromResolved"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "EFC5CDE63EEE51A71216E04BE9F65347"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "5776B76502D7DF1101091C7784082AA2"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "LOCAL_VARIABLE"
      name: "defaultValueAnnotation"
      modelFingerprint: "33C4EF6D00C852D896C2ED6DD67A0127"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "type"
      modelFingerprint: "68C3A74A10057CD59145CFF1D0F03E06"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve():class"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A7F96A6DD09FE22FCDF20C3F86F6C17"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:uniqueUuid25,messageSupplier:uniqueUuid26):void"
        staticAccess: true
    - type: "STATIC"
      name: "CollectionFactory.class"
      modelFingerprint: "D4180D3110A50B109A17B59060CF3489"
      valueUuid: "CollectionFactory.class"
      methodExercised:
        expression: "createCollection(collectionType:class,capacity:uniqueUuid27):collection"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object2"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "target1-instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
      uuid: "annotation"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid25"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid26"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.CollectionFactory"
      uuid: "CollectionFactory.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      uuid: "collection"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "class"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "uniqueUuid27"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    branches:
    - lineNumber: 97
      expression: "valueObject == null"
      range: "(97,7)-(97,25)"
      evaluatedAs: false
    - lineNumber: 102
      expression: "for-each(parameters)"
      range: "(102,41)-(102,50)"
      evaluatedAs: true
    - lineNumber: 121
      expression: "for-each(annotations)"
      range: "(121,32)-(121,42)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 122
      expression: "annotation instanceof DefaultValue defaultValueAnnotation"
      range: "(122,8)-(122,64)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 124
      expression: "defaultValue.length == 0"
      range: "(124,9)-(124,32)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 150
      expression: "resolved == null"
      range: "(150,16)-(150,31)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 174
      expression: "Optional.class == type"
      range: "(174,11)-(174,32)"
      evaluatedAs: false
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 179
      expression: "type.isArray()"
      range: "(179,10)-(179,23)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Map.class.isAssignableFrom(type)"
      range: "(179,28)-(179,59)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Collection.class.isAssignableFrom(type)"
      range: "(179,64)-(179,102)"
      evaluatedAs: true
      internalMethodName: "isAggregate"
    - lineNumber: 174
      expression: "isAggregate(type)"
      range: "(174,37)-(174,53)"
      evaluatedAs: true
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 150
      expression: "isEmptyDefaultValueAllowed(resolved)"
      range: "(150,36)-(150,71)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 152
      expression: "resolved != null"
      range: "(152,7)-(152,22)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 153
      expression: "Optional.class == resolved"
      range: "(153,8)-(153,33)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 156
      expression: "Collection.class.isAssignableFrom(resolved)"
      range: "(156,8)-(156,50)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
  - pathId: "path4"
    testPathName: "createWhenMapIsAssignableFromResolved"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "E20CECF2727D689906D562CF324FB148"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "5776B76502D7DF1101091C7784082AA2"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "LOCAL_VARIABLE"
      name: "defaultValueAnnotation"
      modelFingerprint: "33C4EF6D00C852D896C2ED6DD67A0127"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "type"
      modelFingerprint: "68C3A74A10057CD59145CFF1D0F03E06"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve():class"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A7F96A6DD09FE22FCDF20C3F86F6C17"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:uniqueUuid28,messageSupplier:uniqueUuid29):void"
        staticAccess: true
    - type: "STATIC"
      name: "CollectionFactory.class"
      modelFingerprint: "209D0924AA41665A15FAB227F714E9C8"
      valueUuid: "CollectionFactory.class"
      methodExercised:
        expression: "createMap(mapType:class,capacity:uniqueUuid30):map"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object2"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "target1-instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
      uuid: "annotation"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid28"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid29"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.CollectionFactory"
      uuid: "CollectionFactory.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Map"
      uuid: "map"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "class"
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "uniqueUuid30"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    branches:
    - lineNumber: 97
      expression: "valueObject == null"
      range: "(97,7)-(97,25)"
      evaluatedAs: false
    - lineNumber: 102
      expression: "for-each(parameters)"
      range: "(102,41)-(102,50)"
      evaluatedAs: true
    - lineNumber: 121
      expression: "for-each(annotations)"
      range: "(121,32)-(121,42)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 122
      expression: "annotation instanceof DefaultValue defaultValueAnnotation"
      range: "(122,8)-(122,64)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 124
      expression: "defaultValue.length == 0"
      range: "(124,9)-(124,32)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 150
      expression: "resolved == null"
      range: "(150,16)-(150,31)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 174
      expression: "Optional.class == type"
      range: "(174,11)-(174,32)"
      evaluatedAs: false
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 179
      expression: "type.isArray()"
      range: "(179,10)-(179,23)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Map.class.isAssignableFrom(type)"
      range: "(179,28)-(179,59)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Collection.class.isAssignableFrom(type)"
      range: "(179,64)-(179,102)"
      evaluatedAs: true
      internalMethodName: "isAggregate"
    - lineNumber: 174
      expression: "isAggregate(type)"
      range: "(174,37)-(174,53)"
      evaluatedAs: true
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 150
      expression: "isEmptyDefaultValueAllowed(resolved)"
      range: "(150,36)-(150,71)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 152
      expression: "resolved != null"
      range: "(152,7)-(152,22)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 153
      expression: "Optional.class == resolved"
      range: "(153,8)-(153,33)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 156
      expression: "Collection.class.isAssignableFrom(resolved)"
      range: "(156,8)-(156,50)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 159
      expression: "Map.class.isAssignableFrom(resolved)"
      range: "(159,8)-(159,43)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
  - pathId: "path5"
    testPathName: "createWhenResolvedIsArray"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "305845A7829296C46925DFCA73870CE4"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "5776B76502D7DF1101091C7784082AA2"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "LOCAL_VARIABLE"
      name: "defaultValueAnnotation"
      modelFingerprint: "33C4EF6D00C852D896C2ED6DD67A0127"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "type"
      modelFingerprint: "68C3A74A10057CD59145CFF1D0F03E06"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve():class"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A7F96A6DD09FE22FCDF20C3F86F6C17"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:uniqueUuid31,messageSupplier:uniqueUuid32):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object3"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "target1-instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
      uuid: "annotation"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid31"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid32"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object3"
    branches:
    - lineNumber: 97
      expression: "valueObject == null"
      range: "(97,7)-(97,25)"
      evaluatedAs: false
    - lineNumber: 102
      expression: "for-each(parameters)"
      range: "(102,41)-(102,50)"
      evaluatedAs: true
    - lineNumber: 121
      expression: "for-each(annotations)"
      range: "(121,32)-(121,42)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 122
      expression: "annotation instanceof DefaultValue defaultValueAnnotation"
      range: "(122,8)-(122,64)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 124
      expression: "defaultValue.length == 0"
      range: "(124,9)-(124,32)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 150
      expression: "resolved == null"
      range: "(150,16)-(150,31)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 174
      expression: "Optional.class == type"
      range: "(174,11)-(174,32)"
      evaluatedAs: false
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 179
      expression: "type.isArray()"
      range: "(179,10)-(179,23)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Map.class.isAssignableFrom(type)"
      range: "(179,28)-(179,59)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Collection.class.isAssignableFrom(type)"
      range: "(179,64)-(179,102)"
      evaluatedAs: true
      internalMethodName: "isAggregate"
    - lineNumber: 174
      expression: "isAggregate(type)"
      range: "(174,37)-(174,53)"
      evaluatedAs: true
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 150
      expression: "isEmptyDefaultValueAllowed(resolved)"
      range: "(150,36)-(150,71)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 152
      expression: "resolved != null"
      range: "(152,7)-(152,22)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 153
      expression: "Optional.class == resolved"
      range: "(153,8)-(153,33)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 156
      expression: "Collection.class.isAssignableFrom(resolved)"
      range: "(156,8)-(156,50)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 159
      expression: "Map.class.isAssignableFrom(resolved)"
      range: "(159,8)-(159,43)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 162
      expression: "resolved.isArray()"
      range: "(162,8)-(162,25)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
  - pathId: "path6"
    testPathName: "createWhenResolvedNotIsArrayAndInstanceIsNotNull"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "B8CC95E176BE2CDC8DA3FFA9B164CC19"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "5776B76502D7DF1101091C7784082AA2"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "LOCAL_VARIABLE"
      name: "defaultValueAnnotation"
      modelFingerprint: "33C4EF6D00C852D896C2ED6DD67A0127"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "type"
      modelFingerprint: "68C3A74A10057CD59145CFF1D0F03E06"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve():class"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A7F96A6DD09FE22FCDF20C3F86F6C17"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:uniqueUuid33,messageSupplier:uniqueUuid34):void"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "3CE43667D6F74AC78251E997A6F9BB47"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:resolvableType):bindable"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object3"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "target1-instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
      uuid: "annotation"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid33"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid34"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object3"
    branches:
    - lineNumber: 97
      expression: "valueObject == null"
      range: "(97,7)-(97,25)"
      evaluatedAs: false
    - lineNumber: 102
      expression: "for-each(parameters)"
      range: "(102,41)-(102,50)"
      evaluatedAs: true
    - lineNumber: 121
      expression: "for-each(annotations)"
      range: "(121,32)-(121,42)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 122
      expression: "annotation instanceof DefaultValue defaultValueAnnotation"
      range: "(122,8)-(122,64)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 124
      expression: "defaultValue.length == 0"
      range: "(124,9)-(124,32)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 150
      expression: "resolved == null"
      range: "(150,16)-(150,31)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 174
      expression: "Optional.class == type"
      range: "(174,11)-(174,32)"
      evaluatedAs: false
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 179
      expression: "type.isArray()"
      range: "(179,10)-(179,23)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Map.class.isAssignableFrom(type)"
      range: "(179,28)-(179,59)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Collection.class.isAssignableFrom(type)"
      range: "(179,64)-(179,102)"
      evaluatedAs: true
      internalMethodName: "isAggregate"
    - lineNumber: 174
      expression: "isAggregate(type)"
      range: "(174,37)-(174,53)"
      evaluatedAs: true
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 150
      expression: "isEmptyDefaultValueAllowed(resolved)"
      range: "(150,36)-(150,71)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 152
      expression: "resolved != null"
      range: "(152,7)-(152,22)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 153
      expression: "Optional.class == resolved"
      range: "(153,8)-(153,33)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 156
      expression: "Collection.class.isAssignableFrom(resolved)"
      range: "(156,8)-(156,50)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 159
      expression: "Map.class.isAssignableFrom(resolved)"
      range: "(159,8)-(159,43)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 162
      expression: "resolved.isArray()"
      range: "(162,8)-(162,25)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 167
      expression: "instance != null"
      range: "(167,7)-(167,22)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
  - pathId: "path9"
    testPathName: "createWhenResolvedNotIsArrayAndInstanceIsNullAndResolvedIsNotNull"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "919A6BF558827AB19208DFB5895A2174"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "5776B76502D7DF1101091C7784082AA2"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "LOCAL_VARIABLE"
      name: "defaultValueAnnotation"
      modelFingerprint: "33C4EF6D00C852D896C2ED6DD67A0127"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "type"
      modelFingerprint: "E1C7982BC2C1E6629DCEB9FE83B31A45"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve():class"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "6D5FB5022FA0F8747855BBB24780A9DB"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:uniqueUuid35,messageSupplier:uniqueUuid36):void"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "3CE43667D6F74AC78251E997A6F9BB47"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:resolvableType):bindable"
        staticAccess: true
    - type: "STATIC"
      name: "BeanUtils.class"
      modelFingerprint: "E4FF2365C457C11B8587521D338F4374"
      valueUuid: "BeanUtils.class"
      methodExercised:
        expression: "instantiateClass(clazz:class):object3"
        throwsExceptions:
        - "org.springframework.beans.BeanInstantiationException"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object4"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "target1-instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
      uuid: "annotation"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid35"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid36"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.BeanUtils"
      uuid: "BeanUtils.class"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "class"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    branches:
    - lineNumber: 97
      expression: "valueObject == null"
      range: "(97,7)-(97,25)"
      evaluatedAs: false
    - lineNumber: 102
      expression: "for-each(parameters)"
      range: "(102,41)-(102,50)"
      evaluatedAs: true
    - lineNumber: 121
      expression: "for-each(annotations)"
      range: "(121,32)-(121,42)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 122
      expression: "annotation instanceof DefaultValue defaultValueAnnotation"
      range: "(122,8)-(122,64)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 124
      expression: "defaultValue.length == 0"
      range: "(124,9)-(124,32)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 150
      expression: "resolved == null"
      range: "(150,16)-(150,31)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 174
      expression: "Optional.class == type"
      range: "(174,11)-(174,32)"
      evaluatedAs: false
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 179
      expression: "type.isArray()"
      range: "(179,10)-(179,23)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Map.class.isAssignableFrom(type)"
      range: "(179,28)-(179,59)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Collection.class.isAssignableFrom(type)"
      range: "(179,64)-(179,102)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 174
      expression: "isAggregate(type)"
      range: "(174,37)-(174,53)"
      evaluatedAs: false
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 175
      expression: "!(type.isPrimitive() || type.isEnum() || type.getName().startsWith(\\\
        \"java.lang\\\"))"
      range: "(175,8)-(175,87)"
      evaluatedAs: true
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 175
      expression: "type.isPrimitive()"
      range: "(175,10)-(175,27)"
      evaluatedAs: false
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 175
      expression: "type.isEnum()"
      range: "(175,32)-(175,44)"
      evaluatedAs: true
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 150
      expression: "isEmptyDefaultValueAllowed(resolved)"
      range: "(150,36)-(150,71)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 152
      expression: "resolved != null"
      range: "(152,7)-(152,22)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 153
      expression: "Optional.class == resolved"
      range: "(153,8)-(153,33)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 156
      expression: "Collection.class.isAssignableFrom(resolved)"
      range: "(156,8)-(156,50)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 159
      expression: "Map.class.isAssignableFrom(resolved)"
      range: "(159,8)-(159,43)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 162
      expression: "resolved.isArray()"
      range: "(162,8)-(162,25)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 167
      expression: "instance != null"
      range: "(167,7)-(167,22)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 170
      expression: "resolved != null"
      range: "(170,11)-(170,26)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
  - pathId: "path8"
    testPathName: "createWhenMapNotIsAssignableFromResolvedAndResolvedNotIsArrayAndInstanceIsNullAndResolvedIsNotNull"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "E0D87D0D491A31B7BF84DA2EC3C0DA56"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "5776B76502D7DF1101091C7784082AA2"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "LOCAL_VARIABLE"
      name: "defaultValueAnnotation"
      modelFingerprint: "33C4EF6D00C852D896C2ED6DD67A0127"
      valueUuid: "annotation"
      methodExercised:
        expression: "value():stringArray"
    - type: "LOCAL_VARIABLE"
      name: "type"
      modelFingerprint: "E1C7982BC2C1E6629DCEB9FE83B31A45"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve():class"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A7F96A6DD09FE22FCDF20C3F86F6C17"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:uniqueUuid37,messageSupplier:uniqueUuid38):void"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "3CE43667D6F74AC78251E997A6F9BB47"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:resolvableType):bindable"
        staticAccess: true
    - type: "STATIC"
      name: "BeanUtils.class"
      modelFingerprint: "E4FF2365C457C11B8587521D338F4374"
      valueUuid: "BeanUtils.class"
      methodExercised:
        expression: "instantiateClass(clazz:class):object3"
        throwsExceptions:
        - "org.springframework.beans.BeanInstantiationException"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object4"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "target1-instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DefaultValue"
      uuid: "annotation"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.String[]"
      uuid: "stringArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid37"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid38"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.beans.BeanUtils"
      uuid: "BeanUtils.class"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "class"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    branches:
    - lineNumber: 97
      expression: "valueObject == null"
      range: "(97,7)-(97,25)"
      evaluatedAs: false
    - lineNumber: 102
      expression: "for-each(parameters)"
      range: "(102,41)-(102,50)"
      evaluatedAs: true
    - lineNumber: 121
      expression: "for-each(annotations)"
      range: "(121,32)-(121,42)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 122
      expression: "annotation instanceof DefaultValue defaultValueAnnotation"
      range: "(122,8)-(122,64)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 124
      expression: "defaultValue.length == 0"
      range: "(124,9)-(124,32)"
      evaluatedAs: true
      internalMethodName: "getDefaultValue"
    - lineNumber: 150
      expression: "resolved == null"
      range: "(150,16)-(150,31)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 174
      expression: "Optional.class == type"
      range: "(174,11)-(174,32)"
      evaluatedAs: false
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 179
      expression: "type.isArray()"
      range: "(179,10)-(179,23)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Map.class.isAssignableFrom(type)"
      range: "(179,28)-(179,59)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 179
      expression: "Collection.class.isAssignableFrom(type)"
      range: "(179,64)-(179,102)"
      evaluatedAs: false
      internalMethodName: "isAggregate"
    - lineNumber: 174
      expression: "isAggregate(type)"
      range: "(174,37)-(174,53)"
      evaluatedAs: false
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 175
      expression: "!(type.isPrimitive() || type.isEnum() || type.getName().startsWith(\\\
        \"java.lang\\\"))"
      range: "(175,8)-(175,87)"
      evaluatedAs: true
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 175
      expression: "type.isPrimitive()"
      range: "(175,10)-(175,27)"
      evaluatedAs: false
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 175
      expression: "type.isEnum()"
      range: "(175,32)-(175,44)"
      evaluatedAs: false
      internalMethodName: "isEmptyDefaultValueAllowed"
    - lineNumber: 150
      expression: "isEmptyDefaultValueAllowed(resolved)"
      range: "(150,36)-(150,71)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 152
      expression: "resolved != null"
      range: "(152,7)-(152,22)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 153
      expression: "Optional.class == resolved"
      range: "(153,8)-(153,33)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 156
      expression: "Collection.class.isAssignableFrom(resolved)"
      range: "(156,8)-(156,50)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 159
      expression: "Map.class.isAssignableFrom(resolved)"
      range: "(159,8)-(159,43)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 162
      expression: "resolved.isArray()"
      range: "(162,8)-(162,25)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 167
      expression: "instance != null"
      range: "(167,7)-(167,22)"
      evaluatedAs: false
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
    - lineNumber: 170
      expression: "resolved != null"
      range: "(170,11)-(170,26)"
      evaluatedAs: true
      internalMethodName: "getNewDefaultValueInstanceIfPossible"
- method:
    name: "onUnableToCreateInstance"
    sourceCodeSignature: "<T> void onUnableToCreateInstance(Bindable<T> target, Context\
      \ context, RuntimeException exception)"
    returnType: "void"
    parameters:
    - name: "target"
      type: "org.springframework.boot.context.properties.bind.Bindable"
    - name: "context"
      type: "org.springframework.boot.context.properties.bind.Binder$Context"
    - name: "exception"
      type: "java.lang.RuntimeException"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "456C31168D8B0F6E07CFCBB14BD8DDAC"
  paths:
  - pathId: "path1"
    testPathName: "onUnableToCreateInstanceTest"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "2D7948B4AB22BCF99E83DD6463343206"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "956EB28C4FDAF315140B42D30677B1F6"
      valueUuid: "target"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "5776B76502D7DF1101091C7784082AA2"
      valueUuid: "target1"
    - type: "INPUT"
      name: "context"
      modelFingerprint: "30D3FBFAE261B7B08EC4BFCA6ED42265"
      valueUuid: "context"
    - type: "INPUT"
      name: "exception"
      modelFingerprint: "9A5C30C03E57A0DB309C903356E9B767"
      valueUuid: "exception"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject.get(org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder$Context,org.springframework.core.ParameterNameDiscoverer)\
        \ : org.springframework.boot.context.properties.bind.ValueObjectBinder$ValueObject<java.lang.Object>"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
        parameters:
        - name: "constructorProvider"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
      valueType: "org.springframework.boot.context.properties.bind.ValueObjectBinder"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "target1-instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.RuntimeException"
        parameters: []
      valueType: "java.lang.RuntimeException"
      uuid: "exception"
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
