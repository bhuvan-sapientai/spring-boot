---
modelFingerprint: "18E9309B1B6E9E751A6F6BCD46A4FECA"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
methods:
- method:
    name: "resolvePlaceholders"
    sourceCodeSignature: "Object resolvePlaceholders(Object value)"
    returnType: "java.lang.Object"
    parameters:
    - name: "value"
      type: "java.lang.Object"
    instructionFingerprint: "DC4F10F1E9B26605AE2D97B4749D67D1"
  paths:
  - pathId: "path1"
    testPathName: "resolvePlaceholdersWhenValueInstanceOfString"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.core.env.PropertySource<?>>,org.springframework.util.PropertyPlaceholderHelper)\
      \ : void"
    modelFingerprint: "3D9DF1B08C1D8D68682D035649DC7903"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "1CF9B0FEF982C555AAAB7780A052348E"
      valueUuid: "target"
    - type: "INPUT"
      name: "value"
      modelFingerprint: "771DC1EEA9260D80AEE9A3ECE44C7DDE"
      valueUuid: "value"
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "81EFF5F75D05D4925A09AB5CBB70C851"
      methodExercised:
        expression: "resolvePlaceholder(placeholder:string2):string3"
    - type: "FIELD"
      name: "helper"
      modelFingerprint: "3B58E590FA72F2EEAA8FE396AA2814F3"
      valueUuid: "helper"
      methodExercised:
        expression: "replacePlaceholders(value:value,placeholderResolver:uniqueUuid1):string"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D446A609419428DDEAA49A58091F3986"
      valueUuid: "string"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.core.env.PropertySource<?>"
            uuid: "sources"
        - name: "helper"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.util.PropertyPlaceholderHelper"
            uuid: "helper"
      valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "value1"
      valueType: "java.lang.String"
      uuid: "value"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_resolvePlaceholder1"
      valueType: "java.lang.String"
      uuid: "string3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "placeholder1"
      valueType: "java.lang.String"
      uuid: "string2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.PropertyPlaceholderHelper"
      uuid: "helper"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_replacePlaceholders1"
      valueType: "java.lang.String"
      uuid: "string"
    - sapientType: "BASIC"
      content: !<regular>
        value: "value1"
      valueType: "java.lang.String"
      uuid: "value"
    - sapientType: "ANY"
      valueType: "org.springframework.util.PropertyPlaceholderHelper$PlaceholderResolver"
      uuid: "uniqueUuid1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "return_of_replacePlaceholders1"
      valueType: "java.lang.String"
      uuid: "string"
    branches:
    - lineNumber: 56
      expression: "value instanceof String string"
      range: "(56,7)-(56,36)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "resolvePlaceholdersWhenValueNotInstanceOfString"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.core.env.PropertySource<?>>,org.springframework.util.PropertyPlaceholderHelper)\
      \ : void"
    modelFingerprint: "E83405939902BFD52B6A04136CE3FCDE"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "C802824B7C38160B0A441C0B3CDEFF1C"
      valueUuid: "target"
    - type: "INPUT"
      name: "value"
      modelFingerprint: "EB88C1798DFE893966CC3D4502A52694"
      valueUuid: "value"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7D8E87CB1B63A9579EC7584A697ED33D"
      valueUuid: "value"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.core.env.PropertySource<?>"
            uuid: "sources"
        - name: "helper"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.util.PropertyPlaceholderHelper"
            uuid: "helper"
      valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "value"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "value"
    branches:
    - lineNumber: 56
      expression: "value instanceof String string"
      range: "(56,7)-(56,36)"
      evaluatedAs: false
- method:
    name: "resolvePlaceholder"
    sourceCodeSignature: "String resolvePlaceholder(String placeholder)"
    returnType: "java.lang.String"
    parameters:
    - name: "placeholder"
      type: "java.lang.String"
    instructionFingerprint: "85C99104715CFB84817CE4298781AFC6"
  paths:
  - pathId: "path1"
    testPathName: "resolvePlaceholderWhenValueIsNotNull"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.core.env.PropertySource<?>>,org.springframework.util.PropertyPlaceholderHelper)\
      \ : void"
    modelFingerprint: "CE5E59239147B8581AC1D03E4DBCAFD7"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B715AE0B44149FBCBB7FA8EA742994B0"
      valueUuid: "target"
    - type: "INPUT"
      name: "placeholder"
      modelFingerprint: "B0D39D95B3DD84A927D911B1B72044E4"
      valueUuid: "placeholder"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "1D65539F596BEF8F208EF3B313CA327A"
      valueUuid: "object"
      methodExercised:
        expression: "getProperty(name:placeholder):object2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "69A44ACD428B7B2AB8AAA49C616FC83C"
      valueUuid: "string"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.core.env.PropertySource"
                genericValueType: "?"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.core.env.PropertySource<?>"
            uuid: "sources"
        - name: "helper"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.util.PropertyPlaceholderHelper"
            uuid: "helper"
      valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "placeholder1"
      valueType: "java.lang.String"
      uuid: "placeholder"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertySource"
      genericValueType: "?"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "MOCK"
      valueType: "java.lang.Object"
      uuid: "object2"
      nameForMock: "object2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "placeholder1"
      valueType: "java.lang.String"
      uuid: "placeholder"
    - sapientType: "BASIC"
      content: !<regular>
        value: "object2"
      valueType: "java.lang.String"
      uuid: "string"
    branches:
    - lineNumber: 63
      expression: "this.sources != null"
      range: "(63,7)-(63,26)"
      evaluatedAs: true
    - lineNumber: 64
      expression: "for-each(this.sources)"
      range: "(64,36)-(64,47)"
      evaluatedAs: true
    - lineNumber: 66
      expression: "value != null"
      range: "(66,9)-(66,21)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "resolvePlaceholderWhenValueIsNull"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.core.env.PropertySource<?>>,org.springframework.util.PropertyPlaceholderHelper)\
      \ : void"
    modelFingerprint: "861C40C7FC7FA32BA0C34407B95397A0"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "B715AE0B44149FBCBB7FA8EA742994B0"
      valueUuid: "target"
    - type: "INPUT"
      name: "placeholder"
      modelFingerprint: "B0D39D95B3DD84A927D911B1B72044E4"
      valueUuid: "placeholder"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "1DD0C340E0966B4600A8F1852E3BB73F"
      valueUuid: "object"
      methodExercised:
        expression: "getProperty(name:placeholder):object2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "494333D8A9619E3B4E57274C75B778A3"
      valueUuid: "string"
    disabled: false
    failureReason:
      reason: "ERROR_RECALCULATING_SUGGESTED_VALUES"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.core.env.PropertySource"
                genericValueType: "?"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.core.env.PropertySource<?>"
            uuid: "sources"
        - name: "helper"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.util.PropertyPlaceholderHelper"
            uuid: "helper"
      valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "placeholder1"
      valueType: "java.lang.String"
      uuid: "placeholder"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.PropertySource"
      genericValueType: "?"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "placeholder1"
      valueType: "java.lang.String"
      uuid: "placeholder"
    - sapientType: "NULL"
      valueType: "java.lang.String"
      uuid: "string"
      fixed: true
    branches:
    - lineNumber: 63
      expression: "this.sources != null"
      range: "(63,7)-(63,26)"
      evaluatedAs: true
    - lineNumber: 64
      expression: "for-each(this.sources)"
      range: "(64,36)-(64,47)"
      evaluatedAs: true
    - lineNumber: 66
      expression: "value != null"
      range: "(66,9)-(66,21)"
      evaluatedAs: false
