---
modelFingerprint: "CC30A52175D0C96E4C38B9257EED0D53"
methods:
- method:
    name: "bindAggregate"
    signature: "bindAggregate(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable<?>,org.springframework.boot.context.properties.bind.AggregateElementBinder)\
      \ : java.lang.Object"
    sourceCodeSignature: "Object bindAggregate(ConfigurationPropertyName name, Bindable<?>\
      \ target, AggregateElementBinder elementBinder)"
    instructionFingerprint: "89872B9D9DA910A463257F896F0F4091"
  paths:
  - pathId: "path1"
    testPathName: "bindAggregateWhenResultWasSupplied"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.Binder$Context)\
      \ : void"
    modelFingerprint: "8082CC9715E282E8FB8028AF7CC951C0"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "71F997F17CD09A93E5D6112805633269"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "B25130F73393E17FF8F314458B4BB3C9"
      index: 2
      valueUuid: "bindAggregate_configurationPropertyName1"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "8E2A735B6CE5F77FB086B487521802D5"
      index: 3
      valueUuid: "bindAggregate_bindable1"
    - type: "INPUT"
      name: "elementBinder"
      modelFingerprint: "F4AD2C403E3F7A42B6491C58B50D3565"
      index: 4
      valueUuid: "bindAggregate_aggregateElementBinder1"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "3B4EF577FD86EC5329CB4199AA03BA3D"
      index: 5
      valueUuid: "bindAggregate_bindable1"
      methodExercised:
        target: "target"
        name: "getType"
        parameters: []
        signature: "getType(): ResolvableType"
        returnValueUuid: "bindAggregate_resolvableType1"
        access: 1
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D376C284F756EC5410CDCC6336FB22E2"
      index: 6
      valueUuid: "bindAggregate_resolvableType1"
      methodExercised:
        target: "org.springframework.core.ResolvableType"
        name: "asCollection"
        parameters: []
        signature: "asCollection(): ResolvableType"
        returnValueUuid: "bindAggregate_resolvableType2"
        access: 1
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "3533BD3627FA1789EF763542ACB6644E"
      index: 7
      valueUuid: "bindAggregate_resolvableType2"
      methodExercised:
        target: "org.springframework.core.ResolvableType"
        name: "getGenerics"
        parameters: []
        signature: "getGenerics(): ResolvableType[]"
        returnValueUuid: "bindAggregate_resolvableType[]1"
        access: 1
    - type: "STATIC"
      name: "ResolvableType"
      modelFingerprint: "34D7107B4AED844F0246035A9758977E"
      index: 8
      valueUuid: "uuid2"
      methodExercised:
        target: "org.springframework.core.ResolvableType"
        name: "forClassWithGenerics"
        parameters:
        - name: "clazz"
          valueUuid: "uuid1"
        - name: "generics"
          valueUuid: "bindAggregate_resolvableType[]1"
        signature: "forClassWithGenerics(Class,ResolvableType[]): ResolvableType"
        returnValueUuid: "bindAggregate_resolvableType3"
        access: 137
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "3B4EF577FD86EC5329CB4199AA03BA3D"
      index: 9
      valueUuid: "bindAggregate_bindable1"
      methodExercised:
        target: "target"
        name: "getType"
        parameters: []
        signature: "getType(): ResolvableType"
        returnValueUuid: "bindAggregate_resolvableType1"
        access: 1
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "89C3C1614A3EB130109EB5645879EA01"
      index: 10
      valueUuid: "bindAggregate_resolvableType1"
      methodExercised:
        target: "org.springframework.core.ResolvableType"
        name: "asCollection"
        parameters: []
        signature: "asCollection(): ResolvableType"
        returnValueUuid: "bindAggregate_resolvableType5"
        access: 1
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "6717520F63C33BDA1DE5EB8668551182"
      index: 11
      valueUuid: "bindAggregate_resolvableType5"
      methodExercised:
        target: "org.springframework.core.ResolvableType"
        name: "getGeneric"
        parameters:
        - name: "indexes"
          valueUuid: "bindAggregate_int[]1"
        signature: "getGeneric(int[]): ResolvableType"
        returnValueUuid: "bindAggregate_resolvableType6"
        access: 129
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "3C84FAE656C74327C239D4F885BA612D"
      index: 12
      methodExercised:
        target: "target"
        name: "bindIndexed"
        parameters:
        - name: "name"
          valueUuid: "bindAggregate_configurationPropertyName1"
        - name: "target"
          valueUuid: "bindAggregate_bindable1"
        - name: "elementBinder"
          valueUuid: "bindAggregate_aggregateElementBinder1"
        - name: "aggregateType"
          valueUuid: "bindAggregate_resolvableType3"
        - name: "elementType"
          valueUuid: "bindAggregate_resolvableType6"
        - name: "result"
          valueUuid: "bindAggregate_indexedElementsBinder.IndexedCollectionSupplier1"
        signature: "bindIndexed(ConfigurationPropertyName,Bindable,AggregateElementBinder,ResolvableType,ResolvableType,IndexedElementsBinder$IndexedCollectionSupplier):\
          \ void"
        returnValueUuid: "bindAggregate_void1"
        access: 20
    - type: "LOCAL_VARIABLE"
      name: "result"
      modelFingerprint: "C867A6F10602A74318F05A8185650170"
      index: 13
      valueUuid: "bindAggregate_indexedElementsBinder.IndexedCollectionSupplier1"
      methodExercised:
        target: "result"
        name: "wasSupplied"
        parameters: []
        signature: "wasSupplied(): boolean"
        returnValueUuid: "bindAggregate_boolean1"
        access: 1
    - type: "LOCAL_VARIABLE"
      name: "result"
      modelFingerprint: "25A2FB3DD990322FF914D00E60E1B66E"
      index: 14
      valueUuid: "bindAggregate_indexedElementsBinder.IndexedCollectionSupplier1"
      methodExercised:
        target: "result"
        name: "get"
        parameters: []
        signature: "get(): Object"
        returnValueUuid: "bindAggregate_object1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D82140975B5127BC91EC120C14EF1786"
      index: 15
      valueUuid: "bindAggregate_object1"
    uuid: "e692a290-b7ee-3345-a59f-d8e03e640b19"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "result"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "if (result.wasSupplied()) {"
      lineNumber: 49
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: result - Method: wasSupplied"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.CollectionBinder"
        parameters:
        - name: "context"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
            uuid: "<init>_binder.Context1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.bind.CollectionBinder"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "bindAggregate_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "bindAggregate_resolvableType1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindAggregate_bindable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.AggregateElementBinder"
      uuid: "bindAggregate_aggregateElementBinder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "bindAggregate_resolvableType1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindAggregate_bindable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "bindAggregate_resolvableType1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "bindAggregate_resolvableType1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.core.ResolvableType"
        method: "forClassWithGenerics"
        methodParameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            uuid: "bindAggregate_resolvableType2-clazz"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "generics"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.core.ResolvableType[]"
            uuid: "bindAggregate_resolvableType[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.core.ResolvableType"
      uuid: "bindAggregate_resolvableType2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.core.ResolvableType"
        method: "forClassWithGenerics"
        methodParameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            uuid: "bindAggregate_resolvableType2-clazz"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "generics"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.core.ResolvableType[]"
            uuid: "bindAggregate_resolvableType[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.core.ResolvableType"
      uuid: "bindAggregate_resolvableType2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.core.ResolvableType[]"
      uuid: "bindAggregate_resolvableType[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "bindAggregate_resolvableType3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.util.List"
      valueType: "java.lang.Class"
      genericValueType: "java.util.List"
      uuid: "uuid1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.core.ResolvableType[]"
      uuid: "bindAggregate_resolvableType[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "bindAggregate_resolvableType1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindAggregate_bindable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "bindAggregate_resolvableType1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "bindAggregate_resolvableType1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "bindAggregate_resolvableType5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "bindAggregate_resolvableType5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "bindAggregate_resolvableType6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "int[]"
      uuid: "bindAggregate_int[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "bindAggregate_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "bindAggregate_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "bindAggregate_resolvableType1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindAggregate_bindable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.AggregateElementBinder"
      uuid: "bindAggregate_aggregateElementBinder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "bindAggregate_resolvableType3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "bindAggregate_resolvableType6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier"
        parameters:
        - name: "supplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.util.Collection<java.lang.Object>"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier"
      uuid: "bindAggregate_indexedElementsBinder.IndexedCollectionSupplier1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier"
        parameters:
        - name: "supplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.util.Collection<java.lang.Object>"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier"
      uuid: "bindAggregate_indexedElementsBinder.IndexedCollectionSupplier1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "bindAggregate_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier"
        parameters:
        - name: "supplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.util.Collection<java.lang.Object>"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier"
      uuid: "bindAggregate_indexedElementsBinder.IndexedCollectionSupplier1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier"
            parameters:
            - name: "supplier"
              value:
                sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                valueType: "java.util.function.Supplier"
                genericValueType: "java.util.Collection<java.lang.Object>"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: true
          valueType: "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier"
          uuid: "bindAggregate_indexedElementsBinder.IndexedCollectionSupplier1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "get"
      valueType: "java.lang.Object"
      uuid: "bindAggregate_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier"
            parameters:
            - name: "supplier"
              value:
                sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                valueType: "java.util.function.Supplier"
                genericValueType: "java.util.Collection<java.lang.Object>"
                fixed: false
                equalsMethodPresent: false
                explicitCastNeeded: false
            privateConstructor: false
            createdByTargetCode: true
          valueType: "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier"
          uuid: "bindAggregate_indexedElementsBinder.IndexedCollectionSupplier1"
          fixed: true
          equalsMethodPresent: false
          explicitCastNeeded: false
        methodParameters: []
        methodName: "get"
      valueType: "java.lang.Object"
      uuid: "bindAggregate_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "bindAggregateWhenResultNotWasSupplied"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.Binder$Context)\
      \ : void"
    modelFingerprint: "D4A898EBCD69E90939DA1EEB071D7AEF"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "71F997F17CD09A93E5D6112805633269"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "B25130F73393E17FF8F314458B4BB3C9"
      index: 2
      valueUuid: "bindAggregate_configurationPropertyName1"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "8E2A735B6CE5F77FB086B487521802D5"
      index: 3
      valueUuid: "bindAggregate_bindable1"
    - type: "INPUT"
      name: "elementBinder"
      modelFingerprint: "F4AD2C403E3F7A42B6491C58B50D3565"
      index: 4
      valueUuid: "bindAggregate_aggregateElementBinder1"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "3B4EF577FD86EC5329CB4199AA03BA3D"
      index: 5
      valueUuid: "bindAggregate_bindable1"
      methodExercised:
        target: "target"
        name: "getType"
        parameters: []
        signature: "getType(): ResolvableType"
        returnValueUuid: "bindAggregate_resolvableType1"
        access: 1
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "D376C284F756EC5410CDCC6336FB22E2"
      index: 6
      valueUuid: "bindAggregate_resolvableType1"
      methodExercised:
        target: "org.springframework.core.ResolvableType"
        name: "asCollection"
        parameters: []
        signature: "asCollection(): ResolvableType"
        returnValueUuid: "bindAggregate_resolvableType2"
        access: 1
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "3533BD3627FA1789EF763542ACB6644E"
      index: 7
      valueUuid: "bindAggregate_resolvableType2"
      methodExercised:
        target: "org.springframework.core.ResolvableType"
        name: "getGenerics"
        parameters: []
        signature: "getGenerics(): ResolvableType[]"
        returnValueUuid: "bindAggregate_resolvableType[]1"
        access: 1
    - type: "STATIC"
      name: "ResolvableType"
      modelFingerprint: "34D7107B4AED844F0246035A9758977E"
      index: 8
      valueUuid: "uuid4"
      methodExercised:
        target: "org.springframework.core.ResolvableType"
        name: "forClassWithGenerics"
        parameters:
        - name: "clazz"
          valueUuid: "uuid3"
        - name: "generics"
          valueUuid: "bindAggregate_resolvableType[]1"
        signature: "forClassWithGenerics(Class,ResolvableType[]): ResolvableType"
        returnValueUuid: "bindAggregate_resolvableType3"
        access: 137
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "3B4EF577FD86EC5329CB4199AA03BA3D"
      index: 9
      valueUuid: "bindAggregate_bindable1"
      methodExercised:
        target: "target"
        name: "getType"
        parameters: []
        signature: "getType(): ResolvableType"
        returnValueUuid: "bindAggregate_resolvableType1"
        access: 1
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "89C3C1614A3EB130109EB5645879EA01"
      index: 10
      valueUuid: "bindAggregate_resolvableType1"
      methodExercised:
        target: "org.springframework.core.ResolvableType"
        name: "asCollection"
        parameters: []
        signature: "asCollection(): ResolvableType"
        returnValueUuid: "bindAggregate_resolvableType5"
        access: 1
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "6717520F63C33BDA1DE5EB8668551182"
      index: 11
      valueUuid: "bindAggregate_resolvableType5"
      methodExercised:
        target: "org.springframework.core.ResolvableType"
        name: "getGeneric"
        parameters:
        - name: "indexes"
          valueUuid: "bindAggregate_int[]1"
        signature: "getGeneric(int[]): ResolvableType"
        returnValueUuid: "bindAggregate_resolvableType6"
        access: 129
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "3C84FAE656C74327C239D4F885BA612D"
      index: 12
      methodExercised:
        target: "target"
        name: "bindIndexed"
        parameters:
        - name: "name"
          valueUuid: "bindAggregate_configurationPropertyName1"
        - name: "target"
          valueUuid: "bindAggregate_bindable1"
        - name: "elementBinder"
          valueUuid: "bindAggregate_aggregateElementBinder1"
        - name: "aggregateType"
          valueUuid: "bindAggregate_resolvableType3"
        - name: "elementType"
          valueUuid: "bindAggregate_resolvableType6"
        - name: "result"
          valueUuid: "bindAggregate_indexedElementsBinder.IndexedCollectionSupplier1"
        signature: "bindIndexed(ConfigurationPropertyName,Bindable,AggregateElementBinder,ResolvableType,ResolvableType,IndexedElementsBinder$IndexedCollectionSupplier):\
          \ void"
        returnValueUuid: "bindAggregate_void1"
        access: 20
    - type: "LOCAL_VARIABLE"
      name: "result"
      modelFingerprint: "8CD1039EB25C5BE176874BDC2443726B"
      index: 13
      valueUuid: "bindAggregate_indexedElementsBinder.IndexedCollectionSupplier1"
      methodExercised:
        target: "result"
        name: "wasSupplied"
        parameters: []
        signature: "wasSupplied(): boolean"
        returnValueUuid: "bindAggregate_boolean1"
        access: 1
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7FF3E62C4C26664215CB4A88EF6B4C11"
      index: 14
      valueUuid: "bindAggregate_object1"
    uuid: "b803041a-05e6-3623-8060-a875ca1f5a9e"
    deleted: false
    disabled: true
    ignoredBySystem: false
    variablesCouldNotBeIsolated: "result"
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "if (result.wasSupplied()) {"
      lineNumber: 49
      details: "A variable could not be isolated or mocked when calling a method -\
        \ Variable name: result - Method: wasSupplied"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.CollectionBinder"
        parameters:
        - name: "context"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
            uuid: "<init>_binder.Context1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.bind.CollectionBinder"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "bindAggregate_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "bindAggregate_resolvableType1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindAggregate_bindable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.AggregateElementBinder"
      uuid: "bindAggregate_aggregateElementBinder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "bindAggregate_resolvableType1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindAggregate_bindable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "bindAggregate_resolvableType1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "bindAggregate_resolvableType1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.core.ResolvableType"
        method: "forClassWithGenerics"
        methodParameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            uuid: "bindAggregate_resolvableType2-clazz"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "generics"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.core.ResolvableType[]"
            uuid: "bindAggregate_resolvableType[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.core.ResolvableType"
      uuid: "bindAggregate_resolvableType2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.core.ResolvableType"
        method: "forClassWithGenerics"
        methodParameters:
        - name: "clazz"
          value:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            uuid: "bindAggregate_resolvableType2-clazz"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        - name: "generics"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "org.springframework.core.ResolvableType[]"
            uuid: "bindAggregate_resolvableType[]1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.core.ResolvableType"
      uuid: "bindAggregate_resolvableType2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.core.ResolvableType[]"
      uuid: "bindAggregate_resolvableType[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "uuid4"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "bindAggregate_resolvableType3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.util.List"
      valueType: "java.lang.Class"
      genericValueType: "java.util.List"
      uuid: "uuid3"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.core.ResolvableType[]"
      uuid: "bindAggregate_resolvableType[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "bindAggregate_resolvableType1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindAggregate_bindable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "bindAggregate_resolvableType1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "bindAggregate_resolvableType1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "bindAggregate_resolvableType5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "bindAggregate_resolvableType5"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "bindAggregate_resolvableType6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "int[]"
      uuid: "bindAggregate_int[]1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "VOID"
      valueType: "void"
      uuid: "bindAggregate_void1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "bindAggregate_configurationPropertyName1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "bindAggregate_resolvableType1"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindAggregate_bindable1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.AggregateElementBinder"
      uuid: "bindAggregate_aggregateElementBinder1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "bindAggregate_resolvableType3"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "bindAggregate_resolvableType6"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier"
        parameters:
        - name: "supplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.util.Collection<java.lang.Object>"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier"
      uuid: "bindAggregate_indexedElementsBinder.IndexedCollectionSupplier1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier"
        parameters:
        - name: "supplier"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.util.Collection<java.lang.Object>"
            fixed: false
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: true
      valueType: "org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier"
      uuid: "bindAggregate_indexedElementsBinder.IndexedCollectionSupplier1"
      fixed: true
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "bindAggregate_boolean1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "bindAggregate_object1"
      fixed: true
      equalsMethodPresent: true
      explicitCastNeeded: false
- method:
    name: "merge"
    signature: "merge(java.util.function.Supplier<java.util.Collection<java.lang.Object>>,java.util.Collection<java.lang.Object>)\
      \ : java.util.Collection<java.lang.Object>"
    sourceCodeSignature: "Collection<Object> merge(Supplier<Collection<Object>> existing,\
      \ Collection<Object> additional)"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.UnsupportedOperationException"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "40BF1C19E552EF73A12AD0692E8EF7EF"
  paths:
  - pathId: "path1"
    testPathName: "merge1WhenExistingCollectionIsNull"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.Binder$Context)\
      \ : void"
    modelFingerprint: "6418B21D8919710695C719563878711B"
    problemWasSolvedByProver: true
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "401426E2EDD32C85D39E07E4D14BCA91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "existing"
      modelFingerprint: "785EB13D5002B825A018E5C7062B3266"
      index: 2
      valueUuid: "merge_supplier1"
    - type: "INPUT"
      name: "additional"
      modelFingerprint: "25C28BC58B0C9BF4F1470E4946492F41"
      index: 3
      valueUuid: "merge_collection1"
    - type: "LOCAL_VARIABLE"
      name: "existing"
      modelFingerprint: "DC0C7B039ED0439186C055996F47E922"
      index: 4
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "merge_supplier1"
      methodExercised:
        target: "existing"
        name: "get"
        parameters: []
        signature: "get(): Object"
        returnValueUuid: "getExistingIfPossible_object1"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B5F85E865A1F9B98F131ED84496B9CF2"
      index: 5
      valueUuid: "merge_collection1"
    uuid: "d4b6d061-7340-30e3-87fa-bad8792e0847"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.CollectionBinder"
        parameters:
        - name: "context"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
            uuid: "<init>_binder.Context1"
            fixed: false
            nameForMock: "null"
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.bind.CollectionBinder"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "merge_supplier1"
      fixed: false
      nameForMock: "null"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "java.lang.Object"
      uuid: "merge_collection1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "merge_supplier1"
      fixed: false
      nameForMock: "null"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "NULL"
      valueType: "java.util.Collection"
      uuid: "getExistingIfPossible_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "java.lang.Object"
      uuid: "merge_collection1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path2"
    testPathName: "merge1WhenExistingCollectionIsNotNull"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.Binder$Context)\
      \ : void"
    modelFingerprint: "8C030E6EB8EBA8DBC6A810D5CB80BFA3"
    problemWasSolvedByProver: false
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "401426E2EDD32C85D39E07E4D14BCA91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "existing"
      modelFingerprint: "785EB13D5002B825A018E5C7062B3266"
      index: 2
      valueUuid: "merge_supplier1"
    - type: "INPUT"
      name: "additional"
      modelFingerprint: "5A628D1C9F544E0868CF9FB2BE543D56"
      index: 3
      valueUuid: "merge_collection1"
    - type: "LOCAL_VARIABLE"
      name: "existing"
      modelFingerprint: "3E370E7EFB95340D7313BB020B16179F"
      index: 4
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "merge_supplier1"
      methodExercised:
        target: "existing"
        name: "get"
        parameters: []
        signature: "get(): Object"
        returnValueUuid: "getExistingIfPossible_object1"
        access: 1025
    - type: "STATIC"
      name: "CollectionFactory"
      modelFingerprint: "C76B3AD078B9FDA5944EC6AD4A91F6AC"
      index: 5
      idsTryCatchBlockSurrounding:
      - 290003
      valueUuid: "uuid1"
      methodExercised:
        target: "org.springframework.core.CollectionFactory"
        name: "createCollection"
        parameters:
        - name: "collectionType"
          valueUuid: "createNewCollection_class1"
        - name: "capacity"
          valueUuid: "createNewCollection_int1"
        signature: "createCollection(Class,int): Collection"
        returnValueUuid: "createNewCollection_collection1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5F3316F51BBC2DAD710542CA1643CC6F"
      index: 6
      valueUuid: "createNewCollection_collection1"
    uuid: "0bd8aafc-4575-32af-8606-de9fcc419d80"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "UNKNOWN_REASON"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.CollectionBinder"
        parameters:
        - name: "context"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
            uuid: "<init>_binder.Context1"
            fixed: false
            nameForMock: "null"
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.bind.CollectionBinder"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "merge_supplier1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "merge_collection1-0"
          fixed: false
          collectionUuid: "merge_collection1"
          equalsMethodPresent: false
          explicitCastNeeded: false
        - sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "merge_collection1-1"
          fixed: false
          collectionUuid: "merge_collection1"
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Collection"
      genericValueType: "java.lang.Object"
      uuid: "merge_collection1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "merge_supplier1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      uuid: "getExistingIfPossible_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.CollectionFactory"
      uuid: "uuid1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "java.lang.Object"
      uuid: "createNewCollection_collection1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.util.ArrayList"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "createNewCollection_class1"
      fixed: false
      collectionUuid: "getExistingIfPossible_object1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "createNewCollection_int1"
      fixed: false
      collectionUuid: "getExistingIfPossible_object1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "java.lang.Object"
      uuid: "createNewCollection_collection1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path3"
    testPathName: "merge1WhenCaughtUnsupportedOperationException"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.Binder$Context)\
      \ : void"
    modelFingerprint: "3B252AA940754D6EAD36E48987ED8C36"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.UnsupportedOperationException"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "401426E2EDD32C85D39E07E4D14BCA91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "existing"
      modelFingerprint: "785EB13D5002B825A018E5C7062B3266"
      index: 2
      valueUuid: "merge_supplier1"
    - type: "INPUT"
      name: "additional"
      modelFingerprint: "5A628D1C9F544E0868CF9FB2BE543D56"
      index: 3
      valueUuid: "merge_collection1"
    - type: "LOCAL_VARIABLE"
      name: "existing"
      modelFingerprint: "3E370E7EFB95340D7313BB020B16179F"
      index: 4
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "merge_supplier1"
      methodExercised:
        target: "existing"
        name: "get"
        parameters: []
        signature: "get(): Object"
        returnValueUuid: "getExistingIfPossible_object1"
        access: 1025
    - type: "STATIC"
      name: "CollectionFactory"
      modelFingerprint: "5C36D20EB5FDABD7E5063548EBB89A7B"
      index: 5
      idsTryCatchBlockSurrounding:
      - 290003
      valueUuid: "uuid1"
      methodExercised:
        target: "org.springframework.core.CollectionFactory"
        name: "createCollection"
        parameters:
        - name: "collectionType"
          valueUuid: "createNewCollection_class1"
        - name: "capacity"
          valueUuid: "createNewCollection_int1"
        signature: "createCollection(Class,int): Collection"
        returnValueUuid: "createNewCollection_collection1"
        access: 9
    - type: "STATIC"
      name: "CollectionFactory"
      modelFingerprint: "08DDCE70406000BEA701FE7B4729FACF"
      index: 6
      valueUuid: "uuid2"
      methodExercised:
        target: "org.springframework.core.CollectionFactory"
        name: "createCollection"
        parameters:
        - name: "collectionType"
          valueUuid: "createNewCollection_class2"
        - name: "capacity"
          valueUuid: "createNewCollection_int2"
        signature: "createCollection(Class,int): Collection"
        returnValueUuid: "createNewCollection_collection2"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0A0439D2F8B9D3CA37A8EED032DF9835"
      index: 7
      valueUuid: "createNewCollection_collection2"
    uuid: "27ad051d-497e-338e-959d-4de0373f3c6e"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "DEPENDENCY_TO_THROW_EXCEPTION_NOT_FOUND"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.CollectionBinder"
        parameters:
        - name: "context"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
            uuid: "<init>_binder.Context1"
            fixed: false
            nameForMock: "null"
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.bind.CollectionBinder"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "merge_supplier1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "merge_collection1-0"
          fixed: false
          collectionUuid: "merge_collection1"
          equalsMethodPresent: false
          explicitCastNeeded: false
        - sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "merge_collection1-1"
          fixed: false
          collectionUuid: "merge_collection1"
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Collection"
      genericValueType: "java.lang.Object"
      uuid: "merge_collection1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "merge_supplier1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      uuid: "getExistingIfPossible_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.CollectionFactory"
      uuid: "uuid1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "java.lang.Object"
      uuid: "createNewCollection_collection1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.util.ArrayList"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "createNewCollection_class1"
      fixed: false
      collectionUuid: "getExistingIfPossible_object1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "createNewCollection_int1"
      fixed: false
      collectionUuid: "getExistingIfPossible_object1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "org.springframework.core.CollectionFactory"
      uuid: "uuid2"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "merge_collection1-0"
          fixed: false
          collectionUuid: "merge_collection1"
          equalsMethodPresent: false
          explicitCastNeeded: false
        - sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "merge_collection1-1"
          fixed: false
          collectionUuid: "merge_collection1"
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Collection"
      genericValueType: "java.lang.Object"
      uuid: "createNewCollection_collection2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.util.ArrayList"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "createNewCollection_class2"
      fixed: false
      collectionUuid: "merge_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 2
      valueType: "int"
      uuid: "createNewCollection_int2"
      fixed: false
      collectionUuid: "merge_collection1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "merge_collection1-0"
          fixed: false
          collectionUuid: "merge_collection1"
          equalsMethodPresent: false
          explicitCastNeeded: false
        - sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "merge_collection1-1"
          fixed: false
          collectionUuid: "merge_collection1"
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Collection"
      genericValueType: "java.lang.Object"
      uuid: "createNewCollection_collection2"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path4"
    testPathName: "merge1WhenCaughtException"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.Binder$Context)\
      \ : void"
    modelFingerprint: "C92E3040CF01AF0E0C678A0A4B1EA56C"
    problemWasSolvedByProver: false
    catchBlockExercised:
      idExternalInstruction: 29
      id: 3
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "401426E2EDD32C85D39E07E4D14BCA91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "existing"
      modelFingerprint: "785EB13D5002B825A018E5C7062B3266"
      index: 2
      valueUuid: "merge_supplier1"
    - type: "INPUT"
      name: "additional"
      modelFingerprint: "5A628D1C9F544E0868CF9FB2BE543D56"
      index: 3
      valueUuid: "merge_collection1"
    - type: "LOCAL_VARIABLE"
      name: "existing"
      modelFingerprint: "3E370E7EFB95340D7313BB020B16179F"
      index: 4
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "merge_supplier1"
      methodExercised:
        target: "existing"
        name: "get"
        parameters: []
        signature: "get(): Object"
        returnValueUuid: "getExistingIfPossible_object1"
        access: 1025
    - type: "STATIC"
      name: "CollectionFactory"
      modelFingerprint: "432A2B123E228A0845AB36748CF96DA4"
      index: 5
      idsTryCatchBlockSurrounding:
      - 290003
      valueUuid: "uuid1"
      methodExercised:
        target: "org.springframework.core.CollectionFactory"
        name: "createCollection"
        parameters:
        - name: "collectionType"
          valueUuid: "createNewCollection_class1"
        - name: "capacity"
          valueUuid: "createNewCollection_int1"
        signature: "createCollection(Class,int): Collection"
        returnValueUuid: "createNewCollection_collection1"
        access: 9
    - type: "RESULT"
      name: "result"
      modelFingerprint: "50AC778C37A2712626290F7AAFBDEBC4"
      index: 6
      valueUuid: "copyIfPossible_collection1"
    uuid: "e452e94b-b1fe-3a3a-8001-5d8d839829f7"
    deleted: false
    disabled: true
    ignoredBySystem: false
    failureReason:
      reason: "UNKNOWN_REASON"
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: true
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.CollectionBinder"
        parameters:
        - name: "context"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
            uuid: "<init>_binder.Context1"
            fixed: false
            nameForMock: "null"
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.bind.CollectionBinder"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "merge_supplier1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "merge_collection1-0"
          fixed: false
          collectionUuid: "merge_collection1"
          equalsMethodPresent: false
          explicitCastNeeded: false
        - sapientType: "OBJECT"
          content: !<new>
            target: "java.lang.Object"
            parameters: []
            privateConstructor: false
            createdByTargetCode: false
          valueType: "java.lang.Object"
          uuid: "merge_collection1-1"
          fixed: false
          collectionUuid: "merge_collection1"
          equalsMethodPresent: false
          explicitCastNeeded: false
      valueType: "java.util.Collection"
      genericValueType: "java.lang.Object"
      uuid: "merge_collection1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "merge_supplier1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      uuid: "getExistingIfPossible_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.CollectionFactory"
      uuid: "uuid1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      valueType: "java.lang.RuntimeException"
      uuid: "createNewCollection_collection1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.util.ArrayList"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "createNewCollection_class1"
      fixed: false
      collectionUuid: "getExistingIfPossible_object1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "BASIC"
      content: !<regular>
        value: 0
      valueType: "int"
      uuid: "createNewCollection_int1"
      fixed: false
      collectionUuid: "getExistingIfPossible_object1"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "java.lang.Object"
      uuid: "copyIfPossible_collection1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
  - pathId: "path5"
    testPathName: "merge1WhenCaughtExceptionAndExistingCollectionIsNull"
    constructorSignature: "<init>(org.springframework.boot.context.properties.bind.Binder$Context)\
      \ : void"
    modelFingerprint: "F46C26E104454CFA1295C269F0802394"
    problemWasSolvedByProver: true
    catchBlockExercised:
      idExternalInstruction: 4
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    truncated: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "401426E2EDD32C85D39E07E4D14BCA91"
      index: 1
      valueUuid: "target"
    - type: "INPUT"
      name: "existing"
      modelFingerprint: "785EB13D5002B825A018E5C7062B3266"
      index: 2
      valueUuid: "merge_supplier1"
    - type: "INPUT"
      name: "additional"
      modelFingerprint: "25C28BC58B0C9BF4F1470E4946492F41"
      index: 3
      valueUuid: "merge_collection1"
    - type: "LOCAL_VARIABLE"
      name: "existing"
      modelFingerprint: "DC0C7B039ED0439186C055996F47E922"
      index: 4
      idsTryCatchBlockSurrounding:
      - 40002
      valueUuid: "merge_supplier1"
      methodExercised:
        target: "existing"
        name: "get"
        parameters: []
        signature: "get(): Object"
        returnValueUuid: "getExistingIfPossible_object1"
        access: 1025
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B5F85E865A1F9B98F131ED84496B9CF2"
      index: 5
      valueUuid: "merge_collection1"
    uuid: "f65bf95d-6b3d-37b7-9cf4-c05435faf474"
    deleted: false
    disabled: false
    ignoredBySystem: false
    prover: "LLM"
    disabledStatusUpdatedByUser: false
    disabledStatusUpdatedBySystem: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.CollectionBinder"
        parameters:
        - name: "context"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
            uuid: "<init>_binder.Context1"
            fixed: false
            nameForMock: "null"
            equalsMethodPresent: false
            explicitCastNeeded: false
        privateConstructor: false
        createdByTargetCode: false
      valueType: "org.springframework.boot.context.properties.bind.CollectionBinder"
      uuid: "target"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "merge_supplier1"
      fixed: false
      nameForMock: "null"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "java.lang.Object"
      uuid: "merge_collection1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "merge_supplier1"
      fixed: false
      nameForMock: "null"
      equalsMethodPresent: false
      explicitCastNeeded: false
    - sapientType: "EXCEPTION"
      valueType: "java.lang.RuntimeException"
      uuid: "getExistingIfPossible_object1"
      fixed: false
      equalsMethodPresent: false
      explicitCastNeeded: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values: []
      valueType: "java.util.Collection"
      genericValueType: "java.lang.Object"
      uuid: "merge_collection1"
      fixed: false
      equalsMethodPresent: true
      explicitCastNeeded: false
