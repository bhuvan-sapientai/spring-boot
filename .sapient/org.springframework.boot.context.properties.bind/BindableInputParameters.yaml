---
modelFingerprint: "A322C4AB9946C72C41D8AF38F27638AE"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.bind.Bindable"
methods:
- method:
    name: "getType"
    sourceCodeSignature: "ResolvableType getType()"
    returnType: "org.springframework.core.ResolvableType"
    instructionFingerprint: "3DD93CE1543B326B0823C3E7CC2720A8"
  paths:
  - pathId: "path1"
    testPathName: "getTypeTest"
    constructorSignature: "ofInstance(java.lang.Object) : org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>"
    modelFingerprint: "AD5546DE8816CD8AC222654437AD82E4"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getBoxedType"
    sourceCodeSignature: "ResolvableType getBoxedType()"
    returnType: "org.springframework.core.ResolvableType"
    instructionFingerprint: "46D9D2903A612BFA1E8ED0C4CC3DF592"
  paths:
  - pathId: "path1"
    testPathName: "getBoxedTypeTest"
    constructorSignature: "ofInstance(java.lang.Object) : org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>"
    modelFingerprint: "AD5546DE8816CD8AC222654437AD82E4"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getValue"
    sourceCodeSignature: "Supplier<T> getValue()"
    returnType: "java.util.function.Supplier"
    instructionFingerprint: "1F4695FFC1908468BE43B8D4701DCBE3"
  paths:
  - pathId: "path1"
    testPathName: "getValueTest"
    constructorSignature: "ofInstance(java.lang.Object) : org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>"
    modelFingerprint: "1163DAB22DE8C2676F90530583628004"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getAnnotations"
    sourceCodeSignature: "Annotation[] getAnnotations()"
    returnType: "java.lang.annotation.Annotation[]"
    instructionFingerprint: "B4033EB8B2869F955E91B06EBC39A0EE"
  paths:
  - pathId: "path1"
    testPathName: "getAnnotationsTest"
    constructorSignature: "ofInstance(java.lang.Object) : org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>"
    modelFingerprint: "5644B1AA710E7FEF216807BECA8C6843"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "getAnnotation"
    sourceCodeSignature: "<A extends Annotation> A getAnnotation(Class<A> type)"
    returnType: "java.lang.annotation.Annotation"
    parameters:
    - name: "type"
      type: "java.lang.Class"
    instructionFingerprint: "0706615BDDFC1DAEBBD223E1E80A3877"
  paths:
  - pathId: "path1"
    testPathName: "getAnnotationWhenTypeIsInstanceAnnotation"
    constructorSignature: "ofInstance(java.lang.Object) : org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>"
    modelFingerprint: "82BA15090AF794391952073150EFED0F"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "30C263286EA82EEDE29AFB3A3DDF9FDA"
      valueUuid: "target"
    - type: "INPUT"
      name: "type"
      modelFingerprint: "6F9ED6C24F327099FA1B91CA7AA4275E"
      valueUuid: "type"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "CC5073E1D886C7AE78FA5A2065168232"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:instance,message:uniqueUuid5):void"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "24FC802221291524E77E9292068CBDE1"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:class):bindable"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "24A3FCF169DAD397B380FF8375026D30"
      valueUuid: "bindable"
      methodExercised:
        expression: "withExistingValue(existingValue:instance):bindable2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "04A1C14FC3308404CE2A54877741FB4D"
      valueUuid: "annotation"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isInstance(java.lang.annotation.Annotation)\
        \ : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.annotation.Annotation"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.annotation.Annotation"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Instance must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "MOCK"
      valueType: "java.lang.annotation.Annotation"
      uuid: "annotation"
    branches:
    - lineNumber: 112
      expression: "for-each(this.annotations)"
      range: "(112,32)-(112,47)"
      evaluatedAs: true
    - lineNumber: 113
      expression: "type.isInstance(annotation)"
      range: "(113,8)-(113,34)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "getAnnotationWhenTypeNotIsInstanceAnnotation"
    constructorSignature: "ofInstance(java.lang.Object) : org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>"
    modelFingerprint: "4B41984FFCF84847B885C5E50378589B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "30C263286EA82EEDE29AFB3A3DDF9FDA"
      valueUuid: "target"
    - type: "INPUT"
      name: "type"
      modelFingerprint: "6F9ED6C24F327099FA1B91CA7AA4275E"
      valueUuid: "type"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "CC5073E1D886C7AE78FA5A2065168232"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:instance,message:uniqueUuid6):void"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "24FC802221291524E77E9292068CBDE1"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:class):bindable"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "24A3FCF169DAD397B380FF8375026D30"
      valueUuid: "bindable"
      methodExercised:
        expression: "withExistingValue(existingValue:instance):bindable2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "AED2BB38A2AFF2AD8F4D9AABDCD9E758"
      valueUuid: "annotation2"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isInstance(java.lang.annotation.Annotation)\
        \ : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.annotation.Annotation"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.annotation.Annotation"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Instance must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "NULL"
      valueType: "java.lang.annotation.Annotation"
      uuid: "annotation2"
      fixed: true
    branches:
    - lineNumber: 112
      expression: "for-each(this.annotations)"
      range: "(112,32)-(112,47)"
      evaluatedAs: true
    - lineNumber: 113
      expression: "type.isInstance(annotation)"
      range: "(113,8)-(113,34)"
      evaluatedAs: false
- method:
    name: "hasBindRestriction"
    sourceCodeSignature: "boolean hasBindRestriction(BindRestriction bindRestriction)"
    returnType: "boolean"
    parameters:
    - name: "bindRestriction"
      type: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
    instructionFingerprint: "BE6ECEC9EA64C03E4ED28A56DA0350B1"
  paths:
  - pathId: "path1"
    testPathName: "hasBindRestrictionWhenThisBindRestrictionsContainsBindRestriction"
    constructorSignature: "ofInstance(java.lang.Object) : org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>"
    modelFingerprint: "56966E325A71FBAAC829BB3B1F1C2AA3"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "30C263286EA82EEDE29AFB3A3DDF9FDA"
      valueUuid: "target"
    - type: "INPUT"
      name: "bindRestriction"
      modelFingerprint: "057F6E76D50C38DB95D0DCAD30166594"
      valueUuid: "bindRestriction"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "CC5073E1D886C7AE78FA5A2065168232"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:instance,message:uniqueUuid7):void"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "24FC802221291524E77E9292068CBDE1"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:class):bindable"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "24A3FCF169DAD397B380FF8375026D30"
      valueUuid: "bindable"
      methodExercised:
        expression: "withExistingValue(existingValue:instance):bindable2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "008FA075564487DD49423319C7795C5E"
      valueUuid: "boolean1"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "bindRestriction"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Instance must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean1"
      fixed: true
      collectionUuid: "fieldEnumSet2"
    branches:
    - lineNumber: 127
      expression: "this.bindRestrictions.contains(bindRestriction)"
      range: "(127,10)-(127,56)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "hasBindRestrictionWhenThisBindRestrictionsNotContainsBindRestriction"
    constructorSignature: "ofInstance(java.lang.Object) : org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>"
    modelFingerprint: "E672CCE1469CE003BEE3B0EA2AC9F9B0"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "30C263286EA82EEDE29AFB3A3DDF9FDA"
      valueUuid: "target"
    - type: "INPUT"
      name: "bindRestriction"
      modelFingerprint: "057F6E76D50C38DB95D0DCAD30166594"
      valueUuid: "bindRestriction"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "CC5073E1D886C7AE78FA5A2065168232"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:instance,message:uniqueUuid8):void"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "24FC802221291524E77E9292068CBDE1"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:class):bindable"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "24A3FCF169DAD397B380FF8375026D30"
      valueUuid: "bindable"
      methodExercised:
        expression: "withExistingValue(existingValue:instance):bindable2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "C532B70D233E59BD0B9DC9C634733651"
      valueUuid: "boolean1"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "bindRestriction"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Instance must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
      fixed: true
      collectionUuid: "fieldEnumSet2"
    branches:
    - lineNumber: 127
      expression: "this.bindRestrictions.contains(bindRestriction)"
      range: "(127,10)-(127,56)"
      evaluatedAs: false
- method:
    name: "getBindMethod"
    sourceCodeSignature: "BindMethod getBindMethod()"
    returnType: "org.springframework.boot.context.properties.bind.BindMethod"
    instructionFingerprint: "B7503E9732F19BC3383BB23E9E197609"
  paths:
  - pathId: "path1"
    testPathName: "getBindMethodTest"
    constructorSignature: "ofInstance(java.lang.Object) : org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>"
    modelFingerprint: "1C62C8BB1B16B5CDB05EFF26DB801386"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
- method:
    name: "equals"
    sourceCodeSignature: "boolean equals(Object obj)"
    returnType: "boolean"
    parameters:
    - name: "obj"
      type: "java.lang.Object"
    instructionFingerprint: "4B10AF431C706E0384A0B97FD3B51DE0"
  paths:
  - pathId: "path1"
    testPathName: "equalsWhenThisEqualsObj"
    constructorSignature: "ofInstance(java.lang.Object) : org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>"
    modelFingerprint: "314CF2F6B09E391A5BF70043A4B6BF73"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 142
      expression: "this == obj"
      range: "(142,7)-(142,17)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "equalsWhenGetClassNotEqualsObjGetClass"
    constructorSignature: "ofInstance(java.lang.Object) : org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>"
    modelFingerprint: "A7CF746B669E07392FE6D5F8AA1C6E9C"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 142
      expression: "this == obj"
      range: "(142,7)-(142,17)"
      evaluatedAs: false
    - lineNumber: 145
      expression: "obj == null"
      range: "(145,7)-(145,17)"
      evaluatedAs: false
    - lineNumber: 145
      expression: "getClass() != obj.getClass()"
      range: "(145,22)-(145,49)"
      evaluatedAs: true
  - pathId: "path4"
    testPathName: "equalsWhenNotResult"
    constructorSignature: "ofInstance(java.lang.Object) : org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>"
    modelFingerprint: "4F94CCFCB893E841C3F5D0F34270BF5B"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 142
      expression: "this == obj"
      range: "(142,7)-(142,17)"
      evaluatedAs: false
    - lineNumber: 145
      expression: "obj == null"
      range: "(145,7)-(145,17)"
      evaluatedAs: false
    - lineNumber: 145
      expression: "getClass() != obj.getClass()"
      range: "(145,22)-(145,49)"
      evaluatedAs: false
    - lineNumber: 150
      expression: "result"
      range: "(150,12)-(150,17)"
      evaluatedAs: true
    - lineNumber: 173
      expression: "ObjectUtils.nullSafeEquals(o1, o2)"
      range: "(173,10)-(173,43)"
      evaluatedAs: false
      internalMethodName: "nullSafeEquals"
    - lineNumber: 150
      expression: "nullSafeEquals(this.type.resolve(), other.type.resolve())"
      range: "(150,22)-(150,78)"
      evaluatedAs: false
    - lineNumber: 151
      expression: "result"
      range: "(151,12)-(151,17)"
      evaluatedAs: false
    - lineNumber: 152
      expression: "result"
      range: "(152,12)-(152,17)"
      evaluatedAs: false
    - lineNumber: 153
      expression: "result"
      range: "(153,12)-(153,17)"
      evaluatedAs: false
  - pathId: "path3"
    testPathName: "equalsWhenNullSafeEqualsThisBindMethodOtherBindMethod"
    constructorSignature: "ofInstance(java.lang.Object) : org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>"
    modelFingerprint: "CDB49D035F68FF9F80F959CA485D49CA"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 142
      expression: "this == obj"
      range: "(142,7)-(142,17)"
      evaluatedAs: false
    - lineNumber: 145
      expression: "obj == null"
      range: "(145,7)-(145,17)"
      evaluatedAs: false
    - lineNumber: 145
      expression: "getClass() != obj.getClass()"
      range: "(145,22)-(145,49)"
      evaluatedAs: false
    - lineNumber: 150
      expression: "result"
      range: "(150,12)-(150,17)"
      evaluatedAs: true
    - lineNumber: 173
      expression: "ObjectUtils.nullSafeEquals(o1, o2)"
      range: "(173,10)-(173,43)"
      evaluatedAs: true
      internalMethodName: "nullSafeEquals"
    - lineNumber: 150
      expression: "nullSafeEquals(this.type.resolve(), other.type.resolve())"
      range: "(150,22)-(150,78)"
      evaluatedAs: true
    - lineNumber: 151
      expression: "result"
      range: "(151,12)-(151,17)"
      evaluatedAs: true
    - lineNumber: 151
      expression: "nullSafeEquals(this.annotations, other.annotations)"
      range: "(151,22)-(151,72)"
      evaluatedAs: true
    - lineNumber: 152
      expression: "result"
      range: "(152,12)-(152,17)"
      evaluatedAs: true
    - lineNumber: 152
      expression: "nullSafeEquals(this.bindRestrictions, other.bindRestrictions)"
      range: "(152,22)-(152,82)"
      evaluatedAs: true
    - lineNumber: 153
      expression: "result"
      range: "(153,12)-(153,17)"
      evaluatedAs: true
    - lineNumber: 153
      expression: "nullSafeEquals(this.bindMethod, other.bindMethod)"
      range: "(153,22)-(153,70)"
      evaluatedAs: true
- method:
    name: "toString"
    sourceCodeSignature: "String toString()"
    returnType: "java.lang.String"
    instructionFingerprint: "3D0BDC4E952A2C8878BB604C4A3EE235"
  paths:
  - pathId: "path1"
    testPathName: "toStringWhenThisValueIsNull"
    constructorSignature: "ofInstance(java.lang.Object) : org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>"
    modelFingerprint: "9DC81AFD74F2F4DA041273DAA5904489"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "30C263286EA82EEDE29AFB3A3DDF9FDA"
      valueUuid: "target"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "CC5073E1D886C7AE78FA5A2065168232"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:instance,message:uniqueUuid14):void"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "24FC802221291524E77E9292068CBDE1"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:class):bindable"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "24A3FCF169DAD397B380FF8375026D30"
      valueUuid: "bindable"
      methodExercised:
        expression: "withExistingValue(existingValue:instance):bindable2"
    - type: "LOCAL_VARIABLE"
      name: "creator"
      modelFingerprint: "2BF4C897A21ECCEA40FD9B777333B93D"
      valueUuid: "toStringCreator"
      methodExercised:
        expression: "append(fieldName:uniqueUuid15,value:fieldResolvableType):toStringCreator2"
    - type: "LOCAL_VARIABLE"
      name: "creator"
      modelFingerprint: "6EC067D9C6B3F57444BE584350C47CA4"
      valueUuid: "toStringCreator"
      methodExercised:
        expression: "append(fieldName:uniqueUuid17,value:uniqueUuid18):toStringCreator3"
    - type: "LOCAL_VARIABLE"
      name: "creator"
      modelFingerprint: "CA4A09ECA6F69B44F210E36B4821097F"
      valueUuid: "toStringCreator"
      methodExercised:
        expression: "append(fieldName:uniqueUuid21,value:fieldAnnotationArray2):toStringCreator4"
    - type: "LOCAL_VARIABLE"
      name: "creator"
      modelFingerprint: "763C90625B6F2E90A5DD8711E12BBE30"
      valueUuid: "toStringCreator"
      methodExercised:
        expression: "append(fieldName:uniqueUuid23,value:fieldBindMethod):toStringCreator5"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D446A609419428DDEAA49A58091F3986"
      valueUuid: "string"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "creator.append(\\\"type\\\", this.type);"
      lineNumber: 165
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: creator - Method: append"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Instance must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid14"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.core.style.ToStringCreator"
        parameters:
        - name: "obj"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            uuid: "targetClassObject"
            fixed: true
      valueType: "org.springframework.core.style.ToStringCreator"
      uuid: "toStringCreator"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.style.ToStringCreator"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.core.style.ToStringCreator"
            parameters:
            - name: "obj"
              value:
                sapientType: "THIS"
                valueType: "org.springframework.boot.context.properties.bind.Bindable"
                uuid: "targetClassObject"
                fixed: true
          valueType: "org.springframework.core.style.ToStringCreator"
          uuid: "toStringCreator"
          fixed: true
        methodParameters:
        - name: "fieldName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "type"
            valueType: "java.lang.String"
            uuid: "uniqueUuid16"
            fixed: true
        - name: "value"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "fieldResolvableType"
        methodName: "append"
      valueType: "org.springframework.core.style.ToStringCreator"
      uuid: "toStringCreator2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "type"
      valueType: "java.lang.String"
      uuid: "uniqueUuid15"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "fieldResolvableType"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.core.style.ToStringCreator"
        parameters:
        - name: "obj"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            uuid: "targetClassObject"
            fixed: true
      valueType: "org.springframework.core.style.ToStringCreator"
      uuid: "toStringCreator"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.style.ToStringCreator"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.core.style.ToStringCreator"
            parameters:
            - name: "obj"
              value:
                sapientType: "THIS"
                valueType: "org.springframework.boot.context.properties.bind.Bindable"
                uuid: "targetClassObject"
                fixed: true
          valueType: "org.springframework.core.style.ToStringCreator"
          uuid: "toStringCreator"
          fixed: true
        methodParameters:
        - name: "fieldName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "value"
            valueType: "java.lang.String"
            uuid: "uniqueUuid19"
            fixed: true
        - name: "value"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "none"
            valueType: "java.lang.String"
            uuid: "uniqueUuid20"
            fixed: true
        methodName: "append"
      valueType: "org.springframework.core.style.ToStringCreator"
      uuid: "toStringCreator3"
    - sapientType: "BASIC"
      content: !<regular>
        value: "value"
      valueType: "java.lang.String"
      uuid: "uniqueUuid17"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: "none"
      valueType: "java.lang.String"
      uuid: "uniqueUuid18"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.core.style.ToStringCreator"
        parameters:
        - name: "obj"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            uuid: "targetClassObject"
            fixed: true
      valueType: "org.springframework.core.style.ToStringCreator"
      uuid: "toStringCreator"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.style.ToStringCreator"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.core.style.ToStringCreator"
            parameters:
            - name: "obj"
              value:
                sapientType: "THIS"
                valueType: "org.springframework.boot.context.properties.bind.Bindable"
                uuid: "targetClassObject"
                fixed: true
          valueType: "org.springframework.core.style.ToStringCreator"
          uuid: "toStringCreator"
          fixed: true
        methodParameters:
        - name: "fieldName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "annotations"
            valueType: "java.lang.String"
            uuid: "uniqueUuid22"
            fixed: true
        - name: "value"
          value:
            sapientType: "NULL"
            valueType: "java.lang.annotation.Annotation[]"
            uuid: "fieldAnnotationArray2"
        methodName: "append"
      valueType: "org.springframework.core.style.ToStringCreator"
      uuid: "toStringCreator4"
    - sapientType: "BASIC"
      content: !<regular>
        value: "annotations"
      valueType: "java.lang.String"
      uuid: "uniqueUuid21"
      fixed: true
    - sapientType: "NULL"
      valueType: "java.lang.annotation.Annotation[]"
      uuid: "fieldAnnotationArray2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.core.style.ToStringCreator"
        parameters:
        - name: "obj"
          value:
            sapientType: "THIS"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            uuid: "targetClassObject"
            fixed: true
      valueType: "org.springframework.core.style.ToStringCreator"
      uuid: "toStringCreator"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "org.springframework.core.style.ToStringCreator"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.core.style.ToStringCreator"
            parameters:
            - name: "obj"
              value:
                sapientType: "THIS"
                valueType: "org.springframework.boot.context.properties.bind.Bindable"
                uuid: "targetClassObject"
                fixed: true
          valueType: "org.springframework.core.style.ToStringCreator"
          uuid: "toStringCreator"
          fixed: true
        methodParameters:
        - name: "fieldName"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "bindMethod"
            valueType: "java.lang.String"
            uuid: "uniqueUuid24"
            fixed: true
        - name: "value"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindMethod"
            uuid: "fieldBindMethod"
        methodName: "append"
      valueType: "org.springframework.core.style.ToStringCreator"
      uuid: "toStringCreator5"
    - sapientType: "BASIC"
      content: !<regular>
        value: "bindMethod"
      valueType: "java.lang.String"
      uuid: "uniqueUuid23"
      fixed: true
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "fieldBindMethod"
    - sapientType: "BASIC"
      content: !<regular>
        value: "result1"
      valueType: "java.lang.String"
      uuid: "string"
    branches:
    - lineNumber: 166
      expression: "this.value != null"
      range: "(166,28)-(166,45)"
      evaluatedAs: false
- method:
    name: "withAnnotations"
    sourceCodeSignature: "Bindable<T> withAnnotations(Annotation... annotations)"
    returnType: "org.springframework.boot.context.properties.bind.Bindable"
    parameters:
    - name: "annotations"
      type: "java.lang.annotation.Annotation[]"
    instructionFingerprint: "B5B546A58B604B17E7CB207B36FA274E"
  paths:
  - pathId: "path1"
    testPathName: "withAnnotationsWhenAnnotationsIsNotNull"
    constructorSignature: "ofInstance(java.lang.Object) : org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>"
    modelFingerprint: "BBD340BC53CF6E60D1C9D1053E4EF50C"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "30C263286EA82EEDE29AFB3A3DDF9FDA"
      valueUuid: "target"
    - type: "INPUT"
      name: "annotations"
      modelFingerprint: "BC4676DE8B56E2D73409FFC80465D04E"
      valueUuid: "annotations"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "CC5073E1D886C7AE78FA5A2065168232"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:instance,message:uniqueUuid25):void"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "24FC802221291524E77E9292068CBDE1"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:class):bindable"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "24A3FCF169DAD397B380FF8375026D30"
      valueUuid: "bindable"
      methodExercised:
        expression: "withExistingValue(existingValue:instance):bindable2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "21C2512D9B3B684A5D2FBAD43425E213"
      valueUuid: "bindable3"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "java.lang.annotation.Annotation[]"
      uuid: "annotations"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Instance must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid25"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        parameters:
        - name: "type"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "fieldResolvableType"
        - name: "boxedType"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "fieldResolvableType2"
        - name: "value"
          value:
            sapientType: "NULL"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.Object"
            uuid: "fieldSupplier"
        - name: "annotations"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.annotation.Annotation[]"
            uuid: "annotations"
        - name: "bindRestrictions"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.EnumSet"
            genericValueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
            uuid: "enumSet"
        - name: "bindMethod"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindMethod"
            uuid: "fieldBindMethod"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable3"
      fixed: true
    branches:
    - lineNumber: 183
      expression: "annotations != null"
      range: "(183,6)-(183,24)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "withAnnotationsWhenAnnotationsIsNull"
    constructorSignature: "ofInstance(java.lang.Object) : org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>"
    modelFingerprint: "C37C0C5ABFDF5624EC9AA68A81082403"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "30C263286EA82EEDE29AFB3A3DDF9FDA"
      valueUuid: "target"
    - type: "INPUT"
      name: "annotations"
      modelFingerprint: "E1AD599FF1EFCB9DBC64F33ECC422F1D"
      valueUuid: "annotations"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "CC5073E1D886C7AE78FA5A2065168232"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:instance,message:uniqueUuid26):void"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "24FC802221291524E77E9292068CBDE1"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:class):bindable"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "24A3FCF169DAD397B380FF8375026D30"
      valueUuid: "bindable"
      methodExercised:
        expression: "withExistingValue(existingValue:instance):bindable2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A27F5238636031900E8F59BECA7941E6"
      valueUuid: "bindable3"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target"
    - sapientType: "NULL"
      valueType: "java.lang.annotation.Annotation[]"
      uuid: "annotations"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Instance must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid26"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        parameters:
        - name: "type"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "fieldResolvableType"
        - name: "boxedType"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "fieldResolvableType2"
        - name: "value"
          value:
            sapientType: "NULL"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.Object"
            uuid: "fieldSupplier"
        - name: "annotations"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.annotation.Annotation[]"
            uuid: "annotationArray"
        - name: "bindRestrictions"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.EnumSet"
            genericValueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
            uuid: "enumSet"
        - name: "bindMethod"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindMethod"
            uuid: "fieldBindMethod"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable3"
      fixed: true
    branches:
    - lineNumber: 183
      expression: "annotations != null"
      range: "(183,6)-(183,24)"
      evaluatedAs: false
- method:
    name: "withExistingValue"
    sourceCodeSignature: "Bindable<T> withExistingValue(T existingValue)"
    returnType: "org.springframework.boot.context.properties.bind.Bindable"
    parameters:
    - name: "existingValue"
      type: "java.lang.Object"
    instructionFingerprint: "839C0E3A01C6D1B73628E2F2320464CA"
  paths:
  - pathId: "path4"
    testPathName: "withExistingValueWhenExistingValueIsNull"
    constructorSignature: "ofInstance(java.lang.Object) : org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>"
    modelFingerprint: "5C5B5613BDCE883797ED59C8CB3E4821"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "30C263286EA82EEDE29AFB3A3DDF9FDA"
      valueUuid: "target"
    - type: "INPUT"
      name: "existingValue"
      modelFingerprint: "22C4733CBD88150434C363F97F9DE3C7"
      valueUuid: "existingValue"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "CC5073E1D886C7AE78FA5A2065168232"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:instance,message:uniqueUuid27):void"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "24FC802221291524E77E9292068CBDE1"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:class):bindable"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "24A3FCF169DAD397B380FF8375026D30"
      valueUuid: "bindable"
      methodExercised:
        expression: "withExistingValue(existingValue:instance):bindable2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D276D6A048E9834CDD993F8118761E8F"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid28,messageSupplier:uniqueUuid29):void2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A7F96A6DD09FE22FCDF20C3F86F6C17"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:uniqueUuid30,messageSupplier:uniqueUuid31):void3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "DA927215A38BAF14F040BF29DD5B306D"
      valueUuid: "bindable3"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "existingValue"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Instance must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid27"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid28"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid29"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid30"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid31"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        parameters:
        - name: "type"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "fieldResolvableType"
        - name: "boxedType"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "fieldResolvableType2"
        - name: "value"
          value:
            sapientType: "NULL"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.Object"
            uuid: "uniqueUuid32"
        - name: "annotations"
          value:
            sapientType: "NULL"
            valueType: "java.lang.annotation.Annotation[]"
            uuid: "fieldAnnotationArray2"
        - name: "bindRestrictions"
          value:
            sapientType: "NULL"
            valueType: "java.util.EnumSet"
            genericValueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
            uuid: "fieldEnumSet2"
        - name: "bindMethod"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "JAVA_BEAN"
            valueType: "org.springframework.boot.context.properties.bind.BindMethod"
            uuid: "Enum-org.springframework.boot.context.properties.bind.BindMethod-JAVA_BEAN"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable3"
      fixed: true
    branches:
    - lineNumber: 193
      expression: "branch expression (line 193)"
      range: "(193,1)-(193,200)"
      evaluatedAs: false
    - lineNumber: 196
      expression: "this.bindMethod != BindMethod.VALUE_OBJECT"
      range: "(196,16)-(196,57)"
      evaluatedAs: true
    - lineNumber: 198
      expression: "existingValue != null"
      range: "(198,24)-(198,44)"
      evaluatedAs: false
  - pathId: "path1"
    testPathName: "withExistingValueWhenThisBindMethodNotEqualsBindMethodVALUE_OBJECTAndExistingValueIsNotNull"
    constructorSignature: "ofInstance(java.lang.Object) : org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>"
    modelFingerprint: "8234DF641AF817D7EC458D2172963406"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "30C263286EA82EEDE29AFB3A3DDF9FDA"
      valueUuid: "target"
    - type: "INPUT"
      name: "existingValue"
      modelFingerprint: "E39FE1813612FA6179371E9F4A11CA1C"
      valueUuid: "existingValue"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "CC5073E1D886C7AE78FA5A2065168232"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:instance,message:uniqueUuid33):void"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "24FC802221291524E77E9292068CBDE1"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:class):bindable"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "24A3FCF169DAD397B380FF8375026D30"
      valueUuid: "bindable"
      methodExercised:
        expression: "withExistingValue(existingValue:instance):bindable2"
    - type: "FIELD"
      name: "type"
      modelFingerprint: "5942B8DE47EEEBF74DD325B826769B5D"
      valueUuid: "fieldResolvableType"
      methodExercised:
        expression: "isArray():boolean1"
    - type: "FIELD"
      name: "boxedType"
      modelFingerprint: "242FAD451D1FDAA75F9F1E22CFC81853"
      valueUuid: "fieldResolvableType2"
      methodExercised:
        expression: "resolve():class2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "D276D6A048E9834CDD993F8118761E8F"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid34,messageSupplier:uniqueUuid35):void2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A7F96A6DD09FE22FCDF20C3F86F6C17"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:uniqueUuid36,messageSupplier:uniqueUuid37):void3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "EAAF20A1552EAF10077AC41A5F3D8D31"
      valueUuid: "bindable3"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isInstance(java.lang.Object) :\
        \ boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "existingValue"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Instance must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid33"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "fieldResolvableType"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "fieldResolvableType2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid34"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid35"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid36"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid37"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        parameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "fieldResolvableType"
        - name: "boxedType"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "fieldResolvableType2"
        - name: "value"
          value:
            sapientType: "NULL"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.Object"
            uuid: "uniqueUuid38"
        - name: "annotations"
          value:
            sapientType: "NULL"
            valueType: "java.lang.annotation.Annotation[]"
            uuid: "fieldAnnotationArray2"
        - name: "bindRestrictions"
          value:
            sapientType: "NULL"
            valueType: "java.util.EnumSet"
            genericValueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
            uuid: "fieldEnumSet2"
        - name: "bindMethod"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "JAVA_BEAN"
            valueType: "org.springframework.boot.context.properties.bind.BindMethod"
            uuid: "Enum-org.springframework.boot.context.properties.bind.BindMethod-JAVA_BEAN"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable3"
      fixed: true
    branches:
    - lineNumber: 193
      expression: "branch expression (line 193)"
      range: "(193,1)-(193,200)"
      evaluatedAs: false
    - lineNumber: 194
      expression: "existingValue == null"
      range: "(194,5)-(194,25)"
      evaluatedAs: true
    - lineNumber: 194
      expression: "this.type.isArray()"
      range: "(194,30)-(194,48)"
      evaluatedAs: true
    - lineNumber: 196
      expression: "this.bindMethod != BindMethod.VALUE_OBJECT"
      range: "(196,16)-(196,57)"
      evaluatedAs: true
    - lineNumber: 198
      expression: "existingValue != null"
      range: "(198,24)-(198,44)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "withExistingValueWhenThisTypeNotIsArrayAndThisBindMethodNotEqualsBindMethodVALUE_OBJECTAndExistingValueIsNotNull"
    constructorSignature: "ofInstance(java.lang.Object) : org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>"
    modelFingerprint: "3A88D34673570ED6326BD970A539D086"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "30C263286EA82EEDE29AFB3A3DDF9FDA"
      valueUuid: "target"
    - type: "INPUT"
      name: "existingValue"
      modelFingerprint: "E39FE1813612FA6179371E9F4A11CA1C"
      valueUuid: "existingValue"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "CC5073E1D886C7AE78FA5A2065168232"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:instance,message:uniqueUuid39):void"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "24FC802221291524E77E9292068CBDE1"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:class):bindable"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "24A3FCF169DAD397B380FF8375026D30"
      valueUuid: "bindable"
      methodExercised:
        expression: "withExistingValue(existingValue:instance):bindable2"
    - type: "FIELD"
      name: "type"
      modelFingerprint: "5942B8DE47EEEBF74DD325B826769B5D"
      valueUuid: "fieldResolvableType"
      methodExercised:
        expression: "isArray():boolean1"
    - type: "FIELD"
      name: "boxedType"
      modelFingerprint: "242FAD451D1FDAA75F9F1E22CFC81853"
      valueUuid: "fieldResolvableType2"
      methodExercised:
        expression: "resolve():class2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "0FF99BE285034A4BD8AB13D2343E2A11"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "isTrue(expression:uniqueUuid40,messageSupplier:uniqueUuid41):void2"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A7F96A6DD09FE22FCDF20C3F86F6C17"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:uniqueUuid42,messageSupplier:uniqueUuid43):void3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "EAAF20A1552EAF10077AC41A5F3D8D31"
      valueUuid: "bindable3"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isInstance(java.lang.Object) :\
        \ boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "existingValue"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Instance must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid39"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "fieldResolvableType"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "fieldResolvableType2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "uniqueUuid40"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid41"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid42"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid43"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        parameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "fieldResolvableType"
        - name: "boxedType"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "fieldResolvableType2"
        - name: "value"
          value:
            sapientType: "NULL"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.Object"
            uuid: "uniqueUuid44"
        - name: "annotations"
          value:
            sapientType: "NULL"
            valueType: "java.lang.annotation.Annotation[]"
            uuid: "fieldAnnotationArray2"
        - name: "bindRestrictions"
          value:
            sapientType: "NULL"
            valueType: "java.util.EnumSet"
            genericValueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
            uuid: "fieldEnumSet2"
        - name: "bindMethod"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "JAVA_BEAN"
            valueType: "org.springframework.boot.context.properties.bind.BindMethod"
            uuid: "Enum-org.springframework.boot.context.properties.bind.BindMethod-JAVA_BEAN"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable3"
      fixed: true
    branches:
    - lineNumber: 193
      expression: "branch expression (line 193)"
      range: "(193,1)-(193,200)"
      evaluatedAs: false
    - lineNumber: 194
      expression: "existingValue == null"
      range: "(194,5)-(194,25)"
      evaluatedAs: true
    - lineNumber: 194
      expression: "this.type.isArray()"
      range: "(194,30)-(194,48)"
      evaluatedAs: false
    - lineNumber: 196
      expression: "this.bindMethod != BindMethod.VALUE_OBJECT"
      range: "(196,16)-(196,57)"
      evaluatedAs: true
    - lineNumber: 198
      expression: "existingValue != null"
      range: "(198,24)-(198,44)"
      evaluatedAs: true
- method:
    name: "withSuppliedValue"
    sourceCodeSignature: "Bindable<T> withSuppliedValue(Supplier<T> suppliedValue)"
    returnType: "org.springframework.boot.context.properties.bind.Bindable"
    parameters:
    - name: "suppliedValue"
      type: "java.util.function.Supplier"
    instructionFingerprint: "B210959572DE991A9C68B7ABB0C8321D"
  paths:
  - pathId: "path1"
    testPathName: "withSuppliedValueTest"
    constructorSignature: "ofInstance(java.lang.Object) : org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>"
    modelFingerprint: "A6F8E2945B107C637D6ED4C42273AFEF"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "30C263286EA82EEDE29AFB3A3DDF9FDA"
      valueUuid: "target"
    - type: "INPUT"
      name: "suppliedValue"
      modelFingerprint: "044883FACAF404AE7926F14001861F15"
      valueUuid: "suppliedValue"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "CC5073E1D886C7AE78FA5A2065168232"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:instance,message:uniqueUuid45):void"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "24FC802221291524E77E9292068CBDE1"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:class):bindable"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "24A3FCF169DAD397B380FF8375026D30"
      valueUuid: "bindable"
      methodExercised:
        expression: "withExistingValue(existingValue:instance):bindable2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "1D47BB83FD9B6D30F6CE9C25F6637531"
      valueUuid: "bindable3"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "suppliedValue"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Instance must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid45"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        parameters:
        - name: "type"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "fieldResolvableType"
        - name: "boxedType"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "fieldResolvableType2"
        - name: "value"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Supplier"
            uuid: "suppliedValue"
        - name: "annotations"
          value:
            sapientType: "NULL"
            valueType: "java.lang.annotation.Annotation[]"
            uuid: "fieldAnnotationArray2"
        - name: "bindRestrictions"
          value:
            sapientType: "NULL"
            valueType: "java.util.EnumSet"
            genericValueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
            uuid: "fieldEnumSet2"
        - name: "bindMethod"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindMethod"
            uuid: "fieldBindMethod"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable3"
      fixed: true
- method:
    name: "withBindRestrictions"
    sourceCodeSignature: "Bindable<T> withBindRestrictions(BindRestriction... additionalRestrictions)"
    returnType: "org.springframework.boot.context.properties.bind.Bindable"
    parameters:
    - name: "additionalRestrictions"
      type: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction[]"
    instructionFingerprint: "4F2D61DA6BB884CFFED41B367CDE594D"
  paths:
  - pathId: "path1"
    testPathName: "withBindRestrictionsTest"
    constructorSignature: "ofInstance(java.lang.Object) : org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>"
    modelFingerprint: "9DC4DF83A1E469D9771E6E07E7B8C8BA"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "30C263286EA82EEDE29AFB3A3DDF9FDA"
      valueUuid: "target"
    - type: "INPUT"
      name: "additionalRestrictions"
      modelFingerprint: "8BC7E1DDC4C81EAF3E276B7DD3156946"
      valueUuid: "additionalRestrictions"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "CC5073E1D886C7AE78FA5A2065168232"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:instance,message:uniqueUuid46):void"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "24FC802221291524E77E9292068CBDE1"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:class):bindable"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "24A3FCF169DAD397B380FF8375026D30"
      valueUuid: "bindable"
      methodExercised:
        expression: "withExistingValue(existingValue:instance):bindable2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "03EB58821945ACB92E8AEC20F7B25C78"
      valueUuid: "bindable3"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.EnumSet.copyOf(java.util.EnumSet<org.springframework.boot.context.properties.bind.Bindable$BindRestriction>)\
        \ : java.util.EnumSet<org.springframework.boot.context.properties.bind.Bindable$BindRestriction>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target"
    - sapientType: "ARRAY"
      content: !<array>
        values: {}
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction[]"
      uuid: "additionalRestrictions"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Instance must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid46"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        parameters:
        - name: "type"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "fieldResolvableType"
        - name: "boxedType"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "fieldResolvableType2"
        - name: "value"
          value:
            sapientType: "NULL"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.Object"
            uuid: "fieldSupplier"
        - name: "annotations"
          value:
            sapientType: "NULL"
            valueType: "java.lang.annotation.Annotation[]"
            uuid: "fieldAnnotationArray2"
        - name: "bindRestrictions"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.EnumSet"
            genericValueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
            uuid: "enumSet2"
        - name: "bindMethod"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindMethod"
            uuid: "fieldBindMethod"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable3"
      fixed: true
- method:
    name: "withBindMethod"
    sourceCodeSignature: "Bindable<T> withBindMethod(BindMethod bindMethod)"
    returnType: "org.springframework.boot.context.properties.bind.Bindable"
    parameters:
    - name: "bindMethod"
      type: "org.springframework.boot.context.properties.bind.BindMethod"
    instructionFingerprint: "B809D4559CBE5D11E75EC25C3108D08E"
  paths:
  - pathId: "path1"
    testPathName: "withBindMethodWhenThisValueIsNull"
    constructorSignature: "ofInstance(java.lang.Object) : org.springframework.boot.context.properties.bind.Bindable<java.lang.Object>"
    modelFingerprint: "A8308DB7C3BDF689EDA577F178BF909F"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "30C263286EA82EEDE29AFB3A3DDF9FDA"
      valueUuid: "target"
    - type: "INPUT"
      name: "bindMethod"
      modelFingerprint: "1163288DF1A6AAC3C261E9EFC8390DD3"
      valueUuid: "bindMethod"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "CC5073E1D886C7AE78FA5A2065168232"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:instance,message:uniqueUuid47):void"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "24FC802221291524E77E9292068CBDE1"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:class):bindable"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "24A3FCF169DAD397B380FF8375026D30"
      valueUuid: "bindable"
      methodExercised:
        expression: "withExistingValue(existingValue:instance):bindable2"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "1A7F96A6DD09FE22FCDF20C3F86F6C17"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "state(expression:uniqueUuid48,messageSupplier:uniqueUuid49):void2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B4CBDD929FAB1E028EB75E091128F6BD"
      valueUuid: "bindable3"
    disabled: true
    failureReason:
      reason: "UNKNOWN_REASON"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "ofInstance"
        methodParameters:
        - name: "instance"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "instance"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target"
    - sapientType: "ENUM"
      content: !<regular>
        value: "VALUE_OBJECT"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Instance must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid47"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "uniqueUuid48"
      fixed: true
    - sapientType: "ANY"
      valueType: "java.util.function.Supplier"
      genericValueType: "java.lang.String"
      uuid: "uniqueUuid49"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        parameters:
        - name: "type"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "fieldResolvableType"
        - name: "boxedType"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "fieldResolvableType2"
        - name: "value"
          value:
            sapientType: "NULL"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.Object"
            uuid: "fieldSupplier"
        - name: "annotations"
          value:
            sapientType: "NULL"
            valueType: "java.lang.annotation.Annotation[]"
            uuid: "fieldAnnotationArray2"
        - name: "bindRestrictions"
          value:
            sapientType: "NULL"
            valueType: "java.util.EnumSet"
            genericValueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
            uuid: "fieldEnumSet2"
        - name: "bindMethod"
          value:
            sapientType: "ENUM"
            content: !<regular>
              value: "VALUE_OBJECT"
            valueType: "org.springframework.boot.context.properties.bind.BindMethod"
            uuid: "bindMethod"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable3"
      fixed: true
    branches:
    - lineNumber: 235
      expression: "bindMethod != BindMethod.VALUE_OBJECT"
      range: "(235,16)-(235,52)"
      evaluatedAs: false
    - lineNumber: 235
      expression: "this.value == null"
      range: "(235,57)-(235,74)"
      evaluatedAs: true
- method:
    name: "ofInstance"
    sourceCodeSignature: "<T> Bindable<T> ofInstance(T instance)"
    returnType: "org.springframework.boot.context.properties.bind.Bindable"
    parameters:
    - name: "instance"
      type: "java.lang.Object"
    instructionFingerprint: "DDB7B02C1DA8F733E798346E4C321C68"
  paths:
  - pathId: "path1"
    testPathName: "ofInstanceTest"
    modelFingerprint: "49C6E67C6138A6B49CF1AC1320C2DEEB"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "instance"
      modelFingerprint: "9ECAED270BF92620664E7A5A7152F698"
      valueUuid: "instance"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "CC5073E1D886C7AE78FA5A2065168232"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:instance,message:uniqueUuid50):void"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "24FC802221291524E77E9292068CBDE1"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:class):bindable"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "24A3FCF169DAD397B380FF8375026D30"
      valueUuid: "bindable"
      methodExercised:
        expression: "withExistingValue(existingValue:instance):bindable2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "11B5E8D4395677EA88062346247F39C3"
      valueUuid: "bindable2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Instance must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid50"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "instance"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable2"
- method:
    name: "of"
    sourceCodeSignature: "<T> Bindable<T> of(Class<T> type)"
    returnType: "org.springframework.boot.context.properties.bind.Bindable"
    parameters:
    - name: "type"
      type: "java.lang.Class"
    instructionFingerprint: "1880A96F4C5FBA8FF75A4514C4729CC2"
  paths:
  - pathId: "path1"
    testPathName: "ofTest"
    modelFingerprint: "EC92FE10B342F9316EA06C23EA406ADA"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "type"
      modelFingerprint: "B6D83DC733A4259418906388E0D863D5"
      valueUuid: "type"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "348E874986254FCEFE2182CA8EBED749"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:type,message:uniqueUuid51):void"
        staticAccess: true
    - type: "STATIC"
      name: "ResolvableType.class"
      modelFingerprint: "25FC6E9220F976F217BA00EFD5A1CE9E"
      valueUuid: "ResolvableType.class"
      methodExercised:
        expression: "forClass(clazz:type):resolvableType"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "AC6D2D76D94652B0438438AA719BDFBF"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:resolvableType):bindable"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "11B5E8D4395677EA88062346247F39C3"
      valueUuid: "bindable"
    disabled: false
    allValues:
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "type"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Type must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid51"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "ResolvableType.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
- method:
    name: "listOf"
    sourceCodeSignature: "<E> Bindable<List<E>> listOf(Class<E> elementType)"
    returnType: "org.springframework.boot.context.properties.bind.Bindable"
    genericReturnType: "java.util.List<java.lang.Object>"
    parameters:
    - name: "elementType"
      type: "java.lang.Class"
    instructionFingerprint: "3E2F479D4E48AC9DCBDBD1C017EBD1E3"
  paths:
  - pathId: "path1"
    testPathName: "listOfTest"
    modelFingerprint: "50707D5FFF02EC1FDD920031A404B75A"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "elementType"
      modelFingerprint: "A180016CB4B0F910783923E6EC6280CF"
      valueUuid: "elementType"
    - type: "STATIC"
      name: "ResolvableType.class"
      modelFingerprint: "D639F31CF034EDA1FFBCABA8B2CBEE7C"
      valueUuid: "ResolvableType.class"
      methodExercised:
        expression: "forClassWithGenerics(clazz:uniqueUuid52,generics:classArray):resolvableType"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "54FDF9384352ECE854B3A8E1FA3EEA6D"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:resolvableType):bindable"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "17CFD056CCE9292DC5F0DE961FD2195D"
      valueUuid: "bindable"
    disabled: false
    allValues:
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "elementType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "ResolvableType.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.util.List"
      valueType: "java.lang.Class"
      genericValueType: "java.util.List"
      uuid: "uniqueUuid52"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            uuid: "elementType"
      valueType: "java.lang.Class[]"
      genericValueType: "java.lang.Object"
      uuid: "classArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.util.List<java.lang.Object>"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.util.List<java.lang.Object>"
      uuid: "bindable"
- method:
    name: "setOf"
    sourceCodeSignature: "<E> Bindable<Set<E>> setOf(Class<E> elementType)"
    returnType: "org.springframework.boot.context.properties.bind.Bindable"
    genericReturnType: "java.util.Set<java.lang.Object>"
    parameters:
    - name: "elementType"
      type: "java.lang.Class"
    instructionFingerprint: "7494BB824FAED3D7E3FB93DBA7D5452A"
  paths:
  - pathId: "path1"
    testPathName: "setOfTest"
    modelFingerprint: "715DF16B075B70A3C06CA5C162DF21F9"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "elementType"
      modelFingerprint: "A180016CB4B0F910783923E6EC6280CF"
      valueUuid: "elementType"
    - type: "STATIC"
      name: "ResolvableType.class"
      modelFingerprint: "3A676B416FC07FD698C4742661A3CE3A"
      valueUuid: "ResolvableType.class"
      methodExercised:
        expression: "forClassWithGenerics(clazz:uniqueUuid53,generics:classArray):resolvableType"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "DF13964FF0EABB4E1DB4246CF7C11398"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:resolvableType):bindable"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "01CAEEC7BC07FA39DC8E209B2952B28C"
      valueUuid: "bindable"
    disabled: false
    allValues:
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "elementType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "ResolvableType.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.util.Set"
      valueType: "java.lang.Class"
      genericValueType: "java.util.Set"
      uuid: "uniqueUuid53"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            uuid: "elementType"
      valueType: "java.lang.Class[]"
      genericValueType: "java.lang.Object"
      uuid: "classArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.util.Set<java.lang.Object>"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.util.Set<java.lang.Object>"
      uuid: "bindable"
- method:
    name: "mapOf"
    sourceCodeSignature: "<K, V> Bindable<Map<K, V>> mapOf(Class<K> keyType, Class<V>\
      \ valueType)"
    returnType: "org.springframework.boot.context.properties.bind.Bindable"
    genericReturnType: "java.util.Map<java.lang.Object,java.lang.Object>"
    parameters:
    - name: "keyType"
      type: "java.lang.Class"
    - name: "valueType"
      type: "java.lang.Class"
    instructionFingerprint: "0A8A17037F7FA3AF2633C0582BB1F3AD"
  paths:
  - pathId: "path1"
    testPathName: "mapOfTest"
    modelFingerprint: "5E038704D6966F25497AED0BE7D626B8"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "keyType"
      modelFingerprint: "F32CD03FE78D2D27EB1BD4BF1027BAE4"
      valueUuid: "keyType"
    - type: "INPUT"
      name: "valueType"
      modelFingerprint: "CF72A44CD03B5E81251BCA71D3DC15AD"
      valueUuid: "valueType"
    - type: "STATIC"
      name: "ResolvableType.class"
      modelFingerprint: "175336B7ACC28056E2EC1FDF2467E298"
      valueUuid: "ResolvableType.class"
      methodExercised:
        expression: "forClassWithGenerics(clazz:uniqueUuid54,generics:classArray):resolvableType"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "38DFFD706FC3E3FC6D7C91DEF480F4BC"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:resolvableType):bindable"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "359376438CAB1FE993D5BB575B090DC3"
      valueUuid: "bindable"
    disabled: false
    allValues:
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "keyType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "valueType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "ResolvableType.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.util.Map"
      valueType: "java.lang.Class"
      genericValueType: "java.util.Map"
      uuid: "uniqueUuid54"
      fixed: true
    - sapientType: "ARRAY"
      content: !<array>
        values:
          0:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            uuid: "keyType"
          1:
            sapientType: "CLASS"
            content: !<regular>
              value: "java.lang.Object"
            valueType: "java.lang.Class"
            genericValueType: "java.lang.Object"
            uuid: "valueType"
      valueType: "java.lang.Class[]"
      genericValueType: "java.lang.Object"
      uuid: "classArray"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.util.Map<java.lang.Object,java.lang.Object>"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.util.Map<java.lang.Object,java.lang.Object>"
      uuid: "bindable"
- method:
    name: "of"
    sourceCodeSignature: "<T> Bindable<T> of(ResolvableType type)"
    returnType: "org.springframework.boot.context.properties.bind.Bindable"
    parameters:
    - name: "type"
      type: "org.springframework.core.ResolvableType"
    instructionFingerprint: "B75BB368FE87149F5021C5DC7FBBF557"
  paths:
  - pathId: "path1"
    testPathName: "of1WhenResolvedIsPrimitive"
    modelFingerprint: "461A45A91D8D7B78D2D62F0C9B16921D"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "type"
      modelFingerprint: "E14995598F6979A6B1DA273B6F754394"
      valueUuid: "type"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "6800E2A8799B85AC6B2C580518FD5C14"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:type,message:uniqueUuid55):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "type"
      modelFingerprint: "9BCA68C9938B60E35D7DC29568D22193"
      valueUuid: "type"
      methodExercised:
        expression: "resolve():class"
    - type: "STATIC"
      name: "ResolvableType.class"
      modelFingerprint: "C434D4603F1D9769A492CB65F39ACCC0"
      valueUuid: "ResolvableType.class"
      methodExercised:
        expression: "forClass(clazz:class2):resolvableType"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "4AE9C140854BA8870156B0E89E357668"
      valueUuid: "bindable"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isPrimitive() : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Type must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid55"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "ResolvableType.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        parameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
        - name: "boxedType"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "resolvableType"
        - name: "value"
          value:
            sapientType: "NULL"
            valueType: "java.util.function.Supplier"
            uuid: "uniqueUuid56"
        - name: "annotations"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.annotation.Annotation[]"
            uuid: "annotationArray"
        - name: "bindRestrictions"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.EnumSet"
            genericValueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
            uuid: "enumSet"
        - name: "bindMethod"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindMethod"
            uuid: "uniqueUuid57"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
      fixed: true
    branches:
    - lineNumber: 316
      expression: "resolved != null"
      range: "(316,7)-(316,22)"
      evaluatedAs: true
      internalMethodName: "box"
    - lineNumber: 316
      expression: "resolved.isPrimitive()"
      range: "(316,27)-(316,48)"
      evaluatedAs: true
      internalMethodName: "box"
    calledSomeStaticInternalMethod: true
  - pathId: "path2"
    testPathName: "of1WhenResolvedIsArray"
    modelFingerprint: "7EF41B4EE2C5A66783FA258636B011BF"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "type"
      modelFingerprint: "E14995598F6979A6B1DA273B6F754394"
      valueUuid: "type"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "6800E2A8799B85AC6B2C580518FD5C14"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:type,message:uniqueUuid58):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "type"
      modelFingerprint: "9BCA68C9938B60E35D7DC29568D22193"
      valueUuid: "type"
      methodExercised:
        expression: "resolve():class"
    - type: "LOCAL_VARIABLE"
      name: "type"
      modelFingerprint: "06FFE150D040288DA18A563C7D71B34C"
      valueUuid: "type"
      methodExercised:
        expression: "getComponentType():resolvableType"
    - type: "STATIC"
      name: "ResolvableType.class"
      modelFingerprint: "EB169482989E73F980F90E35105F90E7"
      valueUuid: "ResolvableType.class"
      methodExercised:
        expression: "forArrayComponent(componentType:resolvableType3):resolvableType2"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B066D14FE868494BE0912564E2A712C4"
      valueUuid: "bindable"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isPrimitive() : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Type must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid58"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "ResolvableType.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        parameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
        - name: "boxedType"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "resolvableType2"
        - name: "value"
          value:
            sapientType: "NULL"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.Object"
            uuid: "uniqueUuid59"
        - name: "annotations"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.annotation.Annotation[]"
            uuid: "annotationArray"
        - name: "bindRestrictions"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.EnumSet"
            genericValueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
            uuid: "enumSet"
        - name: "bindMethod"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindMethod"
            uuid: "uniqueUuid60"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
      fixed: true
    branches:
    - lineNumber: 316
      expression: "resolved != null"
      range: "(316,7)-(316,22)"
      evaluatedAs: true
      internalMethodName: "box"
    - lineNumber: 316
      expression: "resolved.isPrimitive()"
      range: "(316,27)-(316,48)"
      evaluatedAs: false
      internalMethodName: "box"
    - lineNumber: 321
      expression: "resolved != null"
      range: "(321,7)-(321,22)"
      evaluatedAs: true
      internalMethodName: "box"
    - lineNumber: 321
      expression: "resolved.isArray()"
      range: "(321,27)-(321,44)"
      evaluatedAs: true
      internalMethodName: "box"
    calledSomeStaticInternalMethod: true
  - pathId: "path3"
    testPathName: "of1WhenResolvedNotIsArray"
    modelFingerprint: "C6CE52632F9058D2DC8956356CA359D5"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "type"
      modelFingerprint: "E14995598F6979A6B1DA273B6F754394"
      valueUuid: "type"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "6800E2A8799B85AC6B2C580518FD5C14"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:type,message:uniqueUuid61):void"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "type"
      modelFingerprint: "9BCA68C9938B60E35D7DC29568D22193"
      valueUuid: "type"
      methodExercised:
        expression: "resolve():class"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7F7467A61D8B722D2DF244EB43FD3AB6"
      valueUuid: "bindable"
    disabled: false
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isPrimitive() : boolean"
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Type must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid61"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        parameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
        - name: "boxedType"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
        - name: "value"
          value:
            sapientType: "NULL"
            valueType: "java.util.function.Supplier"
            genericValueType: "java.lang.Object"
            uuid: "uniqueUuid62"
        - name: "annotations"
          value:
            sapientType: "ARRAY"
            content: !<array>
              values: {}
            valueType: "java.lang.annotation.Annotation[]"
            uuid: "annotationArray"
        - name: "bindRestrictions"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              parameters: []
              values: []
            valueType: "java.util.EnumSet"
            genericValueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
            uuid: "enumSet"
        - name: "bindMethod"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindMethod"
            uuid: "uniqueUuid63"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
      fixed: true
    branches:
    - lineNumber: 316
      expression: "resolved != null"
      range: "(316,7)-(316,22)"
      evaluatedAs: true
      internalMethodName: "box"
    - lineNumber: 316
      expression: "resolved.isPrimitive()"
      range: "(316,27)-(316,48)"
      evaluatedAs: false
      internalMethodName: "box"
    - lineNumber: 321
      expression: "resolved != null"
      range: "(321,7)-(321,22)"
      evaluatedAs: true
      internalMethodName: "box"
    - lineNumber: 321
      expression: "resolved.isArray()"
      range: "(321,27)-(321,44)"
      evaluatedAs: false
      internalMethodName: "box"
    calledSomeStaticInternalMethod: true
