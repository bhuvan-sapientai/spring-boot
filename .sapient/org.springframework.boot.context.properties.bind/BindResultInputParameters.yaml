---
modelFingerprint: "2D0E8437FBE407E9612A8271ED893B9F"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.bind.BindResult"
methods:
- method:
    name: "get"
    sourceCodeSignature: "T get()"
    returnType: "java.lang.Object"
    throwsExceptions:
    - "java.util.NoSuchElementException"
    instructionFingerprint: "BD1641DAF8714CC7F5E6D107402D798A"
  paths:
  - pathId: "path1"
    testPathName: "getWhenThisValueIsNullThrowsNoSuchElementException"
    constructorSignature: "of(java.lang.Object) : org.springframework.boot.context.properties.bind.BindResult<java.lang.Object>"
    modelFingerprint: "6ED15918CA825FCD8A069C810C4D8558"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "8CFF3C65A3392A642320DDDB93A5199C"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A9947F97A344959461A6811C0351E491"
      valueUuid: "noSuchElementException"
    disabled: false
    failureReason:
      reason: "REAL_FIELD_VALUE_NOT_ACCESSIBLE"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.BindResult"
        method: "of"
        methodParameters:
        - name: "value"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Object"
            uuid: "value"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "target"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.util.NoSuchElementException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "No value bound"
            valueType: "java.lang.String"
            uuid: "uniqueUuid1"
            fixed: true
      valueType: "java.util.NoSuchElementException"
      uuid: "noSuchElementException"
      fixed: true
    branches:
    - lineNumber: 54
      expression: "this.value == null"
      range: "(54,7)-(54,24)"
      evaluatedAs: true
- method:
    name: "isBound"
    sourceCodeSignature: "boolean isBound()"
    returnType: "boolean"
    instructionFingerprint: "6B9568C070759286764251FB6FD584B6"
  paths:
  - pathId: "path1"
    testPathName: "isBoundWhenThisValueIsNull"
    constructorSignature: "of(java.lang.Object) : org.springframework.boot.context.properties.bind.BindResult<java.lang.Object>"
    modelFingerprint: "F9D61366A62647E77CF5D1B1F3357BFB"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "8CFF3C65A3392A642320DDDB93A5199C"
      valueUuid: "target"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "5633A2B0C967879105766C98D64A3959"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "REAL_FIELD_VALUE_NOT_ACCESSIBLE"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.BindResult"
        method: "of"
        methodParameters:
        - name: "value"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Object"
            uuid: "value"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 65
      expression: "this.value != null"
      range: "(65,11)-(65,28)"
      evaluatedAs: false
- method:
    name: "ifBound"
    sourceCodeSignature: "void ifBound(Consumer<? super T> consumer)"
    returnType: "void"
    parameters:
    - name: "consumer"
      type: "java.util.function.Consumer"
    instructionFingerprint: "EFEF679052CCD1675DBD4EEAF7BFAE9B"
  paths:
  - pathId: "path1"
    testPathName: "ifBoundWhenThisValueIsNull"
    constructorSignature: "of(java.lang.Object) : org.springframework.boot.context.properties.bind.BindResult<java.lang.Object>"
    modelFingerprint: "41B684B66EA736CA3D6EA606B02EB554"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "8CFF3C65A3392A642320DDDB93A5199C"
      valueUuid: "target"
    - type: "INPUT"
      name: "consumer"
      modelFingerprint: "81EC1C64670780E0078B1A5CDE805019"
      valueUuid: "consumer"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "DE8D57EF26F98690750B19F38D8C0B21"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:consumer,message:uniqueUuid2):void"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "D3C52B3FA506EC339365BC9568CBF6B9"
      valueUuid: "expectedResult"
    disabled: false
    failureReason:
      reason: "REAL_FIELD_VALUE_NOT_ACCESSIBLE"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.BindResult"
        method: "of"
        methodParameters:
        - name: "value"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Object"
            uuid: "value"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "consumer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "consumer"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Consumer must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "VOID"
      uuid: "expectedResult"
      fixed: true
    branches:
    - lineNumber: 75
      expression: "this.value != null"
      range: "(75,7)-(75,24)"
      evaluatedAs: false
- method:
    name: "map"
    sourceCodeSignature: "<U> BindResult<U> map(Function<? super T, ? extends U> mapper)"
    returnType: "org.springframework.boot.context.properties.bind.BindResult"
    parameters:
    - name: "mapper"
      type: "java.util.function.Function"
    instructionFingerprint: "9945E768EB89634A9132027896935D95"
  paths:
  - pathId: "path1"
    testPathName: "mapWhenThisValueIsNull"
    constructorSignature: "of(java.lang.Object) : org.springframework.boot.context.properties.bind.BindResult<java.lang.Object>"
    modelFingerprint: "6E587A3A29993654D0463306B0206445"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "8CFF3C65A3392A642320DDDB93A5199C"
      valueUuid: "target"
    - type: "INPUT"
      name: "mapper"
      modelFingerprint: "559EA1F5E1A66E95B1167C2ED19C7101"
      valueUuid: "mapper"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "4E42E1F2F1B2B0E2C623F06F02A640A1"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:mapper,message:uniqueUuid3):void"
        staticAccess: true
    - type: "STATIC"
      name: "BindResult.class"
      modelFingerprint: "E73871F33511B35B95B35569AB942EFC"
      valueUuid: "BindResult.class"
      methodExercised:
        expression: "of(value:uniqueUuid4):bindResult3"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A75461398CE02F645643D62213364437"
      valueUuid: "bindResult3"
    disabled: true
    failureReason:
      reason: "REAL_FIELD_VALUE_NOT_ACCESSIBLE"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.BindResult"
        method: "of"
        methodParameters:
        - name: "value"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Object"
            uuid: "value"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.util.function.Function"
      uuid: "mapper"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "MOCK"
      valueType: "java.util.function.Function"
      uuid: "mapper"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Mapper must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "BindResult.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult3"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "uniqueUuid4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult3"
    branches:
    - lineNumber: 91
      expression: "this.value != null"
      range: "(91,14)-(91,31)"
      evaluatedAs: false
- method:
    name: "orElse"
    sourceCodeSignature: "T orElse(T other)"
    returnType: "java.lang.Object"
    parameters:
    - name: "other"
      type: "java.lang.Object"
    instructionFingerprint: "B6E84A4EBDDE9A4FF03692AFC047099F"
  paths:
  - pathId: "path1"
    testPathName: "orElseWhenThisValueIsNull"
    constructorSignature: "of(java.lang.Object) : org.springframework.boot.context.properties.bind.BindResult<java.lang.Object>"
    modelFingerprint: "D88DCD3E210FB7B29CEC942400ECDC86"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "8CFF3C65A3392A642320DDDB93A5199C"
      valueUuid: "target"
    - type: "INPUT"
      name: "other"
      modelFingerprint: "DFD624BA7714DB52DB5C0B55DB3E2EE9"
      valueUuid: "other"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "7D8E87CB1B63A9579EC7584A697ED33D"
      valueUuid: "other"
    disabled: false
    failureReason:
      reason: "REAL_FIELD_VALUE_NOT_ACCESSIBLE"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.BindResult"
        method: "of"
        methodParameters:
        - name: "value"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Object"
            uuid: "value"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "target"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "other"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "other"
    branches:
    - lineNumber: 101
      expression: "this.value != null"
      range: "(101,11)-(101,28)"
      evaluatedAs: false
- method:
    name: "orElseGet"
    sourceCodeSignature: "T orElseGet(Supplier<? extends T> other)"
    returnType: "java.lang.Object"
    parameters:
    - name: "other"
      type: "java.util.function.Supplier"
    instructionFingerprint: "ED9B370AC41C104BE9629414AFD7686E"
  paths:
  - pathId: "path1"
    testPathName: "orElseGetWhenThisValueIsNull"
    constructorSignature: "of(java.lang.Object) : org.springframework.boot.context.properties.bind.BindResult<java.lang.Object>"
    modelFingerprint: "006DC8F60F22DCF3D274AAAAE4D8C3AF"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "8CFF3C65A3392A642320DDDB93A5199C"
      valueUuid: "target"
    - type: "INPUT"
      name: "other"
      modelFingerprint: "2282C35D2C0CFFD662EA6762365E7A56"
      valueUuid: "other"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object"
    disabled: true
    failureReason:
      reason: "REAL_FIELD_VALUE_NOT_ACCESSIBLE"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.BindResult"
        method: "of"
        methodParameters:
        - name: "value"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Object"
            uuid: "value"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "other"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object"
    branches:
    - lineNumber: 112
      expression: "this.value != null"
      range: "(112,11)-(112,28)"
      evaluatedAs: false
- method:
    name: "orElseThrow"
    sourceCodeSignature: "<X extends Throwable> T orElseThrow(Supplier<? extends X>\
      \ exceptionSupplier)"
    returnType: "java.lang.Object"
    throwsExceptions:
    - "java.lang.Throwable"
    parameters:
    - name: "exceptionSupplier"
      type: "java.util.function.Supplier"
    instructionFingerprint: "70243A7470427FCAECE84524BF23CBA0"
  paths:
  - pathId: "path1"
    testPathName: "orElseThrowWhenThisValueIsNullThrowsThrowable"
    constructorSignature: "of(java.lang.Object) : org.springframework.boot.context.properties.bind.BindResult<java.lang.Object>"
    modelFingerprint: "85A1406F3CE0393CFF504F1B5CBC4AB4"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "STATIC_FACTORY_METHOD"
      modelFingerprint: "8CFF3C65A3392A642320DDDB93A5199C"
      valueUuid: "target"
    - type: "INPUT"
      name: "exceptionSupplier"
      modelFingerprint: "EF0EDD3733415323C0DAC163F13A29F9"
      valueUuid: "exceptionSupplier"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "49E493EB56B47EDEB5C173968793BABC"
      valueUuid: "object"
    disabled: false
    failureReason:
      reason: "REAL_FIELD_VALUE_NOT_ACCESSIBLE"
    allValues:
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.BindResult"
        method: "of"
        methodParameters:
        - name: "value"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Object"
            uuid: "value"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "java.util.function.Supplier"
      uuid: "exceptionSupplier"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.Throwable"
        parameters: []
      valueType: "java.lang.Throwable"
      uuid: "object"
      explicitCastNeeded: true
    branches:
    - lineNumber: 124
      expression: "this.value == null"
      range: "(124,7)-(124,24)"
      evaluatedAs: true
- method:
    name: "equals"
    sourceCodeSignature: "boolean equals(Object obj)"
    returnType: "boolean"
    parameters:
    - name: "obj"
      type: "java.lang.Object"
    instructionFingerprint: "18A3D114888BE6AE0176D3ABA518DC26"
  paths:
  - pathId: "path1"
    testPathName: "equalsWhenThisEqualsObj"
    constructorSignature: "of(java.lang.Object) : org.springframework.boot.context.properties.bind.BindResult<java.lang.Object>"
    modelFingerprint: "048AF3966AA39A964C6F96A9DA3BE22F"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 132
      expression: "this == obj"
      range: "(132,7)-(132,17)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "equalsWhenGetClassNotEqualsObjGetClass"
    constructorSignature: "of(java.lang.Object) : org.springframework.boot.context.properties.bind.BindResult<java.lang.Object>"
    modelFingerprint: "03D80D99AB878174CD5FC29D3AB01A42"
    problemWasSolvedByProver: true
    inputParameters: []
    disabled: false
    allValues: []
    branches:
    - lineNumber: 132
      expression: "this == obj"
      range: "(132,7)-(132,17)"
      evaluatedAs: false
    - lineNumber: 135
      expression: "obj == null"
      range: "(135,7)-(135,17)"
      evaluatedAs: false
    - lineNumber: 135
      expression: "getClass() != obj.getClass()"
      range: "(135,22)-(135,49)"
      evaluatedAs: true
  - pathId: "path3"
    testPathName: "equalsWhenGetClassEqualsObjGetClass"
    constructorSignature: "of(java.lang.Object) : org.springframework.boot.context.properties.bind.BindResult<java.lang.Object>"
    modelFingerprint: "C92E986EB67D84836D70D8EBC20FDDD6"
    problemWasSolvedByProver: false
    inputParameters: []
    disabled: false
    failureReason:
      reason: "REAL_FIELD_VALUE_NOT_ACCESSIBLE"
    allValues: []
    branches:
    - lineNumber: 132
      expression: "this == obj"
      range: "(132,7)-(132,17)"
      evaluatedAs: false
    - lineNumber: 135
      expression: "obj == null"
      range: "(135,7)-(135,17)"
      evaluatedAs: false
    - lineNumber: 135
      expression: "getClass() != obj.getClass()"
      range: "(135,22)-(135,49)"
      evaluatedAs: false
- method:
    name: "of"
    sourceCodeSignature: "<T> BindResult<T> of(T value)"
    returnType: "org.springframework.boot.context.properties.bind.BindResult"
    parameters:
    - name: "value"
      type: "java.lang.Object"
    instructionFingerprint: "80639BC26C277BB3EFA3D3284B8367FC"
  paths:
  - pathId: "path1"
    testPathName: "ofWhenValueIsNull"
    modelFingerprint: "1E3219FF6E412A9A340B098685B6559A"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "value"
      modelFingerprint: "B36561C3D5F2A03C9B07DC331FC6EDA1"
      valueUuid: "value"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "96277D8975709D1AD7650811675D536E"
      valueUuid: "bindResult"
    disabled: false
    allValues:
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "value"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.BindResult"
        parameters:
        - name: "value"
          value:
            sapientType: "NULL"
            valueType: "java.lang.Object"
            uuid: "uniqueUuid6"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "bindResult"
      fixed: true
    branches:
    - lineNumber: 148
      expression: "value == null"
      range: "(148,7)-(148,19)"
      evaluatedAs: true
  - pathId: "path2"
    testPathName: "ofWhenValueIsNotNull"
    modelFingerprint: "A46AFF65BD308201DDDE088DB7ED27E2"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "value"
      modelFingerprint: "EB88C1798DFE893966CC3D4502A52694"
      valueUuid: "value"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "FF05B6783888E3DC02750369F7F4CA58"
      valueUuid: "bindResult3"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "value"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.BindResult"
        parameters:
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "value"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "bindResult3"
      fixed: true
    branches:
    - lineNumber: 148
      expression: "value == null"
      range: "(148,7)-(148,19)"
      evaluatedAs: false
