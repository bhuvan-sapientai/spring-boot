---
modelFingerprint: "79468277DFDFFC8C21B5285BFA67BC9A"
targetClass:
  fullClassName: "org.springframework.boot.context.properties.bind.Binder"
methods:
- method:
    name: "bind"
    sourceCodeSignature: "<T> BindResult<T> bind(String name, Class<T> target)"
    returnType: "org.springframework.boot.context.properties.bind.BindResult"
    parameters:
    - name: "name"
      type: "java.lang.String"
    - name: "target"
      type: "java.lang.Class"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "org.springframework.core.convert.ConverterNotFoundException"
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "AFD5F7B7AB1D708C3D17339A1831677B"
  paths:
  - pathId: "path1"
    testPathName: "bindTest"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "3CC59CDF6E433D4C80BAF80438C3A2B8"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "63F0AEB18588FDD50129913BF544F767"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "56C0E4DE824BD856DCE44EDDDD9874F7"
      valueUuid: "target1"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid1):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid2):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "34F2B9DD530748317DFF6CBC77252DD4"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:target1):bindable"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "7D389305F064180C49E76F992FCCF5DA"
      methodExercised:
        expression: "bind(name:name,target:bindable):bindResult"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B82E0097200F02F6C3B424AB32A9A271"
      valueUuid: "bindResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid1"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "bindResult"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "bindResult"
- method:
    name: "bind"
    sourceCodeSignature: "<T> BindResult<T> bind(String name, Bindable<T> target)"
    returnType: "org.springframework.boot.context.properties.bind.BindResult"
    parameters:
    - name: "name"
      type: "java.lang.String"
    - name: "target"
      type: "org.springframework.boot.context.properties.bind.Bindable"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "org.springframework.core.convert.ConverterNotFoundException"
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "370757CF3A260B185B8380EB4FEA2213"
  paths:
  - pathId: "path1"
    testPathName: "bind1Test"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "53E52A015F3DEE0594408427DC181791"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "63F0AEB18588FDD50129913BF544F767"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid3):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid4):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "ConfigurationPropertyName.class"
      modelFingerprint: "31BA9F94B408437413E37B78EA6DF39E"
      valueUuid: "ConfigurationPropertyName.class"
      methodExercised:
        expression: "of(name:name):configurationPropertyName"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "660FA5DEC4EC57AE581E4093CBB2DBF6"
      methodExercised:
        expression: "bind(name:configurationPropertyName,target:target1,handler:uniqueUuid5):bindResult"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B82E0097200F02F6C3B424AB32A9A271"
      valueUuid: "bindResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "ConfigurationPropertyName.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "bindResult"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "uniqueUuid5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "bindResult"
- method:
    name: "bind"
    sourceCodeSignature: "<T> BindResult<T> bind(ConfigurationPropertyName name, Bindable<T>\
      \ target)"
    returnType: "org.springframework.boot.context.properties.bind.BindResult"
    parameters:
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    - name: "target"
      type: "org.springframework.boot.context.properties.bind.Bindable"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "org.springframework.core.convert.ConverterNotFoundException"
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "B650BB3D16D2BB38C81D73B683B09C93"
  paths:
  - pathId: "path1"
    testPathName: "bind2Test"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "0AF501DAC2BFF691ED1BD839781D06EB"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid6):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid7):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "5206B7AC41158E81665D2D052D0CAFB6"
      methodExercised:
        expression: "bind(name:name,target:target1,handler:uniqueUuid8):bindResult"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B82E0097200F02F6C3B424AB32A9A271"
      valueUuid: "bindResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "bindResult"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "uniqueUuid8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "bindResult"
- method:
    name: "bind"
    sourceCodeSignature: "<T> BindResult<T> bind(String name, Bindable<T> target,\
      \ BindHandler handler)"
    returnType: "org.springframework.boot.context.properties.bind.BindResult"
    parameters:
    - name: "name"
      type: "java.lang.String"
    - name: "target"
      type: "org.springframework.boot.context.properties.bind.Bindable"
    - name: "handler"
      type: "org.springframework.boot.context.properties.bind.BindHandler"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "org.springframework.core.convert.ConverterNotFoundException"
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "C90EBD7D7F9FF9A44A8494D35D765112"
  paths:
  - pathId: "path1"
    testPathName: "bind3Test"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "C103AE18EE98E46260A27D23F50FEB0B"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "63F0AEB18588FDD50129913BF544F767"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "0998C9FC03D71CED8EF0AD60E12084D3"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid9):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid10):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "ConfigurationPropertyName.class"
      modelFingerprint: "31BA9F94B408437413E37B78EA6DF39E"
      valueUuid: "ConfigurationPropertyName.class"
      methodExercised:
        expression: "of(name:name):configurationPropertyName"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "430AC6DC77AA086DB240ACF7E2775D82"
      methodExercised:
        expression: "bind(name:configurationPropertyName,target:target1,handler:handler):bindResult"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "B82E0097200F02F6C3B424AB32A9A271"
      valueUuid: "bindResult"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid9"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid10"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "ConfigurationPropertyName.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "bindResult"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "bindResult"
- method:
    name: "bind"
    sourceCodeSignature: "<T> BindResult<T> bind(ConfigurationPropertyName name, Bindable<T>\
      \ target, BindHandler handler)"
    returnType: "org.springframework.boot.context.properties.bind.BindResult"
    parameters:
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    - name: "target"
      type: "org.springframework.boot.context.properties.bind.Bindable"
    - name: "handler"
      type: "org.springframework.boot.context.properties.bind.BindHandler"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "org.springframework.core.convert.ConverterNotFoundException"
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "2105FC280B0F66E0CE949F75E9D1D062"
  paths:
  - pathId: "path1"
    testPathName: "bind4WhenNotCreate"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "5A37EF9A73D005FBB4771787CCA05885"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid11):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid12):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "6B3E2F800EF54F12F4F1664D3F634B2E"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid13):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid14):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "CCF7FFBEF5CF867A3CB975DBD541AA53"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "C34F6EE011FC7B67EFC5C27C02243AD6"
      valueUuid: "handler"
      methodExercised:
        expression: "onFinish(name:name,target:target1,context:binder.Context,result:uniqueUuid15):void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "7B8D1FB75677ED604A8FC6B78255DFF0"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:uniqueUuid16,target:target1):object2"
    - type: "STATIC"
      name: "BindResult.class"
      modelFingerprint: "EE68F488FA16232FEA1E6B38034AD780"
      valueUuid: "BindResult.class"
      methodExercised:
        expression: "of(value:object2):bindResult"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A75461398CE02F645643D62213364437"
      valueUuid: "bindResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return context.getConverter().convert(result, target);"
      lineNumber: 378
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getConverter"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid11"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid12"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid13"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid14"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "uniqueUuid15"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "uniqueUuid16"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "BindResult.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
  - pathId: "path23"
    testPathName: "bind4WhenCaughtException"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "670F8B6EF339A9D059676AD41E439AFA"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid17):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid18):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "6B3E2F800EF54F12F4F1664D3F634B2E"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid19):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid20):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "CCF7FFBEF5CF867A3CB975DBD541AA53"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "C34F6EE011FC7B67EFC5C27C02243AD6"
      valueUuid: "handler"
      methodExercised:
        expression: "onFinish(name:name,target:target1,context:binder.Context,result:uniqueUuid21):void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "7B8D1FB75677ED604A8FC6B78255DFF0"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:uniqueUuid22,target:target1):object2"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "A4BFD7F651CE4F9F7E6A99B8D54833FE"
      valueUuid: "handler"
      methodExercised:
        expression: "onFailure(name:name,target:target1,context:binder.Context,error:exception):object3"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "3D54D2DE1EB2930843625F2D258D61A0"
      valueUuid: "bindConverter3"
      methodExercised:
        expression: "convert(source:object3,target:target1):object4"
    - type: "STATIC"
      name: "BindResult.class"
      modelFingerprint: "EE68F488FA16232FEA1E6B38034AD780"
      valueUuid: "BindResult.class"
      methodExercised:
        expression: "of(value:object4):bindResult"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A75461398CE02F645643D62213364437"
      valueUuid: "bindResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "return context.getConverter().convert(result, target);"
      lineNumber: 378
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getConverter"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid17"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid18"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid19"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid20"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "uniqueUuid21"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "uniqueUuid22"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "exception"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "BindResult.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 353
      expression: "catch-exception (Exception)"
      range: "(353,3)-(353,21)"
      evaluatedAs: true
      internalMethodName: "bind"
    catchBlockExercised:
      idExternalInstruction: 39
      id: 1
      catchExceptions:
      - "java.lang.Exception"
  - pathId: "path24"
    testPathName: "bind4WhenNotCreateAndCaughtException"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "F4CBD16F1B6EF77D331F6CCE6FAF86E5"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9494607E60AFEFB1E3EDEF421F97FCD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "76EF63F96E478822469FF66526F1C2AE"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid23):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid24):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid25):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid26):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "5277F5ED293E5944DD7363065B8C288F"
      valueUuid: "defaultBindHandler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "99AA0A9FDB24324026AFBF2BFA37996D"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "473E5507EF8E48281F72309A775CE873"
      valueUuid: "defaultBindHandler"
      methodExercised:
        expression: "onFinish(name:name,target:bindable,context:binder.Context,result:object2):void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "C98EE4679348CB80F675AD1F5F36DF58"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object2,target:bindable):object3"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "CF8613CE822DB8C376EC11A1EFD9E347"
      valueUuid: "defaultBindHandler"
      methodExercised:
        expression: "onFailure(name:name,target:bindable,context:binder.Context,error:exception):object4"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "0C93CE56D6BA870C6923E76AFC2B85B1"
      valueUuid: "bindConverter3"
      methodExercised:
        expression: "convert(source:object4,target:bindable):object5"
    - type: "STATIC"
      name: "BindResult.class"
      modelFingerprint: "EE68F488FA16232FEA1E6B38034AD780"
      valueUuid: "BindResult.class"
      methodExercised:
        expression: "of(value:object5):bindResult"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A75461398CE02F645643D62213364437"
      valueUuid: "bindResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "if (property == null && context.depth != 0 && containsNoDescendantOf(context.getSources(),\
        \ name)) {"
      lineNumber: 398
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getSources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid23"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid24"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid25"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid26"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "defaultBindHandler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "defaultBindHandler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object3"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "defaultBindHandler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "exception"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "BindResult.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 398
      expression: "context.depth != 0"
      range: "(398,27)-(398,44)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 508
      expression: "for-each(sources)"
      range: "(508,45)-(508,51)"
      evaluatedAs: false
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 398
      expression: "containsNoDescendantOf(context.getSources(), name)"
      range: "(398,49)-(398,98)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 353
      expression: "catch-exception (Exception)"
      range: "(353,3)-(353,21)"
      evaluatedAs: true
      internalMethodName: "bind"
    catchBlockExercised:
      idExternalInstruction: 39
      id: 2
      catchExceptions:
      - "java.lang.Exception"
  - pathId: "path15"
    testPathName: "bind4WhenResultIsNullAndResultIsNullAndNotCreate"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "4C3D2CD6BB7255B9EB78AFAD7AA68815"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid27):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid28):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid29):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid30):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "6106E0F948C0E3314BB71896D127B154"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "57BD6B5A33387907B105DA6A3531412B"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "2EE2A160E4565FC4211DA61AF18A400C"
      valueUuid: "bindable"
      methodExercised:
        expression: "hasBindRestriction(bindRestriction:Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FB9BA6660B378440169AB33C771084DD"
      valueUuid: "object2"
      methodExercised:
        expression: "containsDescendantOf(name:name):configurationPropertyState"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "76A56BEAC78DC6159096CEA3704311B2"
      valueUuid: "handler"
      methodExercised:
        expression: "onFinish(name:name,target:bindable,context:binder.Context,result:object3):void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "25AAD45FF082CB76458692130FEA3F1D"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object3,target:bindable):object4"
    - type: "STATIC"
      name: "BindResult.class"
      modelFingerprint: "EE68F488FA16232FEA1E6B38034AD780"
      valueUuid: "BindResult.class"
      methodExercised:
        expression: "of(value:object4):bindResult"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A75461398CE02F645643D62213364437"
      valueUuid: "bindResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "if (property == null && context.depth != 0 && containsNoDescendantOf(context.getSources(),\
        \ name)) {"
      lineNumber: 398
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getSources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid27"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid28"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid29"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid30"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object2"
      collectionUuid: "iterable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "ABSENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "configurationPropertyState"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "BindResult.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 447
      expression: "target.hasBindRestriction(BindRestriction.NO_DIRECT_PROPERTY)"
      range: "(447,25)-(447,85)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 398
      expression: "context.depth != 0"
      range: "(398,27)-(398,44)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 508
      expression: "for-each(sources)"
      range: "(508,45)-(508,51)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 509
      expression: "source.containsDescendantOf(name) != ConfigurationPropertyState.ABSENT"
      range: "(509,8)-(509,77)"
      evaluatedAs: false
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 398
      expression: "containsNoDescendantOf(context.getSources(), name)"
      range: "(398,49)-(398,98)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
  - pathId: "path2"
    testPathName: "bind4WhenResultIsNotNullAndResultIsNullAndNotCreate"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "C3C520D83C5D85FF50226DA12A0D66DA"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid31):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid32):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid33):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid34):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "6106E0F948C0E3314BB71896D127B154"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "57BD6B5A33387907B105DA6A3531412B"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "2EE2A160E4565FC4211DA61AF18A400C"
      valueUuid: "bindable"
      methodExercised:
        expression: "hasBindRestriction(bindRestriction:Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "C99F0840CC2BB42B1D9A347B9CDDC4C3"
      valueUuid: "object2"
      methodExercised:
        expression: "containsDescendantOf(name:name):configurationPropertyState"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid35):class"
    - type: "LOCAL_VARIABLE"
      name: "aggregateBinder"
      modelFingerprint: "5418B0D6BD8CDEED420A05F828C01E0E"
      valueUuid: "mapBinder"
      methodExercised:
        expression: "bind(name:name,target:bindable,elementBinder:aggregateElementBinder):object4"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "D74E0FE992C4F34F247E80FC5481BF09"
      valueUuid: "handler"
      methodExercised:
        expression: "onSuccess(name:name,target:bindable,context:binder.Context,result:object3):object5"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "803CF91FF8273E0245616729A18AF981"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object5,target:bindable):object6"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "76A56BEAC78DC6159096CEA3704311B2"
      valueUuid: "handler"
      methodExercised:
        expression: "onFinish(name:name,target:bindable,context:binder.Context,result:object6):void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "25AAD45FF082CB76458692130FEA3F1D"
      valueUuid: "bindConverter3"
      methodExercised:
        expression: "convert(source:object6,target:bindable):object7"
    - type: "STATIC"
      name: "BindResult.class"
      modelFingerprint: "EE68F488FA16232FEA1E6B38034AD780"
      valueUuid: "BindResult.class"
      methodExercised:
        expression: "of(value:object7):bindResult"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A75461398CE02F645643D62213364437"
      valueUuid: "bindResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "if (property == null && context.depth != 0 && containsNoDescendantOf(context.getSources(),\
        \ name)) {"
      lineNumber: 398
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getSources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid31"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid32"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid33"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid34"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object2"
      collectionUuid: "iterable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "PRESENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "configurationPropertyState"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid35"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.MapBinder"
        parameters:
        - name: "context"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
            uuid: "binder.Context"
      valueType: "org.springframework.boot.context.properties.bind.MapBinder"
      uuid: "mapBinder"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.bind.MapBinder"
            parameters:
            - name: "context"
              value:
                sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
                uuid: "binder.Context"
          valueType: "org.springframework.boot.context.properties.bind.MapBinder"
          uuid: "mapBinder"
          fixed: true
        methodParameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            genericValueType: "java.lang.Object"
            uuid: "bindable"
        - name: "elementBinder"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.AggregateElementBinder"
            uuid: "aggregateElementBinder"
        methodName: "bind"
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.AggregateElementBinder"
      uuid: "aggregateElementBinder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object6"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "BindResult.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 447
      expression: "target.hasBindRestriction(BindRestriction.NO_DIRECT_PROPERTY)"
      range: "(447,25)-(447,85)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 398
      expression: "context.depth != 0"
      range: "(398,27)-(398,44)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 508
      expression: "for-each(sources)"
      range: "(508,45)-(508,51)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 509
      expression: "source.containsDescendantOf(name) != ConfigurationPropertyState.ABSENT"
      range: "(509,8)-(509,77)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 398
      expression: "containsNoDescendantOf(context.getSources(), name)"
      range: "(398,49)-(398,98)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 423
      expression: "Map.class.isAssignableFrom(resolvedType)"
      range: "(423,7)-(423,46)"
      evaluatedAs: true
      internalMethodName: "getAggregateBinder"
    - lineNumber: 402
      expression: "aggregateBinder != null"
      range: "(402,7)-(402,29)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
  - pathId: "path5"
    testPathName: "bind4WhenCollectionIsAssignableFromResolvedTypeAndAggregateBinderIsNotNullAndResultIsNullAndResultIsNullAndNotCreate"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "80B57B18C8792CD6E4A918B6B30A3555"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid36):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid37):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid38):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid39):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "6106E0F948C0E3314BB71896D127B154"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "57BD6B5A33387907B105DA6A3531412B"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "2EE2A160E4565FC4211DA61AF18A400C"
      valueUuid: "bindable"
      methodExercised:
        expression: "hasBindRestriction(bindRestriction:Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "C99F0840CC2BB42B1D9A347B9CDDC4C3"
      valueUuid: "object2"
      methodExercised:
        expression: "containsDescendantOf(name:name):configurationPropertyState"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid40):class"
    - type: "LOCAL_VARIABLE"
      name: "aggregateBinder"
      modelFingerprint: "05D36D13167B28CF02085391C4F31D0C"
      valueUuid: "collectionBinder"
      methodExercised:
        expression: "bind(name:name,target:bindable,elementBinder:aggregateElementBinder):object4"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "76A56BEAC78DC6159096CEA3704311B2"
      valueUuid: "handler"
      methodExercised:
        expression: "onFinish(name:name,target:bindable,context:binder.Context,result:object3):void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "25AAD45FF082CB76458692130FEA3F1D"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object3,target:bindable):object5"
    - type: "STATIC"
      name: "BindResult.class"
      modelFingerprint: "EE68F488FA16232FEA1E6B38034AD780"
      valueUuid: "BindResult.class"
      methodExercised:
        expression: "of(value:object5):bindResult"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A75461398CE02F645643D62213364437"
      valueUuid: "bindResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "if (property == null && context.depth != 0 && containsNoDescendantOf(context.getSources(),\
        \ name)) {"
      lineNumber: 398
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getSources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid36"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid37"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid38"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid39"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object2"
      collectionUuid: "iterable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "PRESENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "configurationPropertyState"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid40"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.CollectionBinder"
        parameters:
        - name: "context"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
            uuid: "binder.Context"
      valueType: "org.springframework.boot.context.properties.bind.CollectionBinder"
      uuid: "collectionBinder"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.bind.CollectionBinder"
            parameters:
            - name: "context"
              value:
                sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
                uuid: "binder.Context"
          valueType: "org.springframework.boot.context.properties.bind.CollectionBinder"
          uuid: "collectionBinder"
          fixed: true
        methodParameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            genericValueType: "java.lang.Object"
            uuid: "bindable"
        - name: "elementBinder"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.AggregateElementBinder"
            uuid: "aggregateElementBinder"
        methodName: "bind"
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.AggregateElementBinder"
      uuid: "aggregateElementBinder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "BindResult.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 447
      expression: "target.hasBindRestriction(BindRestriction.NO_DIRECT_PROPERTY)"
      range: "(447,25)-(447,85)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 398
      expression: "context.depth != 0"
      range: "(398,27)-(398,44)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 508
      expression: "for-each(sources)"
      range: "(508,45)-(508,51)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 509
      expression: "source.containsDescendantOf(name) != ConfigurationPropertyState.ABSENT"
      range: "(509,8)-(509,77)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 398
      expression: "containsNoDescendantOf(context.getSources(), name)"
      range: "(398,49)-(398,98)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 423
      expression: "Map.class.isAssignableFrom(resolvedType)"
      range: "(423,7)-(423,46)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 426
      expression: "Collection.class.isAssignableFrom(resolvedType)"
      range: "(426,7)-(426,53)"
      evaluatedAs: true
      internalMethodName: "getAggregateBinder"
    - lineNumber: 402
      expression: "aggregateBinder != null"
      range: "(402,7)-(402,29)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
  - pathId: "path18"
    testPathName: "bind4WhenPropertyIsNotNullAndResultIsNullAndResultIsNullAndNotCreate"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "E848BFD520886F0539BA29881E0F9E45"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "25B83B0AA69353874E1F276DD18C535A"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid41):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid42):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid43):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid44):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "6106E0F948C0E3314BB71896D127B154"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "57BD6B5A33387907B105DA6A3531412B"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "60634B8DC849F8BBC08A084C2CF5D4A1"
      valueUuid: "bindable"
      methodExercised:
        expression: "hasBindRestriction(bindRestriction:Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "7837AA3F816931C9F9CFCD17C35D721D"
      valueUuid: "object2"
      methodExercised:
        expression: "getConfigurationProperty(name:name):configurationProperty"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid45):class"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9BE6C3FE0AD02D9354C52AB1426A261C"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "isArray():boolean8"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "18E47D2825E09CEDCD872E509293E354"
      valueUuid: "configurationProperty"
      methodExercised:
        expression: "getValue():value"
    - type: "FIELD"
      name: "placeholdersResolver"
      modelFingerprint: "898690D52AA5A45340BD8E5ADD4EA803"
      valueUuid: "placeholdersResolver"
      methodExercised:
        expression: "resolvePlaceholders(value:value):object4"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "803CF91FF8273E0245616729A18AF981"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object4,target:bindable):object5"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "76A56BEAC78DC6159096CEA3704311B2"
      valueUuid: "handler"
      methodExercised:
        expression: "onFinish(name:name,target:bindable,context:binder.Context,result:object5):void6"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "25AAD45FF082CB76458692130FEA3F1D"
      valueUuid: "bindConverter3"
      methodExercised:
        expression: "convert(source:object5,target:bindable):object6"
    - type: "STATIC"
      name: "BindResult.class"
      modelFingerprint: "EE68F488FA16232FEA1E6B38034AD780"
      valueUuid: "BindResult.class"
      methodExercised:
        expression: "of(value:object6):bindResult"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A75461398CE02F645643D62213364437"
      valueUuid: "bindResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (ConfigurationPropertySource source : context.getSources()) {"
      lineNumber: 450
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getSources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid41"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid42"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid43"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid44"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object2"
      collectionUuid: "iterable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "configurationProperty-name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "configurationProperty-origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid45"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "configurationProperty-name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "configurationProperty-origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
      uuid: "placeholdersResolver"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object5"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object6"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "BindResult.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 447
      expression: "target.hasBindRestriction(BindRestriction.NO_DIRECT_PROPERTY)"
      range: "(447,25)-(447,85)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 450
      expression: "for-each(context.getSources())"
      range: "(450,45)-(450,64)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 452
      expression: "property != null"
      range: "(452,8)-(452,23)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 423
      expression: "Map.class.isAssignableFrom(resolvedType)"
      range: "(423,7)-(423,46)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 426
      expression: "Collection.class.isAssignableFrom(resolvedType)"
      range: "(426,7)-(426,53)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 429
      expression: "target.getType().isArray()"
      range: "(429,7)-(429,32)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 402
      expression: "aggregateBinder != null"
      range: "(402,7)-(402,29)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 405
      expression: "property != null"
      range: "(405,7)-(405,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
  - pathId: "path6"
    testPathName: "bind4WhenTargetGetTypeIsArrayAndAggregateBinderIsNotNullAndResultIsNullAndResultIsNullAndNotCreate"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "346C7EF0CEBF26BF98CA8D0FB3D45283"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid46):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid47):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid48):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid49):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "6106E0F948C0E3314BB71896D127B154"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "57BD6B5A33387907B105DA6A3531412B"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "2EE2A160E4565FC4211DA61AF18A400C"
      valueUuid: "bindable"
      methodExercised:
        expression: "hasBindRestriction(bindRestriction:Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "C99F0840CC2BB42B1D9A347B9CDDC4C3"
      valueUuid: "object2"
      methodExercised:
        expression: "containsDescendantOf(name:name):configurationPropertyState"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid50):class"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "10A3F34024BE72648ABE0871F5066C16"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "isArray():boolean8"
    - type: "LOCAL_VARIABLE"
      name: "aggregateBinder"
      modelFingerprint: "F81B2BD6918AB206B11CC538A703C716"
      valueUuid: "arrayBinder"
      methodExercised:
        expression: "bind(name:name,target:bindable,elementBinder:aggregateElementBinder):object4"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "76A56BEAC78DC6159096CEA3704311B2"
      valueUuid: "handler"
      methodExercised:
        expression: "onFinish(name:name,target:bindable,context:binder.Context,result:object3):void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "25AAD45FF082CB76458692130FEA3F1D"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object3,target:bindable):object5"
    - type: "STATIC"
      name: "BindResult.class"
      modelFingerprint: "EE68F488FA16232FEA1E6B38034AD780"
      valueUuid: "BindResult.class"
      methodExercised:
        expression: "of(value:object5):bindResult"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A75461398CE02F645643D62213364437"
      valueUuid: "bindResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "if (property == null && context.depth != 0 && containsNoDescendantOf(context.getSources(),\
        \ name)) {"
      lineNumber: 398
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getSources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid46"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid47"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid48"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid49"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object2"
      collectionUuid: "iterable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "PRESENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "configurationPropertyState"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid50"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ArrayBinder"
        parameters:
        - name: "context"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
            uuid: "binder.Context"
      valueType: "org.springframework.boot.context.properties.bind.ArrayBinder"
      uuid: "arrayBinder"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.bind.ArrayBinder"
            parameters:
            - name: "context"
              value:
                sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
                uuid: "binder.Context"
          valueType: "org.springframework.boot.context.properties.bind.ArrayBinder"
          uuid: "arrayBinder"
          fixed: true
        methodParameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            genericValueType: "java.lang.Object"
            uuid: "bindable"
        - name: "elementBinder"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.AggregateElementBinder"
            uuid: "aggregateElementBinder"
        methodName: "bind"
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.AggregateElementBinder"
      uuid: "aggregateElementBinder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "BindResult.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 447
      expression: "target.hasBindRestriction(BindRestriction.NO_DIRECT_PROPERTY)"
      range: "(447,25)-(447,85)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 398
      expression: "context.depth != 0"
      range: "(398,27)-(398,44)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 508
      expression: "for-each(sources)"
      range: "(508,45)-(508,51)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 509
      expression: "source.containsDescendantOf(name) != ConfigurationPropertyState.ABSENT"
      range: "(509,8)-(509,77)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 398
      expression: "containsNoDescendantOf(context.getSources(), name)"
      range: "(398,49)-(398,98)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 423
      expression: "Map.class.isAssignableFrom(resolvedType)"
      range: "(423,7)-(423,46)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 426
      expression: "Collection.class.isAssignableFrom(resolvedType)"
      range: "(426,7)-(426,53)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 429
      expression: "target.getType().isArray()"
      range: "(429,7)-(429,32)"
      evaluatedAs: true
      internalMethodName: "getAggregateBinder"
    - lineNumber: 402
      expression: "aggregateBinder != null"
      range: "(402,7)-(402,29)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
  - pathId: "path22"
    testPathName: "bind4WhenResolvedIsPrimitiveAndIsUnbindableBeanNameTargetContextAndResultIsNullAndResultIsNullAndNotCreate"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "F5A3798A1C1521A424627B70104FA060"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9494607E60AFEFB1E3EDEF421F97FCD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "76EF63F96E478822469FF66526F1C2AE"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid51):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid52):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid53):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid54):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "E1775C8BAF8A5612865B1486815B0687"
      valueUuid: "defaultBindHandler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "99AA0A9FDB24324026AFBF2BFA37996D"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "C24186ADD8CD0F67FA4BEAE338DDF23D"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():type"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "type"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid55):class"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "C24186ADD8CD0F67FA4BEAE338DDF23D"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():type"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9BE6C3FE0AD02D9354C52AB1426A261C"
      valueUuid: "type"
      methodExercised:
        expression: "isArray():boolean6"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "C24186ADD8CD0F67FA4BEAE338DDF23D"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():type"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "type"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid56):class2"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "E52A4CEBB5B9F073AA8BAC9E72ACF425"
      valueUuid: "defaultBindHandler"
      methodExercised:
        expression: "onFinish(name:name,target:bindable,context:binder.Context,result:object2):void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "A4125C0A4DBE88AC87A6EBDDABDDFB85"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object2,target:bindable):object3"
    - type: "STATIC"
      name: "BindResult.class"
      modelFingerprint: "EE68F488FA16232FEA1E6B38034AD780"
      valueUuid: "BindResult.class"
      methodExercised:
        expression: "of(value:object3):bindResult"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A75461398CE02F645643D62213364437"
      valueUuid: "bindResult"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isAssignableFrom(java.lang.Class<?>)\
        \ : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid51"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid52"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid53"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid54"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "defaultBindHandler"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid55"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid56"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "defaultBindHandler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object3"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object2"
      fixed: true
    - sapientType: "OBJECT"
      content: !<static_method_return>
        target: "org.springframework.boot.context.properties.bind.Bindable"
        method: "of"
        methodParameters:
        - name: "type"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.ResolvableType"
            uuid: "type"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "BindResult.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 398
      expression: "context.depth != 0"
      range: "(398,27)-(398,44)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 423
      expression: "Map.class.isAssignableFrom(resolvedType)"
      range: "(423,7)-(423,46)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 426
      expression: "Collection.class.isAssignableFrom(resolvedType)"
      range: "(426,7)-(426,53)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 429
      expression: "target.getType().isArray()"
      range: "(429,7)-(429,32)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 402
      expression: "aggregateBinder != null"
      range: "(402,7)-(402,29)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 405
      expression: "property != null"
      range: "(405,7)-(405,22)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 493
      expression: "for-each(context.getSources())"
      range: "(493,45)-(493,64)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 500
      expression: "resolved.isPrimitive()"
      range: "(500,7)-(500,28)"
      evaluatedAs: true
      internalMethodName: "isUnbindableBean"
    - lineNumber: 469
      expression: "isUnbindableBean(name, target, context)"
      range: "(469,7)-(469,45)"
      evaluatedAs: true
      internalMethodName: "bindDataObject"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
  - pathId: "path26"
    testPathName: "bind4WhenInstanceIsNull"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "FD7A3CDA99391E4A3F95CA3439237840"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "25B83B0AA69353874E1F276DD18C535A"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid57):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid58):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid59):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid60):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "6106E0F948C0E3314BB71896D127B154"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "57BD6B5A33387907B105DA6A3531412B"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "60634B8DC849F8BBC08A084C2CF5D4A1"
      valueUuid: "bindable"
      methodExercised:
        expression: "hasBindRestriction(bindRestriction:Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "7837AA3F816931C9F9CFCD17C35D721D"
      valueUuid: "object2"
      methodExercised:
        expression: "getConfigurationProperty(name:name):configurationProperty"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid61):class"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9BE6C3FE0AD02D9354C52AB1426A261C"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "isArray():boolean8"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "18E47D2825E09CEDCD872E509293E354"
      valueUuid: "configurationProperty"
      methodExercised:
        expression: "getValue():value"
    - type: "FIELD"
      name: "placeholdersResolver"
      modelFingerprint: "898690D52AA5A45340BD8E5ADD4EA803"
      valueUuid: "placeholdersResolver"
      methodExercised:
        expression: "resolvePlaceholders(value:value):object4"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object4,target:bindable):object5"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "C99F0840CC2BB42B1D9A347B9CDDC4C3"
      valueUuid: "object6"
      methodExercised:
        expression: "containsDescendantOf(name:name):configurationPropertyState"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType3"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid62):class2"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "00692E5451E5FBA38A66F7B2E571440F"
      valueUuid: "bindable"
      methodExercised:
        expression: "getBindMethod():bindMethod"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "74D65B42C57C15CBF9ECA9BF0F5BD334"
      valueUuid: "handler"
      methodExercised:
        expression: "onFailure(name:name,target:bindable,context:binder.Context,error:exception):object8"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter3"
      methodExercised:
        expression: "convert(source:object8,target:bindable):object9"
    - type: "STATIC"
      name: "BindResult.class"
      modelFingerprint: "EE68F488FA16232FEA1E6B38034AD780"
      valueUuid: "BindResult.class"
      methodExercised:
        expression: "of(value:object9):bindResult"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A75461398CE02F645643D62213364437"
      valueUuid: "bindResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (ConfigurationPropertySource source : context.getSources()) {"
      lineNumber: 450
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getSources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid57"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid58"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid59"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid60"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object2"
      collectionUuid: "iterable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "configurationProperty-name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "configurationProperty-origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid61"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "configurationProperty-name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "configurationProperty-origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
      uuid: "placeholdersResolver"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object6"
      collectionUuid: "iterable2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "PRESENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "configurationPropertyState"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid62"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "exception"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object9"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "BindResult.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 447
      expression: "target.hasBindRestriction(BindRestriction.NO_DIRECT_PROPERTY)"
      range: "(447,25)-(447,85)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 450
      expression: "for-each(context.getSources())"
      range: "(450,45)-(450,64)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 452
      expression: "property != null"
      range: "(452,8)-(452,23)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 423
      expression: "Map.class.isAssignableFrom(resolvedType)"
      range: "(423,7)-(423,46)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 426
      expression: "Collection.class.isAssignableFrom(resolvedType)"
      range: "(426,7)-(426,53)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 429
      expression: "target.getType().isArray()"
      range: "(429,7)-(429,32)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 402
      expression: "aggregateBinder != null"
      range: "(402,7)-(402,29)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 405
      expression: "property != null"
      range: "(405,7)-(405,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 409
      expression: "catch-exception (ConverterNotFoundException)"
      range: "(409,4)-(409,39)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 493
      expression: "for-each(context.getSources())"
      range: "(493,45)-(493,64)"
      evaluatedAs: true
      internalMethodName: "isUnbindableBean"
    - lineNumber: 494
      expression: "source.containsDescendantOf(name) == ConfigurationPropertyState.PRESENT"
      range: "(494,8)-(494,78)"
      evaluatedAs: true
      internalMethodName: "isUnbindableBean"
    - lineNumber: 469
      expression: "isUnbindableBean(name, target, context)"
      range: "(469,7)-(469,45)"
      evaluatedAs: false
      internalMethodName: "bindDataObject"
    - lineNumber: 474
      expression: "!allowRecursiveBinding"
      range: "(474,7)-(474,28)"
      evaluatedAs: true
      internalMethodName: "bindDataObject"
    - lineNumber: 474
      expression: "context.isBindingDataObject(type)"
      range: "(474,33)-(474,65)"
      evaluatedAs: true
      internalMethodName: "bindDataObject"
    - lineNumber: 412
      expression: "instance != null"
      range: "(412,9)-(412,24)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    catchBlockExercised:
      idExternalInstruction: 37
      id: 4
      catchExceptions:
      - "org.springframework.core.convert.ConverterNotFoundException"
  - pathId: "path19"
    testPathName: "bind4WhenResolvedIsPrimitiveAndIsUnbindableBeanNameTargetContextAndResultIsNullAndResultIsNullAndNotCreate3"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "363135561F12000EE065922928358167"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid63):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid64):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid65):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid66):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "6106E0F948C0E3314BB71896D127B154"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "57BD6B5A33387907B105DA6A3531412B"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "60634B8DC849F8BBC08A084C2CF5D4A1"
      valueUuid: "bindable"
      methodExercised:
        expression: "hasBindRestriction(bindRestriction:Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "98103C5B3CE052FBFE54669FB9AD41B4"
      valueUuid: "object2"
      methodExercised:
        expression: "getConfigurationProperty(name:name):configurationProperty"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid67):class"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9BE6C3FE0AD02D9354C52AB1426A261C"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "isArray():boolean9"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType3"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid68):class2"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "76A56BEAC78DC6159096CEA3704311B2"
      valueUuid: "handler"
      methodExercised:
        expression: "onFinish(name:name,target:bindable,context:binder.Context,result:object3):void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "25AAD45FF082CB76458692130FEA3F1D"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object3,target:bindable):object4"
    - type: "STATIC"
      name: "BindResult.class"
      modelFingerprint: "EE68F488FA16232FEA1E6B38034AD780"
      valueUuid: "BindResult.class"
      methodExercised:
        expression: "of(value:object4):bindResult"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A75461398CE02F645643D62213364437"
      valueUuid: "bindResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (ConfigurationPropertySource source : context.getSources()) {"
      lineNumber: 450
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getSources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid63"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid64"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid65"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid66"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object2"
      collectionUuid: "iterable"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid67"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid68"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "BindResult.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 447
      expression: "target.hasBindRestriction(BindRestriction.NO_DIRECT_PROPERTY)"
      range: "(447,25)-(447,85)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 450
      expression: "for-each(context.getSources())"
      range: "(450,45)-(450,64)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 452
      expression: "property != null"
      range: "(452,8)-(452,23)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 398
      expression: "context.depth != 0"
      range: "(398,27)-(398,44)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 423
      expression: "Map.class.isAssignableFrom(resolvedType)"
      range: "(423,7)-(423,46)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 426
      expression: "Collection.class.isAssignableFrom(resolvedType)"
      range: "(426,7)-(426,53)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 429
      expression: "target.getType().isArray()"
      range: "(429,7)-(429,32)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 402
      expression: "aggregateBinder != null"
      range: "(402,7)-(402,29)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 405
      expression: "property != null"
      range: "(405,7)-(405,22)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 493
      expression: "for-each(context.getSources())"
      range: "(493,45)-(493,64)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 500
      expression: "resolved.isPrimitive()"
      range: "(500,7)-(500,28)"
      evaluatedAs: true
      internalMethodName: "isUnbindableBean"
    - lineNumber: 469
      expression: "isUnbindableBean(name, target, context)"
      range: "(469,7)-(469,45)"
      evaluatedAs: true
      internalMethodName: "bindDataObject"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
  - pathId: "path25"
    testPathName: "bind4WhenResolvedIsPrimitiveAndIsUnbindableBeanNameTargetContextAndResultIsNullAndResultIsNullAndNotCreate5"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "FD7B7FDE79FA10438FB190C9C09AA39D"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid69):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid70):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid71):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid72):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "6106E0F948C0E3314BB71896D127B154"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "57BD6B5A33387907B105DA6A3531412B"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "2EE2A160E4565FC4211DA61AF18A400C"
      valueUuid: "bindable"
      methodExercised:
        expression: "hasBindRestriction(bindRestriction:Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "C99F0840CC2BB42B1D9A347B9CDDC4C3"
      valueUuid: "object2"
      methodExercised:
        expression: "containsDescendantOf(name:name):configurationPropertyState"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid73):class"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9BE6C3FE0AD02D9354C52AB1426A261C"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "isArray():boolean8"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType3"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid74):class2"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "76A56BEAC78DC6159096CEA3704311B2"
      valueUuid: "handler"
      methodExercised:
        expression: "onFinish(name:name,target:bindable,context:binder.Context,result:object3):void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "25AAD45FF082CB76458692130FEA3F1D"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object3,target:bindable):object4"
    - type: "STATIC"
      name: "BindResult.class"
      modelFingerprint: "EE68F488FA16232FEA1E6B38034AD780"
      valueUuid: "BindResult.class"
      methodExercised:
        expression: "of(value:object4):bindResult"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A75461398CE02F645643D62213364437"
      valueUuid: "bindResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "if (property == null && context.depth != 0 && containsNoDescendantOf(context.getSources(),\
        \ name)) {"
      lineNumber: 398
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getSources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid69"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid70"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid71"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid72"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object2"
      collectionUuid: "iterable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "PRESENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "configurationPropertyState"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid73"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid74"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "BindResult.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 447
      expression: "target.hasBindRestriction(BindRestriction.NO_DIRECT_PROPERTY)"
      range: "(447,25)-(447,85)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 398
      expression: "context.depth != 0"
      range: "(398,27)-(398,44)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 508
      expression: "for-each(sources)"
      range: "(508,45)-(508,51)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 509
      expression: "source.containsDescendantOf(name) != ConfigurationPropertyState.ABSENT"
      range: "(509,8)-(509,77)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 398
      expression: "containsNoDescendantOf(context.getSources(), name)"
      range: "(398,49)-(398,98)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 423
      expression: "Map.class.isAssignableFrom(resolvedType)"
      range: "(423,7)-(423,46)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 426
      expression: "Collection.class.isAssignableFrom(resolvedType)"
      range: "(426,7)-(426,53)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 429
      expression: "target.getType().isArray()"
      range: "(429,7)-(429,32)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 402
      expression: "aggregateBinder != null"
      range: "(402,7)-(402,29)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 405
      expression: "property != null"
      range: "(405,7)-(405,22)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 409
      expression: "catch-exception (ConverterNotFoundException)"
      range: "(409,4)-(409,39)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 493
      expression: "for-each(context.getSources())"
      range: "(493,45)-(493,64)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 500
      expression: "resolved.isPrimitive()"
      range: "(500,7)-(500,28)"
      evaluatedAs: true
      internalMethodName: "isUnbindableBean"
    - lineNumber: 469
      expression: "isUnbindableBean(name, target, context)"
      range: "(469,7)-(469,45)"
      evaluatedAs: true
      internalMethodName: "bindDataObject"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    catchBlockExercised:
      idExternalInstruction: 37
      id: 4
      catchExceptions:
      - "org.springframework.core.convert.ConverterNotFoundException"
  - pathId: "path7"
    testPathName: "bind4WhenContextIsBindingDataObjectTypeAndResultIsNullAndResultIsNullAndNotCreate"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "7AA59FC49EC2AE8B1405F0E048617D9F"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid75):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid76):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid77):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid78):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "6106E0F948C0E3314BB71896D127B154"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "57BD6B5A33387907B105DA6A3531412B"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "2EE2A160E4565FC4211DA61AF18A400C"
      valueUuid: "bindable"
      methodExercised:
        expression: "hasBindRestriction(bindRestriction:Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "C99F0840CC2BB42B1D9A347B9CDDC4C3"
      valueUuid: "object2"
      methodExercised:
        expression: "containsDescendantOf(name:name):configurationPropertyState"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid79):class"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9BE6C3FE0AD02D9354C52AB1426A261C"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "isArray():boolean8"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "C99F0840CC2BB42B1D9A347B9CDDC4C3"
      valueUuid: "object3"
      methodExercised:
        expression: "containsDescendantOf(name:name):configurationPropertyState2"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType3"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid80):class2"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "00692E5451E5FBA38A66F7B2E571440F"
      valueUuid: "bindable"
      methodExercised:
        expression: "getBindMethod():bindMethod"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "76A56BEAC78DC6159096CEA3704311B2"
      valueUuid: "handler"
      methodExercised:
        expression: "onFinish(name:name,target:bindable,context:binder.Context,result:object4):void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "25AAD45FF082CB76458692130FEA3F1D"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object4,target:bindable):object5"
    - type: "STATIC"
      name: "BindResult.class"
      modelFingerprint: "EE68F488FA16232FEA1E6B38034AD780"
      valueUuid: "BindResult.class"
      methodExercised:
        expression: "of(value:object5):bindResult"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A75461398CE02F645643D62213364437"
      valueUuid: "bindResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "if (property == null && context.depth != 0 && containsNoDescendantOf(context.getSources(),\
        \ name)) {"
      lineNumber: 398
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getSources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid75"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid76"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid77"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid78"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object2"
      collectionUuid: "iterable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "PRESENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "configurationPropertyState"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid79"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object3"
      collectionUuid: "iterable2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "PRESENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "configurationPropertyState2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid80"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "BindResult.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 447
      expression: "target.hasBindRestriction(BindRestriction.NO_DIRECT_PROPERTY)"
      range: "(447,25)-(447,85)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 398
      expression: "context.depth != 0"
      range: "(398,27)-(398,44)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 508
      expression: "for-each(sources)"
      range: "(508,45)-(508,51)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 509
      expression: "source.containsDescendantOf(name) != ConfigurationPropertyState.ABSENT"
      range: "(509,8)-(509,77)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 398
      expression: "containsNoDescendantOf(context.getSources(), name)"
      range: "(398,49)-(398,98)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 423
      expression: "Map.class.isAssignableFrom(resolvedType)"
      range: "(423,7)-(423,46)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 426
      expression: "Collection.class.isAssignableFrom(resolvedType)"
      range: "(426,7)-(426,53)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 429
      expression: "target.getType().isArray()"
      range: "(429,7)-(429,32)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 402
      expression: "aggregateBinder != null"
      range: "(402,7)-(402,29)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 405
      expression: "property != null"
      range: "(405,7)-(405,22)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 493
      expression: "for-each(context.getSources())"
      range: "(493,45)-(493,64)"
      evaluatedAs: true
      internalMethodName: "isUnbindableBean"
    - lineNumber: 494
      expression: "source.containsDescendantOf(name) == ConfigurationPropertyState.PRESENT"
      range: "(494,8)-(494,78)"
      evaluatedAs: true
      internalMethodName: "isUnbindableBean"
    - lineNumber: 469
      expression: "isUnbindableBean(name, target, context)"
      range: "(469,7)-(469,45)"
      evaluatedAs: false
      internalMethodName: "bindDataObject"
    - lineNumber: 474
      expression: "!allowRecursiveBinding"
      range: "(474,7)-(474,28)"
      evaluatedAs: true
      internalMethodName: "bindDataObject"
    - lineNumber: 474
      expression: "context.isBindingDataObject(type)"
      range: "(474,33)-(474,65)"
      evaluatedAs: true
      internalMethodName: "bindDataObject"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
  - pathId: "path9"
    testPathName: "bind4WhenNON_BEAN_CLASSESNotContainsResolvedAndResolvedGetNameStartsWithJava_AndIsUnbindableBeanNameTargetContextAndRes"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "132D74747A78E065719D28105FF2FC41"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid81):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid82):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid83):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid84):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "6106E0F948C0E3314BB71896D127B154"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "57BD6B5A33387907B105DA6A3531412B"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "2EE2A160E4565FC4211DA61AF18A400C"
      valueUuid: "bindable"
      methodExercised:
        expression: "hasBindRestriction(bindRestriction:Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "C99F0840CC2BB42B1D9A347B9CDDC4C3"
      valueUuid: "object2"
      methodExercised:
        expression: "containsDescendantOf(name:name):configurationPropertyState"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid85):class"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9BE6C3FE0AD02D9354C52AB1426A261C"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "isArray():boolean8"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FB9BA6660B378440169AB33C771084DD"
      valueUuid: "object3"
      methodExercised:
        expression: "containsDescendantOf(name:name):configurationPropertyState2"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "11B5C451B03F997617DAA753BB261606"
      valueUuid: "resolvableType3"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid86):class2"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "76A56BEAC78DC6159096CEA3704311B2"
      valueUuid: "handler"
      methodExercised:
        expression: "onFinish(name:name,target:bindable,context:binder.Context,result:object4):void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "25AAD45FF082CB76458692130FEA3F1D"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object4,target:bindable):object5"
    - type: "STATIC"
      name: "BindResult.class"
      modelFingerprint: "EE68F488FA16232FEA1E6B38034AD780"
      valueUuid: "BindResult.class"
      methodExercised:
        expression: "of(value:object5):bindResult"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A75461398CE02F645643D62213364437"
      valueUuid: "bindResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "if (property == null && context.depth != 0 && containsNoDescendantOf(context.getSources(),\
        \ name)) {"
      lineNumber: 398
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getSources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid81"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid82"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid83"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid84"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object2"
      collectionUuid: "iterable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "PRESENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "configurationPropertyState"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid85"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object3"
      collectionUuid: "iterable2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "ABSENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "configurationPropertyState2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid86"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "BindResult.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 447
      expression: "target.hasBindRestriction(BindRestriction.NO_DIRECT_PROPERTY)"
      range: "(447,25)-(447,85)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 398
      expression: "context.depth != 0"
      range: "(398,27)-(398,44)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 508
      expression: "for-each(sources)"
      range: "(508,45)-(508,51)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 509
      expression: "source.containsDescendantOf(name) != ConfigurationPropertyState.ABSENT"
      range: "(509,8)-(509,77)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 398
      expression: "containsNoDescendantOf(context.getSources(), name)"
      range: "(398,49)-(398,98)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 423
      expression: "Map.class.isAssignableFrom(resolvedType)"
      range: "(423,7)-(423,46)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 426
      expression: "Collection.class.isAssignableFrom(resolvedType)"
      range: "(426,7)-(426,53)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 429
      expression: "target.getType().isArray()"
      range: "(429,7)-(429,32)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 402
      expression: "aggregateBinder != null"
      range: "(402,7)-(402,29)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 405
      expression: "property != null"
      range: "(405,7)-(405,22)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 493
      expression: "for-each(context.getSources())"
      range: "(493,45)-(493,64)"
      evaluatedAs: true
      internalMethodName: "isUnbindableBean"
    - lineNumber: 494
      expression: "source.containsDescendantOf(name) == ConfigurationPropertyState.PRESENT"
      range: "(494,8)-(494,78)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 500
      expression: "resolved.isPrimitive()"
      range: "(500,7)-(500,28)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 500
      expression: "NON_BEAN_CLASSES.contains(resolved)"
      range: "(500,33)-(500,67)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 503
      expression: "resolved.getName().startsWith(\\\"java.\\\")"
      range: "(503,10)-(503,47)"
      evaluatedAs: true
      internalMethodName: "isUnbindableBean"
    - lineNumber: 469
      expression: "isUnbindableBean(name, target, context)"
      range: "(469,7)-(469,45)"
      evaluatedAs: true
      internalMethodName: "bindDataObject"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
  - pathId: "path10"
    testPathName: "bind4WhenIsUnbindableBeanNotNameTargetContextAndNotAllowRecursiveBindingAndContextNotIsBindingDataObjectTypeAndResultIs"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "5A65C890E00DAD5F6FD8A8F9E30B6B87"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid87):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid88):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid89):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid90):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "6106E0F948C0E3314BB71896D127B154"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "57BD6B5A33387907B105DA6A3531412B"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "2EE2A160E4565FC4211DA61AF18A400C"
      valueUuid: "bindable"
      methodExercised:
        expression: "hasBindRestriction(bindRestriction:Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "C99F0840CC2BB42B1D9A347B9CDDC4C3"
      valueUuid: "object2"
      methodExercised:
        expression: "containsDescendantOf(name:name):configurationPropertyState"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid91):class"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9BE6C3FE0AD02D9354C52AB1426A261C"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "isArray():boolean8"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FB9BA6660B378440169AB33C771084DD"
      valueUuid: "object3"
      methodExercised:
        expression: "containsDescendantOf(name:name):configurationPropertyState2"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "11B5C451B03F997617DAA753BB261606"
      valueUuid: "resolvableType3"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid92):class2"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType4"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType4"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid93):class3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "A01CB19AFB53C472EAC6CE2E570B9B00"
      valueUuid: "bindable"
      methodExercised:
        expression: "getBindMethod():bindMethod"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "76A56BEAC78DC6159096CEA3704311B2"
      valueUuid: "handler"
      methodExercised:
        expression: "onFinish(name:name,target:bindable,context:binder.Context,result:object4):void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "25AAD45FF082CB76458692130FEA3F1D"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object4,target:bindable):object7"
    - type: "STATIC"
      name: "BindResult.class"
      modelFingerprint: "EE68F488FA16232FEA1E6B38034AD780"
      valueUuid: "BindResult.class"
      methodExercised:
        expression: "of(value:object7):bindResult"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A75461398CE02F645643D62213364437"
      valueUuid: "bindResult"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "if (property == null && context.depth != 0 && containsNoDescendantOf(context.getSources(),\
        \ name)) {"
      lineNumber: 398
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getSources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid87"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid88"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid89"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid90"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object2"
      collectionUuid: "iterable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "PRESENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "configurationPropertyState"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid91"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object3"
      collectionUuid: "iterable2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "ABSENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "configurationPropertyState2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid92"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid93"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      uuid: "BindResult.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindResult"
      genericValueType: "java.lang.Object"
      uuid: "bindResult"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 447
      expression: "target.hasBindRestriction(BindRestriction.NO_DIRECT_PROPERTY)"
      range: "(447,25)-(447,85)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 398
      expression: "context.depth != 0"
      range: "(398,27)-(398,44)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 508
      expression: "for-each(sources)"
      range: "(508,45)-(508,51)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 509
      expression: "source.containsDescendantOf(name) != ConfigurationPropertyState.ABSENT"
      range: "(509,8)-(509,77)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 398
      expression: "containsNoDescendantOf(context.getSources(), name)"
      range: "(398,49)-(398,98)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 423
      expression: "Map.class.isAssignableFrom(resolvedType)"
      range: "(423,7)-(423,46)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 426
      expression: "Collection.class.isAssignableFrom(resolvedType)"
      range: "(426,7)-(426,53)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 429
      expression: "target.getType().isArray()"
      range: "(429,7)-(429,32)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 402
      expression: "aggregateBinder != null"
      range: "(402,7)-(402,29)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 405
      expression: "property != null"
      range: "(405,7)-(405,22)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 493
      expression: "for-each(context.getSources())"
      range: "(493,45)-(493,64)"
      evaluatedAs: true
      internalMethodName: "isUnbindableBean"
    - lineNumber: 494
      expression: "source.containsDescendantOf(name) == ConfigurationPropertyState.PRESENT"
      range: "(494,8)-(494,78)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 500
      expression: "resolved.isPrimitive()"
      range: "(500,7)-(500,28)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 500
      expression: "NON_BEAN_CLASSES.contains(resolved)"
      range: "(500,33)-(500,67)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 503
      expression: "resolved.getName().startsWith(\\\"java.\\\")"
      range: "(503,10)-(503,47)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 469
      expression: "isUnbindableBean(name, target, context)"
      range: "(469,7)-(469,45)"
      evaluatedAs: false
      internalMethodName: "bindDataObject"
    - lineNumber: 474
      expression: "!allowRecursiveBinding"
      range: "(474,7)-(474,28)"
      evaluatedAs: true
      internalMethodName: "bindDataObject"
    - lineNumber: 474
      expression: "context.isBindingDataObject(type)"
      range: "(474,33)-(474,65)"
      evaluatedAs: false
      internalMethodName: "bindDataObject"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
- method:
    name: "bindOrCreate"
    sourceCodeSignature: "<T> T bindOrCreate(String name, Class<T> target)"
    returnType: "java.lang.Object"
    parameters:
    - name: "name"
      type: "java.lang.String"
    - name: "target"
      type: "java.lang.Class"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "org.springframework.core.convert.ConverterNotFoundException"
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "296483BD28454BBE9FC90EE009E86F29"
  paths:
  - pathId: "path1"
    testPathName: "bindOrCreateTest"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "E7E916306F915C145AE47E96D0083DE1"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "63F0AEB18588FDD50129913BF544F767"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "56C0E4DE824BD856DCE44EDDDD9874F7"
      valueUuid: "target1"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid94):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid95):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Bindable.class"
      modelFingerprint: "34F2B9DD530748317DFF6CBC77252DD4"
      valueUuid: "Bindable.class"
      methodExercised:
        expression: "of(type:target1):bindable"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "A1397EE55395BF8BE8F6FF5D97D00FD1"
      methodExercised:
        expression: "bindOrCreate(name:name,target:bindable):object2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid94"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid95"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      uuid: "Bindable.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
- method:
    name: "bindOrCreate"
    sourceCodeSignature: "<T> T bindOrCreate(String name, Bindable<T> target)"
    returnType: "java.lang.Object"
    parameters:
    - name: "name"
      type: "java.lang.String"
    - name: "target"
      type: "org.springframework.boot.context.properties.bind.Bindable"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "org.springframework.core.convert.ConverterNotFoundException"
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "E32F2EE70DCEFF68C49DE2919AC8285E"
  paths:
  - pathId: "path1"
    testPathName: "bindOrCreate1Test"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "71F9DEA2DCFDCF2CF966D8947A13C74E"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "63F0AEB18588FDD50129913BF544F767"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid96):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid97):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "ConfigurationPropertyName.class"
      modelFingerprint: "31BA9F94B408437413E37B78EA6DF39E"
      valueUuid: "ConfigurationPropertyName.class"
      methodExercised:
        expression: "of(name:name):configurationPropertyName"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "05AF1DF4F4A6D9D283E50152FB328EE8"
      methodExercised:
        expression: "bindOrCreate(name:configurationPropertyName,target:target1,handler:uniqueUuid98):object2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid96"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid97"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "ConfigurationPropertyName.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "uniqueUuid98"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
- method:
    name: "bindOrCreate"
    sourceCodeSignature: "<T> T bindOrCreate(String name, Bindable<T> target, BindHandler\
      \ handler)"
    returnType: "java.lang.Object"
    parameters:
    - name: "name"
      type: "java.lang.String"
    - name: "target"
      type: "org.springframework.boot.context.properties.bind.Bindable"
    - name: "handler"
      type: "org.springframework.boot.context.properties.bind.BindHandler"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "org.springframework.core.convert.ConverterNotFoundException"
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "1BB6B522FFAAFD8456501DB8D10C190B"
  paths:
  - pathId: "path1"
    testPathName: "bindOrCreate2Test"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "DB552DC45AA4CF4C244FFA151DD01DCE"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "63F0AEB18588FDD50129913BF544F767"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "0998C9FC03D71CED8EF0AD60E12084D3"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid99):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid100):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "ConfigurationPropertyName.class"
      modelFingerprint: "31BA9F94B408437413E37B78EA6DF39E"
      valueUuid: "ConfigurationPropertyName.class"
      methodExercised:
        expression: "of(name:name):configurationPropertyName"
        staticAccess: true
    - type: "INTERNAL"
      name: "internalMethod"
      modelFingerprint: "46AB45055D99F4D189E3FC2AA40133DF"
      methodExercised:
        expression: "bindOrCreate(name:configurationPropertyName,target:target1,handler:handler):object2"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object2"
    disabled: false
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid99"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid100"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "ConfigurationPropertyName.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "BASIC"
      content: !<regular>
        value: "name1"
      valueType: "java.lang.String"
      uuid: "name"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "configurationPropertyName"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object2"
- method:
    name: "bindOrCreate"
    sourceCodeSignature: "<T> T bindOrCreate(ConfigurationPropertyName name, Bindable<T>\
      \ target, BindHandler handler)"
    returnType: "java.lang.Object"
    parameters:
    - name: "name"
      type: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    - name: "target"
      type: "org.springframework.boot.context.properties.bind.Bindable"
    - name: "handler"
      type: "org.springframework.boot.context.properties.bind.BindHandler"
    tryCatchBlocks:
    - idExternalInstruction: 0
      id: 1
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 2
      catchExceptions:
      - "java.lang.Exception"
    - idExternalInstruction: 0
      id: 4
      catchExceptions:
      - "org.springframework.core.convert.ConverterNotFoundException"
    - idExternalInstruction: 0
      id: 3
      catchExceptions:
      - "java.lang.Exception"
    instructionFingerprint: "369335D0865B023CE7020DDA3205A462"
  paths:
  - pathId: "path1"
    testPathName: "bindOrCreate3WhenResultIsNull"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "3D7AC6A12C6DD496B9C1123178E47BDB"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "303396F11D086A219184A709BEB33A1C"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid101):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid102):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "6B3E2F800EF54F12F4F1664D3F634B2E"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid103):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F777640C6949CDD9EB158F66E35CC16E"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid104):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "0390AA5DC6F4EF5EB52199273570D864"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "7239635062C3237CEA4F1E26C0BC3C35"
      valueUuid: "target1"
      methodExercised:
        expression: "getBindMethod():bindMethod"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "C317A216F3FEAE078CB8887A97E86148"
      valueUuid: "handler"
      methodExercised:
        expression: "onCreate(name:name,target:target1,context:binder.Context,result:object3):object4"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "F70A6AAA559E176DB107A7D47B917308"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object4,target:target1):object5"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "BF2C9E81FABEC7DDEBEE6D288B75D7C2"
      valueUuid: "target1"
      methodExercised:
        expression: "getType():type"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "7239635062C3237CEA4F1E26C0BC3C35"
      valueUuid: "target1"
      methodExercised:
        expression: "getBindMethod():bindMethod"
    - type: "LOCAL_VARIABLE"
      name: "dataObjectBinder"
      modelFingerprint: "2E0E753393F032A5E2C91FB7A138DFE9"
      valueUuid: "dataObjectBinder2"
      methodExercised:
        expression: "onUnableToCreateInstance(target:target1,context:binder.Context,exception:illegalStateException):void6"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "CA56BCBF5EACCA470818786E315859CA"
      valueUuid: "handler"
      methodExercised:
        expression: "onFailure(name:name,target:target1,context:binder.Context,error:exception):object6"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "2B236BD8A3E9A61F55B89FADFF2081DC"
      valueUuid: "bindConverter3"
      methodExercised:
        expression: "convert(source:object6,target:target1):object7"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object7"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Map.get(org.springframework.boot.context.properties.bind.BindMethod)\
        \ : java.util.List<org.springframework.boot.context.properties.bind.DataObjectBinder>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid101"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid102"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid103"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid104"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object5"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
      nameForMock: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DataObjectBinder"
      uuid: "dataObjectBinder2"
      collectionUuid: "list12"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable to create instance for type"
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.lang.IllegalStateException"
      uuid: "illegalStateException"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "exception"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 369
      expression: "result == null"
      range: "(369,8)-(369,21)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
  - pathId: "path2"
    testPathName: "bindOrCreate3WhenResultIsNotNull"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "3699677E95B01F1997116F2B83B2D838"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "79AA751E8DEF85DAAC2666FA9A7E6307"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "303396F11D086A219184A709BEB33A1C"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid105):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid106):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "6B3E2F800EF54F12F4F1664D3F634B2E"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid107):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F777640C6949CDD9EB158F66E35CC16E"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid108):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "0390AA5DC6F4EF5EB52199273570D864"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "7239635062C3237CEA4F1E26C0BC3C35"
      valueUuid: "target1"
      methodExercised:
        expression: "getBindMethod():bindMethod"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "C317A216F3FEAE078CB8887A97E86148"
      valueUuid: "handler"
      methodExercised:
        expression: "onCreate(name:name,target:target1,context:binder.Context,result:object3):object4"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "2B236BD8A3E9A61F55B89FADFF2081DC"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object4,target:target1):object5"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "7448F23EED39BDD5A18CD7E3ADBEC71B"
      valueUuid: "handler"
      methodExercised:
        expression: "onFinish(name:name,target:target1,context:binder.Context,result:object5):void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "2B236BD8A3E9A61F55B89FADFF2081DC"
      valueUuid: "bindConverter3"
      methodExercised:
        expression: "convert(source:object5,target:target1):object6"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object6"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.util.Map.get(org.springframework.boot.context.properties.bind.BindMethod)\
        \ : java.util.List<org.springframework.boot.context.properties.bind.DataObjectBinder>"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid105"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid106"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid107"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid108"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object6"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object6"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 369
      expression: "result == null"
      range: "(369,8)-(369,21)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
  - pathId: "path18"
    testPathName: "bindOrCreate3WhenResultIsNullAndCreateAndResultIsNotNull"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "55E43F17CFD4CCC1DC5B590F1D3100BC"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid109):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid110):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid111):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid112):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "6106E0F948C0E3314BB71896D127B154"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "57BD6B5A33387907B105DA6A3531412B"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "2EE2A160E4565FC4211DA61AF18A400C"
      valueUuid: "bindable"
      methodExercised:
        expression: "hasBindRestriction(bindRestriction:Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FB9BA6660B378440169AB33C771084DD"
      valueUuid: "object2"
      methodExercised:
        expression: "containsDescendantOf(name:name):configurationPropertyState"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "A01CB19AFB53C472EAC6CE2E570B9B00"
      valueUuid: "bindable"
      methodExercised:
        expression: "getBindMethod():bindMethod"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "47194F4234E60A776B63C37D74B9AD82"
      valueUuid: "handler"
      methodExercised:
        expression: "onCreate(name:name,target:bindable,context:binder.Context,result:object5):object6"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object6,target:bindable):object7"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "00D9538116B78DEBAF51A65C6E5DAAB3"
      valueUuid: "handler"
      methodExercised:
        expression: "onFinish(name:name,target:bindable,context:binder.Context,result:object7):void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter3"
      methodExercised:
        expression: "convert(source:object7,target:bindable):object8"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object8"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "if (property == null && context.depth != 0 && containsNoDescendantOf(context.getSources(),\
        \ name)) {"
      lineNumber: 398
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getSources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid109"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid110"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid111"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid112"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object2"
      collectionUuid: "iterable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "ABSENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "configurationPropertyState"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 447
      expression: "target.hasBindRestriction(BindRestriction.NO_DIRECT_PROPERTY)"
      range: "(447,25)-(447,85)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 398
      expression: "context.depth != 0"
      range: "(398,27)-(398,44)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 508
      expression: "for-each(sources)"
      range: "(508,45)-(508,51)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 509
      expression: "source.containsDescendantOf(name) != ConfigurationPropertyState.ABSENT"
      range: "(509,8)-(509,77)"
      evaluatedAs: false
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 398
      expression: "containsNoDescendantOf(context.getSources(), name)"
      range: "(398,49)-(398,98)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 369
      expression: "result == null"
      range: "(369,8)-(369,21)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
  - pathId: "path3"
    testPathName: "bindOrCreate3WhenCreateAndResultIsNull"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "43C759AA48B3340B9761AB8EE4055EB2"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid113):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid114):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid115):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid116):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "6106E0F948C0E3314BB71896D127B154"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "57BD6B5A33387907B105DA6A3531412B"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "2EE2A160E4565FC4211DA61AF18A400C"
      valueUuid: "bindable"
      methodExercised:
        expression: "hasBindRestriction(bindRestriction:Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "C99F0840CC2BB42B1D9A347B9CDDC4C3"
      valueUuid: "object2"
      methodExercised:
        expression: "containsDescendantOf(name:name):configurationPropertyState"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid117):class"
    - type: "LOCAL_VARIABLE"
      name: "aggregateBinder"
      modelFingerprint: "5418B0D6BD8CDEED420A05F828C01E0E"
      valueUuid: "mapBinder"
      methodExercised:
        expression: "bind(name:name,target:bindable,elementBinder:aggregateElementBinder):object4"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "D74E0FE992C4F34F247E80FC5481BF09"
      valueUuid: "handler"
      methodExercised:
        expression: "onSuccess(name:name,target:bindable,context:binder.Context,result:object3):object5"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "803CF91FF8273E0245616729A18AF981"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object5,target:bindable):object6"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "A01CB19AFB53C472EAC6CE2E570B9B00"
      valueUuid: "bindable"
      methodExercised:
        expression: "getBindMethod():bindMethod"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "47194F4234E60A776B63C37D74B9AD82"
      valueUuid: "handler"
      methodExercised:
        expression: "onCreate(name:name,target:bindable,context:binder.Context,result:object8):object9"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "803CF91FF8273E0245616729A18AF981"
      valueUuid: "bindConverter3"
      methodExercised:
        expression: "convert(source:object9,target:bindable):object10"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "0AEA7B1F6F57B7B97430ADB390B2C215"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType2"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "A01CB19AFB53C472EAC6CE2E570B9B00"
      valueUuid: "bindable"
      methodExercised:
        expression: "getBindMethod():bindMethod2"
    - type: "LOCAL_VARIABLE"
      name: "dataObjectBinder"
      modelFingerprint: "C99C3343F0B26842E3C37C0F8344D105"
      valueUuid: "dataObjectBinder2"
      methodExercised:
        expression: "onUnableToCreateInstance(target:bindable,context:binder.Context,exception:illegalStateException):void6"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "74D65B42C57C15CBF9ECA9BF0F5BD334"
      valueUuid: "handler"
      methodExercised:
        expression: "onFailure(name:name,target:bindable,context:binder.Context,error:exception):object11"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter4"
      methodExercised:
        expression: "convert(source:object11,target:bindable):object12"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object12"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "if (property == null && context.depth != 0 && containsNoDescendantOf(context.getSources(),\
        \ name)) {"
      lineNumber: 398
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getSources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid113"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid114"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid115"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid116"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object2"
      collectionUuid: "iterable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "PRESENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "configurationPropertyState"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid117"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.MapBinder"
        parameters:
        - name: "context"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
            uuid: "binder.Context"
      valueType: "org.springframework.boot.context.properties.bind.MapBinder"
      uuid: "mapBinder"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.bind.MapBinder"
            parameters:
            - name: "context"
              value:
                sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
                uuid: "binder.Context"
          valueType: "org.springframework.boot.context.properties.bind.MapBinder"
          uuid: "mapBinder"
          fixed: true
        methodParameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            genericValueType: "java.lang.Object"
            uuid: "bindable"
        - name: "elementBinder"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.AggregateElementBinder"
            uuid: "aggregateElementBinder"
        methodName: "bind"
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.AggregateElementBinder"
      uuid: "aggregateElementBinder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object6"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter3"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object10"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
      nameForMock: "resolvableType2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DataObjectBinder"
      uuid: "dataObjectBinder2"
      collectionUuid: "list12"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable to create instance for resolvableType2"
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.lang.IllegalStateException"
      uuid: "illegalStateException"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object11"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "exception"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object12"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object11"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object12"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 447
      expression: "target.hasBindRestriction(BindRestriction.NO_DIRECT_PROPERTY)"
      range: "(447,25)-(447,85)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 398
      expression: "context.depth != 0"
      range: "(398,27)-(398,44)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 508
      expression: "for-each(sources)"
      range: "(508,45)-(508,51)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 509
      expression: "source.containsDescendantOf(name) != ConfigurationPropertyState.ABSENT"
      range: "(509,8)-(509,77)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 398
      expression: "containsNoDescendantOf(context.getSources(), name)"
      range: "(398,49)-(398,98)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 423
      expression: "Map.class.isAssignableFrom(resolvedType)"
      range: "(423,7)-(423,46)"
      evaluatedAs: true
      internalMethodName: "getAggregateBinder"
    - lineNumber: 402
      expression: "aggregateBinder != null"
      range: "(402,7)-(402,29)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 369
      expression: "result == null"
      range: "(369,8)-(369,21)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
  - pathId: "path8"
    testPathName: "bindOrCreate3WhenAggregateBinderIsNotNullAndResultIsNullAndResultIsNullAndCreateAndResultIsNotNull"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "FCD6294222DED85CDF37548A5F093892"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid118):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid119):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid120):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid121):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "6106E0F948C0E3314BB71896D127B154"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "57BD6B5A33387907B105DA6A3531412B"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "2EE2A160E4565FC4211DA61AF18A400C"
      valueUuid: "bindable"
      methodExercised:
        expression: "hasBindRestriction(bindRestriction:Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "C99F0840CC2BB42B1D9A347B9CDDC4C3"
      valueUuid: "object2"
      methodExercised:
        expression: "containsDescendantOf(name:name):configurationPropertyState"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid122):class"
    - type: "LOCAL_VARIABLE"
      name: "aggregateBinder"
      modelFingerprint: "05D36D13167B28CF02085391C4F31D0C"
      valueUuid: "collectionBinder"
      methodExercised:
        expression: "bind(name:name,target:bindable,elementBinder:aggregateElementBinder):object4"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "A01CB19AFB53C472EAC6CE2E570B9B00"
      valueUuid: "bindable"
      methodExercised:
        expression: "getBindMethod():bindMethod"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "47194F4234E60A776B63C37D74B9AD82"
      valueUuid: "handler"
      methodExercised:
        expression: "onCreate(name:name,target:bindable,context:binder.Context,result:object6):object7"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object7,target:bindable):object8"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "00D9538116B78DEBAF51A65C6E5DAAB3"
      valueUuid: "handler"
      methodExercised:
        expression: "onFinish(name:name,target:bindable,context:binder.Context,result:object8):void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter3"
      methodExercised:
        expression: "convert(source:object8,target:bindable):object9"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object9"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "if (property == null && context.depth != 0 && containsNoDescendantOf(context.getSources(),\
        \ name)) {"
      lineNumber: 398
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getSources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid118"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid119"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid120"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid121"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object2"
      collectionUuid: "iterable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "PRESENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "configurationPropertyState"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid122"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.CollectionBinder"
        parameters:
        - name: "context"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
            uuid: "binder.Context"
      valueType: "org.springframework.boot.context.properties.bind.CollectionBinder"
      uuid: "collectionBinder"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.bind.CollectionBinder"
            parameters:
            - name: "context"
              value:
                sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
                uuid: "binder.Context"
          valueType: "org.springframework.boot.context.properties.bind.CollectionBinder"
          uuid: "collectionBinder"
          fixed: true
        methodParameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            genericValueType: "java.lang.Object"
            uuid: "bindable"
        - name: "elementBinder"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.AggregateElementBinder"
            uuid: "aggregateElementBinder"
        methodName: "bind"
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.AggregateElementBinder"
      uuid: "aggregateElementBinder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object9"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object9"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 447
      expression: "target.hasBindRestriction(BindRestriction.NO_DIRECT_PROPERTY)"
      range: "(447,25)-(447,85)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 398
      expression: "context.depth != 0"
      range: "(398,27)-(398,44)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 508
      expression: "for-each(sources)"
      range: "(508,45)-(508,51)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 509
      expression: "source.containsDescendantOf(name) != ConfigurationPropertyState.ABSENT"
      range: "(509,8)-(509,77)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 398
      expression: "containsNoDescendantOf(context.getSources(), name)"
      range: "(398,49)-(398,98)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 423
      expression: "Map.class.isAssignableFrom(resolvedType)"
      range: "(423,7)-(423,46)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 426
      expression: "Collection.class.isAssignableFrom(resolvedType)"
      range: "(426,7)-(426,53)"
      evaluatedAs: true
      internalMethodName: "getAggregateBinder"
    - lineNumber: 402
      expression: "aggregateBinder != null"
      range: "(402,7)-(402,29)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 369
      expression: "result == null"
      range: "(369,8)-(369,21)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
  - pathId: "path21"
    testPathName: "bindOrCreate3WhenPropertyIsNotNullAndResultIsNullAndResultIsNullAndCreateAndResultIsNotNull"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "2834519F517735D93ADD56AAF2F889B7"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "25B83B0AA69353874E1F276DD18C535A"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid123):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid124):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid125):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid126):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "6106E0F948C0E3314BB71896D127B154"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "57BD6B5A33387907B105DA6A3531412B"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "60634B8DC849F8BBC08A084C2CF5D4A1"
      valueUuid: "bindable"
      methodExercised:
        expression: "hasBindRestriction(bindRestriction:Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "7837AA3F816931C9F9CFCD17C35D721D"
      valueUuid: "object2"
      methodExercised:
        expression: "getConfigurationProperty(name:name):configurationProperty"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid127):class"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9BE6C3FE0AD02D9354C52AB1426A261C"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "isArray():boolean8"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "18E47D2825E09CEDCD872E509293E354"
      valueUuid: "configurationProperty"
      methodExercised:
        expression: "getValue():value"
    - type: "FIELD"
      name: "placeholdersResolver"
      modelFingerprint: "898690D52AA5A45340BD8E5ADD4EA803"
      valueUuid: "placeholdersResolver"
      methodExercised:
        expression: "resolvePlaceholders(value:value):object4"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "803CF91FF8273E0245616729A18AF981"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object4,target:bindable):object5"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "A01CB19AFB53C472EAC6CE2E570B9B00"
      valueUuid: "bindable"
      methodExercised:
        expression: "getBindMethod():bindMethod"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "47194F4234E60A776B63C37D74B9AD82"
      valueUuid: "handler"
      methodExercised:
        expression: "onCreate(name:name,target:bindable,context:binder.Context,result:object7):object8"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter3"
      methodExercised:
        expression: "convert(source:object8,target:bindable):object9"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "00D9538116B78DEBAF51A65C6E5DAAB3"
      valueUuid: "handler"
      methodExercised:
        expression: "onFinish(name:name,target:bindable,context:binder.Context,result:object9):void6"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter4"
      methodExercised:
        expression: "convert(source:object9,target:bindable):object10"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object10"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (ConfigurationPropertySource source : context.getSources()) {"
      lineNumber: 450
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getSources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid123"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid124"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid125"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid126"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object2"
      collectionUuid: "iterable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "configurationProperty-name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "configurationProperty-origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid127"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "configurationProperty-name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "configurationProperty-origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
      uuid: "placeholdersResolver"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object5"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object9"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object10"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object10"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 447
      expression: "target.hasBindRestriction(BindRestriction.NO_DIRECT_PROPERTY)"
      range: "(447,25)-(447,85)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 450
      expression: "for-each(context.getSources())"
      range: "(450,45)-(450,64)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 452
      expression: "property != null"
      range: "(452,8)-(452,23)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 423
      expression: "Map.class.isAssignableFrom(resolvedType)"
      range: "(423,7)-(423,46)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 426
      expression: "Collection.class.isAssignableFrom(resolvedType)"
      range: "(426,7)-(426,53)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 429
      expression: "target.getType().isArray()"
      range: "(429,7)-(429,32)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 402
      expression: "aggregateBinder != null"
      range: "(402,7)-(402,29)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 405
      expression: "property != null"
      range: "(405,7)-(405,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 369
      expression: "result == null"
      range: "(369,8)-(369,21)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
  - pathId: "path9"
    testPathName: "bindOrCreate3WhenTargetGetTypeIsArrayAndAggregateBinderIsNotNullAndResultIsNullAndResultIsNullAndCreateAndResultIsNotNu"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "E8E9BD888799A61FD986D9D143988F2E"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid128):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid129):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid130):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid131):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "6106E0F948C0E3314BB71896D127B154"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "57BD6B5A33387907B105DA6A3531412B"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "2EE2A160E4565FC4211DA61AF18A400C"
      valueUuid: "bindable"
      methodExercised:
        expression: "hasBindRestriction(bindRestriction:Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "C99F0840CC2BB42B1D9A347B9CDDC4C3"
      valueUuid: "object2"
      methodExercised:
        expression: "containsDescendantOf(name:name):configurationPropertyState"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid132):class"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "10A3F34024BE72648ABE0871F5066C16"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "isArray():boolean8"
    - type: "LOCAL_VARIABLE"
      name: "aggregateBinder"
      modelFingerprint: "F81B2BD6918AB206B11CC538A703C716"
      valueUuid: "arrayBinder"
      methodExercised:
        expression: "bind(name:name,target:bindable,elementBinder:aggregateElementBinder):object4"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "A01CB19AFB53C472EAC6CE2E570B9B00"
      valueUuid: "bindable"
      methodExercised:
        expression: "getBindMethod():bindMethod"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "47194F4234E60A776B63C37D74B9AD82"
      valueUuid: "handler"
      methodExercised:
        expression: "onCreate(name:name,target:bindable,context:binder.Context,result:object6):object7"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object7,target:bindable):object8"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "00D9538116B78DEBAF51A65C6E5DAAB3"
      valueUuid: "handler"
      methodExercised:
        expression: "onFinish(name:name,target:bindable,context:binder.Context,result:object8):void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter3"
      methodExercised:
        expression: "convert(source:object8,target:bindable):object9"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object9"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "if (property == null && context.depth != 0 && containsNoDescendantOf(context.getSources(),\
        \ name)) {"
      lineNumber: 398
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getSources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid128"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid129"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid130"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid131"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object2"
      collectionUuid: "iterable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "PRESENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "configurationPropertyState"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid132"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.ArrayBinder"
        parameters:
        - name: "context"
          value:
            sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
            valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
            uuid: "binder.Context"
      valueType: "org.springframework.boot.context.properties.bind.ArrayBinder"
      uuid: "arrayBinder"
      fixed: true
    - sapientType: "OBJECT"
      content: !<method_return_from_value>
        target: "java.lang.Object"
        localVariableValue:
          sapientType: "OBJECT"
          content: !<new>
            target: "org.springframework.boot.context.properties.bind.ArrayBinder"
            parameters:
            - name: "context"
              value:
                sapientType: "PRIVATE_INNER_CLASS_OR_LAMBDA"
                valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
                uuid: "binder.Context"
          valueType: "org.springframework.boot.context.properties.bind.ArrayBinder"
          uuid: "arrayBinder"
          fixed: true
        methodParameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "name"
        - name: "target"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.Bindable"
            genericValueType: "java.lang.Object"
            uuid: "bindable"
        - name: "elementBinder"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.AggregateElementBinder"
            uuid: "aggregateElementBinder"
        methodName: "bind"
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.AggregateElementBinder"
      uuid: "aggregateElementBinder"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object9"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object9"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 447
      expression: "target.hasBindRestriction(BindRestriction.NO_DIRECT_PROPERTY)"
      range: "(447,25)-(447,85)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 398
      expression: "context.depth != 0"
      range: "(398,27)-(398,44)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 508
      expression: "for-each(sources)"
      range: "(508,45)-(508,51)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 509
      expression: "source.containsDescendantOf(name) != ConfigurationPropertyState.ABSENT"
      range: "(509,8)-(509,77)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 398
      expression: "containsNoDescendantOf(context.getSources(), name)"
      range: "(398,49)-(398,98)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 423
      expression: "Map.class.isAssignableFrom(resolvedType)"
      range: "(423,7)-(423,46)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 426
      expression: "Collection.class.isAssignableFrom(resolvedType)"
      range: "(426,7)-(426,53)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 429
      expression: "target.getType().isArray()"
      range: "(429,7)-(429,32)"
      evaluatedAs: true
      internalMethodName: "getAggregateBinder"
    - lineNumber: 402
      expression: "aggregateBinder != null"
      range: "(402,7)-(402,29)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 369
      expression: "result == null"
      range: "(369,8)-(369,21)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
  - pathId: "path25"
    testPathName: "bindOrCreate3WhenResolvedIsPrimitiveAndIsUnbindableBeanNameTargetContextAndResultIsNullAndResultIsNullAndCreateAndResul"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "D75D3D89621055D2B965EE59B9DC52F4"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "9494607E60AFEFB1E3EDEF421F97FCD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "76EF63F96E478822469FF66526F1C2AE"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid133):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid134):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid135):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid136):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "6106E0F948C0E3314BB71896D127B154"
      valueUuid: "defaultBindHandler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "99AA0A9FDB24324026AFBF2BFA37996D"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():type"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "type"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid137):class"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():type"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9BE6C3FE0AD02D9354C52AB1426A261C"
      valueUuid: "type"
      methodExercised:
        expression: "isArray():boolean6"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():type"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "type"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid138):class2"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "A01CB19AFB53C472EAC6CE2E570B9B00"
      valueUuid: "bindable"
      methodExercised:
        expression: "getBindMethod():bindMethod"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "47194F4234E60A776B63C37D74B9AD82"
      valueUuid: "defaultBindHandler"
      methodExercised:
        expression: "onCreate(name:name,target:bindable,context:binder.Context,result:object4):object5"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object5,target:bindable):object6"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "00D9538116B78DEBAF51A65C6E5DAAB3"
      valueUuid: "defaultBindHandler"
      methodExercised:
        expression: "onFinish(name:name,target:bindable,context:binder.Context,result:object6):void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter3"
      methodExercised:
        expression: "convert(source:object6,target:bindable):object7"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object7"
    disabled: true
    failureReason:
      reason: "METHOD_WITHOUT_EXPRESSION_SUPPORT"
      details: "Expression missing: java.lang.Class.isAssignableFrom(java.lang.Class<?>)\
        \ : boolean"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid133"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid134"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid135"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid136"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "defaultBindHandler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid137"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "type"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid138"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "defaultBindHandler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object6"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "defaultBindHandler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 398
      expression: "context.depth != 0"
      range: "(398,27)-(398,44)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 423
      expression: "Map.class.isAssignableFrom(resolvedType)"
      range: "(423,7)-(423,46)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 426
      expression: "Collection.class.isAssignableFrom(resolvedType)"
      range: "(426,7)-(426,53)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 429
      expression: "target.getType().isArray()"
      range: "(429,7)-(429,32)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 402
      expression: "aggregateBinder != null"
      range: "(402,7)-(402,29)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 405
      expression: "property != null"
      range: "(405,7)-(405,22)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 493
      expression: "for-each(context.getSources())"
      range: "(493,45)-(493,64)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 500
      expression: "resolved.isPrimitive()"
      range: "(500,7)-(500,28)"
      evaluatedAs: true
      internalMethodName: "isUnbindableBean"
    - lineNumber: 469
      expression: "isUnbindableBean(name, target, context)"
      range: "(469,7)-(469,45)"
      evaluatedAs: true
      internalMethodName: "bindDataObject"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 369
      expression: "result == null"
      range: "(369,8)-(369,21)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
  - pathId: "path28"
    testPathName: "bindOrCreate3WhenInstanceIsNull"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "83C154BEED8EC69AEEA6713A77249DD6"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "25B83B0AA69353874E1F276DD18C535A"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid139):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid140):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid141):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid142):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "6106E0F948C0E3314BB71896D127B154"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "57BD6B5A33387907B105DA6A3531412B"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "60634B8DC849F8BBC08A084C2CF5D4A1"
      valueUuid: "bindable"
      methodExercised:
        expression: "hasBindRestriction(bindRestriction:Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "7837AA3F816931C9F9CFCD17C35D721D"
      valueUuid: "object2"
      methodExercised:
        expression: "getConfigurationProperty(name:name):configurationProperty"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid143):class"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9BE6C3FE0AD02D9354C52AB1426A261C"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "isArray():boolean8"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "18E47D2825E09CEDCD872E509293E354"
      valueUuid: "configurationProperty"
      methodExercised:
        expression: "getValue():value"
    - type: "FIELD"
      name: "placeholdersResolver"
      modelFingerprint: "898690D52AA5A45340BD8E5ADD4EA803"
      valueUuid: "placeholdersResolver"
      methodExercised:
        expression: "resolvePlaceholders(value:value):object4"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object4,target:bindable):object5"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "C99F0840CC2BB42B1D9A347B9CDDC4C3"
      valueUuid: "object6"
      methodExercised:
        expression: "containsDescendantOf(name:name):configurationPropertyState"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType3"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid144):class2"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "00692E5451E5FBA38A66F7B2E571440F"
      valueUuid: "bindable"
      methodExercised:
        expression: "getBindMethod():bindMethod"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "74D65B42C57C15CBF9ECA9BF0F5BD334"
      valueUuid: "handler"
      methodExercised:
        expression: "onFailure(name:name,target:bindable,context:binder.Context,error:exception):object8"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter3"
      methodExercised:
        expression: "convert(source:object8,target:bindable):object9"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object9"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (ConfigurationPropertySource source : context.getSources()) {"
      lineNumber: 450
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getSources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid139"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid140"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid141"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid142"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object2"
      collectionUuid: "iterable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "configurationProperty-name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "configurationProperty-origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid143"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "configurationProperty-name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "configurationProperty-origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
      uuid: "placeholdersResolver"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object6"
      collectionUuid: "iterable2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "PRESENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "configurationPropertyState"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid144"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "exception"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object9"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object9"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 447
      expression: "target.hasBindRestriction(BindRestriction.NO_DIRECT_PROPERTY)"
      range: "(447,25)-(447,85)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 450
      expression: "for-each(context.getSources())"
      range: "(450,45)-(450,64)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 452
      expression: "property != null"
      range: "(452,8)-(452,23)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 423
      expression: "Map.class.isAssignableFrom(resolvedType)"
      range: "(423,7)-(423,46)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 426
      expression: "Collection.class.isAssignableFrom(resolvedType)"
      range: "(426,7)-(426,53)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 429
      expression: "target.getType().isArray()"
      range: "(429,7)-(429,32)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 402
      expression: "aggregateBinder != null"
      range: "(402,7)-(402,29)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 405
      expression: "property != null"
      range: "(405,7)-(405,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 409
      expression: "catch-exception (ConverterNotFoundException)"
      range: "(409,4)-(409,39)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 493
      expression: "for-each(context.getSources())"
      range: "(493,45)-(493,64)"
      evaluatedAs: true
      internalMethodName: "isUnbindableBean"
    - lineNumber: 494
      expression: "source.containsDescendantOf(name) == ConfigurationPropertyState.PRESENT"
      range: "(494,8)-(494,78)"
      evaluatedAs: true
      internalMethodName: "isUnbindableBean"
    - lineNumber: 469
      expression: "isUnbindableBean(name, target, context)"
      range: "(469,7)-(469,45)"
      evaluatedAs: false
      internalMethodName: "bindDataObject"
    - lineNumber: 474
      expression: "!allowRecursiveBinding"
      range: "(474,7)-(474,28)"
      evaluatedAs: true
      internalMethodName: "bindDataObject"
    - lineNumber: 474
      expression: "context.isBindingDataObject(type)"
      range: "(474,33)-(474,65)"
      evaluatedAs: true
      internalMethodName: "bindDataObject"
    - lineNumber: 412
      expression: "instance != null"
      range: "(412,9)-(412,24)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    catchBlockExercised:
      idExternalInstruction: 37
      id: 4
      catchExceptions:
      - "org.springframework.core.convert.ConverterNotFoundException"
  - pathId: "path33"
    testPathName: "bindOrCreate3WhenIsUnbindableBeanNameTargetContextAndInstanceIsNull"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "363960648A7E70F93E889764C8251442"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "25B83B0AA69353874E1F276DD18C535A"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid145):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid146):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid147):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid148):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "6106E0F948C0E3314BB71896D127B154"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "57BD6B5A33387907B105DA6A3531412B"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "60634B8DC849F8BBC08A084C2CF5D4A1"
      valueUuid: "bindable"
      methodExercised:
        expression: "hasBindRestriction(bindRestriction:Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "7837AA3F816931C9F9CFCD17C35D721D"
      valueUuid: "object2"
      methodExercised:
        expression: "getConfigurationProperty(name:name):configurationProperty"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid149):class"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9BE6C3FE0AD02D9354C52AB1426A261C"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "isArray():boolean8"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "18E47D2825E09CEDCD872E509293E354"
      valueUuid: "configurationProperty"
      methodExercised:
        expression: "getValue():value"
    - type: "FIELD"
      name: "placeholdersResolver"
      modelFingerprint: "898690D52AA5A45340BD8E5ADD4EA803"
      valueUuid: "placeholdersResolver"
      methodExercised:
        expression: "resolvePlaceholders(value:value):object4"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object4,target:bindable):object5"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "11B5C451B03F997617DAA753BB261606"
      valueUuid: "resolvableType3"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid150):class2"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "74D65B42C57C15CBF9ECA9BF0F5BD334"
      valueUuid: "handler"
      methodExercised:
        expression: "onFailure(name:name,target:bindable,context:binder.Context,error:exception):object7"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter3"
      methodExercised:
        expression: "convert(source:object7,target:bindable):object8"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object8"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (ConfigurationPropertySource source : context.getSources()) {"
      lineNumber: 450
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getSources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid145"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid146"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid147"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid148"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object2"
      collectionUuid: "iterable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "configurationProperty-name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "configurationProperty-origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid149"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "configurationProperty-name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "configurationProperty-origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
      uuid: "placeholdersResolver"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid150"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "exception"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 447
      expression: "target.hasBindRestriction(BindRestriction.NO_DIRECT_PROPERTY)"
      range: "(447,25)-(447,85)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 450
      expression: "for-each(context.getSources())"
      range: "(450,45)-(450,64)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 452
      expression: "property != null"
      range: "(452,8)-(452,23)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 423
      expression: "Map.class.isAssignableFrom(resolvedType)"
      range: "(423,7)-(423,46)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 426
      expression: "Collection.class.isAssignableFrom(resolvedType)"
      range: "(426,7)-(426,53)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 429
      expression: "target.getType().isArray()"
      range: "(429,7)-(429,32)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 402
      expression: "aggregateBinder != null"
      range: "(402,7)-(402,29)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 405
      expression: "property != null"
      range: "(405,7)-(405,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 409
      expression: "catch-exception (ConverterNotFoundException)"
      range: "(409,4)-(409,39)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 493
      expression: "for-each(context.getSources())"
      range: "(493,45)-(493,64)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 500
      expression: "resolved.isPrimitive()"
      range: "(500,7)-(500,28)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 500
      expression: "NON_BEAN_CLASSES.contains(resolved)"
      range: "(500,33)-(500,67)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 503
      expression: "resolved.getName().startsWith(\\\"java.\\\")"
      range: "(503,10)-(503,47)"
      evaluatedAs: true
      internalMethodName: "isUnbindableBean"
    - lineNumber: 469
      expression: "isUnbindableBean(name, target, context)"
      range: "(469,7)-(469,45)"
      evaluatedAs: true
      internalMethodName: "bindDataObject"
    - lineNumber: 412
      expression: "instance != null"
      range: "(412,9)-(412,24)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    catchBlockExercised:
      idExternalInstruction: 37
      id: 4
      catchExceptions:
      - "org.springframework.core.convert.ConverterNotFoundException"
  - pathId: "path22"
    testPathName: "bindOrCreate3WhenIsUnbindableBeanNameTargetContextAndResultIsNullAndResultIsNullAndCreateAndResultIsNotNull5"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "D548D5F6D658BF70844136B39D1FA6EC"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid151):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid152):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid153):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid154):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "6106E0F948C0E3314BB71896D127B154"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "57BD6B5A33387907B105DA6A3531412B"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "60634B8DC849F8BBC08A084C2CF5D4A1"
      valueUuid: "bindable"
      methodExercised:
        expression: "hasBindRestriction(bindRestriction:Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "98103C5B3CE052FBFE54669FB9AD41B4"
      valueUuid: "object2"
      methodExercised:
        expression: "getConfigurationProperty(name:name):configurationProperty"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid155):class"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9BE6C3FE0AD02D9354C52AB1426A261C"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "isArray():boolean9"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType3"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid156):class2"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "A01CB19AFB53C472EAC6CE2E570B9B00"
      valueUuid: "bindable"
      methodExercised:
        expression: "getBindMethod():bindMethod"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "47194F4234E60A776B63C37D74B9AD82"
      valueUuid: "handler"
      methodExercised:
        expression: "onCreate(name:name,target:bindable,context:binder.Context,result:object5):object6"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object6,target:bindable):object7"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "00D9538116B78DEBAF51A65C6E5DAAB3"
      valueUuid: "handler"
      methodExercised:
        expression: "onFinish(name:name,target:bindable,context:binder.Context,result:object7):void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter3"
      methodExercised:
        expression: "convert(source:object7,target:bindable):object8"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object8"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (ConfigurationPropertySource source : context.getSources()) {"
      lineNumber: 450
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getSources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid151"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid152"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid153"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid154"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object2"
      collectionUuid: "iterable"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid155"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid156"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 447
      expression: "target.hasBindRestriction(BindRestriction.NO_DIRECT_PROPERTY)"
      range: "(447,25)-(447,85)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 450
      expression: "for-each(context.getSources())"
      range: "(450,45)-(450,64)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 452
      expression: "property != null"
      range: "(452,8)-(452,23)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 398
      expression: "context.depth != 0"
      range: "(398,27)-(398,44)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 423
      expression: "Map.class.isAssignableFrom(resolvedType)"
      range: "(423,7)-(423,46)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 426
      expression: "Collection.class.isAssignableFrom(resolvedType)"
      range: "(426,7)-(426,53)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 429
      expression: "target.getType().isArray()"
      range: "(429,7)-(429,32)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 402
      expression: "aggregateBinder != null"
      range: "(402,7)-(402,29)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 405
      expression: "property != null"
      range: "(405,7)-(405,22)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 493
      expression: "for-each(context.getSources())"
      range: "(493,45)-(493,64)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 500
      expression: "resolved.isPrimitive()"
      range: "(500,7)-(500,28)"
      evaluatedAs: true
      internalMethodName: "isUnbindableBean"
    - lineNumber: 469
      expression: "isUnbindableBean(name, target, context)"
      range: "(469,7)-(469,45)"
      evaluatedAs: true
      internalMethodName: "bindDataObject"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 369
      expression: "result == null"
      range: "(369,8)-(369,21)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
  - pathId: "path34"
    testPathName: "bindOrCreate3WhenNotAllowRecursiveBindingAndContextNotIsBindingDataObjectTypeAndInstanceIsNull"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "62A68254B6DAD79B883994050825A519"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "25B83B0AA69353874E1F276DD18C535A"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid157):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid158):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid159):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid160):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "6106E0F948C0E3314BB71896D127B154"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "57BD6B5A33387907B105DA6A3531412B"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "60634B8DC849F8BBC08A084C2CF5D4A1"
      valueUuid: "bindable"
      methodExercised:
        expression: "hasBindRestriction(bindRestriction:Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "7837AA3F816931C9F9CFCD17C35D721D"
      valueUuid: "object2"
      methodExercised:
        expression: "getConfigurationProperty(name:name):configurationProperty"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid161):class"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9BE6C3FE0AD02D9354C52AB1426A261C"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "isArray():boolean8"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "18E47D2825E09CEDCD872E509293E354"
      valueUuid: "configurationProperty"
      methodExercised:
        expression: "getValue():value"
    - type: "FIELD"
      name: "placeholdersResolver"
      modelFingerprint: "898690D52AA5A45340BD8E5ADD4EA803"
      valueUuid: "placeholdersResolver"
      methodExercised:
        expression: "resolvePlaceholders(value:value):object4"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object4,target:bindable):object5"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "11B5C451B03F997617DAA753BB261606"
      valueUuid: "resolvableType3"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid162):class2"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType4"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType4"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid163):class3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "A01CB19AFB53C472EAC6CE2E570B9B00"
      valueUuid: "bindable"
      methodExercised:
        expression: "getBindMethod():bindMethod"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "74D65B42C57C15CBF9ECA9BF0F5BD334"
      valueUuid: "handler"
      methodExercised:
        expression: "onFailure(name:name,target:bindable,context:binder.Context,error:exception):object9"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter3"
      methodExercised:
        expression: "convert(source:object9,target:bindable):object10"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object10"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (ConfigurationPropertySource source : context.getSources()) {"
      lineNumber: 450
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getSources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid157"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid158"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid159"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid160"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object2"
      collectionUuid: "iterable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "configurationProperty-name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "configurationProperty-origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid161"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "configurationProperty-name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "configurationProperty-origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
      uuid: "placeholdersResolver"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid162"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid163"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "exception"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object10"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object10"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 447
      expression: "target.hasBindRestriction(BindRestriction.NO_DIRECT_PROPERTY)"
      range: "(447,25)-(447,85)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 450
      expression: "for-each(context.getSources())"
      range: "(450,45)-(450,64)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 452
      expression: "property != null"
      range: "(452,8)-(452,23)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 423
      expression: "Map.class.isAssignableFrom(resolvedType)"
      range: "(423,7)-(423,46)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 426
      expression: "Collection.class.isAssignableFrom(resolvedType)"
      range: "(426,7)-(426,53)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 429
      expression: "target.getType().isArray()"
      range: "(429,7)-(429,32)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 402
      expression: "aggregateBinder != null"
      range: "(402,7)-(402,29)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 405
      expression: "property != null"
      range: "(405,7)-(405,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 409
      expression: "catch-exception (ConverterNotFoundException)"
      range: "(409,4)-(409,39)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 493
      expression: "for-each(context.getSources())"
      range: "(493,45)-(493,64)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 500
      expression: "resolved.isPrimitive()"
      range: "(500,7)-(500,28)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 500
      expression: "NON_BEAN_CLASSES.contains(resolved)"
      range: "(500,33)-(500,67)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 503
      expression: "resolved.getName().startsWith(\\\"java.\\\")"
      range: "(503,10)-(503,47)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 469
      expression: "isUnbindableBean(name, target, context)"
      range: "(469,7)-(469,45)"
      evaluatedAs: false
      internalMethodName: "bindDataObject"
    - lineNumber: 474
      expression: "!allowRecursiveBinding"
      range: "(474,7)-(474,28)"
      evaluatedAs: true
      internalMethodName: "bindDataObject"
    - lineNumber: 474
      expression: "context.isBindingDataObject(type)"
      range: "(474,33)-(474,65)"
      evaluatedAs: false
      internalMethodName: "bindDataObject"
    - lineNumber: 412
      expression: "instance != null"
      range: "(412,9)-(412,24)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    catchBlockExercised:
      idExternalInstruction: 37
      id: 4
      catchExceptions:
      - "org.springframework.core.convert.ConverterNotFoundException"
  - pathId: "path26"
    testPathName: "bindOrCreate3WhenIsUnbindableBeanNameTargetContextAndResultIsNullAndResultIsNullAndCreateAndResultIsNotNull7"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "32175B3F10DD30061D61E31F36CFDC3B"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid164):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid165):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid166):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid167):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "6106E0F948C0E3314BB71896D127B154"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "57BD6B5A33387907B105DA6A3531412B"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "2EE2A160E4565FC4211DA61AF18A400C"
      valueUuid: "bindable"
      methodExercised:
        expression: "hasBindRestriction(bindRestriction:Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "C99F0840CC2BB42B1D9A347B9CDDC4C3"
      valueUuid: "object2"
      methodExercised:
        expression: "containsDescendantOf(name:name):configurationPropertyState"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid168):class"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9BE6C3FE0AD02D9354C52AB1426A261C"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "isArray():boolean8"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType3"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid169):class2"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "A01CB19AFB53C472EAC6CE2E570B9B00"
      valueUuid: "bindable"
      methodExercised:
        expression: "getBindMethod():bindMethod"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "47194F4234E60A776B63C37D74B9AD82"
      valueUuid: "handler"
      methodExercised:
        expression: "onCreate(name:name,target:bindable,context:binder.Context,result:object5):object6"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object6,target:bindable):object7"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "00D9538116B78DEBAF51A65C6E5DAAB3"
      valueUuid: "handler"
      methodExercised:
        expression: "onFinish(name:name,target:bindable,context:binder.Context,result:object7):void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter3"
      methodExercised:
        expression: "convert(source:object7,target:bindable):object8"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object8"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "if (property == null && context.depth != 0 && containsNoDescendantOf(context.getSources(),\
        \ name)) {"
      lineNumber: 398
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getSources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid164"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid165"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid166"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid167"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object2"
      collectionUuid: "iterable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "PRESENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "configurationPropertyState"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid168"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid169"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object6"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 447
      expression: "target.hasBindRestriction(BindRestriction.NO_DIRECT_PROPERTY)"
      range: "(447,25)-(447,85)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 398
      expression: "context.depth != 0"
      range: "(398,27)-(398,44)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 508
      expression: "for-each(sources)"
      range: "(508,45)-(508,51)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 509
      expression: "source.containsDescendantOf(name) != ConfigurationPropertyState.ABSENT"
      range: "(509,8)-(509,77)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 398
      expression: "containsNoDescendantOf(context.getSources(), name)"
      range: "(398,49)-(398,98)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 423
      expression: "Map.class.isAssignableFrom(resolvedType)"
      range: "(423,7)-(423,46)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 426
      expression: "Collection.class.isAssignableFrom(resolvedType)"
      range: "(426,7)-(426,53)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 429
      expression: "target.getType().isArray()"
      range: "(429,7)-(429,32)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 402
      expression: "aggregateBinder != null"
      range: "(402,7)-(402,29)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 405
      expression: "property != null"
      range: "(405,7)-(405,22)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 409
      expression: "catch-exception (ConverterNotFoundException)"
      range: "(409,4)-(409,39)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 493
      expression: "for-each(context.getSources())"
      range: "(493,45)-(493,64)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 500
      expression: "resolved.isPrimitive()"
      range: "(500,7)-(500,28)"
      evaluatedAs: true
      internalMethodName: "isUnbindableBean"
    - lineNumber: 469
      expression: "isUnbindableBean(name, target, context)"
      range: "(469,7)-(469,45)"
      evaluatedAs: true
      internalMethodName: "bindDataObject"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 369
      expression: "result == null"
      range: "(369,8)-(369,21)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    catchBlockExercised:
      idExternalInstruction: 37
      id: 4
      catchExceptions:
      - "org.springframework.core.convert.ConverterNotFoundException"
  - pathId: "path10"
    testPathName: "bindOrCreate3WhenContextIsBindingDataObjectTypeAndResultIsNullAndResultIsNullAndCreateAndResultIsNotNull"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "7FC6BCADB11F8EFBC436BEF4D3007A01"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid170):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid171):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid172):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid173):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "6106E0F948C0E3314BB71896D127B154"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "57BD6B5A33387907B105DA6A3531412B"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "2EE2A160E4565FC4211DA61AF18A400C"
      valueUuid: "bindable"
      methodExercised:
        expression: "hasBindRestriction(bindRestriction:Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "C99F0840CC2BB42B1D9A347B9CDDC4C3"
      valueUuid: "object2"
      methodExercised:
        expression: "containsDescendantOf(name:name):configurationPropertyState"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid174):class"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9BE6C3FE0AD02D9354C52AB1426A261C"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "isArray():boolean8"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "C99F0840CC2BB42B1D9A347B9CDDC4C3"
      valueUuid: "object3"
      methodExercised:
        expression: "containsDescendantOf(name:name):configurationPropertyState2"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType3"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid175):class2"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "00692E5451E5FBA38A66F7B2E571440F"
      valueUuid: "bindable"
      methodExercised:
        expression: "getBindMethod():bindMethod"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "A01CB19AFB53C472EAC6CE2E570B9B00"
      valueUuid: "bindable"
      methodExercised:
        expression: "getBindMethod():bindMethod2"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "47194F4234E60A776B63C37D74B9AD82"
      valueUuid: "handler"
      methodExercised:
        expression: "onCreate(name:name,target:bindable,context:binder.Context,result:object6):object7"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object7,target:bindable):object8"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "00D9538116B78DEBAF51A65C6E5DAAB3"
      valueUuid: "handler"
      methodExercised:
        expression: "onFinish(name:name,target:bindable,context:binder.Context,result:object8):void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter3"
      methodExercised:
        expression: "convert(source:object8,target:bindable):object9"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object9"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "if (property == null && context.depth != 0 && containsNoDescendantOf(context.getSources(),\
        \ name)) {"
      lineNumber: 398
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getSources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid170"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid171"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid172"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid173"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object2"
      collectionUuid: "iterable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "PRESENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "configurationPropertyState"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid174"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object3"
      collectionUuid: "iterable2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "PRESENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "configurationPropertyState2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid175"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object9"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object9"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 447
      expression: "target.hasBindRestriction(BindRestriction.NO_DIRECT_PROPERTY)"
      range: "(447,25)-(447,85)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 398
      expression: "context.depth != 0"
      range: "(398,27)-(398,44)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 508
      expression: "for-each(sources)"
      range: "(508,45)-(508,51)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 509
      expression: "source.containsDescendantOf(name) != ConfigurationPropertyState.ABSENT"
      range: "(509,8)-(509,77)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 398
      expression: "containsNoDescendantOf(context.getSources(), name)"
      range: "(398,49)-(398,98)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 423
      expression: "Map.class.isAssignableFrom(resolvedType)"
      range: "(423,7)-(423,46)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 426
      expression: "Collection.class.isAssignableFrom(resolvedType)"
      range: "(426,7)-(426,53)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 429
      expression: "target.getType().isArray()"
      range: "(429,7)-(429,32)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 402
      expression: "aggregateBinder != null"
      range: "(402,7)-(402,29)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 405
      expression: "property != null"
      range: "(405,7)-(405,22)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 493
      expression: "for-each(context.getSources())"
      range: "(493,45)-(493,64)"
      evaluatedAs: true
      internalMethodName: "isUnbindableBean"
    - lineNumber: 494
      expression: "source.containsDescendantOf(name) == ConfigurationPropertyState.PRESENT"
      range: "(494,8)-(494,78)"
      evaluatedAs: true
      internalMethodName: "isUnbindableBean"
    - lineNumber: 469
      expression: "isUnbindableBean(name, target, context)"
      range: "(469,7)-(469,45)"
      evaluatedAs: false
      internalMethodName: "bindDataObject"
    - lineNumber: 474
      expression: "!allowRecursiveBinding"
      range: "(474,7)-(474,28)"
      evaluatedAs: true
      internalMethodName: "bindDataObject"
    - lineNumber: 474
      expression: "context.isBindingDataObject(type)"
      range: "(474,33)-(474,65)"
      evaluatedAs: true
      internalMethodName: "bindDataObject"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 369
      expression: "result == null"
      range: "(369,8)-(369,21)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
  - pathId: "path29"
    testPathName: "bindOrCreate3WhenResultIsNotNullAndResultIsNullAndCreateAndResultIsNull"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "B6D6D371B42AD4DB5A748CDE9B6B3411"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "25B83B0AA69353874E1F276DD18C535A"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid176):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid177):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid178):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid179):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "6106E0F948C0E3314BB71896D127B154"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "57BD6B5A33387907B105DA6A3531412B"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "60634B8DC849F8BBC08A084C2CF5D4A1"
      valueUuid: "bindable"
      methodExercised:
        expression: "hasBindRestriction(bindRestriction:Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "7837AA3F816931C9F9CFCD17C35D721D"
      valueUuid: "object2"
      methodExercised:
        expression: "getConfigurationProperty(name:name):configurationProperty"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid180):class"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9BE6C3FE0AD02D9354C52AB1426A261C"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "isArray():boolean8"
    - type: "LOCAL_VARIABLE"
      name: "property"
      modelFingerprint: "18E47D2825E09CEDCD872E509293E354"
      valueUuid: "configurationProperty"
      methodExercised:
        expression: "getValue():value"
    - type: "FIELD"
      name: "placeholdersResolver"
      modelFingerprint: "898690D52AA5A45340BD8E5ADD4EA803"
      valueUuid: "placeholdersResolver"
      methodExercised:
        expression: "resolvePlaceholders(value:value):object4"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object4,target:bindable):object5"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "C99F0840CC2BB42B1D9A347B9CDDC4C3"
      valueUuid: "object6"
      methodExercised:
        expression: "containsDescendantOf(name:name):configurationPropertyState"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType3"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid181):class2"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "A01CB19AFB53C472EAC6CE2E570B9B00"
      valueUuid: "bindable"
      methodExercised:
        expression: "getBindMethod():bindMethod"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "AEF1478A1522F56B7CDFA9392D848F43"
      valueUuid: "handler"
      methodExercised:
        expression: "onSuccess(name:name,target:bindable,context:binder.Context,result:object10):object11"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "803CF91FF8273E0245616729A18AF981"
      valueUuid: "bindConverter3"
      methodExercised:
        expression: "convert(source:object11,target:bindable):object12"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "A01CB19AFB53C472EAC6CE2E570B9B00"
      valueUuid: "bindable"
      methodExercised:
        expression: "getBindMethod():bindMethod2"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "47194F4234E60A776B63C37D74B9AD82"
      valueUuid: "handler"
      methodExercised:
        expression: "onCreate(name:name,target:bindable,context:binder.Context,result:object14):object15"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "803CF91FF8273E0245616729A18AF981"
      valueUuid: "bindConverter4"
      methodExercised:
        expression: "convert(source:object15,target:bindable):object16"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "0AEA7B1F6F57B7B97430ADB390B2C215"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType4"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "A01CB19AFB53C472EAC6CE2E570B9B00"
      valueUuid: "bindable"
      methodExercised:
        expression: "getBindMethod():bindMethod3"
    - type: "LOCAL_VARIABLE"
      name: "dataObjectBinder"
      modelFingerprint: "501AC59ECAF6AD867343A8A7A70CC1B5"
      valueUuid: "dataObjectBinder3"
      methodExercised:
        expression: "onUnableToCreateInstance(target:bindable,context:binder.Context,exception:illegalStateException):void7"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "74D65B42C57C15CBF9ECA9BF0F5BD334"
      valueUuid: "handler"
      methodExercised:
        expression: "onFailure(name:name,target:bindable,context:binder.Context,error:exception):object17"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter5"
      methodExercised:
        expression: "convert(source:object17,target:bindable):object18"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object18"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "for (ConfigurationPropertySource source : context.getSources()) {"
      lineNumber: 450
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getSources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid176"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid177"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid178"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid179"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object2"
      collectionUuid: "iterable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "configurationProperty-name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "configurationProperty-origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid180"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.source.ConfigurationProperty"
        parameters:
        - name: "name"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
            uuid: "configurationProperty-name"
        - name: "value"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "java.lang.Object"
              parameters: []
            valueType: "java.lang.Object"
            uuid: "value"
        - name: "origin"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.origin.Origin"
            uuid: "configurationProperty-origin"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationProperty"
      uuid: "configurationProperty"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
      uuid: "placeholdersResolver"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "value"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object5"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object6"
      collectionUuid: "iterable2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "PRESENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "configurationPropertyState"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid181"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object11"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "ANY"
      valueType: "java.lang.Object"
      uuid: "object10"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter3"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object12"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object11"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object15"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object14"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter4"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object16"
      fixed: true
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object15"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType4"
      nameForMock: "resolvableType4"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.DataObjectBinder"
      uuid: "dataObjectBinder3"
      collectionUuid: "list15"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void7"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "EXCEPTION"
      content: !<new>
        target: "java.lang.IllegalStateException"
        parameters:
        - name: "s"
          value:
            sapientType: "BASIC"
            content: !<regular>
              value: "Unable to create instance for resolvableType4"
            valueType: "java.lang.String"
            uuid: "string"
      valueType: "java.lang.IllegalStateException"
      uuid: "illegalStateException"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object17"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Exception"
        parameters: []
      valueType: "java.lang.Exception"
      uuid: "exception"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter5"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object18"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object17"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object18"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 447
      expression: "target.hasBindRestriction(BindRestriction.NO_DIRECT_PROPERTY)"
      range: "(447,25)-(447,85)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 450
      expression: "for-each(context.getSources())"
      range: "(450,45)-(450,64)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 452
      expression: "property != null"
      range: "(452,8)-(452,23)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 423
      expression: "Map.class.isAssignableFrom(resolvedType)"
      range: "(423,7)-(423,46)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 426
      expression: "Collection.class.isAssignableFrom(resolvedType)"
      range: "(426,7)-(426,53)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 429
      expression: "target.getType().isArray()"
      range: "(429,7)-(429,32)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 402
      expression: "aggregateBinder != null"
      range: "(402,7)-(402,29)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 405
      expression: "property != null"
      range: "(405,7)-(405,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 409
      expression: "catch-exception (ConverterNotFoundException)"
      range: "(409,4)-(409,39)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 493
      expression: "for-each(context.getSources())"
      range: "(493,45)-(493,64)"
      evaluatedAs: true
      internalMethodName: "isUnbindableBean"
    - lineNumber: 494
      expression: "source.containsDescendantOf(name) == ConfigurationPropertyState.PRESENT"
      range: "(494,8)-(494,78)"
      evaluatedAs: true
      internalMethodName: "isUnbindableBean"
    - lineNumber: 469
      expression: "isUnbindableBean(name, target, context)"
      range: "(469,7)-(469,45)"
      evaluatedAs: false
      internalMethodName: "bindDataObject"
    - lineNumber: 474
      expression: "!allowRecursiveBinding"
      range: "(474,7)-(474,28)"
      evaluatedAs: true
      internalMethodName: "bindDataObject"
    - lineNumber: 474
      expression: "context.isBindingDataObject(type)"
      range: "(474,33)-(474,65)"
      evaluatedAs: false
      internalMethodName: "bindDataObject"
    - lineNumber: 412
      expression: "instance != null"
      range: "(412,9)-(412,24)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 369
      expression: "result == null"
      range: "(369,8)-(369,21)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    catchBlockExercised:
      idExternalInstruction: 37
      id: 4
      catchExceptions:
      - "org.springframework.core.convert.ConverterNotFoundException"
  - pathId: "path12"
    testPathName: "bindOrCreate3WhenIsUnbindableBeanNameTargetContextAndResultIsNullAndResultIsNullAndCreateAndResultIsNotNull9"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "9E6A10F5C1DC459827381F64D396A056"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid182):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid183):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid184):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid185):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "6106E0F948C0E3314BB71896D127B154"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "57BD6B5A33387907B105DA6A3531412B"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "2EE2A160E4565FC4211DA61AF18A400C"
      valueUuid: "bindable"
      methodExercised:
        expression: "hasBindRestriction(bindRestriction:Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "C99F0840CC2BB42B1D9A347B9CDDC4C3"
      valueUuid: "object2"
      methodExercised:
        expression: "containsDescendantOf(name:name):configurationPropertyState"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid186):class"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9BE6C3FE0AD02D9354C52AB1426A261C"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "isArray():boolean8"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FB9BA6660B378440169AB33C771084DD"
      valueUuid: "object3"
      methodExercised:
        expression: "containsDescendantOf(name:name):configurationPropertyState2"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "11B5C451B03F997617DAA753BB261606"
      valueUuid: "resolvableType3"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid187):class2"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "A01CB19AFB53C472EAC6CE2E570B9B00"
      valueUuid: "bindable"
      methodExercised:
        expression: "getBindMethod():bindMethod"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "47194F4234E60A776B63C37D74B9AD82"
      valueUuid: "handler"
      methodExercised:
        expression: "onCreate(name:name,target:bindable,context:binder.Context,result:object6):object7"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object7,target:bindable):object8"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "00D9538116B78DEBAF51A65C6E5DAAB3"
      valueUuid: "handler"
      methodExercised:
        expression: "onFinish(name:name,target:bindable,context:binder.Context,result:object8):void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter3"
      methodExercised:
        expression: "convert(source:object8,target:bindable):object9"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object9"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "if (property == null && context.depth != 0 && containsNoDescendantOf(context.getSources(),\
        \ name)) {"
      lineNumber: 398
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getSources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid182"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid183"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid184"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid185"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object2"
      collectionUuid: "iterable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "PRESENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "configurationPropertyState"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid186"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object3"
      collectionUuid: "iterable2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "ABSENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "configurationPropertyState2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid187"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object6"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object7"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object9"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object9"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 447
      expression: "target.hasBindRestriction(BindRestriction.NO_DIRECT_PROPERTY)"
      range: "(447,25)-(447,85)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 398
      expression: "context.depth != 0"
      range: "(398,27)-(398,44)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 508
      expression: "for-each(sources)"
      range: "(508,45)-(508,51)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 509
      expression: "source.containsDescendantOf(name) != ConfigurationPropertyState.ABSENT"
      range: "(509,8)-(509,77)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 398
      expression: "containsNoDescendantOf(context.getSources(), name)"
      range: "(398,49)-(398,98)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 423
      expression: "Map.class.isAssignableFrom(resolvedType)"
      range: "(423,7)-(423,46)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 426
      expression: "Collection.class.isAssignableFrom(resolvedType)"
      range: "(426,7)-(426,53)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 429
      expression: "target.getType().isArray()"
      range: "(429,7)-(429,32)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 402
      expression: "aggregateBinder != null"
      range: "(402,7)-(402,29)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 405
      expression: "property != null"
      range: "(405,7)-(405,22)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 493
      expression: "for-each(context.getSources())"
      range: "(493,45)-(493,64)"
      evaluatedAs: true
      internalMethodName: "isUnbindableBean"
    - lineNumber: 494
      expression: "source.containsDescendantOf(name) == ConfigurationPropertyState.PRESENT"
      range: "(494,8)-(494,78)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 500
      expression: "resolved.isPrimitive()"
      range: "(500,7)-(500,28)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 500
      expression: "NON_BEAN_CLASSES.contains(resolved)"
      range: "(500,33)-(500,67)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 503
      expression: "resolved.getName().startsWith(\\\"java.\\\")"
      range: "(503,10)-(503,47)"
      evaluatedAs: true
      internalMethodName: "isUnbindableBean"
    - lineNumber: 469
      expression: "isUnbindableBean(name, target, context)"
      range: "(469,7)-(469,45)"
      evaluatedAs: true
      internalMethodName: "bindDataObject"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 369
      expression: "result == null"
      range: "(369,8)-(369,21)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
  - pathId: "path13"
    testPathName: "bindOrCreate3WhenContextNotIsBindingDataObjectTypeAndResultIsNullAndResultIsNullAndCreateAndResultIsNotNull2"
    constructorSignature: "<init>(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)\
      \ : void"
    modelFingerprint: "9CD9598DF206E3E91E1367BDB13C28B0"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "CONSTRUCTOR"
      modelFingerprint: "128744CC344D6AD4D6D5B4E067C73BD0"
      valueUuid: "target"
    - type: "INPUT"
      name: "name"
      modelFingerprint: "74708EC0FE4A843F6A9E0D8C1442E0B2"
      valueUuid: "name"
    - type: "INPUT"
      name: "target"
      modelFingerprint: "F8F75E4AC569B29AA63CBB077B0C7D40"
      valueUuid: "target1"
    - type: "INPUT"
      name: "handler"
      modelFingerprint: "DE09B20B1089257A3EF0D0A789E15744"
      valueUuid: "handler"
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5CB84B264D3BBD3B09A4CD789FCDD455"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:sources,message:uniqueUuid188):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid189):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "1B05AB40FD971F489836579049F72102"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:list2,propertyEditorInitializer:propertyEditorInitializer):bindConverter"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "F400797EED7914A2CF42637724C47F90"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:name,message:uniqueUuid190):void3"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "5785CF42855BE7E860BBD4273E187678"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:target1,message:uniqueUuid191):void4"
        staticAccess: true
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "6106E0F948C0E3314BB71896D127B154"
      valueUuid: "handler"
      methodExercised:
        expression: "onStart(name:name,target:target1,context:binder.Context):bindable"
    - type: "LOCAL_VARIABLE"
      name: "name"
      modelFingerprint: "57BD6B5A33387907B105DA6A3531412B"
      valueUuid: "name"
      methodExercised:
        expression: "isEmpty():boolean3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "2EE2A160E4565FC4211DA61AF18A400C"
      valueUuid: "bindable"
      methodExercised:
        expression: "hasBindRestriction(bindRestriction:Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY):boolean4"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "C99F0840CC2BB42B1D9A347B9CDDC4C3"
      valueUuid: "object2"
      methodExercised:
        expression: "containsDescendantOf(name:name):configurationPropertyState"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid192):class"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType2"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "9BE6C3FE0AD02D9354C52AB1426A261C"
      valueUuid: "resolvableType2"
      methodExercised:
        expression: "isArray():boolean8"
    - type: "LOCAL_VARIABLE"
      name: "source"
      modelFingerprint: "FB9BA6660B378440169AB33C771084DD"
      valueUuid: "object3"
      methodExercised:
        expression: "containsDescendantOf(name:name):configurationPropertyState2"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType3"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "11B5C451B03F997617DAA753BB261606"
      valueUuid: "resolvableType3"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid193):class2"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "F43538995331750940FB2D8FE55ECF4E"
      valueUuid: "bindable"
      methodExercised:
        expression: "getType():resolvableType4"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "821D9490B64C7D6DD7554F9B0337233E"
      valueUuid: "resolvableType4"
      methodExercised:
        expression: "resolve(fallback:uniqueUuid194):class3"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "A01CB19AFB53C472EAC6CE2E570B9B00"
      valueUuid: "bindable"
      methodExercised:
        expression: "getBindMethod():bindMethod"
    - type: "LOCAL_VARIABLE"
      name: "target"
      modelFingerprint: "A01CB19AFB53C472EAC6CE2E570B9B00"
      valueUuid: "bindable"
      methodExercised:
        expression: "getBindMethod():bindMethod2"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "47194F4234E60A776B63C37D74B9AD82"
      valueUuid: "handler"
      methodExercised:
        expression: "onCreate(name:name,target:bindable,context:binder.Context,result:object8):object9"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter2"
      methodExercised:
        expression: "convert(source:object9,target:bindable):object10"
    - type: "LOCAL_VARIABLE"
      name: "handler"
      modelFingerprint: "00D9538116B78DEBAF51A65C6E5DAAB3"
      valueUuid: "handler"
      methodExercised:
        expression: "onFinish(name:name,target:bindable,context:binder.Context,result:object10):void5"
        throwsExceptions:
        - "java.lang.Exception"
    - type: "LOCAL_VARIABLE"
      modelFingerprint: "E27A7205A7D7772D55399308BB28F225"
      valueUuid: "bindConverter3"
      methodExercised:
        expression: "convert(source:object10,target:bindable):object11"
    - type: "RESULT"
      name: "result"
      modelFingerprint: "A5457F8C44AF90FDF3ACB1B2051E1175"
      valueUuid: "object11"
    disabled: true
    failureReason:
      reason: "VARIABLE_THAT_COULD_NOT_BE_ISOLATED_MOCKED"
      source: "if (property == null && context.depth != 0 && containsNoDescendantOf(context.getSources(),\
        \ name)) {"
      lineNumber: 398
      details: "A variable could not be isolated/mocked when calling a method - Variable\
        \ name: context - Method: getSources"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "sources"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "sources"
        - name: "placeholdersResolver"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.PlaceholdersResolver"
            uuid: "placeholdersResolver"
        - name: "conversionService"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "conversionService"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "MOCK"
            valueType: "java.util.function.Consumer"
            uuid: "propertyEditorInitializer"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
        - name: "constructorProvider"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindConstructorProvider"
            uuid: "constructorProvider"
            fixed: true
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "target"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "sources"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid188"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "sources"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid189"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "COLLECTION"
      content: !<collection>
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.core.convert.ConversionService"
          uuid: "conversionService"
      valueType: "java.util.List"
      genericValueType: "org.springframework.core.convert.ConversionService"
      uuid: "list2"
    - sapientType: "MOCK"
      valueType: "java.util.function.Consumer"
      uuid: "propertyEditorInitializer"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void3"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Name must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid190"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void4"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Target must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid191"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "target1"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean3"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "BASIC"
      content: !<regular>
        value: true
      valueType: "boolean"
      uuid: "boolean4"
    - sapientType: "ENUM"
      content: !<regular>
        value: "NO_DIRECT_PROPERTY"
      valueType: "org.springframework.boot.context.properties.bind.Bindable$BindRestriction"
      uuid: "Enum-org.springframework.boot.context.properties.bind.Bindable$BindRestriction-NO_DIRECT_PROPERTY"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object2"
      collectionUuid: "iterable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "PRESENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "configurationPropertyState"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid192"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType2"
    - sapientType: "BASIC"
      content: !<regular>
        value: false
      valueType: "boolean"
      uuid: "boolean8"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object3"
      collectionUuid: "iterable2"
    - sapientType: "ENUM"
      content: !<regular>
        value: "ABSENT"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyState"
      uuid: "configurationPropertyState2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class2"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid193"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType4"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.ResolvableType"
      uuid: "resolvableType4"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "?"
      uuid: "class3"
    - sapientType: "CLASS"
      content: !<regular>
        value: "java.lang.Object"
      valueType: "java.lang.Class"
      genericValueType: "java.lang.Object"
      uuid: "uniqueUuid194"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ENUM"
      content: !<regular>
        value: "JAVA_BEAN"
      valueType: "org.springframework.boot.context.properties.bind.BindMethod"
      uuid: "bindMethod2"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "NULL"
      valueType: "java.lang.Object"
      uuid: "object8"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter2"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object10"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object9"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "handler"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void5"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
      uuid: "name"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "ANY"
      valueType: "org.springframework.boot.context.properties.bind.Binder$Context"
      uuid: "binder.Context"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object10"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter3"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object11"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object10"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Bindable"
      genericValueType: "java.lang.Object"
      uuid: "bindable"
    - sapientType: "OBJECT"
      content: !<new>
        target: "java.lang.Object"
        parameters: []
      valueType: "java.lang.Object"
      uuid: "object11"
    branches:
    - lineNumber: 337
      expression: "handler != null"
      range: "(337,14)-(337,28)"
      evaluatedAs: true
      internalMethodName: "bind"
    - lineNumber: 346
      expression: "replacementTarget == null"
      range: "(346,8)-(346,32)"
      evaluatedAs: false
      internalMethodName: "bind"
    - lineNumber: 447
      expression: "name.isEmpty()"
      range: "(447,7)-(447,20)"
      evaluatedAs: false
      internalMethodName: "findProperty"
    - lineNumber: 447
      expression: "target.hasBindRestriction(BindRestriction.NO_DIRECT_PROPERTY)"
      range: "(447,25)-(447,85)"
      evaluatedAs: true
      internalMethodName: "findProperty"
    - lineNumber: 398
      expression: "property == null"
      range: "(398,7)-(398,22)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 398
      expression: "context.depth != 0"
      range: "(398,27)-(398,44)"
      evaluatedAs: true
      internalMethodName: "bindObject"
    - lineNumber: 508
      expression: "for-each(sources)"
      range: "(508,45)-(508,51)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 509
      expression: "source.containsDescendantOf(name) != ConfigurationPropertyState.ABSENT"
      range: "(509,8)-(509,77)"
      evaluatedAs: true
      internalMethodName: "containsNoDescendantOf"
    - lineNumber: 398
      expression: "containsNoDescendantOf(context.getSources(), name)"
      range: "(398,49)-(398,98)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 423
      expression: "Map.class.isAssignableFrom(resolvedType)"
      range: "(423,7)-(423,46)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 426
      expression: "Collection.class.isAssignableFrom(resolvedType)"
      range: "(426,7)-(426,53)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 429
      expression: "target.getType().isArray()"
      range: "(429,7)-(429,32)"
      evaluatedAs: false
      internalMethodName: "getAggregateBinder"
    - lineNumber: 402
      expression: "aggregateBinder != null"
      range: "(402,7)-(402,29)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 405
      expression: "property != null"
      range: "(405,7)-(405,22)"
      evaluatedAs: false
      internalMethodName: "bindObject"
    - lineNumber: 493
      expression: "for-each(context.getSources())"
      range: "(493,45)-(493,64)"
      evaluatedAs: true
      internalMethodName: "isUnbindableBean"
    - lineNumber: 494
      expression: "source.containsDescendantOf(name) == ConfigurationPropertyState.PRESENT"
      range: "(494,8)-(494,78)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 500
      expression: "resolved.isPrimitive()"
      range: "(500,7)-(500,28)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 500
      expression: "NON_BEAN_CLASSES.contains(resolved)"
      range: "(500,33)-(500,67)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 503
      expression: "resolved.getName().startsWith(\\\"java.\\\")"
      range: "(503,10)-(503,47)"
      evaluatedAs: false
      internalMethodName: "isUnbindableBean"
    - lineNumber: 469
      expression: "isUnbindableBean(name, target, context)"
      range: "(469,7)-(469,45)"
      evaluatedAs: false
      internalMethodName: "bindDataObject"
    - lineNumber: 474
      expression: "!allowRecursiveBinding"
      range: "(474,7)-(474,28)"
      evaluatedAs: true
      internalMethodName: "bindDataObject"
    - lineNumber: 474
      expression: "context.isBindingDataObject(type)"
      range: "(474,33)-(474,65)"
      evaluatedAs: false
      internalMethodName: "bindDataObject"
    - lineNumber: 360
      expression: "result != null"
      range: "(360,7)-(360,20)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "result == null"
      range: "(364,7)-(364,20)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 364
      expression: "create"
      range: "(364,25)-(364,30)"
      evaluatedAs: true
      internalMethodName: "handleBindResult"
    - lineNumber: 369
      expression: "result == null"
      range: "(369,8)-(369,21)"
      evaluatedAs: false
      internalMethodName: "handleBindResult"
- method:
    name: "get"
    sourceCodeSignature: "Binder get(Environment environment)"
    returnType: "org.springframework.boot.context.properties.bind.Binder"
    parameters:
    - name: "environment"
      type: "org.springframework.core.env.Environment"
    instructionFingerprint: "C53285FEAC0AB91EAF9EC419B479E2A8"
  paths:
  - pathId: "path1"
    testPathName: "getTest"
    modelFingerprint: "46F9262480C721E19DEB5203EE47269D"
    problemWasSolvedByProver: true
    inputParameters:
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "CFDF63295593FFAD14AD5D089FEB2EE5"
      valueUuid: "environment"
    - type: "STATIC"
      name: "Binder.class"
      modelFingerprint: "490D26F9FA675AD85A3FB47DB62A6F0D"
      valueUuid: "Binder.class"
      methodExercised:
        expression: "get(environment:environment,defaultBindHandler:uniqueUuid195):binder"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "0E73EDBE8B3490C77A4555268C968991"
      valueUuid: "binder"
    disabled: false
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "Binder.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "binder"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "environment"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "uniqueUuid195"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "binder"
- method:
    name: "get"
    sourceCodeSignature: "Binder get(Environment environment, BindHandler defaultBindHandler)"
    returnType: "org.springframework.boot.context.properties.bind.Binder"
    parameters:
    - name: "environment"
      type: "org.springframework.core.env.Environment"
    - name: "defaultBindHandler"
      type: "org.springframework.boot.context.properties.bind.BindHandler"
    instructionFingerprint: "30360524B08EFBD4D8CD5E79993F860F"
  paths:
  - pathId: "path1"
    testPathName: "get1WhenDefaultBranch"
    modelFingerprint: "6F5DAD7BBB62F87D2FB5F5FC3348BCFD"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "CFDF63295593FFAD14AD5D089FEB2EE5"
      valueUuid: "environment"
    - type: "INPUT"
      name: "defaultBindHandler"
      modelFingerprint: "B893880CCDC50A8350AB6C9966DD4224"
      valueUuid: "defaultBindHandler"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "170EFE2E38F6F379481CB0CC5691F3E3"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "get(environment:environment):iterable"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "B515A2C5BFB8238977505E12419D18CE"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:iterable,message:uniqueUuid196):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid197):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "0B598A32D6BCADB93A8E49F0DBF3F617"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:uniqueUuid198,propertyEditorInitializer:uniqueUuid199):bindConverter"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "2FFEB3D9AECE7152EA92ECA84DAE261C"
      valueUuid: "binder"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "PropertySourcesPlaceholdersResolver placeholdersResolver = new PropertySourcesPlaceholdersResolver(environment);"
      lineNumber: 537
      details: "No constructor found to create an object without any exception for\
        \ class org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "defaultBindHandler"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "iterable"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "iterable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "iterable"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "iterable"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid196"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "iterable"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid197"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "NULL"
      valueType: "java.util.List"
      uuid: "uniqueUuid198"
      explicitCastNeeded: true
    - sapientType: "NULL"
      valueType: "java.util.function.Consumer"
      genericValueType: "org.springframework.beans.PropertyEditorRegistry"
      uuid: "uniqueUuid199"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "iterable"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "iterable"
        - name: "placeholdersResolver"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
              parameters:
              - name: "environment"
                value:
                  sapientType: "MOCK"
                  valueType: "org.springframework.core.env.Environment"
                  uuid: "environment"
            valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
            uuid: "propertySourcesPlaceholdersResolver"
            fixed: true
        - name: "conversionService"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "uniqueUuid200"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "NULL"
            valueType: "java.util.function.Consumer"
            genericValueType: "org.springframework.beans.PropertyEditorRegistry"
            uuid: "uniqueUuid201"
        - name: "defaultBindHandler"
          value:
            sapientType: "MOCK"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "binder"
      fixed: true
    branches:
    - lineNumber: 164
      expression: "branch expression (line 164)"
      range: "(164,1)-(164,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
    - lineNumber: 188
      expression: "branch expression (line 188)"
      range: "(188,1)-(188,200)"
      evaluatedAs: true
      internalMethodName: "<init>"
    - lineNumber: 192
      expression: "branch expression (line 192)"
      range: "(192,1)-(192,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
    - lineNumber: 194
      expression: "branch expression (line 194)"
      range: "(194,1)-(194,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
    - lineNumber: 195
      expression: "branch expression (line 195)"
      range: "(195,1)-(195,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
  - pathId: "path2"
    testPathName: "get1WhenDefaultBranchAndDefaultBranch"
    modelFingerprint: "30EB857B57AD9A91E4A74AE9CF188692"
    problemWasSolvedByProver: false
    inputParameters:
    - type: "INPUT"
      name: "environment"
      modelFingerprint: "CFDF63295593FFAD14AD5D089FEB2EE5"
      valueUuid: "environment"
    - type: "INPUT"
      name: "defaultBindHandler"
      modelFingerprint: "DA82AEC7962B2F10DCAE96C43FF1F013"
      valueUuid: "defaultBindHandler"
    - type: "STATIC"
      name: "ConfigurationPropertySources.class"
      modelFingerprint: "170EFE2E38F6F379481CB0CC5691F3E3"
      valueUuid: "ConfigurationPropertySources.class"
      methodExercised:
        expression: "get(environment:environment):iterable"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "B515A2C5BFB8238977505E12419D18CE"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:iterable,message:uniqueUuid202):void"
        staticAccess: true
    - type: "STATIC"
      name: "Assert.class"
      modelFingerprint: "A5FC908D66D56ACDFE14890FFC253203"
      valueUuid: "Assert.class"
      methodExercised:
        expression: "notNull(object:object,message:uniqueUuid203):void2"
        staticAccess: true
    - type: "STATIC"
      name: "BindConverter.class"
      modelFingerprint: "0B598A32D6BCADB93A8E49F0DBF3F617"
      valueUuid: "BindConverter.class"
      methodExercised:
        expression: "get(conversionServices:uniqueUuid204,propertyEditorInitializer:uniqueUuid205):bindConverter"
        staticAccess: true
    - type: "RESULT"
      name: "result"
      modelFingerprint: "37AF868CBCD6D0C2F109012FF214CCF0"
      valueUuid: "binder"
    disabled: true
    failureReason:
      reason: "METHOD_CALL_INSTRUCTION_CONSTRUCTION_FAILURE"
      source: "PropertySourcesPlaceholdersResolver placeholdersResolver = new PropertySourcesPlaceholdersResolver(environment);"
      lineNumber: 537
      details: "No constructor found to create an object without any exception for\
        \ class org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
    disabledStatusUpdatedBy: "SYSTEM"
    allValues:
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "environment"
    - sapientType: "NULL"
      valueType: "org.springframework.boot.context.properties.bind.BindHandler"
      uuid: "defaultBindHandler"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySources"
      uuid: "ConfigurationPropertySources.class"
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "iterable"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "iterable"
    - sapientType: "MOCK"
      valueType: "org.springframework.core.env.Environment"
      uuid: "environment"
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void"
      fixed: true
    - sapientType: "COLLECTION"
      content: !<collection>
        collectionClass: "java.util.ArrayList"
        parameters: []
        values:
        - sapientType: "MOCK"
          valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
          uuid: "object"
          collectionUuid: "iterable"
      valueType: "java.lang.Iterable"
      genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "iterable"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not be null"
      valueType: "java.lang.String"
      uuid: "uniqueUuid202"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.util.Assert"
      uuid: "Assert.class"
    - sapientType: "VOID"
      valueType: "void"
      uuid: "void2"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
      uuid: "object"
      collectionUuid: "iterable"
    - sapientType: "BASIC"
      content: !<regular>
        value: "Sources must not contain null elements"
      valueType: "java.lang.String"
      uuid: "uniqueUuid203"
      fixed: true
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "BindConverter.class"
    - sapientType: "MOCK"
      valueType: "org.springframework.boot.context.properties.bind.BindConverter"
      uuid: "bindConverter"
    - sapientType: "NULL"
      valueType: "java.util.List"
      uuid: "uniqueUuid204"
      explicitCastNeeded: true
    - sapientType: "NULL"
      valueType: "java.util.function.Consumer"
      genericValueType: "org.springframework.beans.PropertyEditorRegistry"
      uuid: "uniqueUuid205"
    - sapientType: "OBJECT"
      content: !<new>
        target: "org.springframework.boot.context.properties.bind.Binder"
        parameters:
        - name: "sources"
          value:
            sapientType: "COLLECTION"
            content: !<collection>
              collectionClass: "java.util.ArrayList"
              parameters: []
              values:
              - sapientType: "MOCK"
                valueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
                uuid: "object"
                collectionUuid: "iterable"
            valueType: "java.lang.Iterable"
            genericValueType: "org.springframework.boot.context.properties.source.ConfigurationPropertySource"
            uuid: "iterable"
        - name: "placeholdersResolver"
          value:
            sapientType: "OBJECT"
            content: !<new>
              target: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
              parameters:
              - name: "environment"
                value:
                  sapientType: "MOCK"
                  valueType: "org.springframework.core.env.Environment"
                  uuid: "environment"
            valueType: "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver"
            uuid: "propertySourcesPlaceholdersResolver"
            fixed: true
        - name: "conversionService"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.core.convert.ConversionService"
            uuid: "uniqueUuid206"
        - name: "propertyEditorInitializer"
          value:
            sapientType: "NULL"
            valueType: "java.util.function.Consumer"
            genericValueType: "org.springframework.beans.PropertyEditorRegistry"
            uuid: "uniqueUuid207"
        - name: "defaultBindHandler"
          value:
            sapientType: "NULL"
            valueType: "org.springframework.boot.context.properties.bind.BindHandler"
            uuid: "defaultBindHandler"
      valueType: "org.springframework.boot.context.properties.bind.Binder"
      uuid: "binder"
      fixed: true
    branches:
    - lineNumber: 164
      expression: "branch expression (line 164)"
      range: "(164,1)-(164,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
    - lineNumber: 188
      expression: "branch expression (line 188)"
      range: "(188,1)-(188,200)"
      evaluatedAs: true
      internalMethodName: "<init>"
    - lineNumber: 192
      expression: "branch expression (line 192)"
      range: "(192,1)-(192,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
    - lineNumber: 194
      expression: "branch expression (line 194)"
      range: "(194,1)-(194,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
    - lineNumber: 195
      expression: "branch expression (line 195)"
      range: "(195,1)-(195,200)"
      evaluatedAs: false
      internalMethodName: "<init>"
