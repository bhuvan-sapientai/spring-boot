{
  "temperature" : 0.1,
  "model" : "gpt-3.5-turbo",
  "messages" : [
    {
      "role" : "system",
      "content" : "You are a Java developer."
    },
    {
      "role" : "user",
      "content" : "PROMPT_STATEMENT"
    },
    {
      "role" : "user",
      "content" : "OUTPUT_FORMAT"
    },
    {
      "role" : "user",
      "content" : "Let's work through this step by step to ensure correct results. Please add step numbers before each operation in your response. Step 1: Begin by thoroughly reviewing the code to gain a clear understanding of it.  Step 2: Examine any assert statements closely, and suggest appropriate values for the method's input variables and result of method calls happening  over input variable or its fields to make all the assert statements valid one-by-one. If there are no assert statements, provide default values. Step 3: Generate a single set of input variables for the method that satisfy all the assert conditions. Step 4: Verify that all the assert statements pass by executing the operations within the code. Be vigilant, especially with complex and nested assert statements. If any assert fails, re-evaluate the input variables to ensure that all asserts pass with the updated recalculated suggested input values. Step 5: Ensure that the input values calculated to pass to the method's arguments are returned. This should be the method's argument value, not the value updated by the method's internal operations. For example, if 'foo(int a)' results in 'a = a + 2' and 'a' is evaluated as 1, return 1, which is the method argument value, not 3, which is the updated value after method operations. Step 6: This step should strictly contain only the solved values in the JSON format schema mentioned above."
    }
  ]
}